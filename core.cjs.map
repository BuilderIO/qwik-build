{"version":3,"file":"core.cjs","sources":["../../../dist-dev/tsc-out/packages/qwik/src/core/util/qdev.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/flyweight.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/log.js","../../../dist-dev/tsc-out/packages/qwik/src/core/assert/assert.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/markers.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/dom.js","../../../dist-dev/tsc-out/packages/qwik/src/core/use/use-core.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/array.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/promises.js","../../../dist-dev/tsc-out/packages/qwik/src/core/import/qrl-class.js","../../../dist-dev/tsc-out/packages/qwik/src/core/platform/platform.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/types.js","../../../dist-dev/tsc-out/packages/qwik/src/core/error/stringify.js","../../../dist-dev/tsc-out/packages/qwik/src/core/error/error.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/element.js","../../../dist-dev/tsc-out/packages/qwik/src/core/import/qrl.public.js","../../../dist-dev/tsc-out/packages/qwik/src/core/use/use-host-element.public.js","../../../dist-dev/tsc-out/packages/qwik/src/core/use/use-document.public.js","../../../dist-dev/tsc-out/packages/qwik/src/core/use/use-store.public.js","../../../dist-dev/tsc-out/packages/qwik/src/core/json/q-json.js","../../../dist-dev/tsc-out/packages/qwik/src/core/use/use-url.public.js","../../../dist-dev/tsc-out/packages/qwik/src/core/use/use-lexical-scope.public.js","../../../dist-dev/tsc-out/packages/qwik/src/core/watch/watch.public.js","../../../dist-dev/tsc-out/packages/qwik/src/core/object/store.js","../../../dist-dev/tsc-out/packages/qwik/src/core/props/props-obj-map.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/case.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/stringify.js","../../../dist-dev/tsc-out/packages/qwik/src/core/props/props-on.js","../../../dist-dev/tsc-out/packages/qwik/src/core/object/store.public.js","../../../dist-dev/tsc-out/packages/qwik/src/core/props/props.js","../../../dist-dev/tsc-out/packages/qwik/src/core/render/jsx/host.public.js","../../../dist-dev/tsc-out/packages/qwik/src/core/render/render.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/hash_code.js","../../../dist-dev/tsc-out/packages/qwik/src/core/component/qrl-styles.js","../../../dist-dev/tsc-out/packages/qwik/src/core/render/jsx/jsx-runtime.js","../../../dist-dev/tsc-out/packages/qwik/src/core/component/component-ctx.js","../../../dist-dev/tsc-out/packages/qwik/src/core/render/cursor.js","../../../dist-dev/tsc-out/packages/qwik/src/core/render/notify-render.js","../../../dist-dev/tsc-out/packages/qwik/src/core/object/q-object.js","../../../dist-dev/tsc-out/packages/qwik/src/core/use/use-subscriber.js","../../../dist-dev/tsc-out/packages/qwik/src/core/import/qrl.js","../../../dist-dev/tsc-out/packages/qwik/src/core/component/component.public.js","../../../dist-dev/tsc-out/packages/qwik/src/core/render/jsx/factory.js","../../../dist-dev/tsc-out/packages/qwik/src/core/render/jsx/slot.public.js","../../../dist-dev/tsc-out/packages/qwik/src/core/version.js","../../../dist-dev/tsc-out/packages/qwik/src/core/render/render.public.js"],"sourcesContent":["/*@__PURE__*/ ((gbl) => {\n    // ensures unit tests have globalThis on Node10\n    // this will be removed from production builds\n    if (typeof globalThis === 'undefined') {\n        gbl.globalThis = gbl;\n    }\n})(typeof global !== 'undefined'\n    ? global\n    : typeof window !== 'undefined'\n        ? window\n        : typeof self !== 'undefined'\n            ? self\n            : {});\n// minification can replace the `globalThis.qDev` with `false`\n// which will remove all dev code within from the build\nexport const qDev = globalThis.qDev !== false;\nexport const qTest = globalThis.describe !== undefined;\nexport const qGlobal = globalThis;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicWRldi5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvcXdpay9zcmMvY29yZS91dGlsL3FkZXYudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsYUFBYSxDQUFDLENBQUMsQ0FBQyxHQUFRLEVBQUUsRUFBRTtJQUMxQiwrQ0FBK0M7SUFDL0MsOENBQThDO0lBQzlDLElBQUksT0FBTyxVQUFVLEtBQUssV0FBVyxFQUFFO1FBQ3JDLEdBQUcsQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFDO0tBQ3RCO0FBQ0gsQ0FBQyxDQUFDLENBQ0EsT0FBTyxNQUFNLEtBQUssV0FBVztJQUMzQixDQUFDLENBQUMsTUFBTTtJQUNSLENBQUMsQ0FBQyxPQUFPLE1BQU0sS0FBSyxXQUFXO1FBQy9CLENBQUMsQ0FBQyxNQUFNO1FBQ1IsQ0FBQyxDQUFDLE9BQU8sSUFBSSxLQUFLLFdBQVc7WUFDN0IsQ0FBQyxDQUFDLElBQUk7WUFDTixDQUFDLENBQUMsRUFBRSxDQUNQLENBQUM7QUFFRiw4REFBOEQ7QUFDOUQsdURBQXVEO0FBQ3ZELE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBSSxVQUFrQixDQUFDLElBQUksS0FBSyxLQUFLLENBQUM7QUFDdkQsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUFJLFVBQWtCLENBQUMsUUFBUSxLQUFLLFNBQVMsQ0FBQztBQUNoRSxNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUcsVUFBaUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qQF9fUFVSRV9fKi8gKChnYmw6IGFueSkgPT4ge1xuICAvLyBlbnN1cmVzIHVuaXQgdGVzdHMgaGF2ZSBnbG9iYWxUaGlzIG9uIE5vZGUxMFxuICAvLyB0aGlzIHdpbGwgYmUgcmVtb3ZlZCBmcm9tIHByb2R1Y3Rpb24gYnVpbGRzXG4gIGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBnYmwuZ2xvYmFsVGhpcyA9IGdibDtcbiAgfVxufSkoXG4gIHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnXG4gICAgPyBnbG9iYWxcbiAgICA6IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnXG4gICAgPyB3aW5kb3dcbiAgICA6IHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJ1xuICAgID8gc2VsZlxuICAgIDoge31cbik7XG5cbi8vIG1pbmlmaWNhdGlvbiBjYW4gcmVwbGFjZSB0aGUgYGdsb2JhbFRoaXMucURldmAgd2l0aCBgZmFsc2VgXG4vLyB3aGljaCB3aWxsIHJlbW92ZSBhbGwgZGV2IGNvZGUgd2l0aGluIGZyb20gdGhlIGJ1aWxkXG5leHBvcnQgY29uc3QgcURldiA9IChnbG9iYWxUaGlzIGFzIGFueSkucURldiAhPT0gZmFsc2U7XG5leHBvcnQgY29uc3QgcVRlc3QgPSAoZ2xvYmFsVGhpcyBhcyBhbnkpLmRlc2NyaWJlICE9PSB1bmRlZmluZWQ7XG5leHBvcnQgY29uc3QgcUdsb2JhbCA9IGdsb2JhbFRoaXMgYXMgYW55O1xuIl19","import { qDev } from './qdev';\nexport const EMPTY_ARRAY = [];\nexport const EMPTY_OBJ = {};\nif (qDev) {\n    Object.freeze(EMPTY_ARRAY);\n    Object.freeze(EMPTY_OBJ);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmx5d2VpZ2h0LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL3V0aWwvZmx5d2VpZ2h0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFFOUIsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLEVBQUUsQ0FBQztBQUM5QixNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsRUFBRSxDQUFDO0FBRTVCLElBQUksSUFBSSxFQUFFO0lBQ1IsTUFBTSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUMzQixNQUFNLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0NBQzFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcURldiB9IGZyb20gJy4vcWRldic7XG5cbmV4cG9ydCBjb25zdCBFTVBUWV9BUlJBWSA9IFtdO1xuZXhwb3J0IGNvbnN0IEVNUFRZX09CSiA9IHt9O1xuXG5pZiAocURldikge1xuICBPYmplY3QuZnJlZXplKEVNUFRZX0FSUkFZKTtcbiAgT2JqZWN0LmZyZWV6ZShFTVBUWV9PQkopO1xufVxuIl19","import { qDev } from './qdev';\nconst STYLE = qDev\n    ? `background: #564CE0; color: white; padding: 2px 3px; border-radius: 2px; font-size: 0.8em;`\n    : '';\nexport const logError = (message, ...optionalParams) => {\n    // eslint-disable-next-line no-console\n    console.error('%cQWIK ERROR', STYLE, message, ...optionalParams);\n};\nexport const logWarn = (message, ...optionalParams) => {\n    // eslint-disable-next-line no-console\n    console.warn('%cQWIK WARN', STYLE, message, ...optionalParams);\n};\nexport const logDebug = (message, ...optionalParams) => {\n    if (qDev) {\n        // eslint-disable-next-line no-console\n        console.debug('%cQWIK', STYLE, message, ...optionalParams);\n    }\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL3V0aWwvbG9nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFFOUIsTUFBTSxLQUFLLEdBQUcsSUFBSTtJQUNoQixDQUFDLENBQUMsNEZBQTRGO0lBQzlGLENBQUMsQ0FBQyxFQUFFLENBQUM7QUFFUCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsQ0FBQyxPQUFhLEVBQUUsR0FBRyxjQUFxQixFQUFFLEVBQUU7SUFDbEUsc0NBQXNDO0lBQ3RDLE9BQU8sQ0FBQyxLQUFLLENBQUMsY0FBYyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsR0FBRyxjQUFjLENBQUMsQ0FBQztBQUNuRSxDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUcsQ0FBQyxPQUFhLEVBQUUsR0FBRyxjQUFxQixFQUFFLEVBQUU7SUFDakUsc0NBQXNDO0lBQ3RDLE9BQU8sQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsR0FBRyxjQUFjLENBQUMsQ0FBQztBQUNqRSxDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsQ0FBQyxPQUFhLEVBQUUsR0FBRyxjQUFxQixFQUFFLEVBQUU7SUFDbEUsSUFBSSxJQUFJLEVBQUU7UUFDUixzQ0FBc0M7UUFDdEMsT0FBTyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxHQUFHLGNBQWMsQ0FBQyxDQUFDO0tBQzVEO0FBQ0gsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcURldiB9IGZyb20gJy4vcWRldic7XG5cbmNvbnN0IFNUWUxFID0gcURldlxuICA/IGBiYWNrZ3JvdW5kOiAjNTY0Q0UwOyBjb2xvcjogd2hpdGU7IHBhZGRpbmc6IDJweCAzcHg7IGJvcmRlci1yYWRpdXM6IDJweDsgZm9udC1zaXplOiAwLjhlbTtgXG4gIDogJyc7XG5cbmV4cG9ydCBjb25zdCBsb2dFcnJvciA9IChtZXNzYWdlPzogYW55LCAuLi5vcHRpb25hbFBhcmFtczogYW55W10pID0+IHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgY29uc29sZS5lcnJvcignJWNRV0lLIEVSUk9SJywgU1RZTEUsIG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbn07XG5cbmV4cG9ydCBjb25zdCBsb2dXYXJuID0gKG1lc3NhZ2U/OiBhbnksIC4uLm9wdGlvbmFsUGFyYW1zOiBhbnlbXSkgPT4ge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICBjb25zb2xlLndhcm4oJyVjUVdJSyBXQVJOJywgU1RZTEUsIG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbn07XG5cbmV4cG9ydCBjb25zdCBsb2dEZWJ1ZyA9IChtZXNzYWdlPzogYW55LCAuLi5vcHRpb25hbFBhcmFtczogYW55W10pID0+IHtcbiAgaWYgKHFEZXYpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgIGNvbnNvbGUuZGVidWcoJyVjUVdJSycsIFNUWUxFLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gIH1cbn07XG4iXX0=","import { logError } from '../util/log';\nimport { qDev } from '../util/qdev';\nexport function assertDefined(value, text) {\n    if (qDev) {\n        if (value != null)\n            return;\n        throw newError(text || 'Expected defined value.');\n    }\n}\nexport function assertNotPromise(value, text) {\n    if (qDev) {\n        if (!(value instanceof Promise))\n            return;\n        throw newError(text || 'Expected defined value.');\n    }\n}\nexport function assertDefinedAndNotPromise(value, text) {\n    if (qDev) {\n        assertDefined(value, text);\n        assertNotPromise(value, text);\n    }\n}\nexport function assertInstanceOf(value, type, text) {\n    if (qDev) {\n        if (value instanceof type)\n            return;\n        throw newError(text || `Expected value '${value}' to be instance of '${type}' but was '${typeOf(value)}'.`);\n    }\n}\nexport function assertString(value, text) {\n    if (qDev) {\n        if (typeof value === 'string')\n            return;\n        throw newError(text || `Expected value '${value}' to be 'string' but was '${typeOf(value)}'.`);\n    }\n}\nexport function assertNotEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 !== value2)\n            return;\n        throw newError(text || `Expected '${value1}' !== '${value2}'.`);\n    }\n}\nexport function assertEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 === value2)\n            return;\n        throw newError(text || `Expected '${value1}' === '${value2}'.`);\n    }\n}\nexport function assertLessOrEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 <= value2)\n            return;\n        throw newError(text || `Expected '${value1}' <= '${value2}'.`);\n    }\n}\nexport function assertLess(value1, value2, text) {\n    if (qDev) {\n        if (value1 < value2)\n            return;\n        throw newError(text || `Expected '${value1}' < '${value2}'.`);\n    }\n}\nexport function assertGreaterOrEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 >= value2)\n            return;\n        throw newError(text || `Expected '${value1}' >= '${value2}'.`);\n    }\n}\nexport function assertGreater(value1, value2, text) {\n    if (qDev) {\n        if (value1 > value2)\n            return;\n        throw newError(text || `Expected '${value1}' > '${value2}'.`);\n    }\n}\nfunction typeOf(value) {\n    if (value === null)\n        return 'null';\n    const type = typeof value;\n    if (type === 'object') {\n        return value?.constructor?.name || '<unknown>';\n    }\n    else {\n        return type;\n    }\n}\nfunction newError(text) {\n    debugger; // eslint-disable-line no-debugger\n    const error = new Error(text);\n    logError(error); // eslint-disable-line no-console\n    return error;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXJ0LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL2Fzc2VydC9hc3NlcnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN2QyxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRXBDLE1BQU0sVUFBVSxhQUFhLENBQUMsS0FBVSxFQUFFLElBQWE7SUFDckQsSUFBSSxJQUFJLEVBQUU7UUFDUixJQUFJLEtBQUssSUFBSSxJQUFJO1lBQUUsT0FBTztRQUMxQixNQUFNLFFBQVEsQ0FBQyxJQUFJLElBQUkseUJBQXlCLENBQUMsQ0FBQztLQUNuRDtBQUNILENBQUM7QUFFRCxNQUFNLFVBQVUsZ0JBQWdCLENBQUMsS0FBVSxFQUFFLElBQWE7SUFDeEQsSUFBSSxJQUFJLEVBQUU7UUFDUixJQUFJLENBQUMsQ0FBQyxLQUFLLFlBQVksT0FBTyxDQUFDO1lBQUUsT0FBTztRQUN4QyxNQUFNLFFBQVEsQ0FBQyxJQUFJLElBQUkseUJBQXlCLENBQUMsQ0FBQztLQUNuRDtBQUNILENBQUM7QUFFRCxNQUFNLFVBQVUsMEJBQTBCLENBQUMsS0FBVSxFQUFFLElBQWE7SUFDbEUsSUFBSSxJQUFJLEVBQUU7UUFDUixhQUFhLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQzNCLGdCQUFnQixDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQztLQUMvQjtBQUNILENBQUM7QUFFRCxNQUFNLFVBQVUsZ0JBQWdCLENBQUMsS0FBVSxFQUFFLElBQVMsRUFBRSxJQUFhO0lBQ25FLElBQUksSUFBSSxFQUFFO1FBQ1IsSUFBSSxLQUFLLFlBQVksSUFBSTtZQUFFLE9BQU87UUFDbEMsTUFBTSxRQUFRLENBQ1osSUFBSSxJQUFJLG1CQUFtQixLQUFLLHdCQUF3QixJQUFJLGNBQWMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJ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IHsgbG9nRXJyb3IgfSBmcm9tICcuLi91dGlsL2xvZyc7XG5pbXBvcnQgeyBxRGV2IH0gZnJvbSAnLi4vdXRpbC9xZGV2JztcblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydERlZmluZWQodmFsdWU6IGFueSwgdGV4dD86IHN0cmluZykge1xuICBpZiAocURldikge1xuICAgIGlmICh2YWx1ZSAhPSBudWxsKSByZXR1cm47XG4gICAgdGhyb3cgbmV3RXJyb3IodGV4dCB8fCAnRXhwZWN0ZWQgZGVmaW5lZCB2YWx1ZS4nKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0Tm90UHJvbWlzZSh2YWx1ZTogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKCEodmFsdWUgaW5zdGFuY2VvZiBQcm9taXNlKSkgcmV0dXJuO1xuICAgIHRocm93IG5ld0Vycm9yKHRleHQgfHwgJ0V4cGVjdGVkIGRlZmluZWQgdmFsdWUuJyk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydERlZmluZWRBbmROb3RQcm9taXNlKHZhbHVlOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBhc3NlcnREZWZpbmVkKHZhbHVlLCB0ZXh0KTtcbiAgICBhc3NlcnROb3RQcm9taXNlKHZhbHVlLCB0ZXh0KTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0SW5zdGFuY2VPZih2YWx1ZTogYW55LCB0eXBlOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiB0eXBlKSByZXR1cm47XG4gICAgdGhyb3cgbmV3RXJyb3IoXG4gICAgICB0ZXh0IHx8IGBFeHBlY3RlZCB2YWx1ZSAnJHt2YWx1ZX0nIHRvIGJlIGluc3RhbmNlIG9mICcke3R5cGV9JyBidXQgd2FzICcke3R5cGVPZih2YWx1ZSl9Jy5gXG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0U3RyaW5nKHZhbHVlOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykgcmV0dXJuO1xuICAgIHRocm93IG5ld0Vycm9yKHRleHQgfHwgYEV4cGVjdGVkIHZhbHVlICcke3ZhbHVlfScgdG8gYmUgJ3N0cmluZycgYnV0IHdhcyAnJHt0eXBlT2YodmFsdWUpfScuYCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydE5vdEVxdWFsKHZhbHVlMTogYW55LCB2YWx1ZTI6IGFueSwgdGV4dD86IHN0cmluZykge1xuICBpZiAocURldikge1xuICAgIGlmICh2YWx1ZTEgIT09IHZhbHVlMikgcmV0dXJuO1xuICAgIHRocm93IG5ld0Vycm9yKHRleHQgfHwgYEV4cGVjdGVkICcke3ZhbHVlMX0nICE9PSAnJHt2YWx1ZTJ9Jy5gKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0RXF1YWwodmFsdWUxOiBhbnksIHZhbHVlMjogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKHZhbHVlMSA9PT0gdmFsdWUyKSByZXR1cm47XG4gICAgdGhyb3cgbmV3RXJyb3IodGV4dCB8fCBgRXhwZWN0ZWQgJyR7dmFsdWUxfScgPT09ICcke3ZhbHVlMn0nLmApO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRMZXNzT3JFcXVhbCh2YWx1ZTE6IGFueSwgdmFsdWUyOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAodmFsdWUxIDw9IHZhbHVlMikgcmV0dXJuO1xuICAgIHRocm93IG5ld0Vycm9yKHRleHQgfHwgYEV4cGVjdGVkICcke3ZhbHVlMX0nIDw9ICcke3ZhbHVlMn0nLmApO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRMZXNzKHZhbHVlMTogYW55LCB2YWx1ZTI6IGFueSwgdGV4dD86IHN0cmluZykge1xuICBpZiAocURldikge1xuICAgIGlmICh2YWx1ZTEgPCB2YWx1ZTIpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8IGBFeHBlY3RlZCAnJHt2YWx1ZTF9JyA8ICcke3ZhbHVlMn0nLmApO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRHcmVhdGVyT3JFcXVhbCh2YWx1ZTE6IGFueSwgdmFsdWUyOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAodmFsdWUxID49IHZhbHVlMikgcmV0dXJuO1xuICAgIHRocm93IG5ld0Vycm9yKHRleHQgfHwgYEV4cGVjdGVkICcke3ZhbHVlMX0nID49ICcke3ZhbHVlMn0nLmApO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRHcmVhdGVyKHZhbHVlMTogYW55LCB2YWx1ZTI6IGFueSwgdGV4dD86IHN0cmluZykge1xuICBpZiAocURldikge1xuICAgIGlmICh2YWx1ZTEgPiB2YWx1ZTIpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8IGBFeHBlY3RlZCAnJHt2YWx1ZTF9JyA+ICcke3ZhbHVlMn0nLmApO1xuICB9XG59XG5cbmZ1bmN0aW9uIHR5cGVPZih2YWx1ZTogYW55KSB7XG4gIGlmICh2YWx1ZSA9PT0gbnVsbCkgcmV0dXJuICdudWxsJztcbiAgY29uc3QgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgaWYgKHR5cGUgPT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIHZhbHVlPy5jb25zdHJ1Y3Rvcj8ubmFtZSB8fCAnPHVua25vd24+JztcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gdHlwZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBuZXdFcnJvcih0ZXh0OiBzdHJpbmcpIHtcbiAgZGVidWdnZXI7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tZGVidWdnZXJcbiAgY29uc3QgZXJyb3IgPSBuZXcgRXJyb3IodGV4dCk7XG4gIGxvZ0Vycm9yKGVycm9yKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlXG4gIHJldHVybiBlcnJvcjtcbn1cbiJdfQ==","/**\n * State factory of the component.\n */\nexport const OnMount = 'on:qmount';\n/**\n * State factory of the component.\n */\nexport const QHostAttr = 'q:host';\nexport const OnRenderProp = 'q:renderFn';\n/**\n * State factory of the component.\n */\nexport const OnRenderSelector = '[q\\\\:host]';\n/**\n * State factory of the component.\n */\nexport const OnUnmount = 'on:qunmount';\n/**\n * State factory of the component.\n */\nexport const OnResume = 'on:qresume';\n/**\n * Component Styles.\n */\nexport const ComponentScopedStyles = 'q:sstyle';\n/**\n * Unscoped Component Styles.\n */\nexport const ComponentUnscopedStyles = 'q:ustyle';\n/**\n * Component style host prefix\n */\nexport const ComponentStylesPrefixHost = '💎';\n/**\n * Component style content prefix\n */\nexport const ComponentStylesPrefixContent = '⭐️';\n/**\n * Prefix used to identify on listeners.\n */\nexport const EventPrefix = 'on:';\n/**\n * Attribute used to mark that an event listener is attached.\n */\nexport const EventAny = 'on:.';\n/**\n * Tag name used for projection.\n */\nexport const QSlot = 'Q:SLOT';\nexport const QSlotSelector = 'Q\\\\:SLOT';\n/**\n * `<some-element q:slot=\"...\">`\n */\nexport const QSlotAttr = 'q:slot';\nexport const QObjAttr = 'q:obj';\nexport const QSeqAttr = 'q:seq';\nexport const QContainerAttr = 'q:container';\nexport const QObjSelector = '[q\\\\:obj]';\nexport const QContainerSelector = '[q\\\\:container]';\nexport const RenderEvent = 'qRender';\n/**\n * `<q:slot name=\"...\">`\n */\nexport const QSlotName = 'name';\nexport const QSlotInertName = '\\u0000';\nexport const ELEMENT_ID = 'q:id';\nexport const ELEMENT_ID_SELECTOR = '[q\\\\:id]';\nexport const ELEMENT_ID_PREFIX = '#';\nexport const ELEMENT_ID_Q_PROPS_PREFIX = '&';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFya2Vycy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvcXdpay9zcmMvY29yZS91dGlsL21hcmtlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUcsV0FBVyxDQUFDO0FBRW5DOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLFFBQVEsQ0FBQztBQUNsQyxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsWUFBWSxDQUFDO0FBRXpDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsWUFBWSxDQUFDO0FBRTdDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLGFBQWEsQ0FBQztBQUV2Qzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxZQUFZLENBQUM7QUFFckM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FBRyxVQUFVLENBQUM7QUFFaEQ7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBRyxVQUFVLENBQUM7QUFFbEQ7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUM7QUFFOUM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSw0QkFBNEIsR0FBRyxJQUFJLENBQUM7QUFFakQ7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsS0FBSyxDQUFDO0FBRWpDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHLE1BQU0sQ0FBQztBQUUvQjs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxRQUFRLENBQUM7QUFDOUIsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLFVBQVUsQ0FBQztBQUV4Qzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxRQUFRLENBQUM7QUFFbEMsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQztBQUVoQyxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDO0FBRWhDLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxhQUFhLENBQUM7QUFFNUMsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLFdBQVcsQ0FBQztBQUV4QyxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxpQkFBaUIsQ0FBQztBQUVwRCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsU0FBUyxDQUFDO0FBQ3JDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLE1BQU0sQ0FBQztBQUNoQyxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsUUFBUSxDQUFDO0FBRXZDLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxNQUFNLENBQUM7QUFDakMsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsVUFBVSxDQUFDO0FBQzlDLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLEdBQUcsQ0FBQztBQUNyQyxNQUFNLENBQUMsTUFBTSx5QkFBeUIsR0FBRyxHQUFHLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFN0YXRlIGZhY3Rvcnkgb2YgdGhlIGNvbXBvbmVudC5cbiAqL1xuZXhwb3J0IGNvbnN0IE9uTW91bnQgPSAnb246cW1vdW50JztcblxuLyoqXG4gKiBTdGF0ZSBmYWN0b3J5IG9mIHRoZSBjb21wb25lbnQuXG4gKi9cbmV4cG9ydCBjb25zdCBRSG9zdEF0dHIgPSAncTpob3N0JztcbmV4cG9ydCBjb25zdCBPblJlbmRlclByb3AgPSAncTpyZW5kZXJGbic7XG5cbi8qKlxuICogU3RhdGUgZmFjdG9yeSBvZiB0aGUgY29tcG9uZW50LlxuICovXG5leHBvcnQgY29uc3QgT25SZW5kZXJTZWxlY3RvciA9ICdbcVxcXFw6aG9zdF0nO1xuXG4vKipcbiAqIFN0YXRlIGZhY3Rvcnkgb2YgdGhlIGNvbXBvbmVudC5cbiAqL1xuZXhwb3J0IGNvbnN0IE9uVW5tb3VudCA9ICdvbjpxdW5tb3VudCc7XG5cbi8qKlxuICogU3RhdGUgZmFjdG9yeSBvZiB0aGUgY29tcG9uZW50LlxuICovXG5leHBvcnQgY29uc3QgT25SZXN1bWUgPSAnb246cXJlc3VtZSc7XG5cbi8qKlxuICogQ29tcG9uZW50IFN0eWxlcy5cbiAqL1xuZXhwb3J0IGNvbnN0IENvbXBvbmVudFNjb3BlZFN0eWxlcyA9ICdxOnNzdHlsZSc7XG5cbi8qKlxuICogVW5zY29wZWQgQ29tcG9uZW50IFN0eWxlcy5cbiAqL1xuZXhwb3J0IGNvbnN0IENvbXBvbmVudFVuc2NvcGVkU3R5bGVzID0gJ3E6dXN0eWxlJztcblxuLyoqXG4gKiBDb21wb25lbnQgc3R5bGUgaG9zdCBwcmVmaXhcbiAqL1xuZXhwb3J0IGNvbnN0IENvbXBvbmVudFN0eWxlc1ByZWZpeEhvc3QgPSAn8J+Sjic7XG5cbi8qKlxuICogQ29tcG9uZW50IHN0eWxlIGNvbnRlbnQgcHJlZml4XG4gKi9cbmV4cG9ydCBjb25zdCBDb21wb25lbnRTdHlsZXNQcmVmaXhDb250ZW50ID0gJ+KtkO+4jyc7XG5cbi8qKlxuICogUHJlZml4IHVzZWQgdG8gaWRlbnRpZnkgb24gbGlzdGVuZXJzLlxuICovXG5leHBvcnQgY29uc3QgRXZlbnRQcmVmaXggPSAnb246JztcblxuLyoqXG4gKiBBdHRyaWJ1dGUgdXNlZCB0byBtYXJrIHRoYXQgYW4gZXZlbnQgbGlzdGVuZXIgaXMgYXR0YWNoZWQuXG4gKi9cbmV4cG9ydCBjb25zdCBFdmVudEFueSA9ICdvbjouJztcblxuLyoqXG4gKiBUYWcgbmFtZSB1c2VkIGZvciBwcm9qZWN0aW9uLlxuICovXG5leHBvcnQgY29uc3QgUVNsb3QgPSAnUTpTTE9UJztcbmV4cG9ydCBjb25zdCBRU2xvdFNlbGVjdG9yID0gJ1FcXFxcOlNMT1QnO1xuXG4vKipcbiAqIGA8c29tZS1lbGVtZW50IHE6c2xvdD1cIi4uLlwiPmBcbiAqL1xuZXhwb3J0IGNvbnN0IFFTbG90QXR0ciA9ICdxOnNsb3QnO1xuXG5leHBvcnQgY29uc3QgUU9iakF0dHIgPSAncTpvYmonO1xuXG5leHBvcnQgY29uc3QgUVNlcUF0dHIgPSAncTpzZXEnO1xuXG5leHBvcnQgY29uc3QgUUNvbnRhaW5lckF0dHIgPSAncTpjb250YWluZXInO1xuXG5leHBvcnQgY29uc3QgUU9ialNlbGVjdG9yID0gJ1txXFxcXDpvYmpdJztcblxuZXhwb3J0IGNvbnN0IFFDb250YWluZXJTZWxlY3RvciA9ICdbcVxcXFw6Y29udGFpbmVyXSc7XG5cbmV4cG9ydCBjb25zdCBSZW5kZXJFdmVudCA9ICdxUmVuZGVyJztcbi8qKlxuICogYDxxOnNsb3QgbmFtZT1cIi4uLlwiPmBcbiAqL1xuZXhwb3J0IGNvbnN0IFFTbG90TmFtZSA9ICduYW1lJztcbmV4cG9ydCBjb25zdCBRU2xvdEluZXJ0TmFtZSA9ICdcXHUwMDAwJztcblxuZXhwb3J0IGNvbnN0IEVMRU1FTlRfSUQgPSAncTppZCc7XG5leHBvcnQgY29uc3QgRUxFTUVOVF9JRF9TRUxFQ1RPUiA9ICdbcVxcXFw6aWRdJztcbmV4cG9ydCBjb25zdCBFTEVNRU5UX0lEX1BSRUZJWCA9ICcjJztcbmV4cG9ydCBjb25zdCBFTEVNRU5UX0lEX1FfUFJPUFNfUFJFRklYID0gJyYnO1xuIl19","import { assertDefined } from '../assert/assert';\nexport function getDocument(node) {\n    if (typeof document !== 'undefined') {\n        return document;\n    }\n    if (node.nodeType === 9) {\n        return node;\n    }\n    let doc = node.ownerDocument;\n    while (doc && doc.nodeType !== 9) {\n        doc = doc.parentNode;\n    }\n    assertDefined(doc);\n    return doc;\n}\nexport function getParentElement(node) {\n    return node.parentElement || previousParent.get(node) || null;\n}\nexport const previousParent = new WeakMap();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9tLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL3V0aWwvZG9tLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVqRCxNQUFNLFVBQVUsV0FBVyxDQUFDLElBQVU7SUFDcEMsSUFBSSxPQUFPLFFBQVEsS0FBSyxXQUFXLEVBQUU7UUFDbkMsT0FBTyxRQUFRLENBQUM7S0FDakI7SUFDRCxJQUFJLElBQUksQ0FBQyxRQUFRLEtBQUssQ0FBQyxFQUFFO1FBQ3ZCLE9BQU8sSUFBZ0IsQ0FBQztLQUN6QjtJQUNELElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUM7SUFDN0IsT0FBTyxHQUFHLElBQUksR0FBRyxDQUFDLFFBQVEsS0FBSyxDQUFDLEVBQUU7UUFDaEMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxVQUFpQixDQUFDO0tBQzdCO0lBQ0QsYUFBYSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ25CLE9BQU8sR0FBSSxDQUFDO0FBQ2QsQ0FBQztBQUVELE1BQU0sVUFBVSxnQkFBZ0IsQ0FBQyxJQUFVO0lBQ3pDLE9BQU8sSUFBSSxDQUFDLGFBQWEsSUFBSSxjQUFjLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQztBQUNoRSxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLElBQUksT0FBTyxFQUFpQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXNzZXJ0RGVmaW5lZCB9IGZyb20gJy4uL2Fzc2VydC9hc3NlcnQnO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RG9jdW1lbnQobm9kZTogTm9kZSk6IERvY3VtZW50IHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQ7XG4gIH1cbiAgaWYgKG5vZGUubm9kZVR5cGUgPT09IDkpIHtcbiAgICByZXR1cm4gbm9kZSBhcyBEb2N1bWVudDtcbiAgfVxuICBsZXQgZG9jID0gbm9kZS5vd25lckRvY3VtZW50O1xuICB3aGlsZSAoZG9jICYmIGRvYy5ub2RlVHlwZSAhPT0gOSkge1xuICAgIGRvYyA9IGRvYy5wYXJlbnROb2RlIGFzIGFueTtcbiAgfVxuICBhc3NlcnREZWZpbmVkKGRvYyk7XG4gIHJldHVybiBkb2MhO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UGFyZW50RWxlbWVudChub2RlOiBOb2RlKTogRWxlbWVudCB8IG51bGwge1xuICByZXR1cm4gbm9kZS5wYXJlbnRFbGVtZW50IHx8IHByZXZpb3VzUGFyZW50LmdldChub2RlKSB8fCBudWxsO1xufVxuXG5leHBvcnQgY29uc3QgcHJldmlvdXNQYXJlbnQgPSBuZXcgV2Vha01hcDxOb2RlLCBFbGVtZW50PigpO1xuIl19","import { assertDefined } from '../assert/assert';\nimport { QContainerSelector, QHostAttr } from '../util/markers';\nimport { getDocument } from '../util/dom';\nexport const CONTAINER = Symbol('container');\nexport function isStyleTask(obj) {\n    return obj && typeof obj === 'object' && obj.type === 'style';\n}\nlet _context;\nexport function tryGetInvokeContext() {\n    if (!_context) {\n        const context = typeof document !== 'undefined' && document && document.__q_context__;\n        if (!context) {\n            return undefined;\n        }\n        if (Array.isArray(context)) {\n            const element = context[0];\n            const hostElement = getHostElement(element);\n            assertDefined(element);\n            return (document.__q_context__ = newInvokeContext(getDocument(element), hostElement, element, context[1], context[2]));\n        }\n        return context;\n    }\n    return _context;\n}\nexport function getInvokeContext() {\n    const ctx = tryGetInvokeContext();\n    if (!ctx) {\n        throw new Error(\"Q-ERROR: invoking 'use*()' method outside of invocation context.\");\n    }\n    return ctx;\n}\nexport function useInvoke(context, fn, ...args) {\n    const previousContext = _context;\n    let returnValue;\n    try {\n        _context = context;\n        returnValue = fn.apply(null, args);\n    }\n    finally {\n        const currentCtx = _context;\n        _context = previousContext;\n        if (currentCtx.waitOn && currentCtx.waitOn.length > 0) {\n            // eslint-disable-next-line no-unsafe-finally\n            return Promise.all(currentCtx.waitOn).then(() => returnValue);\n        }\n    }\n    return returnValue;\n}\nexport function newInvokeContext(doc, hostElement, element, event, url) {\n    return {\n        seq: 0,\n        doc,\n        hostElement,\n        element,\n        event: event,\n        url: url || null,\n        qrl: undefined,\n    };\n}\n/**\n * @private\n */\nexport function useWaitOn(promise) {\n    const ctx = getInvokeContext();\n    (ctx.waitOn || (ctx.waitOn = [])).push(promise);\n}\nexport function getHostElement(el) {\n    let foundSlot = false;\n    let node = el;\n    while (node) {\n        const isHost = node.hasAttribute(QHostAttr);\n        const isSlot = node.tagName === 'Q:SLOT';\n        if (isHost) {\n            if (!foundSlot) {\n                break;\n            }\n            else {\n                foundSlot = false;\n            }\n        }\n        if (isSlot) {\n            foundSlot = true;\n        }\n        node = node.parentElement;\n    }\n    return node;\n}\nexport function getContainer(el) {\n    let container = el[CONTAINER];\n    if (!container) {\n        container = el.closest(QContainerSelector);\n        el[CONTAINER] = container;\n    }\n    return container;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWNvcmUuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL3F3aWsvc3JjL2NvcmUvdXNlL3VzZS1jb3JlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVqRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsU0FBUyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDaEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQU8xQyxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBUTdDLE1BQU0sVUFBVSxXQUFXLENBQUMsR0FBUTtJQUNsQyxPQUFPLEdBQUcsSUFBSSxPQUFPLEdBQUcsS0FBSyxRQUFRLElBQUksR0FBRyxDQUFDLElBQUksS0FBSyxPQUFPLENBQUM7QUFDaEUsQ0FBQztBQW1CRCxJQUFJLFFBQW1DLENBQUM7QUFFeEMsTUFBTSxVQUFVLG1CQUFtQjtJQUNqQyxJQUFJLENBQUMsUUFBUSxFQUFFO1FBQ2IsTUFBTSxPQUFPLEdBQUcsT0FBTyxRQUFRLEtBQUssV0FBVyxJQUFJLFFBQVEsSUFBSSxRQUFRLENBQUMsYUFBYSxDQUFDO1FBQ3RGLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDWixPQUFPLFNBQVMsQ0FBQztTQUNsQjtRQUNELElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUMxQixNQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDM0IsTUFBTSxXQUFXLEdBQUcsY0FBYyxDQUFDLE9BQU8sQ0FBRSxDQUFDO1lBQzdDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUN2QixPQUFPLENBQUMsUUFBUSxDQUFDLGFBQWEsR0FBRyxnQkFBZ0IsQ0FDL0MsV0FBVyxDQUFDLE9BQU8sQ0FBQyxFQUNwQixXQUFXLEVBQ1gsT0FBTyxFQUNQ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QyxDQUFDO1FBQzFDLEVBQVUsQ0FBQyxTQUFTLENBQUMsR0FBRyxTQUFTLENBQUM7S0FDcEM7SUFDRCxPQUFPLFNBQVMsQ0FBQztBQUNuQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJy4uL3V0aWwvdHlwZXMnO1xuaW1wb3J0IHR5cGUgeyBQcm9wcyB9IGZyb20gJy4uL3Byb3BzL3Byb3BzLnB1YmxpYyc7XG5pbXBvcnQgeyBhc3NlcnREZWZpbmVkIH0gZnJvbSAnLi4vYXNzZXJ0L2Fzc2VydCc7XG5pbXBvcnQgdHlwZSB7IFF3aWtEb2N1bWVudCB9IGZyb20gJy4uL2RvY3VtZW50JztcbmltcG9ydCB7IFFDb250YWluZXJTZWxlY3RvciwgUUhvc3RBdHRyIH0gZnJvbSAnLi4vdXRpbC9tYXJrZXJzJztcbmltcG9ydCB7IGdldERvY3VtZW50IH0gZnJvbSAnLi4vdXRpbC9kb20nO1xuaW1wb3J0IHR5cGUgeyBRUkwgfSBmcm9tICcuLic7XG5pbXBvcnQgdHlwZSB7IFN1YnNjcmliZXIgfSBmcm9tICcuL3VzZS1zdWJzY3JpYmVyJztcbmltcG9ydCB0eXBlIHsgV2F0Y2hEZXNjcmlwdG9yIH0gZnJvbSAnLi4vd2F0Y2gvd2F0Y2gucHVibGljJztcblxuZGVjbGFyZSBjb25zdCBkb2N1bWVudDogUXdpa0RvY3VtZW50O1xuXG5leHBvcnQgY29uc3QgQ09OVEFJTkVSID0gU3ltYm9sKCdjb250YWluZXInKTtcblxuZXhwb3J0IGludGVyZmFjZSBTdHlsZUFwcGVuZCB7XG4gIHR5cGU6ICdzdHlsZSc7XG4gIHN0eWxlSWQ6IHN0cmluZztcbiAgY29udGVudDogc3RyaW5nO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNTdHlsZVRhc2sob2JqOiBhbnkpOiBvYmogaXMgU3R5bGVBcHBlbmQge1xuICByZXR1cm4gb2JqICYmIHR5cGVvZiBvYmogPT09ICdvYmplY3QnICYmIG9iai50eXBlID09PSAnc3R5bGUnO1xufVxuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBJbnZva2VDb250ZXh0IHtcbiAgdXJsOiBVUkwgfCBudWxsO1xuICBzZXE6IG51bWJlcjtcbiAgZG9jPzogRG9jdW1lbnQ7XG4gIGhvc3RFbGVtZW50PzogRWxlbWVudDtcbiAgZWxlbWVudD86IEVsZW1lbnQ7XG4gIGV2ZW50OiBhbnk7XG4gIHFybD86IFFSTDxhbnk+O1xuICB3YWl0T24/OiBWYWx1ZU9yUHJvbWlzZTxhbnk+W107XG4gIHByb3BzPzogUHJvcHM7XG4gIHN1YnNjcmliZXI/OiBTdWJzY3JpYmVyIHwgbnVsbDtcbiAgd2F0Y2g/OiBXYXRjaERlc2NyaXB0b3I7XG59XG5cbmxldCBfY29udGV4dDogSW52b2tlQ29udGV4dCB8IHVuZGVmaW5lZDtcblxuZXhwb3J0IGZ1bmN0aW9uIHRyeUdldEludm9rZUNvbnRleHQoKTogSW52b2tlQ29udGV4dCB8IHVuZGVmaW5lZCB7XG4gIGlmICghX2NvbnRleHQpIHtcbiAgICBjb25zdCBjb250ZXh0ID0gdHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5fX3FfY29udGV4dF9fO1xuICAgIGlmICghY29udGV4dCkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoY29udGV4dCkpIHtcbiAgICAgIGNvbnN0IGVsZW1lbnQgPSBjb250ZXh0WzBdO1xuICAgICAgY29uc3QgaG9zdEVsZW1lbnQgPSBnZXRIb3N0RWxlbWVudChlbGVtZW50KSE7XG4gICAgICBhc3NlcnREZWZpbmVkKGVsZW1lbnQpO1xuICAgICAgcmV0dXJuIChkb2N1bWVudC5fX3FfY29udGV4dF9fID0gbmV3SW52b2tlQ29udGV4dChcbiAgICAgICAgZ2V0RG9jdW1lbnQoZWxlbWVudCksXG4gICAgICAgIGhvc3RFbGVtZW50LFxuICAgICAgICBlbGVtZW50LFxuICAgICAgICBjb250ZXh0WzFdLFxuICAgICAgICBjb250ZXh0WzJdXG4gICAgICApKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbnRleHQgYXMgSW52b2tlQ29udGV4dDtcbiAgfVxuICByZXR1cm4gX2NvbnRleHQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRJbnZva2VDb250ZXh0KCk6IEludm9rZUNvbnRleHQge1xuICBjb25zdCBjdHggPSB0cnlHZXRJbnZva2VDb250ZXh0KCk7XG4gIGlmICghY3R4KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiUS1FUlJPUjogaW52b2tpbmcgJ3VzZSooKScgbWV0aG9kIG91dHNpZGUgb2YgaW52b2NhdGlvbiBjb250ZXh0LlwiKTtcbiAgfVxuICByZXR1cm4gY3R4O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlSW52b2tlPEFSR1MgZXh0ZW5kcyBhbnlbXSA9IGFueVtdLCBSRVQgPSBhbnk+KFxuICBjb250ZXh0OiBJbnZva2VDb250ZXh0LFxuICBmbjogKC4uLmFyZ3M6IEFSR1MpID0+IFJFVCxcbiAgLi4uYXJnczogQVJHU1xuKTogVmFsdWVPclByb21pc2U8UkVUPiB7XG4gIGNvbnN0IHByZXZpb3VzQ29udGV4dCA9IF9jb250ZXh0O1xuICBsZXQgcmV0dXJuVmFsdWU6IFJFVDtcbiAgdHJ5IHtcbiAgICBfY29udGV4dCA9IGNvbnRleHQ7XG4gICAgcmV0dXJuVmFsdWUgPSBmbi5hcHBseShudWxsLCBhcmdzKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBjb25zdCBjdXJyZW50Q3R4ID0gX2NvbnRleHQhO1xuICAgIF9jb250ZXh0ID0gcHJldmlvdXNDb250ZXh0O1xuICAgIGlmIChjdXJyZW50Q3R4LndhaXRPbiAmJiBjdXJyZW50Q3R4LndhaXRPbi5sZW5ndGggPiAwKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5zYWZlLWZpbmFsbHlcbiAgICAgIHJldHVybiBQcm9taXNlLmFsbChjdXJyZW50Q3R4LndhaXRPbikudGhlbigoKSA9PiByZXR1cm5WYWx1ZSk7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXR1cm5WYWx1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBuZXdJbnZva2VDb250ZXh0KFxuICBkb2M/OiBEb2N1bWVudCxcbiAgaG9zdEVsZW1lbnQ/OiBFbGVtZW50LFxuICBlbGVtZW50PzogRWxlbWVudCxcbiAgZXZlbnQ/OiBhbnksXG4gIHVybD86IFVSTFxuKTogSW52b2tlQ29udGV4dCB7XG4gIHJldHVybiB7XG4gICAgc2VxOiAwLFxuICAgIGRvYyxcbiAgICBob3N0RWxlbWVudCxcbiAgICBlbGVtZW50LFxuICAgIGV2ZW50OiBldmVudCxcbiAgICB1cmw6IHVybCB8fCBudWxsLFxuICAgIHFybDogdW5kZWZpbmVkLFxuICB9O1xufVxuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VXYWl0T24ocHJvbWlzZTogVmFsdWVPclByb21pc2U8YW55Pik6IHZvaWQge1xuICBjb25zdCBjdHggPSBnZXRJbnZva2VDb250ZXh0KCk7XG4gIChjdHgud2FpdE9uIHx8IChjdHgud2FpdE9uID0gW10pKS5wdXNoKHByb21pc2UpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0SG9zdEVsZW1lbnQoZWw6IEVsZW1lbnQpOiBFbGVtZW50IHwgbnVsbCB7XG4gIGxldCBmb3VuZFNsb3QgPSBmYWxzZTtcbiAgbGV0IG5vZGU6IEVsZW1lbnQgfCBudWxsID0gZWw7XG4gIHdoaWxlIChub2RlKSB7XG4gICAgY29uc3QgaXNIb3N0ID0gbm9kZS5oYXNBdHRyaWJ1dGUoUUhvc3RBdHRyKTtcbiAgICBjb25zdCBpc1Nsb3QgPSBub2RlLnRhZ05hbWUgPT09ICdROlNMT1QnO1xuICAgIGlmIChpc0hvc3QpIHtcbiAgICAgIGlmICghZm91bmRTbG90KSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZm91bmRTbG90ID0gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChpc1Nsb3QpIHtcbiAgICAgIGZvdW5kU2xvdCA9IHRydWU7XG4gICAgfVxuICAgIG5vZGUgPSBub2RlLnBhcmVudEVsZW1lbnQ7XG4gIH1cbiAgcmV0dXJuIG5vZGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRDb250YWluZXIoZWw6IEVsZW1lbnQpOiBFbGVtZW50IHwgbnVsbCB7XG4gIGxldCBjb250YWluZXIgPSAoZWwgYXMgYW55KVtDT05UQUlORVJdO1xuICBpZiAoIWNvbnRhaW5lcikge1xuICAgIGNvbnRhaW5lciA9IGVsLmNsb3Nlc3QoUUNvbnRhaW5lclNlbGVjdG9yKTtcbiAgICAoZWwgYXMgYW55KVtDT05UQUlORVJdID0gY29udGFpbmVyO1xuICB9XG4gIHJldHVybiBjb250YWluZXI7XG59XG4iXX0=","export function flattenArray(array, dst) {\n    // Yes this function is just Array.flat, but we need to run on old versions of Node.\n    if (!dst)\n        dst = [];\n    for (const item of array) {\n        if (Array.isArray(item)) {\n            flattenArray(item, dst);\n        }\n        else {\n            dst.push(item);\n        }\n    }\n    return dst;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJyYXkuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL3F3aWsvc3JjL2NvcmUvdXRpbC9hcnJheS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLFVBQVUsWUFBWSxDQUFJLEtBQWtCLEVBQUUsR0FBUztJQUMzRCxvRkFBb0Y7SUFDcEYsSUFBSSxDQUFDLEdBQUc7UUFBRSxHQUFHLEdBQUcsRUFBRSxDQUFDO0lBQ25CLEtBQUssTUFBTSxJQUFJLElBQUksS0FBSyxFQUFFO1FBQ3hCLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUN2QixZQUFZLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1NBQ3pCO2FBQU07WUFDTCxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ2hCO0tBQ0Y7SUFDRCxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZmxhdHRlbkFycmF5PFQ+KGFycmF5OiAoVCB8IFRbXSlbXSwgZHN0PzogVFtdKTogVFtdIHtcbiAgLy8gWWVzIHRoaXMgZnVuY3Rpb24gaXMganVzdCBBcnJheS5mbGF0LCBidXQgd2UgbmVlZCB0byBydW4gb24gb2xkIHZlcnNpb25zIG9mIE5vZGUuXG4gIGlmICghZHN0KSBkc3QgPSBbXTtcbiAgZm9yIChjb25zdCBpdGVtIG9mIGFycmF5KSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoaXRlbSkpIHtcbiAgICAgIGZsYXR0ZW5BcnJheShpdGVtLCBkc3QpO1xuICAgIH0gZWxzZSB7XG4gICAgICBkc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGRzdDtcbn1cbiJdfQ==","import { flattenArray } from './array';\n/**\n * Converts a tree of Promises into a flat array of resolved promise values.\n *\n * @param tree - array of arrays of values or promises of values.\n * @returns a `Promise` of array of values.\n */\nexport function flattenPromiseTree(tree) {\n    return Promise.all(tree).then((values) => {\n        const flatArray = flattenArray(values);\n        for (let i = 0; i < flatArray.length; i++) {\n            if (isPromise(flatArray[i])) {\n                return flattenPromiseTree(flatArray);\n            }\n        }\n        return flatArray;\n    });\n}\nexport function isPromise(value) {\n    return value instanceof Promise;\n}\nexport const then = (promise, thenFn) => {\n    return isPromise(promise) ? promise.then(thenFn) : thenFn(promise);\n};\nexport const promiseAll = (promises) => {\n    const hasPromise = promises.some(isPromise);\n    if (hasPromise) {\n        return Promise.all(promises);\n    }\n    return promises;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvbWlzZXMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL3F3aWsvc3JjL2NvcmUvdXRpbC9wcm9taXNlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBSXZDOzs7OztHQUtHO0FBQ0gsTUFBTSxVQUFVLGtCQUFrQixDQUFJLElBQW9CO0lBQ3hELE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFXLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFhLEVBQUUsRUFBRTtRQUNyRCxNQUFNLFNBQVMsR0FBRyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDdkMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDekMsSUFBSSxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7Z0JBQzNCLE9BQU8sa0JBQWtCLENBQUMsU0FBUyxDQUFDLENBQUM7YUFDdEM7U0FDRjtRQUNELE9BQU8sU0FBUyxDQUFDO0lBQ25CLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQUVELE1BQU0sVUFBVSxTQUFTLENBQUMsS0FBVTtJQUNsQyxPQUFPLEtBQUssWUFBWSxPQUFPLENBQUM7QUFDbEMsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBRyxDQUNsQixPQUEwQixFQUMxQixNQUE4QyxFQUMzQixFQUFFO0lBQ3JCLE9BQU8sU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBYyxDQUFDLENBQUM7QUFDbkYsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLENBQWtCLFFBQVcsRUFBcUIsRUFBRTtJQUM1RSxNQUFNLFVBQVUsR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQzVDLElBQUksVUFBVSxFQUFFO1FBQ2QsT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0tBQzlCO0lBQ0QsT0FBTyxRQUFRLENBQUM7QUFDbEIsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IHsgZmxhdHRlbkFycmF5IH0gZnJvbSAnLi9hcnJheSc7XG5cbmV4cG9ydCB0eXBlIFByb21pc2VUcmVlPFQ+ID0gVCB8IFByb21pc2U8VD4gfCBQcm9taXNlPFRbXT4gfCBBcnJheTxQcm9taXNlVHJlZTxUPj47XG5cbi8qKlxuICogQ29udmVydHMgYSB0cmVlIG9mIFByb21pc2VzIGludG8gYSBmbGF0IGFycmF5IG9mIHJlc29sdmVkIHByb21pc2UgdmFsdWVzLlxuICpcbiAqIEBwYXJhbSB0cmVlIC0gYXJyYXkgb2YgYXJyYXlzIG9mIHZhbHVlcyBvciBwcm9taXNlcyBvZiB2YWx1ZXMuXG4gKiBAcmV0dXJucyBhIGBQcm9taXNlYCBvZiBhcnJheSBvZiB2YWx1ZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmbGF0dGVuUHJvbWlzZVRyZWU8VD4odHJlZTogUHJvbWlzZVRyZWU8VD4pOiBQcm9taXNlPFRbXT4ge1xuICByZXR1cm4gUHJvbWlzZS5hbGwodHJlZSBhcyBUW10pLnRoZW4oKHZhbHVlczogYW55W10pID0+IHtcbiAgICBjb25zdCBmbGF0QXJyYXkgPSBmbGF0dGVuQXJyYXkodmFsdWVzKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZsYXRBcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKGlzUHJvbWlzZShmbGF0QXJyYXlbaV0pKSB7XG4gICAgICAgIHJldHVybiBmbGF0dGVuUHJvbWlzZVRyZWUoZmxhdEFycmF5KTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZsYXRBcnJheTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1Byb21pc2UodmFsdWU6IGFueSk6IHZhbHVlIGlzIFByb21pc2U8YW55PiB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFByb21pc2U7XG59XG5cbmV4cG9ydCBjb25zdCB0aGVuID0gPFQsIEI+KFxuICBwcm9taXNlOiBWYWx1ZU9yUHJvbWlzZTxUPixcbiAgdGhlbkZuOiAoYXJnOiBBd2FpdGVkPFQ+KSA9PiBWYWx1ZU9yUHJvbWlzZTxCPlxuKTogVmFsdWVPclByb21pc2U8Qj4gPT4ge1xuICByZXR1cm4gaXNQcm9taXNlKHByb21pc2UpID8gcHJvbWlzZS50aGVuKHRoZW5GbiBhcyBhbnkpIDogdGhlbkZuKHByb21pc2UgYXMgYW55KTtcbn07XG5cbmV4cG9ydCBjb25zdCBwcm9taXNlQWxsID0gPFQgZXh0ZW5kcyBhbnlbXT4ocHJvbWlzZXM6IFQpOiBWYWx1ZU9yUHJvbWlzZTxUPiA9PiB7XG4gIGNvbnN0IGhhc1Byb21pc2UgPSBwcm9taXNlcy5zb21lKGlzUHJvbWlzZSk7XG4gIGlmIChoYXNQcm9taXNlKSB7XG4gICAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTtcbiAgfVxuICByZXR1cm4gcHJvbWlzZXM7XG59O1xuIl19","import { newInvokeContext, useInvoke } from '../use/use-core';\nimport { then } from '../util/promises';\nimport { qrlImport, stringifyQRL } from './qrl';\nexport function isQrl(value) {\n    return value instanceof QRLInternal;\n}\nclass QRL {\n    constructor(chunk, symbol, symbolRef, symbolFn, capture, captureRef) {\n        this.chunk = chunk;\n        this.symbol = symbol;\n        this.symbolRef = symbolRef;\n        this.symbolFn = symbolFn;\n        this.capture = capture;\n        this.captureRef = captureRef;\n    }\n    setContainer(el) {\n        if (!this.el) {\n            this.el = el;\n        }\n    }\n    async resolve(el) {\n        if (el) {\n            this.setContainer(el);\n        }\n        return qrlImport(this.el, this);\n    }\n    invokeFn(el, currentCtx, beforeFn) {\n        return ((...args) => {\n            const fn = (typeof this.symbolRef === 'function' ? this.symbolRef : this.resolve(el));\n            return then(fn, (fn) => {\n                if (typeof fn === 'function') {\n                    const baseContext = currentCtx ?? newInvokeContext();\n                    const context = {\n                        ...baseContext,\n                        qrl: this,\n                    };\n                    if (beforeFn) {\n                        beforeFn();\n                    }\n                    return useInvoke(context, fn, ...args);\n                }\n                throw new Error('QRL is not a function');\n            });\n        });\n    }\n    copy() {\n        const copy = new QRLInternal(this.chunk, this.symbol, this.symbolRef, this.symbolFn, null, this.captureRef);\n        copy.refSymbol = this.refSymbol;\n        return copy;\n    }\n    invoke(...args) {\n        const fn = this.invokeFn();\n        return fn(...args);\n    }\n    serialize(options) {\n        return stringifyQRL(this, options);\n    }\n}\nexport const getCanonicalSymbol = (symbolName) => {\n    const index = symbolName.lastIndexOf('_');\n    if (index > -1) {\n        return symbolName.slice(index + 1);\n    }\n    return symbolName;\n};\nexport const isSameQRL = (a, b) => {\n    return getCanonicalSymbol(a.symbol) === getCanonicalSymbol(b.symbol);\n};\nexport const QRLInternal = QRL;\n// https://regexr.com/6enjv\nconst FIND_EXT = /\\?[\\w=&]+$/;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXJsLWNsYXNzLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL2ltcG9ydC9xcmwtY2xhc3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFpQixnQkFBZ0IsRUFBRSxTQUFTLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUM3RSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFeEMsT0FBTyxFQUFFLFNBQVMsRUFBdUIsWUFBWSxFQUFFLE1BQU0sT0FBTyxDQUFDO0FBR3JFLE1BQU0sVUFBVSxLQUFLLENBQUMsS0FBVTtJQUM5QixPQUFPLEtBQUssWUFBWSxXQUFXLENBQUM7QUFDdEMsQ0FBQztBQUVELE1BQU0sR0FBRztJQU1QLFlBQ1MsS0FBYSxFQUNiLE1BQWMsRUFDZCxTQUFzQyxFQUN0QyxRQUFxRCxFQUNyRCxPQUF3QixFQUN4QixVQUF3QjtRQUx4QixVQUFLLEdBQUwsS0FBSyxDQUFRO1FBQ2IsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUNkLGNBQVMsR0FBVCxTQUFTLENBQTZCO1FBQ3RDLGFBQVEsR0FBUixRQUFRLENBQTZDO1FBQ3JELFlBQU8sR0FBUCxPQUFPLENBQWlCO1FBQ3hCLGVBQVUsR0FBVixVQUFVLENBQWM7SUFDOUIsQ0FBQztJQUVKLFlBQVksQ0FBQyxFQUFXO1FBQ3RCLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFO1lBQ1osSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7U0FDZDtJQUNILENBQUM7SUFFRCxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQVk7UUFDeEIsSUFBSSxFQUFFLEVBQUU7WUFDTixJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQ3ZCO1FBQ0QsT0FBTyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxJQUFXLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBRUQsUUFBUSxDQUFDLEVBQVksRUFBRSxVQUEwQixFQUFFLFFBQXFCO1FBQ3RFLE9BQU8sQ0FBQyxDQUFDLEdBQUcsSUFBVyxFQUFPLEVBQUU7WUFDOUIsTUFBTSxFQUFFLEdBQUcsQ0FBQyxPQUFPLElBQUksQ0FBQyxTQUFTLEtBQUssVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFTLENBQUM7WUFDOUYsT0FBTyxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Z0JBQ3JCLElBQUksT0FBTyxFQUFFLEtBQUssVUFBVSxFQUFFO29CQUM1QixNQUFNLFdBQVcsR0FBRyxVQUFVLElBQUksZ0JBQWdCLEVBQUUsQ0FBQztvQkFDckQsTUFBTSxPQUFPLEdBQWtCO3dCQUM3QixHQUFHLFdBQVc7d0JBQ2QsR0FBRyxFQUFFLElBQUk7cUJBQ1YsQ0FBQztvQkFDRixJQUFJLFFBQVEsRUFBRTt3QkFDWixRQUFRLEVBQUUsQ0FBQztxQkFDWjtvQkFDRCxPQUFPLFNBQVMsQ0FBQyxPQUFPLEVBQUUsRUFBUyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUM7aUJBQy9DO2dCQUNELE1BQU0sSUFBSSxLQUFLLENBQUMsdUJBQXVCLENBQUMsQ0FBQztZQUMzQyxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBUSxDQUFDO0lBQ1osQ0FBQztJQUVELElBQUk7UUFDRixNQUFNLElBQUksR0FBRyxJQUFJLFdBQVcsQ0FDMUIsSUFBSSxDQUFDLEtBQUssRUFDVixJQUFJLENBQUMsTUFBTSxFQUNYLElBQUksQ0FBQyxTQUFTLEVBQ2QsSUFBSSxDQUFDLFFBQVEsRUFDYixJQUFJLEVBQ0osSUFBSSxDQUFDLFVBQVUsQ0FDaEIsQ0FBQztRQUNGLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUNoQyxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxNQUFNLENBQUMsR0FBRyxJQUE4RDtRQUN0RSxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDM0IsT0FBTyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQVEsQ0FBQztJQUM1QixDQUFDO0lBRUQsU0FBUyxDQUFDLE9BQTZCO1FBQ3JDLE9BQU8sWUFBWSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztJQUNyQyxDQUFDO0NBQ0Y7QUFFRCxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxDQUFDLFVBQWtCLEVBQUUsRUFBRTtJQUN2RCxNQUFNLEtBQUssR0FBRyxVQUFVLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzFDLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQyxFQUFFO1FBQ2QsT0FBTyxVQUFVLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQztLQUNwQztJQUNELE9BQU8sVUFBVSxDQUFDO0FBQ3BCLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxDQUFDLENBQVcsRUFBRSxDQUFXLEVBQVcsRUFBRTtJQUM3RCxPQUFPLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDdkUsQ0FBQyxDQUFDO0FBR0YsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFlLEdBQUcsQ0FBQztBQUUzQywyQkFBMkI7QUFDM0IsTUFBTSxRQUFRLEdBQUcsWUFBWSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW52b2tlQ29udGV4dCwgbmV3SW52b2tlQ29udGV4dCwgdXNlSW52b2tlIH0gZnJvbSAnLi4vdXNlL3VzZS1jb3JlJztcbmltcG9ydCB7IHRoZW4gfSBmcm9tICcuLi91dGlsL3Byb21pc2VzJztcbmltcG9ydCB0eXBlIHsgVmFsdWVPclByb21pc2UgfSBmcm9tICcuLi91dGlsL3R5cGVzJztcbmltcG9ydCB7IHFybEltcG9ydCwgUVJMU2VyaWFsaXplT3B0aW9ucywgc3RyaW5naWZ5UVJMIH0gZnJvbSAnLi9xcmwnO1xuaW1wb3J0IHR5cGUgeyBRUkwgYXMgSVFSTCB9IGZyb20gJy4vcXJsLnB1YmxpYyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1FybCh2YWx1ZTogYW55KTogdmFsdWUgaXMgUVJMSW50ZXJuYWwge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBRUkxJbnRlcm5hbDtcbn1cblxuY2xhc3MgUVJMPFRZUEUgPSBhbnk+IGltcGxlbWVudHMgSVFSTDxUWVBFPiB7XG4gIF9fYnJhbmRfX1FSTF9fITogVFlQRTtcbiAgcmVmU3ltYm9sPzogc3RyaW5nO1xuXG4gIHByaXZhdGUgZWw6IEVsZW1lbnQgfCB1bmRlZmluZWQ7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIGNodW5rOiBzdHJpbmcsXG4gICAgcHVibGljIHN5bWJvbDogc3RyaW5nLFxuICAgIHB1YmxpYyBzeW1ib2xSZWY6IG51bGwgfCBWYWx1ZU9yUHJvbWlzZTxUWVBFPixcbiAgICBwdWJsaWMgc3ltYm9sRm46IG51bGwgfCAoKCkgPT4gUHJvbWlzZTxSZWNvcmQ8c3RyaW5nLCBhbnk+PiksXG4gICAgcHVibGljIGNhcHR1cmU6IG51bGwgfCBzdHJpbmdbXSxcbiAgICBwdWJsaWMgY2FwdHVyZVJlZjogbnVsbCB8IGFueVtdXG4gICkge31cblxuICBzZXRDb250YWluZXIoZWw6IEVsZW1lbnQpIHtcbiAgICBpZiAoIXRoaXMuZWwpIHtcbiAgICAgIHRoaXMuZWwgPSBlbDtcbiAgICB9XG4gIH1cblxuICBhc3luYyByZXNvbHZlKGVsPzogRWxlbWVudCk6IFByb21pc2U8VFlQRT4ge1xuICAgIGlmIChlbCkge1xuICAgICAgdGhpcy5zZXRDb250YWluZXIoZWwpO1xuICAgIH1cbiAgICByZXR1cm4gcXJsSW1wb3J0KHRoaXMuZWwsIHRoaXMgYXMgYW55KTtcbiAgfVxuXG4gIGludm9rZUZuKGVsPzogRWxlbWVudCwgY3VycmVudEN0eD86IEludm9rZUNvbnRleHQsIGJlZm9yZUZuPzogKCkgPT4gdm9pZCk6IGFueSB7XG4gICAgcmV0dXJuICgoLi4uYXJnczogYW55W10pOiBhbnkgPT4ge1xuICAgICAgY29uc3QgZm4gPSAodHlwZW9mIHRoaXMuc3ltYm9sUmVmID09PSAnZnVuY3Rpb24nID8gdGhpcy5zeW1ib2xSZWYgOiB0aGlzLnJlc29sdmUoZWwpKSBhcyBUWVBFO1xuICAgICAgcmV0dXJuIHRoZW4oZm4sIChmbikgPT4ge1xuICAgICAgICBpZiAodHlwZW9mIGZuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgY29uc3QgYmFzZUNvbnRleHQgPSBjdXJyZW50Q3R4ID8/IG5ld0ludm9rZUNvbnRleHQoKTtcbiAgICAgICAgICBjb25zdCBjb250ZXh0OiBJbnZva2VDb250ZXh0ID0ge1xuICAgICAgICAgICAgLi4uYmFzZUNvbnRleHQsXG4gICAgICAgICAgICBxcmw6IHRoaXMsXG4gICAgICAgICAgfTtcbiAgICAgICAgICBpZiAoYmVmb3JlRm4pIHtcbiAgICAgICAgICAgIGJlZm9yZUZuKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiB1c2VJbnZva2UoY29udGV4dCwgZm4gYXMgYW55LCAuLi5hcmdzKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1FSTCBpcyBub3QgYSBmdW5jdGlvbicpO1xuICAgICAgfSk7XG4gICAgfSkgYXMgYW55O1xuICB9XG5cbiAgY29weSgpOiBRUkxJbnRlcm5hbDxUWVBFPiB7XG4gICAgY29uc3QgY29weSA9IG5ldyBRUkxJbnRlcm5hbChcbiAgICAgIHRoaXMuY2h1bmssXG4gICAgICB0aGlzLnN5bWJvbCxcbiAgICAgIHRoaXMuc3ltYm9sUmVmLFxuICAgICAgdGhpcy5zeW1ib2xGbixcbiAgICAgIG51bGwsXG4gICAgICB0aGlzLmNhcHR1cmVSZWZcbiAgICApO1xuICAgIGNvcHkucmVmU3ltYm9sID0gdGhpcy5yZWZTeW1ib2w7XG4gICAgcmV0dXJuIGNvcHk7XG4gIH1cblxuICBpbnZva2UoLi4uYXJnczogVFlQRSBleHRlbmRzICguLi5hcmdzOiBpbmZlciBBUkdTKSA9PiBhbnkgPyBBUkdTIDogbmV2ZXIpIHtcbiAgICBjb25zdCBmbiA9IHRoaXMuaW52b2tlRm4oKTtcbiAgICByZXR1cm4gZm4oLi4uYXJncykgYXMgYW55O1xuICB9XG5cbiAgc2VyaWFsaXplKG9wdGlvbnM/OiBRUkxTZXJpYWxpemVPcHRpb25zKSB7XG4gICAgcmV0dXJuIHN0cmluZ2lmeVFSTCh0aGlzLCBvcHRpb25zKTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZ2V0Q2Fub25pY2FsU3ltYm9sID0gKHN5bWJvbE5hbWU6IHN0cmluZykgPT4ge1xuICBjb25zdCBpbmRleCA9IHN5bWJvbE5hbWUubGFzdEluZGV4T2YoJ18nKTtcbiAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICByZXR1cm4gc3ltYm9sTmFtZS5zbGljZShpbmRleCArIDEpO1xuICB9XG4gIHJldHVybiBzeW1ib2xOYW1lO1xufTtcblxuZXhwb3J0IGNvbnN0IGlzU2FtZVFSTCA9IChhOiBRUkw8YW55PiwgYjogUVJMPGFueT4pOiBib29sZWFuID0+IHtcbiAgcmV0dXJuIGdldENhbm9uaWNhbFN5bWJvbChhLnN5bWJvbCkgPT09IGdldENhbm9uaWNhbFN5bWJvbChiLnN5bWJvbCk7XG59O1xuXG5leHBvcnQgdHlwZSBRUkxJbnRlcm5hbDxUID0gYW55PiA9IFFSTDxUPjtcbmV4cG9ydCBjb25zdCBRUkxJbnRlcm5hbDogdHlwZW9mIFFSTCA9IFFSTDtcblxuLy8gaHR0cHM6Ly9yZWdleHIuY29tLzZlbmp2XG5jb25zdCBGSU5EX0VYVCA9IC9cXD9bXFx3PSZdKyQvO1xuIl19","import { getContainer } from '../use/use-core';\nimport { getDocument } from '../util/dom';\nexport const createPlatform = (doc) => {\n    const moduleCache = new Map();\n    return {\n        isServer: false,\n        importSymbol(element, url, symbolName) {\n            const urlDoc = toUrl(doc, element, url).toString();\n            const urlCopy = new URL(urlDoc);\n            urlCopy.hash = '';\n            urlCopy.search = '';\n            const importURL = urlCopy.href;\n            const mod = moduleCache.get(importURL);\n            if (mod) {\n                return mod[symbolName];\n            }\n            return import(/* @vite-ignore */ importURL).then((mod) => {\n                moduleCache.set(importURL, mod);\n                return mod[symbolName];\n            });\n        },\n        raf: (fn) => {\n            return new Promise((resolve) => {\n                requestAnimationFrame(() => {\n                    resolve(fn());\n                });\n            });\n        },\n        nextTick: (fn) => {\n            return new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(fn());\n                });\n            });\n        },\n        chunkForSymbol() {\n            return undefined;\n        },\n    };\n};\n/**\n * Convert relative base URI and relative URL into a fully qualified URL.\n *\n * @param base -`QRL`s are relative, and therefore they need a base for resolution.\n *    - `Element` use `base.ownerDocument.baseURI`\n *    - `Document` use `base.baseURI`\n *    - `string` use `base` as is\n *    - `QConfig` use `base.baseURI`\n * @param url - relative URL\n * @returns fully qualified URL.\n */\nexport function toUrl(doc, element, url) {\n    const containerEl = getContainer(element);\n    const base = new URL(containerEl?.getAttribute('q:base') ?? doc.baseURI, doc.baseURI);\n    return new URL(url, base);\n}\n/**\n * @public\n */\nexport const setPlatform = (doc, plt) => (doc[DocumentPlatform] = plt);\n/**\n * @public\n */\nexport const getPlatform = (docOrNode) => {\n    const doc = getDocument(docOrNode);\n    return doc[DocumentPlatform] || (doc[DocumentPlatform] = createPlatform(doc));\n};\nconst DocumentPlatform = /*@__PURE__*/ Symbol();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhdGZvcm0uanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL3F3aWsvc3JjL2NvcmUvcGxhdGZvcm0vcGxhdGZvcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFHMUMsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLENBQUMsR0FBYSxFQUFnQixFQUFFO0lBQzVELE1BQU0sV0FBVyxHQUFHLElBQUksR0FBRyxFQUFxQyxDQUFDO0lBQ2pFLE9BQU87UUFDTCxRQUFRLEVBQUUsS0FBSztRQUNmLFlBQVksQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFLFVBQVU7WUFDbkMsTUFBTSxNQUFNLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsR0FBRyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7WUFFbkQsTUFBTSxPQUFPLEdBQUcsSUFBSSxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDaEMsT0FBTyxDQUFDLElBQUksR0FBRyxFQUFFLENBQUM7WUFDbEIsT0FBTyxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUM7WUFDcEIsTUFBTSxTQUFTLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztZQUMvQixNQUFNLEdBQUcsR0FBRyxXQUFXLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQ3ZDLElBQUksR0FBRyxFQUFFO2dCQUNQLE9BQU8sR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO2FBQ3hCO1lBQ0QsT0FBTyxNQUFNLENBQUMsa0JBQWtCLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUU7Z0JBQ3ZELFdBQVcsQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLEdBQUcsQ0FBQyxDQUFDO2dCQUNoQyxPQUFPLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUN6QixDQUFDLENBQUMsQ0FBQztRQUNMLENBQUM7UUFDRCxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtZQUNWLE9BQU8sSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTtnQkFDN0IscUJBQXFCLENBQUMsR0FBRyxFQUFFO29CQUN6QixPQUFPLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztnQkFDaEIsQ0FBQyxDQUFDLENBQUM7WUFDTCxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUM7UUFDRCxRQUFRLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtZQUNmLE9BQU8sSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTtnQkFDN0IsVUFBVSxDQUFDLEdBQUcsRUFBRTtvQkFDZCxPQUFPLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztnQkFDaEIsQ0FBQyxDQUFDLENBQUM7WUFDTCxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUM7UUFDRCxjQUFjO1lBQ1osT0FBTyxTQUFTLENBQUM7UUFDbkIsQ0FBQztLQUNGLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRjs7Ozs7Ozs7OztHQVVHO0FBQ0gsTUFBTSxVQUFVLEtBQUssQ0FBQyxHQUFhLEVBQUUsT0FBZ0IsRUFBRSxHQUFpQjtJQUN0RSxNQUFNLFdBQVcsR0FBRyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDMUMsTUFBTSxJQUFJLEdBQUcsSUFBSSxHQUFHLENBQUMsV0FBVyxFQUFFLFlBQVksQ0FBQyxRQUFRLENBQUMsSUFBSSxHQUFHLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUN0RixPQUFPLElBQUksR0FBRyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUM1QixDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsQ0FBQyxHQUFhLEVBQUUsR0FBaUIsRUFBRSxFQUFFLENBQzlELENBQUUsR0FBd0IsQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO0FBRXREOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLENBQUMsU0FBMEIsRUFBRSxFQUFFO0lBQ3hELE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxTQUFTLENBQXFCLENBQUM7SUFDdkQsT0FBTyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLGNBQWMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQ2hGLENBQUMsQ0FBQztBQUVGLE1BQU0sZ0JBQWdCLEdBQUcsYUFBYSxDQUFDLE1BQU0sRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0Q29udGFpbmVyIH0gZnJvbSAnLi4vdXNlL3VzZS1jb3JlJztcbmltcG9ydCB7IGdldERvY3VtZW50IH0gZnJvbSAnLi4vdXRpbC9kb20nO1xuaW1wb3J0IHR5cGUgeyBDb3JlUGxhdGZvcm0gfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVBsYXRmb3JtID0gKGRvYzogRG9jdW1lbnQpOiBDb3JlUGxhdGZvcm0gPT4ge1xuICBjb25zdCBtb2R1bGVDYWNoZSA9IG5ldyBNYXA8c3RyaW5nLCB7IFtzeW1ib2w6IHN0cmluZ106IGFueSB9PigpO1xuICByZXR1cm4ge1xuICAgIGlzU2VydmVyOiBmYWxzZSxcbiAgICBpbXBvcnRTeW1ib2woZWxlbWVudCwgdXJsLCBzeW1ib2xOYW1lKSB7XG4gICAgICBjb25zdCB1cmxEb2MgPSB0b1VybChkb2MsIGVsZW1lbnQsIHVybCkudG9TdHJpbmcoKTtcblxuICAgICAgY29uc3QgdXJsQ29weSA9IG5ldyBVUkwodXJsRG9jKTtcbiAgICAgIHVybENvcHkuaGFzaCA9ICcnO1xuICAgICAgdXJsQ29weS5zZWFyY2ggPSAnJztcbiAgICAgIGNvbnN0IGltcG9ydFVSTCA9IHVybENvcHkuaHJlZjtcbiAgICAgIGNvbnN0IG1vZCA9IG1vZHVsZUNhY2hlLmdldChpbXBvcnRVUkwpO1xuICAgICAgaWYgKG1vZCkge1xuICAgICAgICByZXR1cm4gbW9kW3N5bWJvbE5hbWVdO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGltcG9ydCgvKiBAdml0ZS1pZ25vcmUgKi8gaW1wb3J0VVJMKS50aGVuKChtb2QpID0+IHtcbiAgICAgICAgbW9kdWxlQ2FjaGUuc2V0KGltcG9ydFVSTCwgbW9kKTtcbiAgICAgICAgcmV0dXJuIG1vZFtzeW1ib2xOYW1lXTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgcmFmOiAoZm4pID0+IHtcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgICAgIHJlc29sdmUoZm4oKSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBuZXh0VGljazogKGZuKSA9PiB7XG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgcmVzb2x2ZShmbigpKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGNodW5rRm9yU3ltYm9sKCkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9LFxuICB9O1xufTtcblxuLyoqXG4gKiBDb252ZXJ0IHJlbGF0aXZlIGJhc2UgVVJJIGFuZCByZWxhdGl2ZSBVUkwgaW50byBhIGZ1bGx5IHF1YWxpZmllZCBVUkwuXG4gKlxuICogQHBhcmFtIGJhc2UgLWBRUkxgcyBhcmUgcmVsYXRpdmUsIGFuZCB0aGVyZWZvcmUgdGhleSBuZWVkIGEgYmFzZSBmb3IgcmVzb2x1dGlvbi5cbiAqICAgIC0gYEVsZW1lbnRgIHVzZSBgYmFzZS5vd25lckRvY3VtZW50LmJhc2VVUklgXG4gKiAgICAtIGBEb2N1bWVudGAgdXNlIGBiYXNlLmJhc2VVUklgXG4gKiAgICAtIGBzdHJpbmdgIHVzZSBgYmFzZWAgYXMgaXNcbiAqICAgIC0gYFFDb25maWdgIHVzZSBgYmFzZS5iYXNlVVJJYFxuICogQHBhcmFtIHVybCAtIHJlbGF0aXZlIFVSTFxuICogQHJldHVybnMgZnVsbHkgcXVhbGlmaWVkIFVSTC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvVXJsKGRvYzogRG9jdW1lbnQsIGVsZW1lbnQ6IEVsZW1lbnQsIHVybDogc3RyaW5nIHwgVVJMKTogVVJMIHtcbiAgY29uc3QgY29udGFpbmVyRWwgPSBnZXRDb250YWluZXIoZWxlbWVudCk7XG4gIGNvbnN0IGJhc2UgPSBuZXcgVVJMKGNvbnRhaW5lckVsPy5nZXRBdHRyaWJ1dGUoJ3E6YmFzZScpID8/IGRvYy5iYXNlVVJJLCBkb2MuYmFzZVVSSSk7XG4gIHJldHVybiBuZXcgVVJMKHVybCwgYmFzZSk7XG59XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgY29uc3Qgc2V0UGxhdGZvcm0gPSAoZG9jOiBEb2N1bWVudCwgcGx0OiBDb3JlUGxhdGZvcm0pID0+XG4gICgoZG9jIGFzIFBsYXRmb3JtRG9jdW1lbnQpW0RvY3VtZW50UGxhdGZvcm1dID0gcGx0KTtcblxuLyoqXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRQbGF0Zm9ybSA9IChkb2NPck5vZGU6IERvY3VtZW50IHwgTm9kZSkgPT4ge1xuICBjb25zdCBkb2MgPSBnZXREb2N1bWVudChkb2NPck5vZGUpIGFzIFBsYXRmb3JtRG9jdW1lbnQ7XG4gIHJldHVybiBkb2NbRG9jdW1lbnRQbGF0Zm9ybV0gfHwgKGRvY1tEb2N1bWVudFBsYXRmb3JtXSA9IGNyZWF0ZVBsYXRmb3JtKGRvYykpO1xufTtcblxuY29uc3QgRG9jdW1lbnRQbGF0Zm9ybSA9IC8qQF9fUFVSRV9fKi8gU3ltYm9sKCk7XG5cbmludGVyZmFjZSBQbGF0Zm9ybURvY3VtZW50IGV4dGVuZHMgRG9jdW1lbnQge1xuICBbRG9jdW1lbnRQbGF0Zm9ybV0/OiBDb3JlUGxhdGZvcm07XG59XG4iXX0=","import { QHostAttr, QSlotAttr } from './markers';\n/**\n * Returns true if the `node` is `Element` and of the right `tagName`.\n *\n * @param node\n * @private\n */\nexport function isDomElementWithTagName(node, tagName) {\n    return isHtmlElement(node) && node.tagName.toUpperCase() == tagName.toUpperCase();\n}\n/**\n * @private\n */\nexport function isTemplateElement(node) {\n    return isDomElementWithTagName(node, 'template');\n}\n/**\n * @private\n */\nexport function isQSLotTemplateElement(node) {\n    return isTemplateElement(node) && node.hasAttribute(QSlotAttr);\n}\n/**\n * @private\n */\nexport function isComponentElement(node) {\n    return isHtmlElement(node) && node.hasAttribute(QHostAttr);\n}\n/**\n * @private\n */\nexport function isHtmlElement(node) {\n    return node ? node.nodeType === NodeType.ELEMENT_NODE : false;\n}\n/**\n * `Node.type` enumeration\n */\nexport var NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"ELEMENT_NODE\"] = 1] = \"ELEMENT_NODE\";\n    NodeType[NodeType[\"ATTRIBUTE_NODE\"] = 2] = \"ATTRIBUTE_NODE\";\n    NodeType[NodeType[\"TEXT_NODE\"] = 3] = \"TEXT_NODE\";\n    NodeType[NodeType[\"CDATA_SECTION_NODE\"] = 4] = \"CDATA_SECTION_NODE\";\n    NodeType[NodeType[\"PROCESSING_INSTRUCTION_NODE\"] = 7] = \"PROCESSING_INSTRUCTION_NODE\";\n    // document, such as <?xml-stylesheet … ?>.\n    NodeType[NodeType[\"COMMENT_NODE\"] = 8] = \"COMMENT_NODE\";\n    NodeType[NodeType[\"DOCUMENT_NODE\"] = 9] = \"DOCUMENT_NODE\";\n    NodeType[NodeType[\"DOCUMENT_TYPE_NODE\"] = 10] = \"DOCUMENT_TYPE_NODE\";\n    NodeType[NodeType[\"DOCUMENT_FRAGMENT_NODE\"] = 11] = \"DOCUMENT_FRAGMENT_NODE\";\n})(NodeType || (NodeType = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL3F3aWsvc3JjL2NvcmUvdXRpbC90eXBlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUVqRDs7Ozs7R0FLRztBQUNILE1BQU0sVUFBVSx1QkFBdUIsQ0FDckMsSUFBNkIsRUFDN0IsT0FBZTtJQUVmLE9BQU8sYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLElBQUksT0FBTyxDQUFDLFdBQVcsRUFBRSxDQUFDO0FBQ3BGLENBQUM7QUFFRDs7R0FFRztBQUNILE1BQU0sVUFBVSxpQkFBaUIsQ0FBQyxJQUE2QjtJQUM3RCxPQUFPLHVCQUF1QixDQUFDLElBQUksRUFBRSxVQUFVLENBQUMsQ0FBQztBQUNuRCxDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsc0JBQXNCLENBQUMsSUFBNkI7SUFDbEUsT0FBTyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ2pFLENBQUM7QUFFRDs7R0FFRztBQUNILE1BQU0sVUFBVSxrQkFBa0IsQ0FBQyxJQUE2QjtJQUM5RCxPQUFPLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQzdELENBQUM7QUFFRDs7R0FFRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQUMsSUFBUztJQUNyQyxPQUFPLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsS0FBSyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7QUFDaEUsQ0FBQztBQVFEOztHQUVHO0FBQ0gsTUFBTSxDQUFOLElBQWtCLFFBV2pCO0FBWEQsV0FBa0IsUUFBUTtJQUN4Qix1REFBZ0IsQ0FBQTtJQUNoQiwyREFBa0IsQ0FBQTtJQUNsQixpREFBYSxDQUFBO0lBQ2IsbUVBQXNCLENBQUE7SUFDdEIscUZBQStCLENBQUE7SUFDL0IsMkNBQTJDO0lBQzNDLHVEQUFnQixDQUFBO0lBQ2hCLHlEQUFpQixDQUFBO0lBQ2pCLG9FQUF1QixDQUFBO0lBQ3ZCLDRFQUEyQixDQUFBO0FBQzdCLENBQUMsRUFYaUIsUUFBUSxLQUFSLFFBQVEsUUFXekIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBRSG9zdEF0dHIsIFFTbG90QXR0ciB9IGZyb20gJy4vbWFya2Vycyc7XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBgbm9kZWAgaXMgYEVsZW1lbnRgIGFuZCBvZiB0aGUgcmlnaHQgYHRhZ05hbWVgLlxuICpcbiAqIEBwYXJhbSBub2RlXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNEb21FbGVtZW50V2l0aFRhZ05hbWUoXG4gIG5vZGU6IE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkLFxuICB0YWdOYW1lOiBzdHJpbmdcbik6IG5vZGUgaXMgRWxlbWVudCB7XG4gIHJldHVybiBpc0h0bWxFbGVtZW50KG5vZGUpICYmIG5vZGUudGFnTmFtZS50b1VwcGVyQ2FzZSgpID09IHRhZ05hbWUudG9VcHBlckNhc2UoKTtcbn1cblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNUZW1wbGF0ZUVsZW1lbnQobm9kZTogTm9kZSB8IG51bGwgfCB1bmRlZmluZWQpOiBub2RlIGlzIEhUTUxUZW1wbGF0ZUVsZW1lbnQge1xuICByZXR1cm4gaXNEb21FbGVtZW50V2l0aFRhZ05hbWUobm9kZSwgJ3RlbXBsYXRlJyk7XG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzUVNMb3RUZW1wbGF0ZUVsZW1lbnQobm9kZTogTm9kZSB8IG51bGwgfCB1bmRlZmluZWQpOiBub2RlIGlzIEhUTUxUZW1wbGF0ZUVsZW1lbnQge1xuICByZXR1cm4gaXNUZW1wbGF0ZUVsZW1lbnQobm9kZSkgJiYgbm9kZS5oYXNBdHRyaWJ1dGUoUVNsb3RBdHRyKTtcbn1cblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNDb21wb25lbnRFbGVtZW50KG5vZGU6IE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkKTogbm9kZSBpcyBIVE1MRWxlbWVudCB7XG4gIHJldHVybiBpc0h0bWxFbGVtZW50KG5vZGUpICYmIG5vZGUuaGFzQXR0cmlidXRlKFFIb3N0QXR0cik7XG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzSHRtbEVsZW1lbnQobm9kZTogYW55KTogbm9kZSBpcyBFbGVtZW50IHtcbiAgcmV0dXJuIG5vZGUgPyBub2RlLm5vZGVUeXBlID09PSBOb2RlVHlwZS5FTEVNRU5UX05PREUgOiBmYWxzZTtcbn1cblxuLyoqXG4gKiBUeXBlIHJlcHJlc2VudGluZyBhIHZhbHVlIHdoaWNoIGlzIGVpdGhlciByZXNvbHZlIG9yIGEgcHJvbWlzZS5cbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IHR5cGUgVmFsdWVPclByb21pc2U8VD4gPSBUIHwgUHJvbWlzZTxUPjtcblxuLyoqXG4gKiBgTm9kZS50eXBlYCBlbnVtZXJhdGlvblxuICovXG5leHBvcnQgY29uc3QgZW51bSBOb2RlVHlwZSB7XG4gIEVMRU1FTlRfTk9ERSA9IDEsIC8vIEFuIEVsZW1lbnQgbm9kZSBsaWtlIDxwPiBvciA8ZGl2Pi5cbiAgQVRUUklCVVRFX05PREUgPSAyLCAvLyBBbiBBdHRyaWJ1dGUgb2YgYW4gRWxlbWVudC5cbiAgVEVYVF9OT0RFID0gMywgLy8gVGhlIGFjdHVhbCBUZXh0IGluc2lkZSBhbiBFbGVtZW50IG9yIEF0dHIuXG4gIENEQVRBX1NFQ1RJT05fTk9ERSA9IDQsIC8vIEEgQ0RBVEFTZWN0aW9uLCBzdWNoIGFzIDwhQ0RBVEFbWyDigKYgXV0+LlxuICBQUk9DRVNTSU5HX0lOU1RSVUNUSU9OX05PREUgPSA3LCAvLyBBIFByb2Nlc3NpbmdJbnN0cnVjdGlvbiBvZiBhbiBYTUxcbiAgLy8gZG9jdW1lbnQsIHN1Y2ggYXMgPD94bWwtc3R5bGVzaGVldCDigKYgPz4uXG4gIENPTU1FTlRfTk9ERSA9IDgsIC8vIEEgQ29tbWVudCBub2RlLCBzdWNoIGFzIDwhLS0g4oCmIC0tPi5cbiAgRE9DVU1FTlRfTk9ERSA9IDksIC8vIEEgRG9jdW1lbnQgbm9kZS5cbiAgRE9DVU1FTlRfVFlQRV9OT0RFID0gMTAsIC8vIEEgRG9jdW1lbnRUeXBlIG5vZGUsIHN1Y2ggYXMgPCFET0NUWVBFIGh0bWw+LlxuICBET0NVTUVOVF9GUkFHTUVOVF9OT0RFID0gMTEsIC8vIEEgRG9jdW1lbnRGcmFnbWVudCBub2RlLlxufVxuIl19","import { isHtmlElement } from '../util/types';\nexport function stringifyDebug(value) {\n    if (value == null)\n        return String(value);\n    if (typeof value === 'function')\n        return value.name;\n    if (isHtmlElement(value))\n        return stringifyElement(value);\n    if (value instanceof URL)\n        return String(value);\n    if (typeof value === 'object')\n        return JSON.stringify(value, function (key, value) {\n            if (isHtmlElement(value))\n                return stringifyElement(value);\n            return value;\n        });\n    return String(value);\n}\nexport function stringifyElement(element) {\n    let html = '<' + element.localName;\n    const attributes = element.attributes;\n    const names = [];\n    for (let i = 0; i < attributes.length; i++) {\n        names.push(attributes[i].name);\n    }\n    names.sort();\n    for (let i = 0; i < names.length; i++) {\n        const name = names[i];\n        let value = element.getAttribute(name);\n        if (value?.startsWith('file:/')) {\n            value = value.replace(/(file:\\/\\/).*(\\/.*)$/, (all, protocol, file) => protocol + '...' + file);\n        }\n        html +=\n            ' ' + name + (value == null || value == '' ? '' : \"='\" + value.replace(\"'\", '&apos;') + \"'\");\n    }\n    return html + '>';\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaW5naWZ5LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL2Vycm9yL3N0cmluZ2lmeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTlDLE1BQU0sVUFBVSxjQUFjLENBQUMsS0FBVTtJQUN2QyxJQUFJLEtBQUssSUFBSSxJQUFJO1FBQUUsT0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDeEMsSUFBSSxPQUFPLEtBQUssS0FBSyxVQUFVO1FBQUUsT0FBTyxLQUFLLENBQUMsSUFBSSxDQUFDO0lBQ25ELElBQUksYUFBYSxDQUFDLEtBQUssQ0FBQztRQUFFLE9BQU8sZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDekQsSUFBSSxLQUFLLFlBQVksR0FBRztRQUFFLE9BQU8sTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQy9DLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUTtRQUMzQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLFVBQXFCLEdBQVcsRUFBRSxLQUFVO1lBQ3ZFLElBQUksYUFBYSxDQUFDLEtBQUssQ0FBQztnQkFBRSxPQUFPLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3pELE9BQU8sS0FBSyxDQUFDO1FBQ2YsQ0FBQyxDQUFDLENBQUM7SUFDTCxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUN2QixDQUFDO0FBRUQsTUFBTSxVQUFVLGdCQUFnQixDQUFDLE9BQWdCO0lBQy9DLElBQUksSUFBSSxHQUFHLEdBQUcsR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDO0lBQ25DLE1BQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUM7SUFDdEMsTUFBTSxLQUFLLEdBQUcsRUFBRSxDQUFDO0lBQ2pCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQzFDLEtBQUssQ0FBQyxJQUFJLENBQUUsVUFBVSxDQUFDLENBQUMsQ0FBVSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzFDO0lBQ0QsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDckMsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3RCLElBQUksS0FBSyxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkMsSUFBSSxLQUFLLEVBQUUsVUFBVSxDQUFDLFFBQVEsQ0FBQyxFQUFFO1lBQy9CLEtBQUssR0FBRyxLQUFLLENBQUMsT0FBTyxDQUNuQixzQkFBc0IsRUFDdEIsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxFQUFFLENBQUMsUUFBUSxHQUFHLEtBQUssR0FBRyxJQUFJLENBQ2pELENBQUM7U0FDSDtRQUNELElBQUk7WUFDRixHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsS0FBSyxJQUFJLElBQUksSUFBSSxLQUFLLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQztLQUNoRztJQUNELE9BQU8sSUFBSSxHQUFHLEdBQUcsQ0FBQztBQUNwQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNIdG1sRWxlbWVudCB9IGZyb20gJy4uL3V0aWwvdHlwZXMnO1xuXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5naWZ5RGVidWcodmFsdWU6IGFueSk6IHN0cmluZyB8IG51bGwge1xuICBpZiAodmFsdWUgPT0gbnVsbCkgcmV0dXJuIFN0cmluZyh2YWx1ZSk7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdmdW5jdGlvbicpIHJldHVybiB2YWx1ZS5uYW1lO1xuICBpZiAoaXNIdG1sRWxlbWVudCh2YWx1ZSkpIHJldHVybiBzdHJpbmdpZnlFbGVtZW50KHZhbHVlKTtcbiAgaWYgKHZhbHVlIGluc3RhbmNlb2YgVVJMKSByZXR1cm4gU3RyaW5nKHZhbHVlKTtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpXG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHZhbHVlLCBmdW5jdGlvbiAodGhpczogYW55LCBrZXk6IHN0cmluZywgdmFsdWU6IGFueSkge1xuICAgICAgaWYgKGlzSHRtbEVsZW1lbnQodmFsdWUpKSByZXR1cm4gc3RyaW5naWZ5RWxlbWVudCh2YWx1ZSk7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSk7XG4gIHJldHVybiBTdHJpbmcodmFsdWUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5naWZ5RWxlbWVudChlbGVtZW50OiBFbGVtZW50KTogc3RyaW5nIHtcbiAgbGV0IGh0bWwgPSAnPCcgKyBlbGVtZW50LmxvY2FsTmFtZTtcbiAgY29uc3QgYXR0cmlidXRlcyA9IGVsZW1lbnQuYXR0cmlidXRlcztcbiAgY29uc3QgbmFtZXMgPSBbXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBhdHRyaWJ1dGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgbmFtZXMucHVzaCgoYXR0cmlidXRlc1tpXSBhcyBBdHRyKS5uYW1lKTtcbiAgfVxuICBuYW1lcy5zb3J0KCk7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbmFtZXMubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBuYW1lID0gbmFtZXNbaV07XG4gICAgbGV0IHZhbHVlID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUobmFtZSk7XG4gICAgaWYgKHZhbHVlPy5zdGFydHNXaXRoKCdmaWxlOi8nKSkge1xuICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKFxuICAgICAgICAvKGZpbGU6XFwvXFwvKS4qKFxcLy4qKSQvLFxuICAgICAgICAoYWxsLCBwcm90b2NvbCwgZmlsZSkgPT4gcHJvdG9jb2wgKyAnLi4uJyArIGZpbGVcbiAgICAgICk7XG4gICAgfVxuICAgIGh0bWwgKz1cbiAgICAgICcgJyArIG5hbWUgKyAodmFsdWUgPT0gbnVsbCB8fCB2YWx1ZSA9PSAnJyA/ICcnIDogXCI9J1wiICsgdmFsdWUucmVwbGFjZShcIidcIiwgJyZhcG9zOycpICsgXCInXCIpO1xuICB9XG4gIHJldHVybiBodG1sICsgJz4nO1xufVxuIl19","import { stringifyDebug } from './stringify';\nimport { qDev } from '../util/qdev';\nexport var QError;\n(function (QError) {\n    // core 000-099\n    QError[QError[\"TODO\"] = 0] = \"TODO\";\n    QError[QError[\"Core_qConfigNotFound_path\"] = 1] = \"Core_qConfigNotFound_path\";\n    QError[QError[\"Core_unrecognizedStack_frame\"] = 2] = \"Core_unrecognizedStack_frame\";\n    QError[QError[\"Core_noAttribute_atr1_element\"] = 3] = \"Core_noAttribute_atr1_element\";\n    QError[QError[\"Core_noAttribute_atr1_attr2_element\"] = 4] = \"Core_noAttribute_atr1_attr2_element\";\n    QError[QError[\"Core_missingProperty_name_props\"] = 5] = \"Core_missingProperty_name_props\";\n    QError[QError[\"Core_missingExport_name_url_props\"] = 6] = \"Core_missingExport_name_url_props\";\n    // QRL 100-199\n    QError[QError[\"QRL_expectFunction_url_actual\"] = 100] = \"QRL_expectFunction_url_actual\";\n    // Injection 200-299\n    QError[QError[\"Injector_noHost_element\"] = 200] = \"Injector_noHost_element\";\n    QError[QError[\"Injector_expectedSpecificInjector_expected_actual\"] = 201] = \"Injector_expectedSpecificInjector_expected_actual\";\n    QError[QError[\"Injector_notElement_arg\"] = 202] = \"Injector_notElement_arg\";\n    QError[QError[\"Injector_wrongMethodThis_expected_actual\"] = 203] = \"Injector_wrongMethodThis_expected_actual\";\n    QError[QError[\"Injector_missingSerializedState_entityKey_element\"] = 204] = \"Injector_missingSerializedState_entityKey_element\";\n    QError[QError[\"Injector_notFound_element\"] = 206] = \"Injector_notFound_element\";\n    QError[QError[\"Injector_eventInjectorNotSerializable\"] = 207] = \"Injector_eventInjectorNotSerializable\";\n    // Entities 300-399\n    QError[QError[\"Entity_notValidKey_key\"] = 300] = \"Entity_notValidKey_key\";\n    QError[QError[\"Entity_keyAlreadyExists_key\"] = 301] = \"Entity_keyAlreadyExists_key\";\n    QError[QError[\"Entity_invalidAttribute_name\"] = 303] = \"Entity_invalidAttribute_name\";\n    QError[QError[\"Entity_missingExpandoOrState_attrName\"] = 304] = \"Entity_missingExpandoOrState_attrName\";\n    QError[QError[\"Entity_elementMissingEntityAttr_element_attr\"] = 305] = \"Entity_elementMissingEntityAttr_element_attr\";\n    QError[QError[\"Entity_noState_entity_props\"] = 306] = \"Entity_noState_entity_props\";\n    QError[QError[\"Entity_expected_obj\"] = 307] = \"Entity_expected_obj\";\n    QError[QError[\"Entity_overridesConstructor_entity\"] = 308] = \"Entity_overridesConstructor_entity\";\n    QError[QError[\"Entity_keyMissingParts_key_key\"] = 309] = \"Entity_keyMissingParts_key_key\";\n    QError[QError[\"Entity_no$type_entity\"] = 310] = \"Entity_no$type_entity\";\n    QError[QError[\"Entity_no$keyProps_entity\"] = 311] = \"Entity_no$keyProps_entity\";\n    QError[QError[\"Entity_no$qrl_entity\"] = 312] = \"Entity_no$qrl_entity\";\n    QError[QError[\"Entity_nameCollision_name_currentQrl_expectedQrl\"] = 313] = \"Entity_nameCollision_name_currentQrl_expectedQrl\";\n    QError[QError[\"Entity_keyTooManyParts_entity_parts_key\"] = 314] = \"Entity_keyTooManyParts_entity_parts_key\";\n    QError[QError[\"Entity_keyNameMismatch_key_name_entity_name\"] = 315] = \"Entity_keyNameMismatch_key_name_entity_name\";\n    QError[QError[\"Entity_stateMissingKey_state\"] = 316] = \"Entity_stateMissingKey_state\";\n    // Component 400-499\n    QError[QError[\"Component_bindNeedsKey\"] = 400] = \"Component_bindNeedsKey\";\n    QError[QError[\"Component_bindNeedsValue\"] = 401] = \"Component_bindNeedsValue\";\n    QError[QError[\"Component_needsState\"] = 402] = \"Component_needsState\";\n    QError[QError[\"Component_needsInjectionContext_constructor\"] = 403] = \"Component_needsInjectionContext_constructor\";\n    QError[QError[\"Component_noProperty_propName_props_host\"] = 404] = \"Component_noProperty_propName_props_host\";\n    QError[QError[\"Component_notFound_component\"] = 405] = \"Component_notFound_component\";\n    QError[QError[\"Component_doesNotMatch_component_actual\"] = 406] = \"Component_doesNotMatch_component_actual\";\n    QError[QError[\"Component_noState_component_props\"] = 408] = \"Component_noState_component_props\";\n    // Provider 500-599\n    QError[QError[\"Provider_unrecognizedFormat_value\"] = 500] = \"Provider_unrecognizedFormat_value\";\n    // Render 600-699\n    QError[QError[\"Render_unexpectedJSXNodeType_type\"] = 600] = \"Render_unexpectedJSXNodeType_type\";\n    QError[QError[\"Render_unsupportedFormat_obj_attr\"] = 601] = \"Render_unsupportedFormat_obj_attr\";\n    QError[QError[\"Render_expectingEntity_entity\"] = 602] = \"Render_expectingEntity_entity\";\n    QError[QError[\"Render_expectingEntityArray_obj\"] = 603] = \"Render_expectingEntityArray_obj\";\n    QError[QError[\"Render_expectingEntityOrComponent_obj\"] = 604] = \"Render_expectingEntityOrComponent_obj\";\n    QError[QError[\"Render_stateMachineStuck\"] = 699] = \"Render_stateMachineStuck\";\n    // Event\n    QError[QError[\"Event_emitEventRequiresName_url\"] = 700] = \"Event_emitEventRequiresName_url\";\n    QError[QError[\"Event_emitEventCouldNotFindListener_event_element\"] = 701] = \"Event_emitEventCouldNotFindListener_event_element\";\n})(QError || (QError = {}));\nexport function qError(code, ...args) {\n    if (qDev) {\n        const text = codeToText(code);\n        const parts = text.split('{}');\n        const error = parts\n            .map((value, index) => {\n            return value + (index === parts.length - 1 ? '' : stringifyDebug(args[index]));\n        })\n            .join('');\n        debugger; // eslint-disable-line no-debugger\n        return new Error(error);\n    }\n    else {\n        return new Error(`QError ` + code);\n    }\n}\nfunction codeToText(code) {\n    const area = {\n        0: 'ERROR',\n        1: 'QRL-ERROR',\n        2: 'INJECTOR-ERROR',\n        3: 'SERVICE-ERROR',\n        4: 'COMPONENT-ERROR',\n        5: 'PROVIDER-ERROR',\n        6: 'RENDER-ERROR',\n        7: 'EVENT-ERROR',\n    }[Math.floor(code / 100)];\n    const text = {\n        [QError.TODO]: '{}',\n        [QError.Core_qConfigNotFound_path]: \"QConfig not found in path '{}'.\",\n        [QError.Core_unrecognizedStack_frame]: \"Unrecognized stack format '{}'\",\n        [QError.Core_noAttribute_atr1_element]: \"Could not find entity state '{}' at '{}' or any of it's parents.\",\n        [QError.Core_noAttribute_atr1_attr2_element]: \"Could not find entity state '{}' ( or entity provider '{}') at '{}' or any of it's parents.\",\n        [QError.Core_missingProperty_name_props]: \"Missing property '{}' in props '{}'.\",\n        [QError.Core_missingExport_name_url_props]: \"Missing export '{}' from '{}'. Exported symbols are: {}\",\n        //////////////\n        [QError.QRL_expectFunction_url_actual]: \"QRL '${}' should point to function, was '{}'.\",\n        //////////////\n        [QError.Injector_noHost_element]: \"Can't find host element above '{}'.\",\n        [QError.Injector_expectedSpecificInjector_expected_actual]: \"Provider is expecting '{}' but got '{}'.\",\n        [QError.Injector_notElement_arg]: \"Expected 'Element' was '{}'.\",\n        [QError.Injector_wrongMethodThis_expected_actual]: \"Expected injection 'this' to be of type '{}', but was of type '{}'.\",\n        [QError.Injector_missingSerializedState_entityKey_element]: \"Entity key '{}' is found on '{}' but does not contain state. Was 'serializeState()' not run during dehydration?\",\n        [QError.Injector_notFound_element]: \"No injector can be found starting at '{}'.\",\n        [QError.Injector_eventInjectorNotSerializable]: 'EventInjector does not support serialization.',\n        //////////////\n        [QError.Entity_notValidKey_key]: \"Data key '{}' is not a valid key.\\n\" +\n            '  - Data key can only contain characters (preferably lowercase) or number\\n' +\n            '  - Data key is prefixed with entity name\\n' +\n            \"  - Data key is made up from parts that are separated with ':'.\",\n        [QError.Entity_keyAlreadyExists_key]: \"A entity with key '{}' already exists.\",\n        [QError.Entity_invalidAttribute_name]: \"'{}' is not a valid attribute. \" +\n            \"Attributes can only contain 'a-z' (lowercase), '0-9', '-' and '_'.\",\n        [QError.Entity_missingExpandoOrState_attrName]: \"Found '{}' but expando did not have entity and attribute did not have state.\",\n        [QError.Entity_elementMissingEntityAttr_element_attr]: \"Element '{}' is missing entity attribute definition '{}'.\",\n        [QError.Entity_noState_entity_props]: \"Unable to create state for entity '{}' with props '{}' because no state found and '$newState()' method was not defined on entity.\",\n        [QError.Entity_expected_obj]: \"'{}' is not an instance of 'Entity'.\",\n        [QError.Entity_overridesConstructor_entity]: \"'{}' overrides 'constructor' property preventing 'EntityType' retrieval.\",\n        [QError.Entity_no$keyProps_entity]: \"Entity '{}' does not define '$keyProps'.\",\n        [QError.Entity_no$type_entity]: \"Entity '{}' must have static '$type' property defining the name of the entity.\",\n        [QError.Entity_no$qrl_entity]: \"Entity '{}' must have static '$qrl' property defining the import location of the entity.\",\n        [QError.Entity_nameCollision_name_currentQrl_expectedQrl]: \"Name collision. Already have entity named '{}' with QRL '{}' but expected QRL '{}'.\",\n        [QError.Entity_keyMissingParts_key_key]: \"Entity key '{}' is missing values. Expecting '{}:someValue'.\",\n        [QError.Entity_keyTooManyParts_entity_parts_key]: \"Entity '{}' defines '$keyProps' as  '{}'. Actual key '{}' has more parts than entity defines.\",\n        [QError.Entity_keyNameMismatch_key_name_entity_name]: \"Key '{}' belongs to entity named '{}', but expected entity '{}' with name '{}'.\",\n        [QError.Entity_stateMissingKey_state]: \"Entity state is missing '$key'. Are you sure you passed in state? Got '{}'.\",\n        //////////////\n        [QError.Component_bindNeedsKey]: \"'bind:' must have an key. (Example: 'bind:key=\\\"propertyName\\\"').\",\n        [QError.Component_bindNeedsValue]: \"'bind:id' must have a property name. (Example: 'bind:key=\\\"propertyName\\\"').\",\n        [QError.Component_needsState]: \"Can't find state on host element.\",\n        [QError.Component_needsInjectionContext_constructor]: \"Components must be instantiated inside an injection context. Use '{}.new(...)' for creation.\",\n        [QError.Component_noProperty_propName_props_host]: \"Property '{}' not found in '{}' on component '{}'.\",\n        [QError.Component_notFound_component]: \"Unable to find '{}' component.\",\n        [QError.Component_doesNotMatch_component_actual]: \"Requesting component type '{}' does not match existing component instance '{}'.\",\n        [QError.Component_noState_component_props]: \"Unable to create state for component '{}' with props '{}' because no state found and '$newState()' method was not defined on component.\",\n        //////////////\n        [QError.Provider_unrecognizedFormat_value]: \"Unrecognized expression format '{}'.\",\n        //////////////\n        [QError.Render_unexpectedJSXNodeType_type]: 'Unexpected JSXNode<{}> type.',\n        [QError.Render_unsupportedFormat_obj_attr]: \"Value '{}' can't be written into '{}' attribute.\",\n        [QError.Render_expectingEntity_entity]: \"Expecting entity object, got '{}'.\",\n        [QError.Render_expectingEntityArray_obj]: \"Expecting array of entities, got '{}'.\",\n        [QError.Render_expectingEntityOrComponent_obj]: \"Expecting Entity or Component got '{}'.\",\n        [QError.Render_stateMachineStuck]: 'Render state machine did not advance.',\n        //////////////\n        [QError.Event_emitEventRequiresName_url]: \"Missing '$type' attribute in the '{}' url.\",\n        [QError.Event_emitEventCouldNotFindListener_event_element]: \"Re-emitting event '{}' but no listener found at '{}' or any of its parents.\",\n    }[code];\n    let textCode = '000' + code;\n    textCode = textCode.slice(-3);\n    return `${area}(Q-${textCode}): ${text}`;\n}\n//# sourceMappingURL=data:application/json;base64,","import { NodeType } from './types';\nexport function isNode(value) {\n    return value && typeof value.nodeType == 'number';\n}\nexport function isDocument(value) {\n    return value && value.nodeType == NodeType.DOCUMENT_NODE;\n}\nexport function isElement(value) {\n    return isNode(value) && value.nodeType == NodeType.ELEMENT_NODE;\n}\nexport function isText(value) {\n    return isNode(value) && value.nodeType == NodeType.TEXT_NODE;\n}\nexport function isComment(value) {\n    return isNode(value) && value.nodeType == NodeType.COMMENT_NODE;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWxlbWVudC5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvcXdpay9zcmMvY29yZS91dGlsL2VsZW1lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUVuQyxNQUFNLFVBQVUsTUFBTSxDQUFDLEtBQVU7SUFDL0IsT0FBTyxLQUFLLElBQUksT0FBTyxLQUFLLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQztBQUNwRCxDQUFDO0FBQ0QsTUFBTSxVQUFVLFVBQVUsQ0FBQyxLQUFVO0lBQ25DLE9BQU8sS0FBSyxJQUFJLEtBQUssQ0FBQyxRQUFRLElBQUksUUFBUSxDQUFDLGFBQWEsQ0FBQztBQUMzRCxDQUFDO0FBQ0QsTUFBTSxVQUFVLFNBQVMsQ0FBQyxLQUFVO0lBQ2xDLE9BQU8sTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLEtBQUssQ0FBQyxRQUFRLElBQUksUUFBUSxDQUFDLFlBQVksQ0FBQztBQUNsRSxDQUFDO0FBQ0QsTUFBTSxVQUFVLE1BQU0sQ0FBQyxLQUFVO0lBQy9CLE9BQU8sTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLEtBQUssQ0FBQyxRQUFRLElBQUksUUFBUSxDQUFDLFNBQVMsQ0FBQztBQUMvRCxDQUFDO0FBQ0QsTUFBTSxVQUFVLFNBQVMsQ0FBQyxLQUFVO0lBQ2xDLE9BQU8sTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLEtBQUssQ0FBQyxRQUFRLElBQUksUUFBUSxDQUFDLFlBQVksQ0FBQztBQUNsRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTm9kZVR5cGUgfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGlzTm9kZSh2YWx1ZTogYW55KTogdmFsdWUgaXMgTm9kZSB7XG4gIHJldHVybiB2YWx1ZSAmJiB0eXBlb2YgdmFsdWUubm9kZVR5cGUgPT0gJ251bWJlcic7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNEb2N1bWVudCh2YWx1ZTogYW55KTogdmFsdWUgaXMgRG9jdW1lbnQge1xuICByZXR1cm4gdmFsdWUgJiYgdmFsdWUubm9kZVR5cGUgPT0gTm9kZVR5cGUuRE9DVU1FTlRfTk9ERTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0VsZW1lbnQodmFsdWU6IGFueSk6IHZhbHVlIGlzIEVsZW1lbnQge1xuICByZXR1cm4gaXNOb2RlKHZhbHVlKSAmJiB2YWx1ZS5ub2RlVHlwZSA9PSBOb2RlVHlwZS5FTEVNRU5UX05PREU7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNUZXh0KHZhbHVlOiBhbnkpOiB2YWx1ZSBpcyBUZXh0IHtcbiAgcmV0dXJuIGlzTm9kZSh2YWx1ZSkgJiYgdmFsdWUubm9kZVR5cGUgPT0gTm9kZVR5cGUuVEVYVF9OT0RFO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzQ29tbWVudCh2YWx1ZTogYW55KTogdmFsdWUgaXMgQ29tbWVudCB7XG4gIHJldHVybiBpc05vZGUodmFsdWUpICYmIHZhbHVlLm5vZGVUeXBlID09IE5vZGVUeXBlLkNPTU1FTlRfTk9ERTtcbn1cbiJdfQ==","import { runtimeQrl } from './qrl';\n// <docs markdown=\"../readme.md#$\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#$ instead)\n/**\n * Qwik Optimizer marker function.\n *\n * Use `$(...)` to tell Qwik Optimizer to extract the expression in `$(...)` into a lazy-loadable\n * resource referenced by `QRL`.\n *\n * @see `implicit$FirstArg` for additional `____$(...)` rules.\n *\n * In this example `$(...)` is used to capture the callback function of `onmousemove` into\n * lazy-loadable reference. This allows the code to refer to the function without actually\n * loading the function. In this example, the callback function does not get loaded until\n * `mousemove` event fires.\n *\n * ```tsx\n * useOnDocument(\n *   'mousemove',\n *   $(() => console.log('mousemove'))\n * );\n * ```\n *\n * In this code the Qwik Optimizer detects `$(...)` and transforms the code into:\n *\n * ```tsx\n * // FILE: <current file>\n * useOnDocument('mousemove', qrl('./chunk-abc.js', 'onMousemove'));\n *\n * // FILE: chunk-abc.js\n * export const onMousemove = () => console.log('mousemove');\n * ```\n *\n * ## Special Rules\n *\n * The Qwik Optimizer places special rules on functions that can be lazy-loaded.\n *\n * 1. The expression of the `$(expression)` function must be importable by the system.\n * (expression shows up in `import` or has `export`)\n * 2. If inlined function then all lexically captured values must be:\n *    - importable (vars shows up in `import` or has `export`)\n *    - const (The capturing process differs from JS capturing in that writing to captured\n * variables does not update them, and therefore writes are forbidden. The best practice is that\n * all captured variables are constants.)\n *    - Must be runtime serializable.\n *\n * ```tsx\n * import { importedFn } from './import/example';\n *\n * export const greet = () => console.log('greet');\n * function topLevelFn() {}\n *\n * function myCode() {\n *   const store = useStore({});\n *   function localFn() {}\n *   // Valid Examples\n *   $(greet); // greet is importable\n *   $(importedFn); // importedFn is importable\n *   $(() => greet()); // greet is importable;\n *   $(() => importedFn()); // importedFn is importable\n *   $(() => console.log(store)); // store is serializable.\n *\n *   // Compile time errors\n *   $(topLevelFn); // ERROR: `topLevelFn` not importable\n *   $(() => topLevelFn()); // ERROR: `topLevelFn` not importable\n *\n *   // Runtime errors\n *   $(localFn); // ERROR: `localFn` fails serialization\n *   $(() => localFn()); // ERROR: `localFn` fails serialization\n * }\n *\n * ```\n *\n * @param expression - Expression which should be lazy loaded\n * @public\n */\n// </docs>\nexport function $(expression) {\n    return runtimeQrl(expression);\n}\n// <docs markdown=\"../readme.md#implicit$FirstArg\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#implicit$FirstArg instead)\n/**\n * Create a `____$(...)` convenience method from `___(...)`.\n *\n * It is very common for functions to take a lazy-loadable resource as a first argument. For this\n * reason, the Qwik Optimizer automatically extracts the first argument from any function which\n * ends in `$`.\n *\n * This means that `foo$(arg0)` and `foo($(arg0))` are equivalent with respect to Qwik Optimizer.\n * The former is just a shorthand for the latter.\n *\n * For example these function call are equivalent:\n *\n * - `component$(() => {...})` is same as `onRender($(() => {...}))`\n *\n * ```tsx\n * export function myApi(callback: QRL<() => void>): void {\n *   // ...\n * }\n *\n * export const myApi$ = implicit$FirstArg(myApi);\n * // type of myApi$: (callback: () => void): void\n *\n * // can be used as:\n * myApi$(() => console.log('callback'));\n *\n * // will be transpiled to:\n * // FILE: <current file>\n * myApi(qrl('./chunk-abc.js', 'callback'));\n *\n * // FILE: chunk-abc.js\n * export const callback = () => console.log('callback');\n * ```\n *\n * @param fn - function that should have its first argument automatically `$`.\n * @alpha\n */\n// </docs>\nexport function implicit$FirstArg(fn) {\n    return function (first, ...rest) {\n        return fn.call(null, $(first), ...rest);\n    };\n}\n//# sourceMappingURL=data:application/json;base64,","import { assertDefined } from '../assert/assert';\nimport { getInvokeContext } from './use-core';\n// <docs markdown=\"../readme.md#useHostElement\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useHostElement instead)\n/**\n * Retrieves the Host Element of the current component.\n *\n * NOTE: `useHostElement` method can only be used in the synchronous portion of the callback\n * (before any `await` statements.)\n *\n * ```tsx\n * const Section = component$(\n *   () => {\n *     const hostElement = useHostElement();\n *     console.log(hostElement); // hostElement is a HTMLSectionElement\n *\n *     return <Host>I am a section</Host>;\n *   },\n *   {\n *     tagName: 'section',\n *   }\n * );\n * ```\n *\n * @public\n */\n// </docs>\nexport function useHostElement() {\n    const element = getInvokeContext().hostElement;\n    assertDefined(element);\n    return element;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWhvc3QtZWxlbWVudC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL3F3aWsvc3JjL2NvcmUvdXNlL3VzZS1ob3N0LWVsZW1lbnQucHVibGljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFOUMsZ0RBQWdEO0FBQ2hELHlDQUF5QztBQUN6Qyw2Q0FBNkM7QUFDN0M7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQXFCRztBQUNILFVBQVU7QUFDVixNQUFNLFVBQVUsY0FBYztJQUM1QixNQUFNLE9BQU8sR0FBRyxnQkFBZ0IsRUFBRSxDQUFDLFdBQVksQ0FBQztJQUNoRCxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDdkIsT0FBTyxPQUFPLENBQUM7QUFDakIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzc2VydERlZmluZWQgfSBmcm9tICcuLi9hc3NlcnQvYXNzZXJ0JztcbmltcG9ydCB7IGdldEludm9rZUNvbnRleHQgfSBmcm9tICcuL3VzZS1jb3JlJztcblxuLy8gPGRvY3MgbWFya2Rvd249XCIuLi9yZWFkbWUubWQjdXNlSG9zdEVsZW1lbnRcIj5cbi8vICEhRE8gTk9UIEVESVQgVEhJUyBDT01NRU5UIERJUkVDVExZISEhXG4vLyAoZWRpdCAuLi9yZWFkbWUubWQjdXNlSG9zdEVsZW1lbnQgaW5zdGVhZClcbi8qKlxuICogUmV0cmlldmVzIHRoZSBIb3N0IEVsZW1lbnQgb2YgdGhlIGN1cnJlbnQgY29tcG9uZW50LlxuICpcbiAqIE5PVEU6IGB1c2VIb3N0RWxlbWVudGAgbWV0aG9kIGNhbiBvbmx5IGJlIHVzZWQgaW4gdGhlIHN5bmNocm9ub3VzIHBvcnRpb24gb2YgdGhlIGNhbGxiYWNrXG4gKiAoYmVmb3JlIGFueSBgYXdhaXRgIHN0YXRlbWVudHMuKVxuICpcbiAqIGBgYHRzeFxuICogY29uc3QgU2VjdGlvbiA9IGNvbXBvbmVudCQoXG4gKiAgICgpID0+IHtcbiAqICAgICBjb25zdCBob3N0RWxlbWVudCA9IHVzZUhvc3RFbGVtZW50KCk7XG4gKiAgICAgY29uc29sZS5sb2coaG9zdEVsZW1lbnQpOyAvLyBob3N0RWxlbWVudCBpcyBhIEhUTUxTZWN0aW9uRWxlbWVudFxuICpcbiAqICAgICByZXR1cm4gPEhvc3Q+SSBhbSBhIHNlY3Rpb248L0hvc3Q+O1xuICogICB9LFxuICogICB7XG4gKiAgICAgdGFnTmFtZTogJ3NlY3Rpb24nLFxuICogICB9XG4gKiApO1xuICogYGBgXG4gKlxuICogQHB1YmxpY1xuICovXG4vLyA8L2RvY3M+XG5leHBvcnQgZnVuY3Rpb24gdXNlSG9zdEVsZW1lbnQoKTogRWxlbWVudCB7XG4gIGNvbnN0IGVsZW1lbnQgPSBnZXRJbnZva2VDb250ZXh0KCkuaG9zdEVsZW1lbnQhO1xuICBhc3NlcnREZWZpbmVkKGVsZW1lbnQpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbiJdfQ==","import { getInvokeContext } from './use-core';\n// <docs markdown=\"../readme.md#useDocument\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useDocument instead)\n/**\n * Retrieves the document of the current element. It's important to use this method instead of\n * accessing `document` directly, because during SSR, the global document might not exist.\n *\n * NOTE: `useDocument` method can only be used in the synchronous portion of the callback (before\n * any `await` statements.)\n *\n * @alpha\n */\n// </docs>\nexport function useDocument() {\n    const doc = getInvokeContext().doc;\n    if (!doc) {\n        throw new Error('Cant access document for existing context');\n    }\n    return doc;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWRvY3VtZW50LnB1YmxpYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvcXdpay9zcmMvY29yZS91c2UvdXNlLWRvY3VtZW50LnB1YmxpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFOUMsNkNBQTZDO0FBQzdDLHlDQUF5QztBQUN6QywwQ0FBMEM7QUFDMUM7Ozs7Ozs7O0dBUUc7QUFDSCxVQUFVO0FBQ1YsTUFBTSxVQUFVLFdBQVc7SUFDekIsTUFBTSxHQUFHLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQyxHQUFHLENBQUM7SUFDbkMsSUFBSSxDQUFDLEdBQUcsRUFBRTtRQUNSLE1BQU0sSUFBSSxLQUFLLENBQUMsMkNBQTJDLENBQUMsQ0FBQztLQUM5RDtJQUNELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEludm9rZUNvbnRleHQgfSBmcm9tICcuL3VzZS1jb3JlJztcblxuLy8gPGRvY3MgbWFya2Rvd249XCIuLi9yZWFkbWUubWQjdXNlRG9jdW1lbnRcIj5cbi8vICEhRE8gTk9UIEVESVQgVEhJUyBDT01NRU5UIERJUkVDVExZISEhXG4vLyAoZWRpdCAuLi9yZWFkbWUubWQjdXNlRG9jdW1lbnQgaW5zdGVhZClcbi8qKlxuICogUmV0cmlldmVzIHRoZSBkb2N1bWVudCBvZiB0aGUgY3VycmVudCBlbGVtZW50LiBJdCdzIGltcG9ydGFudCB0byB1c2UgdGhpcyBtZXRob2QgaW5zdGVhZCBvZlxuICogYWNjZXNzaW5nIGBkb2N1bWVudGAgZGlyZWN0bHksIGJlY2F1c2UgZHVyaW5nIFNTUiwgdGhlIGdsb2JhbCBkb2N1bWVudCBtaWdodCBub3QgZXhpc3QuXG4gKlxuICogTk9URTogYHVzZURvY3VtZW50YCBtZXRob2QgY2FuIG9ubHkgYmUgdXNlZCBpbiB0aGUgc3luY2hyb25vdXMgcG9ydGlvbiBvZiB0aGUgY2FsbGJhY2sgKGJlZm9yZVxuICogYW55IGBhd2FpdGAgc3RhdGVtZW50cy4pXG4gKlxuICogQGFscGhhXG4gKi9cbi8vIDwvZG9jcz5cbmV4cG9ydCBmdW5jdGlvbiB1c2VEb2N1bWVudCgpOiBEb2N1bWVudCB7XG4gIGNvbnN0IGRvYyA9IGdldEludm9rZUNvbnRleHQoKS5kb2M7XG4gIGlmICghZG9jKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdDYW50IGFjY2VzcyBkb2N1bWVudCBmb3IgZXhpc3RpbmcgY29udGV4dCcpO1xuICB9XG4gIHJldHVybiBkb2M7XG59XG4iXX0=","import { useDocument } from '../use/use-document.public';\nimport { getProxyMap, qObject } from '../object/q-object';\nimport { getInvokeContext } from './use-core';\nimport { useHostElement } from './use-host-element.public';\nimport { getContext } from '../props/props';\nimport { wrapSubscriber } from './use-subscriber';\nimport { assertEqual } from '../assert/assert';\nimport { RenderEvent } from '../util/markers';\n// <docs markdown=\"../readme.md#useStore\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useStore instead)\n/**\n * Creates a object that Qwik can track across serializations.\n *\n * Use `useStore` to create state for your application. The return object is a proxy which has a\n * unique ID. The ID of the object is used in the `QRL`s to refer to the store.\n *\n * ## Example\n *\n * Example showing how `useStore` is used in Counter example to keep track of count.\n *\n * ```tsx\n * const Stores = component$(() => {\n *   const counter = useCounter(1);\n *\n *   // Reactivity happens even for nested objects and arrays\n *   const userData = useStore({\n *     name: 'Manu',\n *     address: {\n *       address: '',\n *       city: '',\n *     },\n *     orgs: [],\n *   });\n *\n *   // useStore() can also accept a function to calculate the initial value\n *   const state = useStore(() => {\n *     return {\n *       value: expensiveInitialValue(),\n *     };\n *   });\n *\n *   return (\n *     <Host>\n *       <div>Counter: {counter.value}</div>\n *       <Child userData={userData} state={state} />\n *     </Host>\n *   );\n * });\n *\n * function useCounter(step: number) {\n *   // Multiple stores can be created in custom hooks for convenience and composability\n *   const counterStore = useStore({\n *     value: 0,\n *   });\n *   useClientEffect$(() => {\n *     // Only runs in the client\n *     const timer = setInterval(() => {\n *       counterStore.value += step;\n *     }, 500);\n *     return () => {\n *       clearInterval(timer);\n *     };\n *   });\n *   return counterStore;\n * }\n * ```\n *\n * @public\n */\n// </docs>\nexport function useStore(initialState) {\n    const [store, setStore] = useSequentialScope();\n    const hostElement = useHostElement();\n    if (store != null) {\n        return wrapSubscriber(store, hostElement);\n    }\n    const value = typeof initialState === 'function' ? initialState() : initialState;\n    const newStore = qObject(value, getProxyMap(useDocument()));\n    setStore(newStore);\n    return wrapSubscriber(newStore, hostElement);\n}\n// <docs markdown=\"../readme.md#useRef\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useRef instead)\n/**\n * It's a very thin wrapper around `useStore()` including the proper type signature to be passed\n * to the `ref` property in JSX.\n *\n * ```tsx\n * export function useRef<T = Element>(current?: T): Ref<T> {\n *   return useStore({ current });\n * }\n * ```\n *\n * ## Example\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   const input = useRef<HTMLInputElement>();\n *\n *   useClientEffect$((track) => {\n *     const el = track(input, 'current')!;\n *     el.focus();\n *   });\n *\n *   return (\n *     <Host>\n *       <input type=\"text\" ref={input} />\n *     </Host>\n *   );\n * });\n *\n * ```\n *\n * @public\n */\n// </docs>\nexport function useRef(current) {\n    return useStore({ current });\n}\nexport function useSequentialScope() {\n    const ctx = getInvokeContext();\n    assertEqual(ctx.event, RenderEvent);\n    const index = ctx.seq;\n    const hostElement = useHostElement();\n    const elementCtx = getContext(hostElement);\n    ctx.seq++;\n    const updateFn = (value) => {\n        elementCtx.seq[index] = elementCtx.refMap.add(value);\n    };\n    const seqIndex = elementCtx.seq[index];\n    if (typeof seqIndex === 'number') {\n        return [elementCtx.refMap.get(seqIndex), updateFn];\n    }\n    return [undefined, updateFn];\n}\n//# sourceMappingURL=data:application/json;base64,","// TODO(misko): need full object parsing /serializing\nimport { assertEqual } from '../assert/assert';\nexport function qDeflate(obj, hostCtx) {\n    return String(hostCtx.refMap.add(obj));\n}\nexport function qInflate(ref, hostCtx) {\n    const int = parseInt(ref, 10);\n    const obj = hostCtx.refMap.get(int);\n    assertEqual(hostCtx.refMap.array.length > int, true);\n    return obj;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicS1qc29uLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL2pzb24vcS1qc29uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHFEQUFxRDtBQUNyRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFHL0MsTUFBTSxVQUFVLFFBQVEsQ0FBQyxHQUFRLEVBQUUsT0FBaUI7SUFDbEQsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztBQUN6QyxDQUFDO0FBRUQsTUFBTSxVQUFVLFFBQVEsQ0FBQyxHQUFXLEVBQUUsT0FBaUI7SUFDckQsTUFBTSxHQUFHLEdBQUcsUUFBUSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUM5QixNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNwQyxXQUFXLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNyRCxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUT0RPKG1pc2tvKTogbmVlZCBmdWxsIG9iamVjdCBwYXJzaW5nIC9zZXJpYWxpemluZ1xuaW1wb3J0IHsgYXNzZXJ0RXF1YWwgfSBmcm9tICcuLi9hc3NlcnQvYXNzZXJ0JztcbmltcG9ydCB0eXBlIHsgUUNvbnRleHQgfSBmcm9tICcuLi9wcm9wcy9wcm9wcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBxRGVmbGF0ZShvYmo6IGFueSwgaG9zdEN0eDogUUNvbnRleHQpOiBzdHJpbmcge1xuICByZXR1cm4gU3RyaW5nKGhvc3RDdHgucmVmTWFwLmFkZChvYmopKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHFJbmZsYXRlKHJlZjogc3RyaW5nLCBob3N0Q3R4OiBRQ29udGV4dCk6IGFueSB7XG4gIGNvbnN0IGludCA9IHBhcnNlSW50KHJlZiwgMTApO1xuICBjb25zdCBvYmogPSBob3N0Q3R4LnJlZk1hcC5nZXQoaW50KTtcbiAgYXNzZXJ0RXF1YWwoaG9zdEN0eC5yZWZNYXAuYXJyYXkubGVuZ3RoID4gaW50LCB0cnVlKTtcbiAgcmV0dXJuIG9iajtcbn1cbiJdfQ==","import { getInvokeContext } from './use-core';\nexport function useURL() {\n    const url = getInvokeContext().url;\n    if (!url) {\n        // TODO(misko): centralize\n        throw new Error('Q-ERROR: no URL is associated with the execution context');\n    }\n    return url;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLXVybC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL3F3aWsvc3JjL2NvcmUvdXNlL3VzZS11cmwucHVibGljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUU5QyxNQUFNLFVBQVUsTUFBTTtJQUNwQixNQUFNLEdBQUcsR0FBRyxnQkFBZ0IsRUFBRSxDQUFDLEdBQUcsQ0FBQztJQUNuQyxJQUFJLENBQUMsR0FBRyxFQUFFO1FBQ1IsMEJBQTBCO1FBQzFCLE1BQU0sSUFBSSxLQUFLLENBQUMsMERBQTBELENBQUMsQ0FBQztLQUM3RTtJQUNELE9BQU8sR0FBSSxDQUFDO0FBQ2QsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEludm9rZUNvbnRleHQgfSBmcm9tICcuL3VzZS1jb3JlJztcblxuZXhwb3J0IGZ1bmN0aW9uIHVzZVVSTCgpOiBVUkwge1xuICBjb25zdCB1cmwgPSBnZXRJbnZva2VDb250ZXh0KCkudXJsO1xuICBpZiAoIXVybCkge1xuICAgIC8vIFRPRE8obWlza28pOiBjZW50cmFsaXplXG4gICAgdGhyb3cgbmV3IEVycm9yKCdRLUVSUk9SOiBubyBVUkwgaXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBleGVjdXRpb24gY29udGV4dCcpO1xuICB9XG4gIHJldHVybiB1cmwhO1xufVxuIl19","import { wrapSubscriber } from './use-subscriber';\nimport { assertDefined } from '../assert/assert';\nimport { parseQRL } from '../import/qrl';\nimport { qInflate } from '../json/q-json';\nimport { getContext, resumeIfNeeded } from '../props/props';\nimport { getContainer, getInvokeContext } from './use-core';\nimport { useURL } from './use-url.public';\n// <docs markdown=\"../readme.md#useLexicalScope\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useLexicalScope instead)\n/**\n * Used by the Qwik Optimizer to restore the lexical scoped variables.\n *\n * This method should not be present in the application source code.\n *\n * NOTE: `useLexicalScope` method can only be used in the synchronous portion of the callback\n * (before any `await` statements.)\n *\n * @public\n */\n// </docs>\nexport function useLexicalScope() {\n    const context = getInvokeContext();\n    const hostElement = context.hostElement;\n    const qrl = (context.qrl ??\n        parseQRL(decodeURIComponent(String(useURL())), hostElement));\n    if (qrl.captureRef == null) {\n        const el = context.element;\n        assertDefined(el);\n        resumeIfNeeded(getContainer(el));\n        const ctx = getContext(el);\n        qrl.captureRef = qrl.capture.map((idx) => qInflate(idx, ctx));\n    }\n    const subscriber = context.subscriber;\n    if (subscriber) {\n        return qrl.captureRef.map((obj) => wrapSubscriber(obj, subscriber));\n    }\n    return qrl.captureRef;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWxleGljYWwtc2NvcGUucHVibGljLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL3VzZS91c2UtbGV4aWNhbC1zY29wZS5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMxQyxPQUFPLEVBQUUsVUFBVSxFQUFFLGNBQWMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzVELE9BQU8sRUFBRSxZQUFZLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDNUQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRzFDLGlEQUFpRDtBQUNqRCx5Q0FBeUM7QUFDekMsOENBQThDO0FBQzlDOzs7Ozs7Ozs7R0FTRztBQUNILFVBQVU7QUFDVixNQUFNLFVBQVUsZUFBZTtJQUM3QixNQUFNLE9BQU8sR0FBRyxnQkFBZ0IsRUFBRSxDQUFDO0lBQ25DLE1BQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUM7SUFDeEMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRztRQUN0QixRQUFRLENBQUMsa0JBQWtCLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBRSxXQUFXLENBQUMsQ0FBZ0IsQ0FBQztJQUM5RSxJQUFJLEdBQUcsQ0FBQyxVQUFVLElBQUksSUFBSSxFQUFFO1FBQzFCLE1BQU0sRUFBRSxHQUFHLE9BQU8sQ0FBQyxPQUFRLENBQUM7UUFDNUIsYUFBYSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ2xCLGNBQWMsQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFFLENBQUMsQ0FBQztRQUNsQyxNQUFNLEdBQUcsR0FBRyxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDM0IsR0FBRyxDQUFDLFVBQVUsR0FBRyxHQUFHLENBQUMsT0FBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO0tBQ2hFO0lBQ0QsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQztJQUN0QyxJQUFJLFVBQVUsRUFBRTtRQUNkLE9BQU8sR0FBRyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLGNBQWMsQ0FBQyxHQUFHLEVBQUUsVUFBVSxDQUFDLENBQVMsQ0FBQztLQUM3RTtJQUNELE9BQU8sR0FBRyxDQUFDLFVBQWtCLENBQUM7QUFDaEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdyYXBTdWJzY3JpYmVyIH0gZnJvbSAnLi91c2Utc3Vic2NyaWJlcic7XG5pbXBvcnQgeyBhc3NlcnREZWZpbmVkIH0gZnJvbSAnLi4vYXNzZXJ0L2Fzc2VydCc7XG5pbXBvcnQgeyBwYXJzZVFSTCB9IGZyb20gJy4uL2ltcG9ydC9xcmwnO1xuaW1wb3J0IHsgcUluZmxhdGUgfSBmcm9tICcuLi9qc29uL3EtanNvbic7XG5pbXBvcnQgeyBnZXRDb250ZXh0LCByZXN1bWVJZk5lZWRlZCB9IGZyb20gJy4uL3Byb3BzL3Byb3BzJztcbmltcG9ydCB7IGdldENvbnRhaW5lciwgZ2V0SW52b2tlQ29udGV4dCB9IGZyb20gJy4vdXNlLWNvcmUnO1xuaW1wb3J0IHsgdXNlVVJMIH0gZnJvbSAnLi91c2UtdXJsLnB1YmxpYyc7XG5pbXBvcnQgdHlwZSB7IFFSTEludGVybmFsIH0gZnJvbSAnLi4vaW1wb3J0L3FybC1jbGFzcyc7XG5cbi8vIDxkb2NzIG1hcmtkb3duPVwiLi4vcmVhZG1lLm1kI3VzZUxleGljYWxTY29wZVwiPlxuLy8gISFETyBOT1QgRURJVCBUSElTIENPTU1FTlQgRElSRUNUTFkhISFcbi8vIChlZGl0IC4uL3JlYWRtZS5tZCN1c2VMZXhpY2FsU2NvcGUgaW5zdGVhZClcbi8qKlxuICogVXNlZCBieSB0aGUgUXdpayBPcHRpbWl6ZXIgdG8gcmVzdG9yZSB0aGUgbGV4aWNhbCBzY29wZWQgdmFyaWFibGVzLlxuICpcbiAqIFRoaXMgbWV0aG9kIHNob3VsZCBub3QgYmUgcHJlc2VudCBpbiB0aGUgYXBwbGljYXRpb24gc291cmNlIGNvZGUuXG4gKlxuICogTk9URTogYHVzZUxleGljYWxTY29wZWAgbWV0aG9kIGNhbiBvbmx5IGJlIHVzZWQgaW4gdGhlIHN5bmNocm9ub3VzIHBvcnRpb24gb2YgdGhlIGNhbGxiYWNrXG4gKiAoYmVmb3JlIGFueSBgYXdhaXRgIHN0YXRlbWVudHMuKVxuICpcbiAqIEBwdWJsaWNcbiAqL1xuLy8gPC9kb2NzPlxuZXhwb3J0IGZ1bmN0aW9uIHVzZUxleGljYWxTY29wZTxWQVJTIGV4dGVuZHMgYW55W10+KCk6IFZBUlMge1xuICBjb25zdCBjb250ZXh0ID0gZ2V0SW52b2tlQ29udGV4dCgpO1xuICBjb25zdCBob3N0RWxlbWVudCA9IGNvbnRleHQuaG9zdEVsZW1lbnQ7XG4gIGNvbnN0IHFybCA9IChjb250ZXh0LnFybCA/P1xuICAgIHBhcnNlUVJMKGRlY29kZVVSSUNvbXBvbmVudChTdHJpbmcodXNlVVJMKCkpKSwgaG9zdEVsZW1lbnQpKSBhcyBRUkxJbnRlcm5hbDtcbiAgaWYgKHFybC5jYXB0dXJlUmVmID09IG51bGwpIHtcbiAgICBjb25zdCBlbCA9IGNvbnRleHQuZWxlbWVudCE7XG4gICAgYXNzZXJ0RGVmaW5lZChlbCk7XG4gICAgcmVzdW1lSWZOZWVkZWQoZ2V0Q29udGFpbmVyKGVsKSEpO1xuICAgIGNvbnN0IGN0eCA9IGdldENvbnRleHQoZWwpO1xuICAgIHFybC5jYXB0dXJlUmVmID0gcXJsLmNhcHR1cmUhLm1hcCgoaWR4KSA9PiBxSW5mbGF0ZShpZHgsIGN0eCkpO1xuICB9XG4gIGNvbnN0IHN1YnNjcmliZXIgPSBjb250ZXh0LnN1YnNjcmliZXI7XG4gIGlmIChzdWJzY3JpYmVyKSB7XG4gICAgcmV0dXJuIHFybC5jYXB0dXJlUmVmLm1hcCgob2JqKSA9PiB3cmFwU3Vic2NyaWJlcihvYmosIHN1YnNjcmliZXIpKSBhcyBWQVJTO1xuICB9XG4gIHJldHVybiBxcmwuY2FwdHVyZVJlZiBhcyBWQVJTO1xufVxuIl19","import { noSerialize, notifyWatch, QOjectAllSymbol, removeSub, SetSubscriber, } from '../object/q-object';\nimport { implicit$FirstArg } from '../import/qrl.public';\nimport { getContext } from '../props/props';\nimport { newInvokeContext, useWaitOn } from '../use/use-core';\nimport { useHostElement } from '../use/use-host-element.public';\nimport { logDebug, logError } from '../util/log';\nimport { then } from '../util/promises';\nimport { useSequentialScope } from '../use/use-store.public';\nimport { QRLInternal } from '../import/qrl-class';\nimport { getDocument } from '../util/dom';\nimport { useLexicalScope } from '../use/use-lexical-scope.public';\nimport { getPlatform } from '../platform/platform';\nimport { useDocument } from '../use/use-document.public';\nimport { useResumeQrl, useVisibleQrl } from '../component/component.public';\nexport var WatchFlags;\n(function (WatchFlags) {\n    WatchFlags[WatchFlags[\"IsDirty\"] = 1] = \"IsDirty\";\n    WatchFlags[WatchFlags[\"IsCleanup\"] = 2] = \"IsCleanup\";\n})(WatchFlags || (WatchFlags = {}));\nexport const isWatchDescriptor = (obj) => {\n    return obj && typeof obj === 'object' && 'qrl' in obj && 'f' in obj;\n};\n/**\n * @alpha\n */\nexport function handleWatch() {\n    const [watch] = useLexicalScope();\n    notifyWatch(watch);\n}\n// <docs markdown=\"../readme.md#useWatch\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useWatch instead)\n/**\n * Reruns the `watchFn` when the observed inputs change.\n *\n * Use `useWatch` to observe changes on a set of inputs, and then re-execute the `watchFn` when\n * those inputs change.\n *\n * The `watchFn` only executes if the observed inputs change. To observe the inputs use the `obs`\n * function to wrap property reads. This creates subscriptions which will trigger the `watchFn`\n * to re-run.\n *\n * @see `Tracker`\n *\n * @public\n *\n * ## Example\n *\n * The `useWatch` function is used to observe the `state.count` property. Any changes to the\n * `state.count` cause the `watchFn` to execute which in turn updates the `state.doubleCount` to\n * the double of `state.count`.\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   const store = useStore({\n *     count: 0,\n *     doubleCount: 0,\n *     debounced: 0,\n *   });\n *\n *   // Double count watch\n *   useWatch$((track) => {\n *     const count = track(store, 'count');\n *     store.doubleCount = 2 * count;\n *   });\n *\n *   // Debouncer watch\n *   useWatch$((track) => {\n *     const doubleCount = track(store, 'doubleCount');\n *     const timer = setTimeout(() => {\n *       store.debounced = doubleCount;\n *     }, 2000);\n *     return () => {\n *       clearTimeout(timer);\n *     };\n *   });\n *   return (\n *     <Host>\n *       <div>\n *         {store.count} / {store.doubleCount}\n *       </div>\n *       <div>{store.debounced}</div>\n *     </Host>\n *   );\n * });\n * ```\n *\n * @param watch - Function which should be re-executed when changes to the inputs are detected\n * @public\n */\n// </docs>\nexport function useWatchQrl(qrl, opts) {\n    const [watch, setWatch] = useSequentialScope();\n    if (!watch) {\n        const el = useHostElement();\n        const watch = {\n            qrl,\n            el,\n            f: WatchFlags.IsDirty,\n        };\n        setWatch(watch);\n        getContext(el).refMap.add(watch);\n        useWaitOn(Promise.resolve().then(() => runWatch(watch)));\n        const isServer = getPlatform(useDocument()).isServer;\n        if (isServer) {\n            useRunWatch(watch, opts?.run);\n        }\n    }\n}\n// <docs markdown=\"../readme.md#useWatch\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useWatch instead)\n/**\n * Reruns the `watchFn` when the observed inputs change.\n *\n * Use `useWatch` to observe changes on a set of inputs, and then re-execute the `watchFn` when\n * those inputs change.\n *\n * The `watchFn` only executes if the observed inputs change. To observe the inputs use the `obs`\n * function to wrap property reads. This creates subscriptions which will trigger the `watchFn`\n * to re-run.\n *\n * @see `Tracker`\n *\n * @public\n *\n * ## Example\n *\n * The `useWatch` function is used to observe the `state.count` property. Any changes to the\n * `state.count` cause the `watchFn` to execute which in turn updates the `state.doubleCount` to\n * the double of `state.count`.\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   const store = useStore({\n *     count: 0,\n *     doubleCount: 0,\n *     debounced: 0,\n *   });\n *\n *   // Double count watch\n *   useWatch$((track) => {\n *     const count = track(store, 'count');\n *     store.doubleCount = 2 * count;\n *   });\n *\n *   // Debouncer watch\n *   useWatch$((track) => {\n *     const doubleCount = track(store, 'doubleCount');\n *     const timer = setTimeout(() => {\n *       store.debounced = doubleCount;\n *     }, 2000);\n *     return () => {\n *       clearTimeout(timer);\n *     };\n *   });\n *   return (\n *     <Host>\n *       <div>\n *         {store.count} / {store.doubleCount}\n *       </div>\n *       <div>{store.debounced}</div>\n *     </Host>\n *   );\n * });\n * ```\n *\n * @param watch - Function which should be re-executed when changes to the inputs are detected\n * @public\n */\n// </docs>\nexport const useWatch$ = implicit$FirstArg(useWatchQrl);\n// <docs markdown=\"../readme.md#useClientEffect\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useClientEffect instead)\n/**\n * ```tsx\n * const Timer = component$(() => {\n *   const store = useStore({\n *     count: 0,\n *   });\n *\n *   useClientEffect$(() => {\n *     // Only runs in the client\n *     const timer = setInterval(() => {\n *       store.count++;\n *     }, 500);\n *     return () => {\n *       clearInterval(timer);\n *     };\n *   });\n *\n *   return <Host>{store.count}</Host>;\n * });\n * ```\n *\n * @public\n */\n// </docs>\nexport function useClientEffectQrl(qrl, opts) {\n    const [watch, setWatch] = useSequentialScope();\n    if (!watch) {\n        const el = useHostElement();\n        const watch = {\n            qrl,\n            el,\n            f: 0,\n        };\n        setWatch(watch);\n        getContext(el).refMap.add(watch);\n        useRunWatch(watch, opts?.run ?? 'visible');\n        const doc = useDocument();\n        if (doc['qO']) {\n            doc['qO'].observe(el);\n        }\n    }\n}\n// <docs markdown=\"../readme.md#useClientEffect\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useClientEffect instead)\n/**\n * ```tsx\n * const Timer = component$(() => {\n *   const store = useStore({\n *     count: 0,\n *   });\n *\n *   useClientEffect$(() => {\n *     // Only runs in the client\n *     const timer = setInterval(() => {\n *       store.count++;\n *     }, 500);\n *     return () => {\n *       clearInterval(timer);\n *     };\n *   });\n *\n *   return <Host>{store.count}</Host>;\n * });\n * ```\n *\n * @public\n */\n// </docs>\nexport const useClientEffect$ = implicit$FirstArg(useClientEffectQrl);\n// <docs markdown=\"../readme.md#useServerMount\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useServerMount instead)\n/**\n * Register's a server mount hook, that runs only in server when the component is first mounted.\n * `useWatch` will run once in the server, and N-times in the client, only when the **tracked**\n * state changes.\n *\n * ## Example\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   const store = useStore({\n *     users: [],\n *   });\n *\n *   // Double count watch\n *   useServerMount$(async () => {\n *     // This code will ONLY run once in the server, when the component is mounted\n *     store.users = await db.requestUsers();\n *   });\n *\n *   return (\n *     <Host>\n *       {store.users.map((user) => (\n *         <User user={user} />\n *       ))}\n *     </Host>\n *   );\n * });\n *\n * interface User {\n *   name: string;\n * }\n * function User(props: { user: User }) {\n *   return <div>Name: {props.user.name}</div>;\n * }\n * const Cmp = component$(() => {\n *   const store = useStore({\n *     users: [],\n *   });\n *\n *   // Double count watch\n *   useServerMount$(async () => {\n *     // This code will ONLY run once in the server, when the component is mounted\n *     store.users = await db.requestUsers();\n *   });\n *\n *   return (\n *     <Host>\n *       {store.users.map((user) => (\n *         <User user={user} />\n *       ))}\n *     </Host>\n *   );\n * });\n *\n * interface User {\n *   name: string;\n * }\n * function User(props: { user: User }) {\n *   return <div>Name: {props.user.name}</div>;\n * }\n * ```\n *\n * @public\n */\n// </docs>\nexport function useServerMountQrl(watchQrl) {\n    const [watch, setWatch] = useSequentialScope();\n    if (!watch) {\n        setWatch(true);\n        const isServer = getPlatform(useDocument()).isServer;\n        if (isServer) {\n            useWaitOn(watchQrl.invoke());\n        }\n    }\n}\n// <docs markdown=\"../readme.md#useServerMount\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useServerMount instead)\n/**\n * Register's a server mount hook, that runs only in server when the component is first mounted.\n * `useWatch` will run once in the server, and N-times in the client, only when the **tracked**\n * state changes.\n *\n * ## Example\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   const store = useStore({\n *     users: [],\n *   });\n *\n *   // Double count watch\n *   useServerMount$(async () => {\n *     // This code will ONLY run once in the server, when the component is mounted\n *     store.users = await db.requestUsers();\n *   });\n *\n *   return (\n *     <Host>\n *       {store.users.map((user) => (\n *         <User user={user} />\n *       ))}\n *     </Host>\n *   );\n * });\n *\n * interface User {\n *   name: string;\n * }\n * function User(props: { user: User }) {\n *   return <div>Name: {props.user.name}</div>;\n * }\n * const Cmp = component$(() => {\n *   const store = useStore({\n *     users: [],\n *   });\n *\n *   // Double count watch\n *   useServerMount$(async () => {\n *     // This code will ONLY run once in the server, when the component is mounted\n *     store.users = await db.requestUsers();\n *   });\n *\n *   return (\n *     <Host>\n *       {store.users.map((user) => (\n *         <User user={user} />\n *       ))}\n *     </Host>\n *   );\n * });\n *\n * interface User {\n *   name: string;\n * }\n * function User(props: { user: User }) {\n *   return <div>Name: {props.user.name}</div>;\n * }\n * ```\n *\n * @public\n */\n// </docs>\nexport const useServerMount$ = implicit$FirstArg(useServerMountQrl);\nexport function runWatch(watch) {\n    if (!(watch.f & WatchFlags.IsDirty)) {\n        logDebug('Watch is not dirty, skipping run', watch);\n        return Promise.resolve(watch);\n    }\n    watch.f &= ~WatchFlags.IsDirty;\n    const promise = new Promise((resolve) => {\n        then(watch.running, () => {\n            cleanupWatch(watch);\n            const el = watch.el;\n            const invokationContext = newInvokeContext(getDocument(el), el, el, 'WatchEvent');\n            invokationContext.watch = watch;\n            const watchFn = watch.qrl.invokeFn(el, invokationContext, () => {\n                const captureRef = watch.qrl.captureRef;\n                if (Array.isArray(captureRef)) {\n                    captureRef.forEach((obj) => {\n                        removeSub(obj, watch);\n                    });\n                }\n            });\n            const tracker = (obj, prop) => {\n                obj[SetSubscriber] = watch;\n                if (prop) {\n                    return obj[prop];\n                }\n                else {\n                    return obj[QOjectAllSymbol];\n                }\n            };\n            return then(watchFn(tracker), (returnValue) => {\n                if (typeof returnValue === 'function') {\n                    watch.destroy = noSerialize(returnValue);\n                }\n                resolve(watch);\n            });\n        });\n    });\n    watch.running = noSerialize(promise);\n    return promise;\n}\nexport const cleanupWatch = (watch) => {\n    const destroy = watch.destroy;\n    if (destroy) {\n        watch.destroy = undefined;\n        try {\n            destroy();\n        }\n        catch (err) {\n            logError(err);\n        }\n    }\n};\nexport const destroyWatch = (watch) => {\n    if (watch.f & WatchFlags.IsCleanup) {\n        watch.f &= ~WatchFlags.IsCleanup;\n        const cleanup = watch.qrl.invokeFn(watch.el);\n        cleanup();\n    }\n    else {\n        cleanupWatch(watch);\n    }\n};\nconst useRunWatch = (watch, run) => {\n    if (run === 'load') {\n        useResumeQrl(getWatchHandlerQrl(watch));\n    }\n    else if (run === 'visible') {\n        useVisibleQrl(getWatchHandlerQrl(watch));\n    }\n};\nconst getWatchHandlerQrl = (watch) => {\n    const watchQrl = watch.qrl;\n    const watchHandler = new QRLInternal(watchQrl.chunk, 'handleWatch', handleWatch, null, null, [watch]);\n    watchHandler.refSymbol = watchQrl.symbol;\n    return watchHandler;\n};\n//# sourceMappingURL=data:application/json;base64,","import { getPlatform } from '../platform/platform';\nimport { assertDefined, assertEqual } from '../assert/assert';\nimport { parseQRL, stringifyQRL } from '../import/qrl';\nimport { isQrl } from '../import/qrl-class';\nimport { getContext } from '../props/props';\nimport { getDocument } from '../util/dom';\nimport { isNode } from '../util/element';\nimport { logDebug, logError, logWarn } from '../util/log';\nimport { ELEMENT_ID, ELEMENT_ID_PREFIX, QContainerAttr, QHostAttr, QObjAttr, QSeqAttr, } from '../util/markers';\nimport { qDev } from '../util/qdev';\nimport { getProxyMap, isConnected, QOjectSubsSymbol, QOjectTargetSymbol, shouldSerialize, _restoreQObject, } from './q-object';\nimport { destroyWatch, isWatchDescriptor, WatchFlags } from '../watch/watch.public';\nexport const UNDEFINED_PREFIX = '\\u0010';\nexport const QRL_PREFIX = '\\u0011';\nexport const DOCUMENT_PREFIX = '\\u0012';\nexport function resumeContainer(containerEl) {\n    if (!isContainer(containerEl)) {\n        logWarn('Skipping hydration because parent element is not q:container');\n        return;\n    }\n    const doc = getDocument(containerEl);\n    const isDocElement = containerEl === doc.documentElement;\n    const parentJSON = isDocElement ? doc.body : containerEl;\n    const script = getQwikJSON(parentJSON);\n    if (!script) {\n        logWarn('Skipping hydration qwik/json metadata was not found.');\n        return;\n    }\n    script.remove();\n    const map = getProxyMap(doc);\n    const meta = JSON.parse(script.textContent || '{}');\n    // Collect all elements\n    const elements = new Map();\n    getNodesInScope(containerEl, hasQId).forEach((el) => {\n        const id = el.getAttribute(ELEMENT_ID);\n        elements.set(ELEMENT_ID_PREFIX + id, el);\n    });\n    const getObject = (id) => {\n        return getObjectImpl(id, elements, meta.objs, map);\n    };\n    // Revive proxies with subscriptions into the proxymap\n    reviveValues(meta.objs, meta.subs, getObject, map, parentJSON);\n    // Rebuild target objects\n    for (const obj of meta.objs) {\n        reviveNestedObjects(obj, getObject);\n    }\n    // Walk all elements with q:obj and resume their state\n    getNodesInScope(containerEl, hasQObj).forEach((el) => {\n        const qobj = el.getAttribute(QObjAttr);\n        const seq = el.getAttribute(QSeqAttr);\n        const host = el.getAttribute(QHostAttr);\n        const ctx = getContext(el);\n        // Restore captured objets\n        qobj.split(' ').forEach((part) => {\n            if (part !== '') {\n                const obj = getObject(part);\n                ctx.refMap.add(obj);\n            }\n            else if (qDev) {\n                logError('QObj contains empty ref');\n            }\n        });\n        // Restore sequence scoping\n        ctx.seq = seq.split(' ').map((part) => strToInt(part));\n        if (host) {\n            const [props, renderQrl] = host.split(' ').map(strToInt);\n            assertDefined(props);\n            assertDefined(renderQrl);\n            ctx.props = ctx.refMap.get(props);\n            ctx.renderQrl = ctx.refMap.get(renderQrl);\n        }\n    });\n    containerEl.setAttribute(QContainerAttr, 'resumed');\n    logDebug('Container resumed');\n}\nexport function snapshotState(containerEl) {\n    const doc = getDocument(containerEl);\n    const proxyMap = getProxyMap(doc);\n    const objSet = new Set();\n    const platform = getPlatform(doc);\n    const elementToIndex = new Map();\n    // Collect all qObjected around the DOM\n    const elements = getNodesInScope(containerEl, hasQObj);\n    elements.forEach((node) => {\n        const ctx = getContext(node);\n        const qMap = ctx.refMap;\n        qMap.array.forEach((v) => {\n            collectValue(v, objSet, doc);\n        });\n    });\n    // Convert objSet to array\n    const objs = Array.from(objSet);\n    objs.sort((a, b) => {\n        const isProxyA = proxyMap.has(a) ? 0 : 1;\n        const isProxyB = proxyMap.has(b) ? 0 : 1;\n        return isProxyA - isProxyB;\n    });\n    const objToId = new Map();\n    let count = 0;\n    for (const obj of objs) {\n        if (isWatchDescriptor(obj)) {\n            destroyWatch(obj);\n            if (qDev) {\n                if (obj.f & WatchFlags.IsDirty) {\n                    logWarn('Serializing dirty watch. Looks like an internal error.');\n                }\n                if (!isConnected(obj)) {\n                    logWarn('Serializing disconneted watch. Looks like an internal error.');\n                }\n            }\n        }\n        objToId.set(obj, count);\n        count++;\n    }\n    function getElementID(el) {\n        let id = elementToIndex.get(el);\n        if (id === undefined) {\n            if (el.isConnected) {\n                id = intToStr(elementToIndex.size);\n                el.setAttribute(ELEMENT_ID, id);\n                id = ELEMENT_ID_PREFIX + id;\n            }\n            else {\n                id = null;\n            }\n            elementToIndex.set(el, id);\n        }\n        return id;\n    }\n    function getObjId(obj) {\n        if (obj !== null && typeof obj === 'object') {\n            const target = obj[QOjectTargetSymbol];\n            const id = objToId.get(normalizeObj(target ?? obj, doc));\n            if (id !== undefined) {\n                const proxySuffix = target ? '!' : '';\n                return intToStr(id) + proxySuffix;\n            }\n            if (!target && isNode(obj)) {\n                if (obj.nodeType === 1) {\n                    return getElementID(obj);\n                }\n                else {\n                    logError('Can not serialize a HTML Node that is not an Element', obj);\n                    return null;\n                }\n            }\n        }\n        else {\n            const id = objToId.get(normalizeObj(obj, doc));\n            if (id !== undefined) {\n                return intToStr(id);\n            }\n        }\n        return null;\n    }\n    const subs = objs\n        .map((obj) => {\n        const subs = proxyMap.get(obj)?.[QOjectSubsSymbol];\n        if (subs) {\n            return Object.fromEntries(Array.from(subs.entries()).map(([sub, set]) => {\n                const id = getObjId(sub);\n                if (id !== null) {\n                    return [id, set ? Array.from(set) : null];\n                }\n                else {\n                    return [undefined, undefined];\n                }\n            }));\n        }\n        else {\n            return null;\n        }\n    })\n        .filter((a) => !!a);\n    const serialize = (value) => {\n        return getObjId(value) ?? value;\n    };\n    const qrlSerializeOptions = {\n        platform,\n        getObjId,\n    };\n    const convertedObjs = objs.map((obj) => {\n        if (Array.isArray(obj)) {\n            return obj.map(serialize);\n        }\n        else if (obj && typeof obj === 'object') {\n            if (isQrl(obj)) {\n                return QRL_PREFIX + stringifyQRL(obj, qrlSerializeOptions);\n            }\n            const output = {};\n            Object.entries(obj).forEach(([key, value]) => {\n                output[key] = serialize(value);\n            });\n            return output;\n        }\n        return obj;\n    });\n    // Write back to the dom\n    elements.forEach((node) => {\n        const ctx = getContext(node);\n        assertDefined(ctx);\n        const props = ctx.props;\n        const renderQrl = ctx.renderQrl;\n        const attribute = ctx.refMap.array\n            .map((obj) => {\n            const id = getObjId(obj);\n            assertDefined(id);\n            return id;\n        })\n            .join(' ');\n        node.setAttribute(QObjAttr, attribute);\n        const seq = ctx.seq.map((index) => intToStr(index)).join(' ');\n        node.setAttribute(QSeqAttr, seq);\n        if (props) {\n            const objs = [props];\n            if (renderQrl) {\n                objs.push(renderQrl);\n            }\n            node.setAttribute(QHostAttr, objs.map((obj) => ctx.refMap.indexOf(obj)).join(' '));\n        }\n    });\n    // Sanity check of serialized element\n    if (qDev) {\n        elementToIndex.forEach((value, el) => {\n            if (getDocument(el) !== doc) {\n                logWarn('element from different document', value, el.tagName);\n            }\n            if (!value) {\n                logWarn('unconnected element', el.tagName, '\\n');\n            }\n        });\n    }\n    return {\n        objs: convertedObjs,\n        subs,\n    };\n}\nexport function getQwikJSON(parentElm) {\n    let child = parentElm.lastElementChild;\n    while (child) {\n        if (child.tagName === 'SCRIPT' && child.getAttribute('type') === 'qwik/json') {\n            return child;\n        }\n        child = child.previousElementSibling;\n    }\n    return undefined;\n}\nexport function getNodesInScope(parent, predicate) {\n    const nodes = [];\n    walkNodes(nodes, parent, predicate);\n    return nodes;\n}\nexport function walkNodes(nodes, parent, predicate) {\n    let child = parent.firstElementChild;\n    while (child) {\n        if (!isContainer(child)) {\n            if (predicate(child)) {\n                nodes.push(child);\n            }\n            walkNodes(nodes, child, predicate);\n        }\n        child = child.nextElementSibling;\n    }\n}\nfunction reviveValues(objs, subs, getObject, map, containerEl) {\n    for (let i = 0; i < objs.length; i++) {\n        const value = objs[i];\n        if (typeof value === 'string') {\n            if (value === UNDEFINED_PREFIX) {\n                objs[i] = undefined;\n            }\n            else if (value === DOCUMENT_PREFIX) {\n                objs[i] = getDocument(containerEl);\n            }\n            else if (value.startsWith(QRL_PREFIX)) {\n                objs[i] = parseQRL(value.slice(1), containerEl);\n            }\n        }\n        else {\n            const sub = subs[i];\n            if (sub) {\n                const converted = new Map();\n                Object.entries(sub).forEach((entry) => {\n                    const el = getObject(entry[0]);\n                    if (!el) {\n                        logWarn('QWIK can not revive subscriptions because of missing element ID', entry, value);\n                        return;\n                    }\n                    const set = entry[1] === null ? null : new Set(entry[1]);\n                    converted.set(el, set);\n                });\n                _restoreQObject(value, map, converted);\n            }\n        }\n    }\n}\nfunction reviveNestedObjects(obj, getObject) {\n    if (obj && typeof obj == 'object') {\n        if (isQrl(obj)) {\n            if (obj.capture && obj.capture.length > 0) {\n                obj.captureRef = obj.capture.map(getObject);\n                obj.capture = null;\n            }\n            return;\n        }\n        else if (Array.isArray(obj)) {\n            for (let i = 0; i < obj.length; i++) {\n                const value = obj[i];\n                if (typeof value == 'string') {\n                    obj[i] = getObject(value);\n                }\n                else {\n                    reviveNestedObjects(value, getObject);\n                }\n            }\n        }\n        else if (Object.getPrototypeOf(obj) === Object.prototype) {\n            for (const key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    const value = obj[key];\n                    if (typeof value == 'string') {\n                        obj[key] = getObject(value);\n                    }\n                    else {\n                        reviveNestedObjects(value, getObject);\n                    }\n                }\n            }\n        }\n    }\n}\nfunction getObjectImpl(id, elements, objs, map) {\n    if (id.startsWith(ELEMENT_ID_PREFIX)) {\n        assertEqual(elements.has(id), true);\n        return elements.get(id);\n    }\n    const index = strToInt(id);\n    assertEqual(objs.length > index, true);\n    const obj = objs[index];\n    const needsProxy = id.endsWith('!');\n    if (needsProxy) {\n        const finalObj = map.get(obj);\n        assertDefined(finalObj);\n        return finalObj;\n    }\n    return obj;\n}\nfunction normalizeObj(obj, doc) {\n    if (obj === doc) {\n        return DOCUMENT_PREFIX;\n    }\n    if (obj === undefined || !shouldSerialize(obj)) {\n        return UNDEFINED_PREFIX;\n    }\n    if (obj && typeof obj === 'object') {\n        const value = obj[QOjectTargetSymbol] ?? obj;\n        return value;\n    }\n    return obj;\n}\nfunction collectValue(obj, seen, doc) {\n    const handled = collectQObjects(obj, seen, doc);\n    if (!handled) {\n        seen.add(normalizeObj(obj, doc));\n    }\n}\nfunction collectQrl(obj, seen, doc) {\n    seen.add(normalizeObj(obj, doc));\n    if (obj.captureRef) {\n        obj.captureRef.forEach((obj) => collectValue(obj, seen, doc));\n    }\n}\nfunction collectQObjects(obj, seen, doc) {\n    if (obj != null) {\n        if (typeof obj === 'object') {\n            if (!obj[QOjectTargetSymbol] && isNode(obj)) {\n                return obj.nodeType === 1;\n            }\n            if (isQrl(obj)) {\n                collectQrl(obj, seen, doc);\n                return true;\n            }\n            obj = normalizeObj(obj, doc);\n        }\n        if (typeof obj === 'object') {\n            if (seen.has(obj))\n                return true;\n            seen.add(obj);\n            if (Array.isArray(obj)) {\n                for (let i = 0; i < obj.length; i++) {\n                    collectQObjects(obj[i], seen, doc);\n                }\n            }\n            else {\n                for (const key in obj) {\n                    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                        collectQObjects(obj[key], seen, doc);\n                    }\n                }\n            }\n            return true;\n        }\n        if (typeof obj === 'string') {\n            seen.add(obj);\n            return true;\n        }\n    }\n    return false;\n}\nexport function isProxy(obj) {\n    return obj !== null && typeof obj === 'object' && QOjectTargetSymbol in obj;\n}\nexport function isContainer(el) {\n    return el.hasAttribute(QContainerAttr);\n}\nfunction hasQObj(el) {\n    return el.hasAttribute(QObjAttr);\n}\nfunction hasQId(el) {\n    return el.hasAttribute(ELEMENT_ID);\n}\nexport const intToStr = (nu) => {\n    return nu.toString(36);\n};\nexport const strToInt = (nu) => {\n    return parseInt(nu, 36);\n};\n//# sourceMappingURL=data:application/json;base64,","import { QObjAttr } from '../util/markers';\nexport function newQObjectMap(element) {\n    const array = [];\n    let added = element.hasAttribute(QObjAttr);\n    return {\n        array,\n        get(index) {\n            return array[index];\n        },\n        indexOf(obj) {\n            const index = array.indexOf(obj);\n            return index === -1 ? undefined : index;\n        },\n        add(object) {\n            const index = array.indexOf(object);\n            if (index === -1) {\n                array.push(object);\n                if (!added) {\n                    element.setAttribute(QObjAttr, '');\n                    added = true;\n                }\n                return array.length - 1;\n            }\n            return index;\n        },\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvcHMtb2JqLW1hcC5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvcXdpay9zcmMvY29yZS9wcm9wcy9wcm9wcy1vYmotbWFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQVMzQyxNQUFNLFVBQVUsYUFBYSxDQUFDLE9BQWdCO0lBQzVDLE1BQU0sS0FBSyxHQUFtQixFQUFFLENBQUM7SUFDakMsSUFBSSxLQUFLLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUUzQyxPQUFPO1FBQ0wsS0FBSztRQUNMLEdBQUcsQ0FBQyxLQUFhO1lBQ2YsT0FBTyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDdEIsQ0FBQztRQUNELE9BQU8sQ0FBQyxHQUFXO1lBQ2pCLE1BQU0sS0FBSyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDakMsT0FBTyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1FBQzFDLENBQUM7UUFDRCxHQUFHLENBQUMsTUFBb0I7WUFDdEIsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUNwQyxJQUFJLEtBQUssS0FBSyxDQUFDLENBQUMsRUFBRTtnQkFDaEIsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztnQkFDbkIsSUFBSSxDQUFDLEtBQUssRUFBRTtvQkFDVixPQUFPLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQztvQkFDbkMsS0FBSyxHQUFHLElBQUksQ0FBQztpQkFDZDtnQkFDRCxPQUFPLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO2FBQ3pCO1lBQ0QsT0FBTyxLQUFLLENBQUM7UUFDZixDQUFDO0tBQ1ksQ0FBQztBQUNsQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBRT2JqZWN0IH0gZnJvbSAnLi4vb2JqZWN0L3Etb2JqZWN0JztcbmltcG9ydCB7IFFPYmpBdHRyIH0gZnJvbSAnLi4vdXRpbC9tYXJrZXJzJztcblxuZXhwb3J0IGludGVyZmFjZSBRT2JqZWN0TWFwIHtcbiAgYWRkKHFPYmplY3Q6IFFPYmplY3Q8YW55Pik6IG51bWJlcjtcbiAgZ2V0KGluZGV4OiBudW1iZXIpOiBRT2JqZWN0PGFueT4gfCB1bmRlZmluZWQ7XG4gIGluZGV4T2Yob2JqZWN0OiBRT2JqZWN0PGFueT4pOiBudW1iZXIgfCB1bmRlZmluZWQ7XG4gIGFycmF5OiBRT2JqZWN0PGFueT5bXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG5ld1FPYmplY3RNYXAoZWxlbWVudDogRWxlbWVudCk6IFFPYmplY3RNYXAge1xuICBjb25zdCBhcnJheTogUU9iamVjdDxhbnk+W10gPSBbXTtcbiAgbGV0IGFkZGVkID0gZWxlbWVudC5oYXNBdHRyaWJ1dGUoUU9iakF0dHIpO1xuXG4gIHJldHVybiB7XG4gICAgYXJyYXksXG4gICAgZ2V0KGluZGV4OiBudW1iZXIpOiBRT2JqZWN0PGFueT4gfCB1bmRlZmluZWQge1xuICAgICAgcmV0dXJuIGFycmF5W2luZGV4XTtcbiAgICB9LFxuICAgIGluZGV4T2Yob2JqOiBzdHJpbmcpOiBudW1iZXIgfCB1bmRlZmluZWQge1xuICAgICAgY29uc3QgaW5kZXggPSBhcnJheS5pbmRleE9mKG9iaik7XG4gICAgICByZXR1cm4gaW5kZXggPT09IC0xID8gdW5kZWZpbmVkIDogaW5kZXg7XG4gICAgfSxcbiAgICBhZGQob2JqZWN0OiBRT2JqZWN0PGFueT4pIHtcbiAgICAgIGNvbnN0IGluZGV4ID0gYXJyYXkuaW5kZXhPZihvYmplY3QpO1xuICAgICAgaWYgKGluZGV4ID09PSAtMSkge1xuICAgICAgICBhcnJheS5wdXNoKG9iamVjdCk7XG4gICAgICAgIGlmICghYWRkZWQpIHtcbiAgICAgICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZShRT2JqQXR0ciwgJycpO1xuICAgICAgICAgIGFkZGVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXJyYXkubGVuZ3RoIC0gMTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBpbmRleDtcbiAgICB9LFxuICB9IGFzIFFPYmplY3RNYXA7XG59XG4iXX0=","export function fromCamelToKebabCase(text) {\n    return text.replace(/([A-Z])/g, '-$1').toLowerCase();\n}\nexport function fromKebabToCamelCase(text) {\n    return text.replace(/-./g, (x) => x[1].toUpperCase());\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FzZS5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvcXdpay9zcmMvY29yZS91dGlsL2Nhc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxVQUFVLG9CQUFvQixDQUFDLElBQVk7SUFDL0MsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztBQUN2RCxDQUFDO0FBRUQsTUFBTSxVQUFVLG9CQUFvQixDQUFDLElBQVk7SUFDL0MsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7QUFDeEQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBmcm9tQ2FtZWxUb0tlYmFiQ2FzZSh0ZXh0OiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gdGV4dC5yZXBsYWNlKC8oW0EtWl0pL2csICctJDEnKS50b0xvd2VyQ2FzZSgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZnJvbUtlYmFiVG9DYW1lbENhc2UodGV4dDogc3RyaW5nKTogc3RyaW5nIHtcbiAgcmV0dXJuIHRleHQucmVwbGFjZSgvLS4vZywgKHgpID0+IHhbMV0udG9VcHBlckNhc2UoKSk7XG59XG4iXX0=","export function stringify(value) {\n    return value == null ? null : String(value);\n}\nexport function debugStringify(value) {\n    if (value != null && typeof value == 'object') {\n        return String(value.constructor.name) + '\\n' + safeJSONStringify(value);\n    }\n    return String(value);\n}\nfunction safeJSONStringify(value) {\n    try {\n        return JSON.stringify(value, null, '  ');\n    }\n    catch (e) {\n        return String(e);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaW5naWZ5LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL3V0aWwvc3RyaW5naWZ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sVUFBVSxTQUFTLENBQUMsS0FBVTtJQUNsQyxPQUFPLEtBQUssSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzlDLENBQUM7QUFFRCxNQUFNLFVBQVUsY0FBYyxDQUFDLEtBQVU7SUFDdkMsSUFBSSxLQUFLLElBQUksSUFBSSxJQUFJLE9BQU8sS0FBSyxJQUFJLFFBQVEsRUFBRTtRQUM3QyxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksR0FBRyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUN6RTtJQUNELE9BQU8sTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3ZCLENBQUM7QUFFRCxTQUFTLGlCQUFpQixDQUFDLEtBQVU7SUFDbkMsSUFBSTtRQUNGLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0tBQzFDO0lBQUMsT0FBTyxDQUFDLEVBQUU7UUFDVixPQUFPLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNsQjtBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gc3RyaW5naWZ5KHZhbHVlOiBhbnkpOiBzdHJpbmcgfCBudWxsIHtcbiAgcmV0dXJuIHZhbHVlID09IG51bGwgPyBudWxsIDogU3RyaW5nKHZhbHVlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRlYnVnU3RyaW5naWZ5KHZhbHVlOiBhbnkpOiBzdHJpbmcge1xuICBpZiAodmFsdWUgIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gU3RyaW5nKHZhbHVlLmNvbnN0cnVjdG9yLm5hbWUpICsgJ1xcbicgKyBzYWZlSlNPTlN0cmluZ2lmeSh2YWx1ZSk7XG4gIH1cbiAgcmV0dXJuIFN0cmluZyh2YWx1ZSk7XG59XG5cbmZ1bmN0aW9uIHNhZmVKU09OU3RyaW5naWZ5KHZhbHVlOiBhbnkpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkodmFsdWUsIG51bGwsICcgICcpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIFN0cmluZyhlKTtcbiAgfVxufVxuIl19","import { getPlatform } from '../platform/platform';\nimport { parseQRL, stringifyQRL } from '../import/qrl';\nimport { isSameQRL } from '../import/qrl-class';\nimport { qDeflate } from '../json/q-json';\nimport { fromCamelToKebabCase } from '../util/case';\nimport { EMPTY_ARRAY } from '../util/flyweight';\nimport { isPromise } from '../util/promises';\nimport { debugStringify } from '../util/stringify';\nimport { getDocument } from '../util/dom';\nimport { setAttribute } from '../render/cursor';\nconst ON_PROP_REGEX = /^(window:|document:|)on([A-Z]|-.).*Qrl$/;\nconst ON$_PROP_REGEX = /^(window:|document:|)on([A-Z]|-.).*\\$$/;\nexport function isOnProp(prop) {\n    return ON_PROP_REGEX.test(prop);\n}\nexport function isOn$Prop(prop) {\n    return ON$_PROP_REGEX.test(prop);\n}\nexport function qPropWriteQRL(rctx, ctx, prop, value) {\n    if (!value) {\n        return;\n    }\n    const existingQRLs = getExistingQRLs(ctx, prop);\n    const newQRLs = Array.isArray(value) ? value : [value];\n    for (const value of newQRLs) {\n        const cp = value.copy();\n        cp.setContainer(ctx.element);\n        const capture = cp.capture;\n        if (capture == null) {\n            // we need to serialize the lexical scope references\n            const captureRef = cp.captureRef;\n            cp.capture =\n                captureRef && captureRef.length ? captureRef.map((ref) => qDeflate(ref, ctx)) : EMPTY_ARRAY;\n        }\n        // Important we modify the array as it is cached.\n        for (let i = 0; i < existingQRLs.length; i++) {\n            const qrl = existingQRLs[i];\n            if (isSameQRL(qrl, cp)) {\n                existingQRLs.splice(i, 1);\n                i--;\n            }\n        }\n        existingQRLs.push(cp);\n    }\n    const kebabProp = fromCamelToKebabCase(prop);\n    const newValue = serializeQRLs(existingQRLs, ctx);\n    if (ctx.element.getAttribute(kebabProp) !== newValue) {\n        if (rctx) {\n            setAttribute(rctx, ctx.element, kebabProp, newValue);\n        }\n        else {\n            ctx.element.setAttribute(kebabProp, newValue);\n        }\n    }\n}\nexport function closureRefError(ref) {\n    return new Error(`QWIK-ERROR: A closure can only lexically capture 'QObject' and 'QProp' const references. Got: ` +\n        debugStringify(ref));\n}\nexport function getExistingQRLs(ctx, prop) {\n    const key = 'event:' + prop;\n    let parts = ctx.cache.get(key);\n    if (!parts) {\n        const attrName = fromCamelToKebabCase(prop);\n        parts = [];\n        (ctx.element.getAttribute(attrName) || '').split('\\n').forEach((qrl) => {\n            if (qrl) {\n                parts.push(parseQRL(qrl, ctx.element));\n            }\n        });\n        ctx.cache.set(key, parts);\n    }\n    return parts;\n}\nfunction serializeQRLs(existingQRLs, ctx) {\n    const platform = getPlatform(getDocument(ctx.element));\n    const element = ctx.element;\n    const opts = {\n        platform,\n        element,\n    };\n    return existingQRLs\n        .map((qrl) => (isPromise(qrl) ? '' : stringifyQRL(qrl, opts)))\n        .filter((v) => !!v)\n        .join('\\n');\n}\n//# sourceMappingURL=data:application/json;base64,","import { getDocument } from '../util/dom';\nimport { isDocument } from '../util/element';\nimport { QContainerAttr } from '../util/markers';\nimport { qDev } from '../util/qdev';\nimport { snapshotState } from './store';\n// <docs markdown=\"../readme.md#pauseContainer\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#pauseContainer instead)\n/**\n * Serialize the current state of the application into DOM\n *\n * @alpha\n */\n// </docs>\nexport function pauseContainer(elmOrDoc) {\n    const doc = getDocument(elmOrDoc);\n    const containerEl = isDocument(elmOrDoc) ? elmOrDoc.documentElement : elmOrDoc;\n    const parentJSON = isDocument(elmOrDoc) ? elmOrDoc.body : containerEl;\n    const data = snapshotState(containerEl);\n    const script = doc.createElement('script');\n    script.setAttribute('type', 'qwik/json');\n    script.textContent = JSON.stringify(data, undefined, qDev ? '  ' : undefined);\n    parentJSON.appendChild(script);\n    containerEl.setAttribute(QContainerAttr, 'paused');\n    return data;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmUucHVibGljLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL29iamVjdC9zdG9yZS5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMxQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDN0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDcEMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUd4QyxnREFBZ0Q7QUFDaEQseUNBQXlDO0FBQ3pDLDZDQUE2QztBQUM3Qzs7OztHQUlHO0FBQ0gsVUFBVTtBQUNWLE1BQU0sVUFBVSxjQUFjLENBQUMsUUFBNEI7SUFDekQsTUFBTSxHQUFHLEdBQUcsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xDLE1BQU0sV0FBVyxHQUFHLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDO0lBQy9FLE1BQU0sVUFBVSxHQUFHLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDO0lBQ3RFLE1BQU0sSUFBSSxHQUFHLGFBQWEsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN4QyxNQUFNLE1BQU0sR0FBRyxHQUFHLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzNDLE1BQU0sQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ3pDLE1BQU0sQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM5RSxVQUFVLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQy9CLFdBQVcsQ0FBQyxZQUFZLENBQUMsY0FBYyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ25ELE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldERvY3VtZW50IH0gZnJvbSAnLi4vdXRpbC9kb20nO1xuaW1wb3J0IHsgaXNEb2N1bWVudCB9IGZyb20gJy4uL3V0aWwvZWxlbWVudCc7XG5pbXBvcnQgeyBRQ29udGFpbmVyQXR0ciB9IGZyb20gJy4uL3V0aWwvbWFya2Vycyc7XG5pbXBvcnQgeyBxRGV2IH0gZnJvbSAnLi4vdXRpbC9xZGV2JztcbmltcG9ydCB7IHNuYXBzaG90U3RhdGUgfSBmcm9tICcuL3N0b3JlJztcbmltcG9ydCB0eXBlIHsgU25hcHNob3RTdGF0ZSB9IGZyb20gJy4vc3RvcmUnO1xuXG4vLyA8ZG9jcyBtYXJrZG93bj1cIi4uL3JlYWRtZS5tZCNwYXVzZUNvbnRhaW5lclwiPlxuLy8gISFETyBOT1QgRURJVCBUSElTIENPTU1FTlQgRElSRUNUTFkhISFcbi8vIChlZGl0IC4uL3JlYWRtZS5tZCNwYXVzZUNvbnRhaW5lciBpbnN0ZWFkKVxuLyoqXG4gKiBTZXJpYWxpemUgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGFwcGxpY2F0aW9uIGludG8gRE9NXG4gKlxuICogQGFscGhhXG4gKi9cbi8vIDwvZG9jcz5cbmV4cG9ydCBmdW5jdGlvbiBwYXVzZUNvbnRhaW5lcihlbG1PckRvYzogRWxlbWVudCB8IERvY3VtZW50KSB7XG4gIGNvbnN0IGRvYyA9IGdldERvY3VtZW50KGVsbU9yRG9jKTtcbiAgY29uc3QgY29udGFpbmVyRWwgPSBpc0RvY3VtZW50KGVsbU9yRG9jKSA/IGVsbU9yRG9jLmRvY3VtZW50RWxlbWVudCA6IGVsbU9yRG9jO1xuICBjb25zdCBwYXJlbnRKU09OID0gaXNEb2N1bWVudChlbG1PckRvYykgPyBlbG1PckRvYy5ib2R5IDogY29udGFpbmVyRWw7XG4gIGNvbnN0IGRhdGEgPSBzbmFwc2hvdFN0YXRlKGNvbnRhaW5lckVsKTtcbiAgY29uc3Qgc2NyaXB0ID0gZG9jLmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICBzY3JpcHQuc2V0QXR0cmlidXRlKCd0eXBlJywgJ3F3aWsvanNvbicpO1xuICBzY3JpcHQudGV4dENvbnRlbnQgPSBKU09OLnN0cmluZ2lmeShkYXRhLCB1bmRlZmluZWQsIHFEZXYgPyAnICAnIDogdW5kZWZpbmVkKTtcbiAgcGFyZW50SlNPTi5hcHBlbmRDaGlsZChzY3JpcHQpO1xuICBjb250YWluZXJFbC5zZXRBdHRyaWJ1dGUoUUNvbnRhaW5lckF0dHIsICdwYXVzZWQnKTtcbiAgcmV0dXJuIGRhdGE7XG59XG5cbmV4cG9ydCB0eXBlIHsgU25hcHNob3RTdGF0ZSB9O1xuIl19","import { QError, qError } from '../error/error';\nimport { getProxyMap, readWriteProxy } from '../object/q-object';\nimport { resumeContainer } from '../object/store';\nimport { getDocument } from '../util/dom';\nimport { newQObjectMap } from './props-obj-map';\nimport { qPropWriteQRL } from './props-on';\nimport { QContainerAttr } from '../util/markers';\nimport { destroyWatch, isWatchDescriptor } from '../watch/watch.public';\nimport { pauseContainer } from '../object/store.public';\nimport { getRenderingState } from '../render/notify-render';\nimport { qDev } from '../util/qdev';\nError.stackTraceLimit = 9999;\nconst Q_CTX = '__ctx__';\nexport function resumeIfNeeded(containerEl) {\n    const isResumed = containerEl.getAttribute(QContainerAttr);\n    if (isResumed === 'paused') {\n        resumeContainer(containerEl);\n        if (qDev) {\n            appendQwikDevTools(containerEl);\n        }\n    }\n}\nexport function appendQwikDevTools(containerEl) {\n    containerEl['qwik'] = {\n        pause: () => pauseContainer(containerEl),\n        renderState: getRenderingState(containerEl),\n    };\n}\nexport function tryGetContext(element) {\n    return element[Q_CTX];\n}\nexport function getContext(element) {\n    let ctx = tryGetContext(element);\n    if (!ctx) {\n        const cache = new Map();\n        element[Q_CTX] = ctx = {\n            element,\n            cache,\n            refMap: newQObjectMap(element),\n            dirty: false,\n            seq: [],\n            props: undefined,\n            renderQrl: undefined,\n            component: undefined,\n        };\n    }\n    return ctx;\n}\nexport function cleanupContext(ctx) {\n    const el = ctx.element;\n    ctx.refMap.array.forEach((obj) => {\n        if (isWatchDescriptor(obj)) {\n            if (obj.el === el) {\n                destroyWatch(obj);\n            }\n        }\n        ctx.component = undefined;\n        ctx.renderQrl = undefined;\n        ctx.seq = [];\n        ctx.cache.clear();\n        ctx.dirty = false;\n        ctx.refMap.array.length = 0;\n    });\n    el[Q_CTX] = undefined;\n}\nconst PREFIXES = ['document:on', 'window:on', 'on'];\nconst SCOPED = ['on-document', 'on-window', 'on'];\nexport function normalizeOnProp(prop) {\n    let scope = 'on';\n    for (let i = 0; i < PREFIXES.length; i++) {\n        const prefix = PREFIXES[i];\n        if (prop.startsWith(prefix)) {\n            scope = SCOPED[i];\n            prop = prop.slice(prefix.length);\n        }\n    }\n    if (prop.startsWith('-')) {\n        prop = prop.slice(1);\n    }\n    else {\n        prop = prop.toLowerCase();\n    }\n    return `${scope}:${prop}`;\n}\nexport function setEvent(rctx, ctx, prop, value) {\n    qPropWriteQRL(rctx, ctx, normalizeOnProp(prop), value);\n}\nexport function getProps(ctx) {\n    if (!ctx.props) {\n        ctx.props = readWriteProxy({}, getProxyMap(getDocument(ctx.element)));\n        ctx.refMap.add(ctx.props);\n    }\n    return ctx.props;\n}\n/**\n * Turn an `Array` or object literal into a `class` or `style`\n *\n * @param obj `string`, `Array` or object literal\n * @param isClass `true` if expecting `class` output\n * @returns `string`\n */\nexport function stringifyClassOrStyle(obj, isClass) {\n    if (obj == null)\n        return '';\n    if (typeof obj == 'object') {\n        let text = '';\n        let sep = '';\n        if (Array.isArray(obj)) {\n            if (!isClass) {\n                throw qError(QError.Render_unsupportedFormat_obj_attr, obj, 'style');\n            }\n            for (let i = 0; i < obj.length; i++) {\n                text += sep + obj[i];\n                sep = ' ';\n            }\n        }\n        else {\n            for (const key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    const value = obj[key];\n                    text += isClass ? (value ? sep + key : '') : sep + key + ':' + value;\n                    sep = isClass ? ' ' : ';';\n                }\n            }\n        }\n        return text;\n    }\n    return String(obj);\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * Place at the root of the component View to allow binding of attributes on the Host element.\n *\n * ```\n * <Host someAttr={someExpr} someAttrStatic=\"value\">\n *   View content implementation.\n * </Host>\n * ```\n *\n * Qwik requires that components have [docs/HOST_ELEMENTS.ts] so that it is possible to have\n * asynchronous loading point. Host element is not owned by the component. At times it is\n * desirable for the component to render additional attributes on the host element. `<Host>`\n * servers that purpose.\n * @public\n */\nexport const Host = { __brand__: 'host' };\n/**\n * @public\n */\nexport const SkipRerender = { __brand__: 'skip' };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG9zdC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL3F3aWsvc3JjL2NvcmUvcmVuZGVyL2pzeC9ob3N0LnB1YmxpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTs7Ozs7Ozs7Ozs7Ozs7R0FjRztBQUNILE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBbUQsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFTLENBQUM7QUFFakc7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQTBCLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBUyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBIVE1MQXR0cmlidXRlcyB9IGZyb20gJy4vdHlwZXMvanN4LWdlbmVyYXRlZCc7XG5pbXBvcnQgdHlwZSB7IEZ1bmN0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi90eXBlcy9qc3gtbm9kZSc7XG5cbi8qKlxuICogUGxhY2UgYXQgdGhlIHJvb3Qgb2YgdGhlIGNvbXBvbmVudCBWaWV3IHRvIGFsbG93IGJpbmRpbmcgb2YgYXR0cmlidXRlcyBvbiB0aGUgSG9zdCBlbGVtZW50LlxuICpcbiAqIGBgYFxuICogPEhvc3Qgc29tZUF0dHI9e3NvbWVFeHByfSBzb21lQXR0clN0YXRpYz1cInZhbHVlXCI+XG4gKiAgIFZpZXcgY29udGVudCBpbXBsZW1lbnRhdGlvbi5cbiAqIDwvSG9zdD5cbiAqIGBgYFxuICpcbiAqIFF3aWsgcmVxdWlyZXMgdGhhdCBjb21wb25lbnRzIGhhdmUgW2RvY3MvSE9TVF9FTEVNRU5UUy50c10gc28gdGhhdCBpdCBpcyBwb3NzaWJsZSB0byBoYXZlXG4gKiBhc3luY2hyb25vdXMgbG9hZGluZyBwb2ludC4gSG9zdCBlbGVtZW50IGlzIG5vdCBvd25lZCBieSB0aGUgY29tcG9uZW50LiBBdCB0aW1lcyBpdCBpc1xuICogZGVzaXJhYmxlIGZvciB0aGUgY29tcG9uZW50IHRvIHJlbmRlciBhZGRpdGlvbmFsIGF0dHJpYnV0ZXMgb24gdGhlIGhvc3QgZWxlbWVudC4gYDxIb3N0PmBcbiAqIHNlcnZlcnMgdGhhdCBwdXJwb3NlLlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgY29uc3QgSG9zdDogRnVuY3Rpb25Db21wb25lbnQ8SFRNTEF0dHJpYnV0ZXM8SFRNTEVsZW1lbnQ+PiA9IHsgX19icmFuZF9fOiAnaG9zdCcgfSBhcyBhbnk7XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgY29uc3QgU2tpcFJlcmVuZGVyOiBGdW5jdGlvbkNvbXBvbmVudDx7fT4gPSB7IF9fYnJhbmRfXzogJ3NraXAnIH0gYXMgYW55O1xuIl19","import { Host } from '../render/jsx/host.public';\nimport { getContext } from '../props/props';\nimport { smartUpdateChildren, updateProperties } from './cursor';\nexport function visitJsxNode(ctx, elm, jsxNode, isSvg) {\n    if (jsxNode === undefined) {\n        return smartUpdateChildren(ctx, elm, [], 'root', isSvg);\n    }\n    if (Array.isArray(jsxNode)) {\n        return smartUpdateChildren(ctx, elm, jsxNode.flat(), 'root', isSvg);\n    }\n    else if (jsxNode.type === Host) {\n        updateProperties(ctx, getContext(elm), jsxNode.props, isSvg);\n        return smartUpdateChildren(ctx, elm, jsxNode.children || [], 'root', isSvg);\n    }\n    else {\n        return smartUpdateChildren(ctx, elm, [jsxNode], 'root', isSvg);\n    }\n}\nexport function whileResolvingRender(...args) {\n    throw new Error('Function not implemented.' + args);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVuZGVyLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL3JlbmRlci9yZW5kZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU1QyxPQUFPLEVBQWlCLG1CQUFtQixFQUFFLGdCQUFnQixFQUFFLE1BQU0sVUFBVSxDQUFDO0FBSWhGLE1BQU0sVUFBVSxZQUFZLENBQzFCLEdBQWtCLEVBQ2xCLEdBQVksRUFDWixPQUF3QyxFQUN4QyxLQUFjO0lBRWQsSUFBSSxPQUFPLEtBQUssU0FBUyxFQUFFO1FBQ3pCLE9BQU8sbUJBQW1CLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0tBQ3pEO0lBQ0QsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQzFCLE9BQU8sbUJBQW1CLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0tBQ3JFO1NBQU0sSUFBSSxPQUFPLENBQUMsSUFBSSxLQUFLLElBQUksRUFBRTtRQUNoQyxnQkFBZ0IsQ0FBQyxHQUFHLEVBQUUsVUFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDN0QsT0FBTyxtQkFBbUIsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLE9BQU8sQ0FBQyxRQUFRLElBQUksRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztLQUM3RTtTQUFNO1FBQ0wsT0FBTyxtQkFBbUIsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLEVBQUUsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0tBQ2hFO0FBQ0gsQ0FBQztBQUVELE1BQU0sVUFBVSxvQkFBb0IsQ0FDbEMsR0FBRyxJQUF1RDtJQUUxRCxNQUFNLElBQUksS0FBSyxDQUFDLDJCQUEyQixHQUFHLElBQUksQ0FBQyxDQUFDO0FBQ3RELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIb3N0IH0gZnJvbSAnLi4vcmVuZGVyL2pzeC9ob3N0LnB1YmxpYyc7XG5pbXBvcnQgeyBnZXRDb250ZXh0IH0gZnJvbSAnLi4vcHJvcHMvcHJvcHMnO1xuaW1wb3J0IHR5cGUgeyBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJy4uL3V0aWwvdHlwZXMnO1xuaW1wb3J0IHsgUmVuZGVyQ29udGV4dCwgc21hcnRVcGRhdGVDaGlsZHJlbiwgdXBkYXRlUHJvcGVydGllcyB9IGZyb20gJy4vY3Vyc29yJztcbmltcG9ydCB0eXBlIHsgSlNYTm9kZSB9IGZyb20gJy4vanN4L3R5cGVzL2pzeC1ub2RlJztcbmV4cG9ydCB0eXBlIENvbXBvbmVudFJlbmRlclF1ZXVlID0gUHJvbWlzZTxIVE1MRWxlbWVudFtdPltdO1xuXG5leHBvcnQgZnVuY3Rpb24gdmlzaXRKc3hOb2RlKFxuICBjdHg6IFJlbmRlckNvbnRleHQsXG4gIGVsbTogRWxlbWVudCxcbiAganN4Tm9kZTogSlNYTm9kZSB8IEpTWE5vZGVbXSB8IHVuZGVmaW5lZCxcbiAgaXNTdmc6IGJvb2xlYW5cbik6IFZhbHVlT3JQcm9taXNlPHZvaWQ+IHtcbiAgaWYgKGpzeE5vZGUgPT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiBzbWFydFVwZGF0ZUNoaWxkcmVuKGN0eCwgZWxtLCBbXSwgJ3Jvb3QnLCBpc1N2Zyk7XG4gIH1cbiAgaWYgKEFycmF5LmlzQXJyYXkoanN4Tm9kZSkpIHtcbiAgICByZXR1cm4gc21hcnRVcGRhdGVDaGlsZHJlbihjdHgsIGVsbSwganN4Tm9kZS5mbGF0KCksICdyb290JywgaXNTdmcpO1xuICB9IGVsc2UgaWYgKGpzeE5vZGUudHlwZSA9PT0gSG9zdCkge1xuICAgIHVwZGF0ZVByb3BlcnRpZXMoY3R4LCBnZXRDb250ZXh0KGVsbSksIGpzeE5vZGUucHJvcHMsIGlzU3ZnKTtcbiAgICByZXR1cm4gc21hcnRVcGRhdGVDaGlsZHJlbihjdHgsIGVsbSwganN4Tm9kZS5jaGlsZHJlbiB8fCBbXSwgJ3Jvb3QnLCBpc1N2Zyk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHNtYXJ0VXBkYXRlQ2hpbGRyZW4oY3R4LCBlbG0sIFtqc3hOb2RlXSwgJ3Jvb3QnLCBpc1N2Zyk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHdoaWxlUmVzb2x2aW5nUmVuZGVyPEFSR1MgZXh0ZW5kcyBhbnlbXSwgUkVUPihcbiAgLi4uYXJnczogWy4uLkFSR1MsICguLi5hcmdzOiBSZXNvbHZlZFZhbHVlczxBUkdTPikgPT4gUkVUXVxuKTogUkVUIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdGdW5jdGlvbiBub3QgaW1wbGVtZW50ZWQuJyArIGFyZ3MpO1xufVxuXG5leHBvcnQgdHlwZSBSZXNvbHZlZFZhbHVlczxBUkdTIGV4dGVuZHMgYW55W10+ID0ge1xuICBbSyBpbiBrZXlvZiBBUkdTXTogQVJHU1tLXSBleHRlbmRzIFZhbHVlT3JQcm9taXNlPGluZmVyIFU+ID8gVSA6IEFSR1NbS107XG59O1xuIl19","export function hashCode(text, hash = 0) {\n    if (text.length === 0)\n        return hash;\n    for (let i = 0; i < text.length; i++) {\n        const chr = text.charCodeAt(i);\n        hash = (hash << 5) - hash + chr;\n        hash |= 0; // Convert to 32bit integer\n    }\n    return Number(Math.abs(hash)).toString(36);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFzaF9jb2RlLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL3V0aWwvaGFzaF9jb2RlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sVUFBVSxRQUFRLENBQUMsSUFBWSxFQUFFLE9BQWUsQ0FBQztJQUNyRCxJQUFJLElBQUksQ0FBQyxNQUFNLEtBQUssQ0FBQztRQUFFLE9BQU8sSUFBSSxDQUFDO0lBQ25DLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ3BDLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDL0IsSUFBSSxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksR0FBRyxHQUFHLENBQUM7UUFDaEMsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLDJCQUEyQjtLQUN2QztJQUNELE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDN0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBoYXNoQ29kZSh0ZXh0OiBzdHJpbmcsIGhhc2g6IG51bWJlciA9IDApIHtcbiAgaWYgKHRleHQubGVuZ3RoID09PSAwKSByZXR1cm4gaGFzaDtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB0ZXh0Lmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgY2hyID0gdGV4dC5jaGFyQ29kZUF0KGkpO1xuICAgIGhhc2ggPSAoaGFzaCA8PCA1KSAtIGhhc2ggKyBjaHI7XG4gICAgaGFzaCB8PSAwOyAvLyBDb252ZXJ0IHRvIDMyYml0IGludGVnZXJcbiAgfVxuICByZXR1cm4gTnVtYmVyKE1hdGguYWJzKGhhc2gpKS50b1N0cmluZygzNik7XG59XG4iXX0=","import { ComponentStylesPrefixContent, ComponentStylesPrefixHost } from '../util/markers';\nimport { hashCode } from '../util/hash_code';\nexport function styleKey(qStyles) {\n    return qStyles && String(hashCode(qStyles.symbol));\n}\nexport function styleHost(styleId) {\n    return styleId && ComponentStylesPrefixHost + styleId;\n}\nexport function styleContent(styleId) {\n    return styleId && ComponentStylesPrefixContent + styleId;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXJsLXN0eWxlcy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvcXdpay9zcmMvY29yZS9jb21wb25lbnQvcXJsLXN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMxRixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFPN0MsTUFBTSxVQUFVLFFBQVEsQ0FBQyxPQUFtQztJQUMxRCxPQUFPLE9BQU8sSUFBSSxNQUFNLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0FBQ3JELENBQUM7QUFPRCxNQUFNLFVBQVUsU0FBUyxDQUFDLE9BQTJCO0lBQ25ELE9BQU8sT0FBTyxJQUFJLHlCQUF5QixHQUFHLE9BQU8sQ0FBQztBQUN4RCxDQUFDO0FBT0QsTUFBTSxVQUFVLFlBQVksQ0FBQyxPQUEyQjtJQUN0RCxPQUFPLE9BQU8sSUFBSSw0QkFBNEIsR0FBRyxPQUFPLENBQUM7QUFDM0QsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgUVJMSW50ZXJuYWwgfSBmcm9tICcuLi9pbXBvcnQvcXJsLWNsYXNzJztcbmltcG9ydCB7IENvbXBvbmVudFN0eWxlc1ByZWZpeENvbnRlbnQsIENvbXBvbmVudFN0eWxlc1ByZWZpeEhvc3QgfSBmcm9tICcuLi91dGlsL21hcmtlcnMnO1xuaW1wb3J0IHsgaGFzaENvZGUgfSBmcm9tICcuLi91dGlsL2hhc2hfY29kZSc7XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgZnVuY3Rpb24gc3R5bGVLZXkocVN0eWxlczogUVJMSW50ZXJuYWw8c3RyaW5nPik6IHN0cmluZztcbmV4cG9ydCBmdW5jdGlvbiBzdHlsZUtleShxU3R5bGVzOiBRUkxJbnRlcm5hbDxzdHJpbmc+IHwgbnVsbCk6IHN0cmluZyB8IG51bGw7XG5leHBvcnQgZnVuY3Rpb24gc3R5bGVLZXkocVN0eWxlczogUVJMSW50ZXJuYWw8c3RyaW5nPiB8IG51bGwpOiBzdHJpbmcgfCBudWxsIHtcbiAgcmV0dXJuIHFTdHlsZXMgJiYgU3RyaW5nKGhhc2hDb2RlKHFTdHlsZXMuc3ltYm9sKSk7XG59XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgZnVuY3Rpb24gc3R5bGVIb3N0KHN0eWxlSWQ6IHN0cmluZyk6IHN0cmluZztcbmV4cG9ydCBmdW5jdGlvbiBzdHlsZUhvc3Qoc3R5bGVJZDogc3RyaW5nIHwgdW5kZWZpbmVkKTogc3RyaW5nIHwgdW5kZWZpbmVkO1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlSG9zdChzdHlsZUlkOiBzdHJpbmcgfCB1bmRlZmluZWQpOiBzdHJpbmcgfCB1bmRlZmluZWQge1xuICByZXR1cm4gc3R5bGVJZCAmJiBDb21wb25lbnRTdHlsZXNQcmVmaXhIb3N0ICsgc3R5bGVJZDtcbn1cblxuLyoqXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdHlsZUNvbnRlbnQoc3R5bGVJZDogc3RyaW5nKTogc3RyaW5nO1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlQ29udGVudChzdHlsZUlkOiBzdHJpbmcgfCB1bmRlZmluZWQpOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG5leHBvcnQgZnVuY3Rpb24gc3R5bGVDb250ZW50KHN0eWxlSWQ6IHN0cmluZyB8IHVuZGVmaW5lZCk6IHN0cmluZyB8IHVuZGVmaW5lZCB7XG4gIHJldHVybiBzdHlsZUlkICYmIENvbXBvbmVudFN0eWxlc1ByZWZpeENvbnRlbnQgKyBzdHlsZUlkO1xufVxuIl19","import { qDev } from '../../util/qdev';\nimport { Host, SkipRerender } from './host.public';\nimport { EMPTY_ARRAY } from '../../util/flyweight';\nimport { logWarn } from '../../util/log';\n/**\n * @public\n */\nexport function jsx(type, props, key) {\n    return new JSXNodeImpl(type, props, key);\n}\nexport class JSXNodeImpl {\n    constructor(type, props, key = null) {\n        this.type = type;\n        this.props = props;\n        this.children = EMPTY_ARRAY;\n        this.text = undefined;\n        this.key = null;\n        if (key != null) {\n            this.key = String(key);\n        }\n        if (props) {\n            const children = processNode(props.children);\n            if (children !== undefined) {\n                if (Array.isArray(children)) {\n                    this.children = children;\n                }\n                else {\n                    this.children = [children];\n                }\n            }\n        }\n    }\n}\nexport function processNode(node) {\n    if (node == null || typeof node === 'boolean') {\n        return undefined;\n    }\n    if (isJSXNode(node)) {\n        if (node.type === Host || node.type === SkipRerender) {\n            return node;\n        }\n        else if (typeof node.type === 'function') {\n            return processNode(node.type({ ...node.props, children: node.children }, node.key));\n        }\n        else {\n            return node;\n        }\n    }\n    else if (Array.isArray(node)) {\n        return node.flatMap(processNode).filter((e) => e != null);\n    }\n    else if (typeof node === 'string' || typeof node === 'number' || typeof node === 'boolean') {\n        const newNode = new JSXNodeImpl('#text', null, null);\n        newNode.text = String(node);\n        return newNode;\n    }\n    else {\n        logWarn('Unvalid node, skipping');\n        return undefined;\n    }\n}\nexport const isJSXNode = (n) => {\n    if (qDev) {\n        if (n instanceof JSXNodeImpl) {\n            return true;\n        }\n        if (n && typeof n === 'object' && n.constructor.name === JSXNodeImpl.name) {\n            throw new Error(`Duplicate implementations of \"JSXNodeImpl\" found`);\n        }\n        return false;\n    }\n    else {\n        return n instanceof JSXNodeImpl;\n    }\n};\n/**\n * @public\n */\nexport const Comment = (props) => {\n    const newNode = new JSXNodeImpl('#comment', null, null);\n    newNode.text = props.text || '';\n    return newNode;\n};\n/**\n * @public\n */\nexport const Fragment = (props) => props.children;\nexport { jsx as jsxs, jsx as jsxDEV };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianN4LXJ1bnRpbWUuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL3F3aWsvc3JjL2NvcmUvcmVuZGVyL2pzeC9qc3gtcnVudGltZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdkMsT0FBTyxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbkQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUV6Qzs7R0FFRztBQUNILE1BQU0sVUFBVSxHQUFHLENBQ2pCLElBQU8sRUFDUCxLQUFZLEVBQ1osR0FBcUI7SUFFckIsT0FBTyxJQUFJLFdBQVcsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLEdBQUcsQ0FBUSxDQUFDO0FBQ2xELENBQUM7QUFFRCxNQUFNLE9BQU8sV0FBVztJQUt0QixZQUNTLElBQU8sRUFDUCxLQUFpQyxFQUN4QyxNQUE4QixJQUFJO1FBRjNCLFNBQUksR0FBSixJQUFJLENBQUc7UUFDUCxVQUFLLEdBQUwsS0FBSyxDQUE0QjtRQU4xQyxhQUFRLEdBQWMsV0FBVyxDQUFDO1FBQ2xDLFNBQUksR0FBd0IsU0FBUyxDQUFDO1FBQ3RDLFFBQUcsR0FBa0IsSUFBSSxDQUFDO1FBT3hCLElBQUksR0FBRyxJQUFJLElBQUksRUFBRTtZQUNmLElBQUksQ0FBQyxHQUFHLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ3hCO1FBQ0QsSUFBSSxLQUFLLEVBQUU7WUFDVCxNQUFNLFFBQVEsR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQzdDLElBQUksUUFBUSxLQUFLLFNBQVMsRUFBRTtnQkFDMUIsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFO29CQUMzQixJ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bXBvcnQgdHlwZSB7IEZ1bmN0aW9uQ29tcG9uZW50LCBKU1hOb2RlIH0gZnJvbSAnLi90eXBlcy9qc3gtbm9kZSc7XG5pbXBvcnQgdHlwZSB7IFF3aWtKU1ggfSBmcm9tICcuL3R5cGVzL2pzeC1xd2lrJztcbmltcG9ydCB7IHFEZXYgfSBmcm9tICcuLi8uLi91dGlsL3FkZXYnO1xuaW1wb3J0IHsgSG9zdCwgU2tpcFJlcmVuZGVyIH0gZnJvbSAnLi9ob3N0LnB1YmxpYyc7XG5pbXBvcnQgeyBFTVBUWV9BUlJBWSB9IGZyb20gJy4uLy4uL3V0aWwvZmx5d2VpZ2h0JztcbmltcG9ydCB7IGxvZ1dhcm4gfSBmcm9tICcuLi8uLi91dGlsL2xvZyc7XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgZnVuY3Rpb24ganN4PFQgZXh0ZW5kcyBzdHJpbmcgfCBGdW5jdGlvbkNvbXBvbmVudDxQUk9QUz4sIFBST1BTPihcbiAgdHlwZTogVCxcbiAgcHJvcHM6IFBST1BTLFxuICBrZXk/OiBzdHJpbmcgfCBudW1iZXJcbik6IEpTWE5vZGU8VD4ge1xuICByZXR1cm4gbmV3IEpTWE5vZGVJbXBsKHR5cGUsIHByb3BzLCBrZXkpIGFzIGFueTtcbn1cblxuZXhwb3J0IGNsYXNzIEpTWE5vZGVJbXBsPFQ+IGltcGxlbWVudHMgSlNYTm9kZTxUPiB7XG4gIGNoaWxkcmVuOiBKU1hOb2RlW10gPSBFTVBUWV9BUlJBWTtcbiAgdGV4dD86IHN0cmluZyB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZDtcbiAga2V5OiBzdHJpbmcgfCBudWxsID0gbnVsbDtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgdHlwZTogVCxcbiAgICBwdWJsaWMgcHJvcHM6IFJlY29yZDxzdHJpbmcsIGFueT4gfCBudWxsLFxuICAgIGtleTogc3RyaW5nIHwgbnVtYmVyIHwgbnVsbCA9IG51bGxcbiAgKSB7XG4gICAgaWYgKGtleSAhPSBudWxsKSB7XG4gICAgICB0aGlzLmtleSA9IFN0cmluZyhrZXkpO1xuICAgIH1cbiAgICBpZiAocHJvcHMpIHtcbiAgICAgIGNvbnN0IGNoaWxkcmVuID0gcHJvY2Vzc05vZGUocHJvcHMuY2hpbGRyZW4pO1xuICAgICAgaWYgKGNoaWxkcmVuICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pKSB7XG4gICAgICAgICAgdGhpcy5jaGlsZHJlbiA9IGNoaWxkcmVuO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuY2hpbGRyZW4gPSBbY2hpbGRyZW5dO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwcm9jZXNzTm9kZShub2RlOiBhbnkpOiBKU1hOb2RlW10gfCBKU1hOb2RlIHwgdW5kZWZpbmVkIHtcbiAgaWYgKG5vZGUgPT0gbnVsbCB8fCB0eXBlb2Ygbm9kZSA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuICBpZiAoaXNKU1hOb2RlKG5vZGUpKSB7XG4gICAgaWYgKG5vZGUudHlwZSA9PT0gSG9zdCB8fCBub2RlLnR5cGUgPT09IFNraXBSZXJlbmRlcikge1xuICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfSBlbHNlIGlmICh0eXBlb2Ygbm9kZS50eXBlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXR1cm4gcHJvY2Vzc05vZGUobm9kZS50eXBlKHsgLi4ubm9kZS5wcm9wcywgY2hpbGRyZW46IG5vZGUuY2hpbGRyZW4gfSwgbm9kZS5rZXkpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfVxuICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkobm9kZSkpIHtcbiAgICByZXR1cm4gbm9kZS5mbGF0TWFwKHByb2Nlc3NOb2RlKS5maWx0ZXIoKGUpID0+IGUgIT0gbnVsbCkgYXMgSlNYTm9kZVtdO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBub2RlID09PSAnc3RyaW5nJyB8fCB0eXBlb2Ygbm9kZSA9PT0gJ251bWJlcicgfHwgdHlwZW9mIG5vZGUgPT09ICdib29sZWFuJykge1xuICAgIGNvbnN0IG5ld05vZGUgPSBuZXcgSlNYTm9kZUltcGwoJyN0ZXh0JywgbnVsbCwgbnVsbCk7XG4gICAgbmV3Tm9kZS50ZXh0ID0gU3RyaW5nKG5vZGUpO1xuICAgIHJldHVybiBuZXdOb2RlO1xuICB9IGVsc2Uge1xuICAgIGxvZ1dhcm4oJ1VudmFsaWQgbm9kZSwgc2tpcHBpbmcnKTtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG59XG5cbmV4cG9ydCBjb25zdCBpc0pTWE5vZGUgPSAobjogYW55KTogbiBpcyBKU1hOb2RlPHVua25vd24+ID0+IHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAobiBpbnN0YW5jZW9mIEpTWE5vZGVJbXBsKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKG4gJiYgdHlwZW9mIG4gPT09ICdvYmplY3QnICYmIG4uY29uc3RydWN0b3IubmFtZSA9PT0gSlNYTm9kZUltcGwubmFtZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBEdXBsaWNhdGUgaW1wbGVtZW50YXRpb25zIG9mIFwiSlNYTm9kZUltcGxcIiBmb3VuZGApO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIG4gaW5zdGFuY2VvZiBKU1hOb2RlSW1wbDtcbiAgfVxufTtcblxuLyoqXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBjb25zdCBDb21tZW50OiBGdW5jdGlvbkNvbXBvbmVudDx7IHRleHQ/OiBzdHJpbmcgfT4gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgbmV3Tm9kZSA9IG5ldyBKU1hOb2RlSW1wbCgnI2NvbW1lbnQnLCBudWxsLCBudWxsKTtcbiAgbmV3Tm9kZS50ZXh0ID0gcHJvcHMudGV4dCB8fCAnJztcbiAgcmV0dXJuIG5ld05vZGU7XG59O1xuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGNvbnN0IEZyYWdtZW50OiBGdW5jdGlvbkNvbXBvbmVudDx7IGNoaWxkcmVuPzogYW55IH0+ID0gKHByb3BzKSA9PiBwcm9wcy5jaGlsZHJlbiBhcyBhbnk7XG5cbmV4cG9ydCB0eXBlIHsgUXdpa0pTWCBhcyBKU1ggfTtcblxuZXhwb3J0IHsganN4IGFzIGpzeHMsIGpzeCBhcyBqc3hERVYgfTtcbiJdfQ==","import { assertDefined } from '../assert/assert';\nimport { appendStyle } from '../render/cursor';\nimport { visitJsxNode } from '../render/render';\nimport { ComponentScopedStyles, QHostAttr, RenderEvent } from '../util/markers';\nimport { promiseAll, then } from '../util/promises';\nimport { styleContent, styleHost } from './qrl-styles';\nimport { isStyleTask, newInvokeContext } from '../use/use-core';\nimport { getProps } from '../props/props';\nimport { processNode } from '../render/jsx/jsx-runtime';\nimport { wrapSubscriber } from '../use/use-subscriber';\nimport { logDebug } from '../util/log';\nimport { removeSub } from '../object/q-object';\nexport const firstRenderComponent = (rctx, ctx) => {\n    ctx.element.setAttribute(QHostAttr, '');\n    return renderComponent(rctx, ctx);\n};\nexport const renderComponent = (rctx, ctx) => {\n    ctx.dirty = false;\n    const hostElement = ctx.element;\n    const onRenderQRL = ctx.renderQrl;\n    assertDefined(onRenderQRL);\n    // Component is not dirty any more\n    rctx.globalState.hostsStaging.delete(hostElement);\n    // Invoke render hook\n    const invocatinContext = newInvokeContext(rctx.doc, hostElement, hostElement, RenderEvent);\n    invocatinContext.subscriber = hostElement;\n    const waitOn = (invocatinContext.waitOn = []);\n    // Clean current subscription before render\n    ctx.refMap.array.forEach((obj) => {\n        removeSub(obj, hostElement);\n    });\n    const onRenderFn = onRenderQRL.invokeFn(rctx.containerEl, invocatinContext);\n    // Execution of the render function\n    const renderPromise = onRenderFn(wrapSubscriber(getProps(ctx), hostElement));\n    // Wait for results\n    return then(renderPromise, (jsxNode) => {\n        rctx.hostElements.add(hostElement);\n        const waitOnPromise = promiseAll(waitOn);\n        return then(waitOnPromise, (waitOnResolved) => {\n            waitOnResolved.forEach((task) => {\n                if (isStyleTask(task)) {\n                    appendStyle(rctx, hostElement, task);\n                }\n            });\n            if (ctx.dirty) {\n                logDebug('Dropping render. State changed during render.');\n                return renderComponent(rctx, ctx);\n            }\n            let componentCtx = ctx.component;\n            if (!componentCtx) {\n                componentCtx = ctx.component = {\n                    hostElement,\n                    slots: [],\n                    styleHostClass: undefined,\n                    styleClass: undefined,\n                    styleId: undefined,\n                };\n                const scopedStyleId = hostElement.getAttribute(ComponentScopedStyles) ?? undefined;\n                if (scopedStyleId) {\n                    componentCtx.styleId = scopedStyleId;\n                    componentCtx.styleHostClass = styleHost(scopedStyleId);\n                    componentCtx.styleClass = styleContent(scopedStyleId);\n                    hostElement.classList.add(componentCtx.styleHostClass);\n                }\n            }\n            componentCtx.slots = [];\n            const newCtx = {\n                ...rctx,\n                component: componentCtx,\n            };\n            return visitJsxNode(newCtx, hostElement, processNode(jsxNode), false);\n        });\n    });\n};\n//# sourceMappingURL=data:application/json;base64,","import { OnRenderProp, QObjSelector, QSlotAttr } from '../util/markers';\nimport { cleanupContext, getContext, getProps, setEvent, tryGetContext, } from '../props/props';\nimport { isOn$Prop, isOnProp } from '../props/props-on';\nimport { Host } from '../render/jsx/host.public';\nimport { $ } from '../import/qrl.public';\nimport { firstRenderComponent, renderComponent } from '../component/component-ctx';\nimport { promiseAll, then } from '../util/promises';\nimport { assertDefined, assertEqual } from '../assert/assert';\nimport { NodeType } from '../util/types';\nimport { intToStr } from '../object/store';\nimport { EMPTY_ARRAY } from '../util/flyweight';\nimport { SkipRerender } from './jsx/host.public';\nimport { logDebug, logError, logWarn } from '../util/log';\nimport { qDev } from '../util/qdev';\nimport { qError, QError } from '../error/error';\nimport { fromCamelToKebabCase } from '../util/case';\nimport { CONTAINER } from '../use/use-core';\nexport const SVG_NS = 'http://www.w3.org/2000/svg';\nexport function smartUpdateChildren(ctx, elm, ch, mode, isSvg) {\n    if (ch.length === 1 && ch[0].type === SkipRerender) {\n        if (elm.firstChild !== null) {\n            return;\n        }\n        ch = ch[0].children;\n    }\n    const oldCh = getChildren(elm, mode);\n    if (oldCh.length > 0 && ch.length > 0) {\n        return updateChildren(ctx, elm, oldCh, ch, isSvg);\n    }\n    else if (ch.length > 0) {\n        return addVnodes(ctx, elm, undefined, ch, 0, ch.length - 1, isSvg);\n    }\n    else if (oldCh.length > 0) {\n        return removeVnodes(ctx, elm, oldCh, 0, oldCh.length - 1);\n    }\n}\nexport function updateChildren(ctx, parentElm, oldCh, newCh, isSvg) {\n    let oldStartIdx = 0;\n    let newStartIdx = 0;\n    let oldEndIdx = oldCh.length - 1;\n    let oldStartVnode = oldCh[0];\n    let oldEndVnode = oldCh[oldEndIdx];\n    let newEndIdx = newCh.length - 1;\n    let newStartVnode = newCh[0];\n    let newEndVnode = newCh[newEndIdx];\n    let oldKeyToIdx;\n    let idxInOld;\n    let elmToMove;\n    const results = [];\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (oldStartVnode == null) {\n            oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left\n        }\n        else if (oldEndVnode == null) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (newStartVnode == null) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (newEndVnode == null) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldStartVnode, newStartVnode)) {\n            results.push(patchVnode(ctx, oldStartVnode, newStartVnode, isSvg));\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (sameVnode(oldEndVnode, newEndVnode)) {\n            results.push(patchVnode(ctx, oldEndVnode, newEndVnode, isSvg));\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldStartVnode, newEndVnode)) {\n            // Vnode moved right\n            results.push(patchVnode(ctx, oldStartVnode, newEndVnode, isSvg));\n            insertBefore(ctx, parentElm, oldStartVnode, oldEndVnode.nextSibling);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldEndVnode, newStartVnode)) {\n            // Vnode moved left\n            results.push(patchVnode(ctx, oldEndVnode, newStartVnode, isSvg));\n            insertBefore(ctx, parentElm, oldEndVnode, oldStartVnode);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            if (oldKeyToIdx === undefined) {\n                oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n            }\n            idxInOld = oldKeyToIdx[newStartVnode.key];\n            if (idxInOld === undefined) {\n                // New element\n                const newElm = createElm(ctx, newStartVnode, isSvg);\n                results.push(then(newElm, (newElm) => {\n                    insertBefore(ctx, parentElm, newElm, oldStartVnode);\n                }));\n            }\n            else {\n                elmToMove = oldCh[idxInOld];\n                if (elmToMove.nodeName !== newStartVnode.type) {\n                    const newElm = createElm(ctx, newStartVnode, isSvg);\n                    results.push(then(newElm, (newElm) => {\n                        insertBefore(ctx, parentElm, newElm, oldStartVnode);\n                    }));\n                }\n                else {\n                    results.push(patchVnode(ctx, elmToMove, newStartVnode, isSvg));\n                    oldCh[idxInOld] = undefined;\n                    insertBefore(ctx, parentElm, elmToMove, oldStartVnode);\n                }\n            }\n            newStartVnode = newCh[++newStartIdx];\n        }\n    }\n    if (newStartIdx <= newEndIdx) {\n        const before = newCh[newEndIdx + 1] == null ? undefined : newCh[newEndIdx + 1].elm;\n        results.push(addVnodes(ctx, parentElm, before, newCh, newStartIdx, newEndIdx, isSvg));\n    }\n    let wait = promiseAll(results);\n    if (oldStartIdx <= oldEndIdx) {\n        wait = then(wait, () => {\n            removeVnodes(ctx, parentElm, oldCh, oldStartIdx, oldEndIdx);\n        });\n    }\n    return wait;\n}\nfunction isComponentNode(node) {\n    return node.props && OnRenderProp in node.props;\n}\nfunction getCh(elm) {\n    return Array.from(elm.childNodes).filter(isNode);\n}\nexport function getChildren(elm, mode) {\n    switch (mode) {\n        case 'default':\n            return getCh(elm);\n        case 'slot':\n            return getCh(elm).filter(isChildSlot);\n        case 'root':\n            return getCh(elm).filter(isChildComponent);\n        case 'fallback':\n            return getCh(elm).filter(isFallback);\n    }\n}\nexport function isNode(elm) {\n    const type = elm.nodeType;\n    return type === 1 || type === 3 || type === 8;\n}\nfunction isFallback(node) {\n    return node.nodeName === 'Q:FALLBACK';\n}\nfunction isChildSlot(node) {\n    return node.nodeName !== 'Q:FALLBACK' && isChildComponent(node);\n}\nfunction isSlotTemplate(node) {\n    return node.nodeName === 'TEMPLATE' && node.hasAttribute(QSlotAttr);\n}\nfunction isChildComponent(node) {\n    return node.nodeName !== 'TEMPLATE' || !node.hasAttribute(QSlotAttr);\n}\nfunction splitBy(input, condition) {\n    const output = {};\n    for (const item of input) {\n        const key = condition(item);\n        const array = output[key] ?? (output[key] = []);\n        array.push(item);\n    }\n    return output;\n}\nexport function patchVnode(rctx, elm, vnode, isSvg) {\n    rctx.perf.visited++;\n    vnode.elm = elm;\n    const tag = vnode.type;\n    if (tag === '#text') {\n        if (elm.data !== vnode.text) {\n            setProperty(rctx, elm, 'data', vnode.text);\n        }\n        return;\n    }\n    if (tag === '#comment') {\n        if (elm.data !== vnode.text) {\n            setProperty(rctx, elm, 'data', vnode.text);\n        }\n        return;\n    }\n    if (tag === Host || tag === SkipRerender) {\n        return;\n    }\n    if (!isSvg) {\n        isSvg = tag === 'svg';\n    }\n    let promise;\n    const props = vnode.props;\n    const ctx = getContext(elm);\n    const dirty = updateProperties(rctx, ctx, props, isSvg);\n    const isSlot = tag === 'q:slot';\n    if (isSvg && vnode.type === 'foreignObject') {\n        isSvg = false;\n    }\n    else if (isSlot) {\n        rctx.component.slots.push(vnode);\n    }\n    const isComponent = isComponentNode(vnode);\n    if (dirty) {\n        promise = renderComponent(rctx, ctx);\n    }\n    const ch = vnode.children;\n    if (isComponent) {\n        return then(promise, () => {\n            const slotMaps = getSlots(ctx.component, elm);\n            const splittedChidren = splitBy(ch, getSlotName);\n            const promises = [];\n            // Mark empty slots and remove content\n            Object.entries(slotMaps.slots).forEach(([key, slotEl]) => {\n                if (slotEl && !splittedChidren[key]) {\n                    const oldCh = getChildren(slotEl, 'slot');\n                    if (oldCh.length > 0) {\n                        removeVnodes(rctx, slotEl, oldCh, 0, oldCh.length - 1);\n                    }\n                }\n            });\n            // Mark empty slots and remove content\n            Object.entries(slotMaps.templates).forEach(([key, templateEl]) => {\n                if (templateEl && !splittedChidren[key]) {\n                    removeNode(rctx, templateEl);\n                    slotMaps.templates[key] = undefined;\n                }\n            });\n            // Render into slots\n            Object.entries(splittedChidren).forEach(([key, ch]) => {\n                const slotElm = getSlotElement(rctx, slotMaps, elm, key);\n                promises.push(smartUpdateChildren(rctx, slotElm, ch, 'slot', isSvg));\n            });\n            return then(promiseAll(promises), () => {\n                removeTemplates(rctx, slotMaps);\n            });\n        });\n    }\n    const setsInnerHTML = checkInnerHTML(props);\n    if (setsInnerHTML) {\n        if (qDev && ch.length > 0) {\n            logWarn('Node can not have children when innerHTML is set');\n        }\n        return;\n    }\n    return then(promise, () => {\n        const mode = isSlot ? 'fallback' : 'default';\n        return smartUpdateChildren(rctx, elm, ch, mode, isSvg);\n    });\n}\nfunction addVnodes(ctx, parentElm, before, vnodes, startIdx, endIdx, isSvg) {\n    const promises = [];\n    for (; startIdx <= endIdx; ++startIdx) {\n        const ch = vnodes[startIdx];\n        assertDefined(ch);\n        promises.push(createElm(ctx, ch, isSvg));\n    }\n    return then(promiseAll(promises), (children) => {\n        for (const child of children) {\n            insertBefore(ctx, parentElm, child, before);\n        }\n    });\n}\nfunction removeVnodes(ctx, parentElm, nodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n        const ch = nodes[startIdx];\n        assertDefined(ch);\n        removeNode(ctx, ch);\n    }\n}\nlet refCount = 0;\nconst RefSymbol = Symbol();\nfunction setSlotRef(ctx, hostElm, slotEl) {\n    let ref = hostElm[RefSymbol] ?? hostElm.getAttribute('q:sref');\n    if (ref === null) {\n        ref = intToStr(refCount++);\n        hostElm[RefSymbol] = ref;\n        setAttribute(ctx, hostElm, 'q:sref', ref);\n    }\n    slotEl.setAttribute('q:sref', ref);\n}\nfunction getSlotElement(ctx, slotMaps, parentEl, slotName) {\n    const slotEl = slotMaps.slots[slotName];\n    if (slotEl) {\n        return slotEl;\n    }\n    const templateEl = slotMaps.templates[slotName];\n    if (templateEl) {\n        return templateEl.content;\n    }\n    const template = createTemplate(ctx, slotName);\n    prepend(ctx, parentEl, template);\n    slotMaps.templates[slotName] = template;\n    return template.content;\n}\nfunction createTemplate(ctx, slotName) {\n    const template = createElement(ctx, 'template', false);\n    template.setAttribute(QSlotAttr, slotName);\n    return template;\n}\nfunction removeTemplates(ctx, slotMaps) {\n    Object.keys(slotMaps.templates).forEach((key) => {\n        const template = slotMaps.templates[key];\n        if (template && slotMaps.slots[key] !== undefined) {\n            removeNode(ctx, template);\n            slotMaps.templates[key] = undefined;\n        }\n    });\n}\nexport function resolveSlotProjection(ctx, hostElm, before, after) {\n    Object.entries(before.slots).forEach(([key, slotEl]) => {\n        if (slotEl && !after.slots[key]) {\n            // Slot removed\n            // Move slot to template\n            const template = createTemplate(ctx, key);\n            const slotChildren = getChildren(slotEl, 'slot');\n            template.content.append(...slotChildren);\n            hostElm.insertBefore(template, hostElm.firstChild);\n            ctx.operations.push({\n                el: template,\n                operation: 'slot-to-template',\n                args: slotChildren,\n                fn: () => { },\n            });\n        }\n    });\n    Object.entries(after.slots).forEach(([key, slotEl]) => {\n        if (slotEl && !before.slots[key]) {\n            // Slot created\n            // Move template to slot\n            const template = before.templates[key];\n            if (template) {\n                slotEl.appendChild(template.content);\n                template.remove();\n                ctx.operations.push({\n                    el: slotEl,\n                    operation: 'template-to-slot',\n                    args: [template],\n                    fn: () => { },\n                });\n            }\n        }\n    });\n}\nfunction getSlotName(node) {\n    return node.props?.['q:slot'] ?? '';\n}\nfunction createElm(rctx, vnode, isSvg) {\n    rctx.perf.visited++;\n    const tag = vnode.type;\n    if (tag === '#text') {\n        return (vnode.elm = createTextNode(rctx, vnode.text));\n    }\n    if (tag === '#comment') {\n        return (vnode.elm = createCommentNode(rctx, vnode.text));\n    }\n    if (!isSvg) {\n        isSvg = tag === 'svg';\n    }\n    const props = vnode.props;\n    const elm = (vnode.elm = createElement(rctx, tag, isSvg));\n    const isComponent = isComponentNode(vnode);\n    const ctx = getContext(elm);\n    setKey(elm, vnode.key);\n    updateProperties(rctx, ctx, props, isSvg);\n    if (isSvg && tag === 'foreignObject') {\n        isSvg = false;\n    }\n    const currentComponent = rctx.component;\n    if (currentComponent) {\n        const styleTag = currentComponent.styleClass;\n        if (styleTag) {\n            classlistAdd(rctx, elm, styleTag);\n        }\n        if (tag === 'q:slot') {\n            setSlotRef(rctx, currentComponent.hostElement, elm);\n            rctx.component.slots.push(vnode);\n        }\n    }\n    let wait;\n    if (isComponent) {\n        // Run mount hook\n        const renderQRL = props[OnRenderProp];\n        ctx.renderQrl = renderQRL;\n        ctx.refMap.add(renderQRL);\n        wait = firstRenderComponent(rctx, ctx);\n    }\n    else {\n        const setsInnerHTML = checkInnerHTML(props);\n        if (setsInnerHTML) {\n            if (qDev && vnode.children.length > 0) {\n                logWarn('Node can not have children when innerHTML is set');\n            }\n            return elm;\n        }\n    }\n    return then(wait, () => {\n        let children = vnode.children;\n        if (children.length > 0) {\n            if (children.length === 1 && children[0].type === SkipRerender) {\n                children = children[0].children;\n            }\n            const slotMap = isComponent ? getSlots(ctx.component, elm) : undefined;\n            const promises = children.map((ch) => createElm(rctx, ch, isSvg));\n            return then(promiseAll(promises), () => {\n                let parent = elm;\n                for (const node of children) {\n                    if (slotMap) {\n                        parent = getSlotElement(rctx, slotMap, elm, getSlotName(node));\n                    }\n                    parent.appendChild(node.elm);\n                }\n                return elm;\n            });\n        }\n        return elm;\n    });\n}\nconst getSlots = (componentCtx, hostElm) => {\n    const slots = {};\n    const templates = {};\n    const slotRef = hostElm.getAttribute('q:sref');\n    const existingSlots = Array.from(hostElm.querySelectorAll(`q\\\\:slot[q\\\\:sref=\"${slotRef}\"]`));\n    const newSlots = componentCtx?.slots ?? EMPTY_ARRAY;\n    const t = Array.from(hostElm.children).filter(isSlotTemplate);\n    // Map slots\n    for (const elm of existingSlots) {\n        slots[elm.getAttribute('name') ?? ''] = elm;\n    }\n    // Map virtual slots\n    for (const vnode of newSlots) {\n        slots[vnode.props?.name ?? ''] = vnode.elm;\n    }\n    // Map templates\n    for (const elm of t) {\n        templates[elm.getAttribute('q:slot') ?? ''] = elm;\n    }\n    return { slots, templates };\n};\nconst handleStyle = (ctx, elm, _, newValue) => {\n    setAttribute(ctx, elm, 'style', stringifyClassOrStyle(newValue, false));\n    return true;\n};\nconst handleClass = (ctx, elm, _, newValue) => {\n    setAttribute(ctx, elm, 'class', stringifyClassOrStyle(newValue, true));\n    return true;\n};\nconst checkBeforeAssign = (ctx, elm, prop, newValue) => {\n    if (prop in elm) {\n        if (elm[prop] !== newValue) {\n            setProperty(ctx, elm, prop, newValue);\n        }\n    }\n    return true;\n};\nconst dangerouslySetInnerHTML = 'dangerouslySetInnerHTML';\nconst setInnerHTML = (ctx, elm, _, newValue) => {\n    if (dangerouslySetInnerHTML in elm) {\n        setProperty(ctx, elm, dangerouslySetInnerHTML, newValue);\n    }\n    else if ('innerHTML' in elm) {\n        setProperty(ctx, elm, 'innerHTML', newValue);\n    }\n    return true;\n};\nconst PROP_HANDLER_MAP = {\n    style: handleStyle,\n    class: handleClass,\n    className: handleClass,\n    value: checkBeforeAssign,\n    checked: checkBeforeAssign,\n    [dangerouslySetInnerHTML]: setInnerHTML,\n};\nconst ALLOWS_PROPS = ['class', 'className', 'style', 'id', 'q:slot'];\nconst HOST_PREFIX = 'host:';\nconst SCOPE_PREFIX = /^(host|window|document):/;\nexport function updateProperties(rctx, ctx, expectProps, isSvg) {\n    if (!expectProps) {\n        return false;\n    }\n    const elm = ctx.element;\n    const qwikProps = OnRenderProp in expectProps ? getProps(ctx) : undefined;\n    for (let key of Object.keys(expectProps)) {\n        if (key === 'children' || key === OnRenderProp) {\n            continue;\n        }\n        const newValue = expectProps[key];\n        if (key === 'ref') {\n            newValue.current = elm;\n            continue;\n        }\n        // Early exit if value didnt change\n        const oldValue = ctx.cache.get(key);\n        if (newValue === oldValue) {\n            continue;\n        }\n        ctx.cache.set(key, newValue);\n        // Check of data- or aria-\n        if (key.startsWith('data-') || key.startsWith('aria-')) {\n            setAttribute(rctx, elm, key, newValue);\n            continue;\n        }\n        if (qwikProps) {\n            const skipProperty = ALLOWS_PROPS.includes(key);\n            const hasPrefix = SCOPE_PREFIX.test(key);\n            if (!skipProperty && !hasPrefix) {\n                // Qwik props\n                qwikProps[key] = newValue;\n                continue;\n            }\n            const hPrefixed = key.startsWith(HOST_PREFIX);\n            if (hPrefixed) {\n                key = key.slice(HOST_PREFIX.length);\n            }\n        }\n        else if (qDev && key.startsWith(HOST_PREFIX)) {\n            logWarn(`${HOST_PREFIX} prefix can not be used in non components`);\n            continue;\n        }\n        if (isOnProp(key)) {\n            setEvent(rctx, ctx, key.slice(0, -3), newValue);\n            continue;\n        }\n        if (isOn$Prop(key)) {\n            setEvent(rctx, ctx, key.slice(0, -1), $(newValue));\n            continue;\n        }\n        // Check if its an exception\n        const exception = PROP_HANDLER_MAP[key];\n        if (exception) {\n            if (exception(rctx, elm, key, newValue, oldValue)) {\n                continue;\n            }\n        }\n        // Check if property in prototype\n        if (!isSvg && key in elm) {\n            setProperty(rctx, elm, key, newValue);\n            continue;\n        }\n        // Fallback to render attribute\n        setAttribute(rctx, elm, key, newValue);\n    }\n    return ctx.dirty;\n}\nexport const startEvent = (ctx, name) => {\n    const event = {\n        name,\n        timeStart: performance.now(),\n        timeEnd: 0,\n    };\n    ctx.perf.timing.push(event);\n    return () => {\n        event.timeEnd = performance.now();\n    };\n};\nexport function setAttribute(ctx, el, prop, value) {\n    const fn = () => {\n        if (value == null) {\n            el.removeAttribute(prop);\n        }\n        else {\n            el.setAttribute(prop, String(value));\n        }\n    };\n    ctx.operations.push({\n        el,\n        operation: 'set-attribute',\n        args: [prop, value],\n        fn,\n    });\n}\nexport function classlistAdd(ctx, el, hostStyleTag) {\n    const fn = () => {\n        el.classList.add(hostStyleTag);\n    };\n    ctx.operations.push({\n        el,\n        operation: 'classlist-add',\n        args: [hostStyleTag],\n        fn,\n    });\n}\nfunction setProperty(ctx, node, key, value) {\n    const fn = () => {\n        try {\n            node[key] = value;\n        }\n        catch (err) {\n            logError('Set property', { node, key, value }, err);\n        }\n    };\n    ctx.operations.push({\n        el: node,\n        operation: 'set-property',\n        args: [key, value],\n        fn,\n    });\n}\nfunction createElement(ctx, expectTag, isSvg) {\n    const el = isSvg ? ctx.doc.createElementNS(SVG_NS, expectTag) : ctx.doc.createElement(expectTag);\n    el[CONTAINER] = ctx.containerEl;\n    ctx.operations.push({\n        el,\n        operation: 'create-element',\n        args: [expectTag],\n        fn: () => { },\n    });\n    return el;\n}\nfunction insertBefore(ctx, parent, newChild, refChild) {\n    const fn = () => {\n        parent.insertBefore(newChild, refChild ? refChild : null);\n    };\n    ctx.operations.push({\n        el: parent,\n        operation: 'insert-before',\n        args: [newChild, refChild],\n        fn,\n    });\n    return newChild;\n}\nexport function appendStyle(ctx, hostElement, styleTask) {\n    const fn = () => {\n        const containerEl = ctx.containerEl;\n        const stylesParent = ctx.doc.documentElement === containerEl ? ctx.doc.head ?? containerEl : containerEl;\n        if (!stylesParent.querySelector(`style[q\\\\:style=\"${styleTask.styleId}\"]`)) {\n            const style = ctx.doc.createElement('style');\n            style.setAttribute('q:style', styleTask.styleId);\n            style.textContent = styleTask.content;\n            stylesParent.insertBefore(style, stylesParent.firstChild);\n        }\n    };\n    ctx.operations.push({\n        el: hostElement,\n        operation: 'append-style',\n        args: [styleTask],\n        fn,\n    });\n}\nfunction prepend(ctx, parent, newChild) {\n    const fn = () => {\n        parent.insertBefore(newChild, parent.firstChild);\n    };\n    ctx.operations.push({\n        el: parent,\n        operation: 'prepend',\n        args: [newChild],\n        fn,\n    });\n}\nfunction removeNode(ctx, el) {\n    const fn = () => {\n        const parent = el.parentNode;\n        if (parent) {\n            if (el.nodeType === 1) {\n                cleanupElement(el);\n                el.querySelectorAll(QObjSelector).forEach(cleanupElement);\n            }\n            parent.removeChild(el);\n        }\n        else if (qDev) {\n            logWarn('Trying to remove component already removed', el);\n        }\n    };\n    ctx.operations.push({\n        el: el,\n        operation: 'remove',\n        args: [],\n        fn,\n    });\n}\nfunction cleanupElement(el) {\n    const ctx = tryGetContext(el);\n    if (ctx) {\n        cleanupContext(ctx);\n    }\n}\nfunction createTextNode(ctx, text) {\n    return ctx.doc.createTextNode(text);\n}\nfunction createCommentNode(ctx, text) {\n    return ctx.doc.createComment(text);\n}\nexport function executeContextWithSlots(ctx) {\n    const before = ctx.roots.map((elm) => getSlots(undefined, elm));\n    executeContext(ctx);\n    const after = ctx.roots.map((elm) => getSlots(undefined, elm));\n    assertEqual(before.length, after.length);\n    for (let i = 0; i < before.length; i++) {\n        resolveSlotProjection(ctx, ctx.roots[i], before[i], after[i]);\n    }\n}\nexport function executeContext(ctx) {\n    for (const op of ctx.operations) {\n        op.fn();\n    }\n}\nexport function printRenderStats(ctx) {\n    const byOp = {};\n    for (const op of ctx.operations) {\n        byOp[op.operation] = (byOp[op.operation] ?? 0) + 1;\n    }\n    const affectedElements = Array.from(new Set(ctx.operations.map((a) => a.el)));\n    const stats = {\n        byOp,\n        roots: ctx.roots,\n        hostElements: Array.from(ctx.hostElements),\n        affectedElements,\n        visitedNodes: ctx.perf.visited,\n        operations: ctx.operations.map((v) => [v.operation, v.el, ...v.args]),\n    };\n    logDebug('Render stats', stats);\n    return stats;\n}\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n    const map = {};\n    for (let i = beginIdx; i <= endIdx; ++i) {\n        const child = children[i];\n        if (child.nodeType == NodeType.ELEMENT_NODE) {\n            const key = getKey(child);\n            if (key !== undefined) {\n                map[key] = i;\n            }\n        }\n    }\n    return map;\n}\nconst KEY_SYMBOL = Symbol('vnode key');\nfunction getKey(el) {\n    let key = el[KEY_SYMBOL];\n    if (key === undefined) {\n        key = el[KEY_SYMBOL] = el.getAttribute('q:key');\n    }\n    return key;\n}\nfunction setKey(el, key) {\n    if (typeof key === 'string') {\n        el.setAttribute('q:key', key);\n    }\n    el[KEY_SYMBOL] = key;\n}\nfunction sameVnode(vnode1, vnode2) {\n    const isSameSel = vnode1.nodeName.toLowerCase() === vnode2.type;\n    const isSameKey = vnode1.nodeType === NodeType.ELEMENT_NODE ? getKey(vnode1) === vnode2.key : true;\n    return isSameSel && isSameKey;\n}\nfunction checkInnerHTML(props) {\n    return props && ('innerHTML' in props || dangerouslySetInnerHTML in props);\n}\nexport function stringifyClassOrStyle(obj, isClass) {\n    if (obj == null)\n        return '';\n    if (typeof obj == 'object') {\n        let text = '';\n        let sep = '';\n        if (Array.isArray(obj)) {\n            if (!isClass) {\n                throw qError(QError.Render_unsupportedFormat_obj_attr, obj, 'style');\n            }\n            for (let i = 0; i < obj.length; i++) {\n                text += sep + obj[i];\n                sep = ' ';\n            }\n        }\n        else {\n            for (const key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    const value = obj[key];\n                    if (value) {\n                        text += isClass\n                            ? value\n                                ? sep + key\n                                : ''\n                            : sep + fromCamelToKebabCase(key) + ':' + value;\n                        sep = isClass ? ' ' : ';';\n                    }\n                }\n            }\n        }\n        return text;\n    }\n    return String(obj);\n}\n//# sourceMappingURL=data:application/json;base64,","import { assertDefined } from '../assert/assert';\nimport { QHostAttr } from '../util/markers';\nimport { executeContextWithSlots, printRenderStats } from './cursor';\nimport { getContext, resumeIfNeeded } from '../props/props';\nimport { qDev } from '../util/qdev';\nimport { getPlatform } from '../platform/platform';\nimport { getDocument } from '../util/dom';\nimport { renderComponent } from '../component/component-ctx';\nimport { logDebug, logError } from '../util/log';\nimport { getContainer } from '../use/use-core';\nimport { runWatch } from '../watch/watch.public';\nimport { waitForWatches } from '../object/q-object';\n/**\n * Mark component for rendering.\n *\n * Use `notifyRender` method to mark a component for rendering at some later point in time.\n * This method uses `getPlatform(doc).queueRender` for scheduling of the rendering. The\n * default implementation of the method is to use `requestAnimationFrame` to do actual rendering.\n *\n * The method is intended to coalesce multiple calls into `notifyRender` into a single call for\n * rendering.\n *\n * @param hostElement - Host-element of the component to re-render.\n * @returns A promise which is resolved when the component has been rendered.\n * @public\n */\nexport function notifyRender(hostElement) {\n    assertDefined(hostElement.getAttribute(QHostAttr));\n    const containerEl = getContainer(hostElement);\n    assertDefined(containerEl);\n    resumeIfNeeded(containerEl);\n    const ctx = getContext(hostElement);\n    const state = getRenderingState(containerEl);\n    if (ctx.dirty) {\n        // TODO\n        return state.renderPromise;\n    }\n    ctx.dirty = true;\n    const activeRendering = state.hostsRendering !== undefined;\n    if (activeRendering) {\n        state.hostsStaging.add(hostElement);\n        return state.renderPromise.then((ctx) => {\n            if (state.hostsNext.has(hostElement)) {\n                // TODO\n                return state.renderPromise;\n            }\n            else {\n                return ctx;\n            }\n        });\n    }\n    else {\n        state.hostsNext.add(hostElement);\n        return scheduleFrame(containerEl, state);\n    }\n}\nexport function scheduleFrame(containerEl, state) {\n    if (state.renderPromise === undefined) {\n        state.renderPromise = getPlatform(containerEl).nextTick(() => renderMarked(containerEl, state));\n    }\n    return state.renderPromise;\n}\nconst SCHEDULE = Symbol('Render state');\nexport function getRenderingState(containerEl) {\n    let set = containerEl[SCHEDULE];\n    if (!set) {\n        containerEl[SCHEDULE] = set = {\n            watchNext: new Set(),\n            watchStaging: new Set(),\n            watchRunning: new Set(),\n            hostsNext: new Set(),\n            hostsStaging: new Set(),\n            renderPromise: undefined,\n            hostsRendering: undefined,\n        };\n    }\n    return set;\n}\nexport async function renderMarked(containerEl, state) {\n    await waitForWatches(state);\n    state.hostsRendering = new Set(state.hostsNext);\n    state.hostsNext.clear();\n    const doc = getDocument(containerEl);\n    const platform = getPlatform(containerEl);\n    const renderingQueue = Array.from(state.hostsRendering);\n    sortNodes(renderingQueue);\n    const ctx = {\n        doc,\n        globalState: state,\n        hostElements: new Set(),\n        operations: [],\n        roots: [],\n        containerEl,\n        component: undefined,\n        perf: {\n            visited: 0,\n            timing: [],\n        },\n    };\n    for (const el of renderingQueue) {\n        if (!ctx.hostElements.has(el)) {\n            ctx.roots.push(el);\n            try {\n                await renderComponent(ctx, getContext(el));\n            }\n            catch (e) {\n                logError('Render failed', e, el);\n            }\n        }\n    }\n    // Early exist, no dom operations\n    if (ctx.operations.length === 0) {\n        if (qDev) {\n            if (typeof window !== 'undefined' && window.document != null) {\n                logDebug('Render skipped. No operations.');\n                printRenderStats(ctx);\n            }\n        }\n        postRendering(containerEl, state, ctx);\n        return ctx;\n    }\n    return platform.raf(() => {\n        executeContextWithSlots(ctx);\n        if (qDev) {\n            if (typeof window !== 'undefined' && window.document != null) {\n                printRenderStats(ctx);\n            }\n        }\n        postRendering(containerEl, state, ctx);\n        return ctx;\n    });\n}\nasync function postRendering(containerEl, state, ctx) {\n    // Run useEffect() watch\n    const promises = [];\n    state.watchNext.forEach((watch) => {\n        promises.push(runWatch(watch));\n    });\n    state.watchNext.clear();\n    // Run staging effected\n    state.watchStaging.forEach((watch) => {\n        if (ctx.hostElements.has(watch.el)) {\n            promises.push(runWatch(watch));\n        }\n        else {\n            state.watchNext.add(watch);\n        }\n    });\n    state.watchStaging.clear();\n    // Wait for all promises\n    await Promise.all(promises);\n    // Clear staging\n    state.hostsStaging.forEach((el) => {\n        state.hostsNext.add(el);\n    });\n    state.hostsStaging.clear();\n    // Clear staging\n    state.watchStaging.forEach((watch) => {\n        state.watchNext.add(watch);\n    });\n    state.watchStaging.clear();\n    state.hostsRendering = undefined;\n    state.renderPromise = undefined;\n    if (state.hostsNext.size + state.watchNext.size > 0) {\n        scheduleFrame(containerEl, state);\n    }\n}\nfunction sortNodes(elements) {\n    elements.sort((a, b) => (a.compareDocumentPosition(b) & 2 ? 1 : -1));\n}\n//# sourceMappingURL=data:application/json;base64,","import { assertEqual } from '../assert/assert';\nimport { QError, qError } from '../error/error';\nimport { isQrl } from '../import/qrl-class';\nimport { getRenderingState, notifyRender, scheduleFrame, } from '../render/notify-render';\nimport { getContainer, tryGetInvokeContext } from '../use/use-core';\nimport { isDocument, isElement, isNode } from '../util/element';\nimport '../util/log';\nimport { qDev, qTest } from '../util/qdev';\nimport { debugStringify } from '../util/stringify';\nimport { WatchFlags } from '../watch/watch.public';\nimport { tryGetContext } from '../props/props';\nconst ProxyMapSymbol = Symbol('ProxyMapSymbol');\nexport function getProxyMap(doc) {\n    let map = doc[ProxyMapSymbol];\n    if (!map) {\n        map = doc[ProxyMapSymbol] = new WeakMap();\n    }\n    return map;\n}\nexport function qObject(obj, proxyMap) {\n    assertEqual(unwrapProxy(obj), obj, 'Unexpected proxy at this location');\n    if (obj == null || typeof obj !== 'object') {\n        // TODO(misko): centralize\n        throw new Error(`Q-ERROR: Only objects can be wrapped in 'QObject', got ` + debugStringify(obj));\n    }\n    if (obj.constructor !== Object) {\n        throw new Error(`Q-ERROR: Only objects literals can be wrapped in 'QObject', got ` + debugStringify(obj));\n    }\n    return readWriteProxy(obj, proxyMap);\n}\nexport function _restoreQObject(obj, map, subs) {\n    return readWriteProxy(obj, map, subs);\n}\n/**\n * Creates a proxy which notifies of any writes.\n */\nexport function readWriteProxy(target, proxyMap, subs) {\n    if (!target || typeof target !== 'object')\n        return target;\n    let proxy = proxyMap.get(target);\n    if (proxy)\n        return proxy;\n    proxy = new Proxy(target, new ReadWriteProxyHandler(proxyMap, subs));\n    proxyMap.set(target, proxy);\n    return proxy;\n}\nexport const QOjectTargetSymbol = ':target:';\nexport const QOjectAllSymbol = ':all:';\nexport const QOjectSubsSymbol = ':subs:';\nexport const QOjectOriginalProxy = ':proxy:';\nexport const SetSubscriber = Symbol('SetSubscriber');\n/**\n * @alpha\n */\nexport function unwrapProxy(proxy) {\n    if (proxy && typeof proxy == 'object') {\n        const value = proxy[QOjectTargetSymbol];\n        if (value)\n            return value;\n    }\n    return proxy;\n}\nexport function wrap(value, proxyMap) {\n    if (value && typeof value === 'object') {\n        if (isQrl(value)) {\n            return value;\n        }\n        if (Object.isFrozen(value)) {\n            return value;\n        }\n        const nakedValue = unwrapProxy(value);\n        if (nakedValue !== value) {\n            // already a proxy return;\n            return value;\n        }\n        if (isNode(nakedValue)) {\n            return value;\n        }\n        if (!shouldSerialize(nakedValue)) {\n            return value;\n        }\n        if (qDev) {\n            verifySerializable(value);\n        }\n        const proxy = proxyMap.get(value);\n        return proxy ? proxy : readWriteProxy(value, proxyMap);\n    }\n    else {\n        return value;\n    }\n}\nclass ReadWriteProxyHandler {\n    constructor(proxyMap, subs = new Map()) {\n        this.proxyMap = proxyMap;\n        this.subs = subs;\n    }\n    getSub(el) {\n        let sub = this.subs.get(el);\n        if (sub === undefined) {\n            this.subs.set(el, (sub = new Set()));\n        }\n        return sub;\n    }\n    get(target, prop) {\n        let subscriber = this.subscriber;\n        this.subscriber = undefined;\n        if (typeof prop === 'symbol') {\n            return target[prop];\n        }\n        if (prop === QOjectTargetSymbol)\n            return target;\n        if (prop === QOjectSubsSymbol)\n            return this.subs;\n        if (prop === QOjectOriginalProxy)\n            return this.proxyMap.get(target);\n        const invokeCtx = tryGetInvokeContext();\n        if (invokeCtx) {\n            if (invokeCtx.subscriber === null) {\n                subscriber = undefined;\n            }\n            else if (!subscriber) {\n                subscriber = invokeCtx.subscriber;\n            }\n        }\n        else if (qDev && !qTest && !subscriber) {\n            // logWarn(`State assigned outside invocation context. Getting prop \"${prop}\" of:`, target);\n        }\n        if (prop === QOjectAllSymbol) {\n            if (subscriber) {\n                this.subs.set(subscriber, null);\n            }\n            return target;\n        }\n        const value = target[prop];\n        if (typeof prop === 'symbol') {\n            return value;\n        }\n        if (subscriber) {\n            const isArray = Array.isArray(target);\n            if (isArray) {\n                this.subs.set(subscriber, null);\n            }\n            else {\n                const sub = this.getSub(subscriber);\n                if (sub) {\n                    sub.add(prop);\n                }\n            }\n        }\n        return wrap(value, this.proxyMap);\n    }\n    set(target, prop, newValue) {\n        if (typeof prop === 'symbol') {\n            if (prop === SetSubscriber) {\n                this.subscriber = newValue;\n            }\n            else {\n                target[prop] = newValue;\n            }\n            return true;\n        }\n        const subs = this.subs;\n        const unwrappedNewValue = unwrapProxy(newValue);\n        if (qDev) {\n            verifySerializable(unwrappedNewValue);\n        }\n        const isArray = Array.isArray(target);\n        if (isArray) {\n            target[prop] = unwrappedNewValue;\n            subs.forEach((_, sub) => {\n                if (isConnected(sub)) {\n                    notifyChange(sub);\n                }\n                else {\n                    subs.delete(sub);\n                }\n            });\n            return true;\n        }\n        const oldValue = target[prop];\n        if (oldValue !== unwrappedNewValue) {\n            target[prop] = unwrappedNewValue;\n            subs.forEach((propSets, sub) => {\n                if (isConnected(sub)) {\n                    if (propSets === null || propSets.has(prop)) {\n                        notifyChange(sub);\n                    }\n                }\n                else {\n                    subs.delete(sub);\n                }\n            });\n        }\n        return true;\n    }\n    has(target, property) {\n        if (property === QOjectTargetSymbol)\n            return true;\n        if (property === QOjectSubsSymbol)\n            return true;\n        return Object.prototype.hasOwnProperty.call(target, property);\n    }\n    ownKeys(target) {\n        let subscriber = this.subscriber;\n        const invokeCtx = tryGetInvokeContext();\n        if (invokeCtx) {\n            if (invokeCtx.subscriber === null) {\n                subscriber = undefined;\n            }\n            else if (!subscriber) {\n                subscriber = invokeCtx.subscriber;\n            }\n        }\n        else if (qDev && !qTest && !subscriber) {\n            // logWarn(`State assigned outside invocation context. OwnKeys of:`, target);\n        }\n        if (subscriber) {\n            this.subs.set(subscriber, null);\n        }\n        return Object.getOwnPropertyNames(target);\n    }\n}\nexport function removeSub(obj, subscriber) {\n    if (obj && typeof obj === 'object') {\n        const subs = obj[QOjectSubsSymbol];\n        if (subs) {\n            subs.delete(subscriber);\n        }\n    }\n}\nexport function notifyChange(subscriber) {\n    if (isElement(subscriber)) {\n        notifyRender(subscriber);\n    }\n    else {\n        notifyWatch(subscriber);\n    }\n}\nexport function notifyWatch(watch) {\n    const containerEl = getContainer(watch.el);\n    const state = getRenderingState(containerEl);\n    watch.f |= WatchFlags.IsDirty;\n    const activeRendering = state.hostsRendering !== undefined;\n    if (activeRendering) {\n        state.watchStaging.add(watch);\n    }\n    else {\n        state.watchNext.add(watch);\n        scheduleFrame(containerEl, state);\n    }\n}\nexport async function waitForWatches(state) {\n    while (state.watchRunning.size > 0) {\n        await Promise.all(state.watchRunning);\n    }\n}\nfunction verifySerializable(value) {\n    if (value == null) {\n        return null;\n    }\n    if (shouldSerialize(value)) {\n        const type = typeof value;\n        if (type === 'object') {\n            if (Array.isArray(value))\n                return;\n            if (Object.getPrototypeOf(value) === Object.prototype)\n                return;\n            if (isQrl(value))\n                return;\n            if (isElement(value))\n                return;\n            if (isDocument(value))\n                return;\n        }\n        if (['boolean', 'string', 'number'].includes(type)) {\n            return;\n        }\n        throw qError(QError.TODO, 'Only primitive and object literals can be serialized', value);\n    }\n}\nconst noSerializeSet = /*#__PURE__*/ new WeakSet();\nexport function shouldSerialize(obj) {\n    if (obj !== null && (typeof obj == 'object' || typeof obj === 'function')) {\n        return !noSerializeSet.has(obj);\n    }\n    return true;\n}\n// <docs markdown=\"../readme.md#noSerialize\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#noSerialize instead)\n/**\n * @alpha\n */\n// </docs>\nexport function noSerialize(input) {\n    noSerializeSet.add(input);\n    return input;\n}\n/**\n * @alpha\n */\nexport function immutable(input) {\n    return Object.freeze(input);\n}\nexport function isConnected(sub) {\n    if (isElement(sub)) {\n        return !!tryGetContext(sub);\n    }\n    else {\n        return isConnected(sub.el);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","import { QOjectOriginalProxy, QOjectTargetSymbol, SetSubscriber } from '../object/q-object';\nimport { RenderEvent } from '../util/markers';\nimport { assertDefined, assertEqual } from '../assert/assert';\nimport { getInvokeContext } from './use-core';\n/**\n * @alpha\n */\nexport function useSubscriber(obj) {\n    const ctx = getInvokeContext();\n    let subscriber = ctx.watch;\n    if (!subscriber) {\n        assertEqual(ctx.event, RenderEvent);\n        subscriber = ctx.hostElement;\n    }\n    assertDefined(subscriber);\n    return wrapSubscriber(obj, subscriber);\n}\n/**\n * @alpha\n */\nexport function wrapSubscriber(obj, subscriber) {\n    if (obj && typeof obj === 'object') {\n        const target = obj[QOjectTargetSymbol];\n        if (!target) {\n            return obj;\n        }\n        return new Proxy(obj, {\n            get(target, prop) {\n                if (prop === QOjectOriginalProxy) {\n                    return target;\n                }\n                target[SetSubscriber] = subscriber;\n                return target[prop];\n            },\n            ownKeys(target) {\n                target[SetSubscriber] = subscriber;\n                return Reflect.ownKeys(target);\n            },\n        });\n    }\n    return obj;\n}\n/**\n * @alpha\n */\nexport function unwrapSubscriber(obj) {\n    if (obj && typeof obj === 'object') {\n        const proxy = obj[QOjectOriginalProxy];\n        if (proxy) {\n            return proxy;\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLXN1YnNjcmliZXIuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL3F3aWsvc3JjL2NvcmUvdXNlL3VzZS1zdWJzY3JpYmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxrQkFBa0IsRUFBRSxhQUFhLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUU1RixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDOUMsT0FBTyxFQUFFLGFBQWEsRUFBRSxXQUFXLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUM5RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFPOUM7O0dBRUc7QUFDSCxNQUFNLFVBQVUsYUFBYSxDQUFlLEdBQU07SUFDaEQsTUFBTSxHQUFHLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQztJQUMvQixJQUFJLFVBQVUsR0FBMkIsR0FBRyxDQUFDLEtBQUssQ0FBQztJQUNuRCxJQUFJLENBQUMsVUFBVSxFQUFFO1FBQ2YsV0FBVyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFDcEMsVUFBVSxHQUFHLEdBQUcsQ0FBQyxXQUFXLENBQUM7S0FDOUI7SUFDRCxhQUFhLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDMUIsT0FBTyxjQUFjLENBQUMsR0FBRyxFQUFFLFVBQVcsQ0FBQyxDQUFDO0FBQzFDLENBQUM7QUFFRDs7R0FFRztBQUNILE1BQU0sVUFBVSxjQUFjLENBQWUsR0FBTSxFQUFFLFVBQXNCO0lBQ3pFLElBQUksR0FBRyxJQUFJLE9BQU8sR0FBRyxLQUFLLFFBQVEsRUFBRTtRQUNsQyxNQUFNLE1BQU0sR0FBSSxHQUFXLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUNoRCxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ1gsT0FBTyxHQUFHLENBQUM7U0FDWjtRQUNELE9BQU8sSUFBSSxLQUFLLENBQU0sR0FBRyxFQUFFO1lBQ3pCLEdBQUcsQ0FBQyxNQUFNLEVBQUUsSUFBSTtnQkFDZCxJQUFJLElBQUksS0FBSyxtQkFBbUIsRUFBRTtvQkFDaEMsT0FBTyxNQUFNLENBQUM7aUJBQ2Y7Z0JBQ0QsTUFBTSxDQUFDLGFBQWEsQ0FBQyxHQUFHLFVBQVUsQ0FBQztnQkFDbkMsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDdEIsQ0FBQztZQUNELE9BQU8sQ0FBQyxNQUFNO2dCQUNaLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBRyxVQUFVLENBQUM7Z0JBQ25DLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUNqQyxDQUFDO1NBQ0YsQ0FBQyxDQUFDO0tBQ0o7SUFDRCxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUM7QUFFRDs7R0FFRztBQUNILE1BQU0sVUFBVSxnQkFBZ0IsQ0FBZSxHQUFNO0lBQ25ELElBQUksR0FBRyxJQUFJLE9BQU8sR0FBRyxLQUFLLFFBQVEsRUFBRTtRQUNsQyxNQUFNLEtBQUssR0FBSSxHQUFXLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUNoRCxJQUFJLEtBQUssRUFBRTtZQUNULE9BQU8sS0FBSyxDQUFDO1NBQ2Q7S0FDRjtJQUNELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFFPamVjdE9yaWdpbmFsUHJveHksIFFPamVjdFRhcmdldFN5bWJvbCwgU2V0U3Vic2NyaWJlciB9IGZyb20gJy4uL29iamVjdC9xLW9iamVjdCc7XG5pbXBvcnQgdHlwZSB7IFdhdGNoRGVzY3JpcHRvciB9IGZyb20gJy4uL3dhdGNoL3dhdGNoLnB1YmxpYyc7XG5pbXBvcnQgeyBSZW5kZXJFdmVudCB9IGZyb20gJy4uL3V0aWwvbWFya2Vycyc7XG5pbXBvcnQgeyBhc3NlcnREZWZpbmVkLCBhc3NlcnRFcXVhbCB9IGZyb20gJy4uL2Fzc2VydC9hc3NlcnQnO1xuaW1wb3J0IHsgZ2V0SW52b2tlQ29udGV4dCB9IGZyb20gJy4vdXNlLWNvcmUnO1xuXG4vKipcbiAqIEBhbHBoYVxuICovXG5leHBvcnQgdHlwZSBTdWJzY3JpYmVyID0gV2F0Y2hEZXNjcmlwdG9yIHwgRWxlbWVudDtcblxuLyoqXG4gKiBAYWxwaGFcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZVN1YnNjcmliZXI8VCBleHRlbmRzIHt9PihvYmo6IFQpOiBUIHtcbiAgY29uc3QgY3R4ID0gZ2V0SW52b2tlQ29udGV4dCgpO1xuICBsZXQgc3Vic2NyaWJlcjogU3Vic2NyaWJlciB8IHVuZGVmaW5lZCA9IGN0eC53YXRjaDtcbiAgaWYgKCFzdWJzY3JpYmVyKSB7XG4gICAgYXNzZXJ0RXF1YWwoY3R4LmV2ZW50LCBSZW5kZXJFdmVudCk7XG4gICAgc3Vic2NyaWJlciA9IGN0eC5ob3N0RWxlbWVudDtcbiAgfVxuICBhc3NlcnREZWZpbmVkKHN1YnNjcmliZXIpO1xuICByZXR1cm4gd3JhcFN1YnNjcmliZXIob2JqLCBzdWJzY3JpYmVyISk7XG59XG5cbi8qKlxuICogQGFscGhhXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB3cmFwU3Vic2NyaWJlcjxUIGV4dGVuZHMge30+KG9iajogVCwgc3Vic2NyaWJlcjogU3Vic2NyaWJlcikge1xuICBpZiAob2JqICYmIHR5cGVvZiBvYmogPT09ICdvYmplY3QnKSB7XG4gICAgY29uc3QgdGFyZ2V0ID0gKG9iaiBhcyBhbnkpW1FPamVjdFRhcmdldFN5bWJvbF07XG4gICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgIHJldHVybiBvYmo7XG4gICAgfVxuICAgIHJldHVybiBuZXcgUHJveHk8YW55PihvYmosIHtcbiAgICAgIGdldCh0YXJnZXQsIHByb3ApIHtcbiAgICAgICAgaWYgKHByb3AgPT09IFFPamVjdE9yaWdpbmFsUHJveHkpIHtcbiAgICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgICAgICB9XG4gICAgICAgIHRhcmdldFtTZXRTdWJzY3JpYmVyXSA9IHN1YnNjcmliZXI7XG4gICAgICAgIHJldHVybiB0YXJnZXRbcHJvcF07XG4gICAgICB9LFxuICAgICAgb3duS2V5cyh0YXJnZXQpIHtcbiAgICAgICAgdGFyZ2V0W1NldFN1YnNjcmliZXJdID0gc3Vic2NyaWJlcjtcbiAgICAgICAgcmV0dXJuIFJlZmxlY3Qub3duS2V5cyh0YXJnZXQpO1xuICAgICAgfSxcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gb2JqO1xufVxuXG4vKipcbiAqIEBhbHBoYVxuICovXG5leHBvcnQgZnVuY3Rpb24gdW53cmFwU3Vic2NyaWJlcjxUIGV4dGVuZHMge30+KG9iajogVCkge1xuICBpZiAob2JqICYmIHR5cGVvZiBvYmogPT09ICdvYmplY3QnKSB7XG4gICAgY29uc3QgcHJveHkgPSAob2JqIGFzIGFueSlbUU9qZWN0T3JpZ2luYWxQcm94eV07XG4gICAgaWYgKHByb3h5KSB7XG4gICAgICByZXR1cm4gcHJveHk7XG4gICAgfVxuICB9XG4gIHJldHVybiBvYmo7XG59XG4iXX0=","import { EMPTY_ARRAY } from '../util/flyweight';\nimport { isQrl, QRLInternal } from './qrl-class';\nimport { assertEqual } from '../assert/assert';\nimport { getDocument } from '../util/dom';\nimport { logError } from '../util/log';\nimport { then } from '../util/promises';\nimport { getPlatform } from '../platform/platform';\nimport { unwrapSubscriber } from '../use/use-subscriber';\nimport { tryGetInvokeContext } from '../use/use-core';\nlet runtimeSymbolId = 0;\nconst RUNTIME_QRL = '/runtimeQRL';\n// https://regexr.com/68v72\nconst EXTRACT_IMPORT_PATH = /\\(\\s*(['\"])([^\\1]+)\\1\\s*\\)/;\n// https://regexr.com/690ds\nconst EXTRACT_SELF_IMPORT = /Promise\\s*\\.\\s*resolve/;\n// https://regexr.com/6a83h\nconst EXTRACT_FILE_NAME = /[\\\\/(]([\\w\\d.\\-_]+\\.(js|ts)x?):/;\nexport function toInternalQRL(qrl) {\n    assertEqual(isQrl(qrl), true);\n    return qrl;\n}\n/**\n * Lazy-load a `QRL` symbol and return the lazy-loaded value.\n *\n * @see `QRL`\n *\n * @param element - Location of the URL to resolve against. This is needed to take `q:base` into\n * account.\n * @param qrl - QRL to load.\n * @returns A resolved QRL value as a Promise.\n */\nexport function qrlImport(element, qrl) {\n    const qrl_ = toInternalQRL(qrl);\n    if (qrl_.symbolRef)\n        return qrl_.symbolRef;\n    if (qrl_.symbolFn) {\n        return (qrl_.symbolRef = qrl_\n            .symbolFn()\n            .then((module) => (qrl_.symbolRef = module[qrl_.symbol])));\n    }\n    else {\n        if (!element) {\n            throw new Error(`QRL '${qrl_.chunk}#${qrl_.symbol || 'default'}' does not have an attached container`);\n        }\n        const symbol = getPlatform(getDocument(element)).importSymbol(element, qrl_.chunk, qrl_.symbol);\n        return (qrl_.symbolRef = then(symbol, (ref) => {\n            return (qrl_.symbolRef = ref);\n        }));\n    }\n}\n// <docs markdown=\"../readme.md#qrl\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#qrl instead)\n/**\n * Used by Qwik Optimizer to point to lazy-loaded resources.\n *\n * This function should be used by the Qwik Optimizer only. The function should not be directly\n * referred to in the source code of the application.\n *\n * @see `QRL`, `$(...)`\n *\n * @param chunkOrFn - Chunk name (or function which is stringified to extract chunk name)\n * @param symbol - Symbol to lazy load\n * @param lexicalScopeCapture - a set of lexically scoped variables to capture.\n * @alpha\n */\n// </docs>\nexport function qrl(chunkOrFn, symbol, lexicalScopeCapture = EMPTY_ARRAY) {\n    let chunk;\n    let symbolFn = null;\n    if (typeof chunkOrFn === 'string') {\n        chunk = chunkOrFn;\n    }\n    else if (typeof chunkOrFn === 'function') {\n        symbolFn = chunkOrFn;\n        let match;\n        const srcCode = String(chunkOrFn);\n        if ((match = srcCode.match(EXTRACT_IMPORT_PATH)) && match[2]) {\n            chunk = match[2];\n        }\n        else if ((match = srcCode.match(EXTRACT_SELF_IMPORT))) {\n            const ref = 'QWIK-SELF';\n            const frames = new Error(ref).stack.split('\\n');\n            const start = frames.findIndex((f) => f.includes(ref));\n            const frame = frames[start + 2];\n            match = frame.match(EXTRACT_FILE_NAME);\n            if (!match) {\n                chunk = 'main';\n            }\n            else {\n                chunk = match[1];\n            }\n        }\n        else {\n            throw new Error('Q-ERROR: Dynamic import not found: ' + srcCode);\n        }\n    }\n    else {\n        throw new Error('Q-ERROR: Unknown type argument: ' + chunkOrFn);\n    }\n    // Unwrap subscribers\n    if (Array.isArray(lexicalScopeCapture)) {\n        for (let i = 0; i < lexicalScopeCapture.length; i++) {\n            lexicalScopeCapture[i] = unwrapSubscriber(lexicalScopeCapture[i]);\n        }\n    }\n    const qrl = new QRLInternal(chunk, symbol, null, symbolFn, null, lexicalScopeCapture);\n    const ctx = tryGetInvokeContext();\n    if (ctx && ctx.element) {\n        qrl.setContainer(ctx.element);\n    }\n    return qrl;\n}\nexport function runtimeQrl(symbol, lexicalScopeCapture = EMPTY_ARRAY) {\n    return new QRLInternal(RUNTIME_QRL, 's' + runtimeSymbolId++, symbol, null, null, lexicalScopeCapture);\n}\nexport function stringifyQRL(qrl, opts = {}) {\n    const qrl_ = toInternalQRL(qrl);\n    const symbol = qrl_.symbol;\n    const refSymbol = qrl_.refSymbol ?? symbol;\n    const platform = opts.platform;\n    const element = opts.element;\n    const chunk = platform ? platform.chunkForSymbol(refSymbol) ?? qrl_.chunk : qrl_.chunk;\n    const parts = [chunk];\n    if (symbol && symbol !== 'default') {\n        parts.push('#', symbol);\n    }\n    const capture = qrl_.capture;\n    const captureRef = qrl_.captureRef;\n    if (opts.getObjId) {\n        if (captureRef && captureRef.length) {\n            const capture = captureRef.map(opts.getObjId);\n            parts.push(`[${capture.join(' ')}]`);\n        }\n    }\n    else if (capture && capture.length > 0) {\n        parts.push(`[${capture.join(' ')}]`);\n    }\n    const qrlString = parts.join('');\n    if (qrl_.chunk === RUNTIME_QRL && element) {\n        const qrls = element.__qrls__ || (element.__qrls__ = new Set());\n        qrls.add(qrl);\n    }\n    return qrlString;\n}\nexport function qrlToUrl(element, qrl) {\n    return new URL(stringifyQRL(qrl), getDocument(element).baseURI);\n}\n/**\n * `./chunk#symbol|symbol.propA.propB|[captures]\n */\nexport function parseQRL(qrl, el) {\n    const endIdx = qrl.length;\n    const hashIdx = indexOf(qrl, 0, '#');\n    const captureIdx = indexOf(qrl, hashIdx, '[');\n    const chunkEndIdx = Math.min(hashIdx, captureIdx);\n    const chunk = qrl.substring(0, chunkEndIdx);\n    const symbolStartIdx = hashIdx == endIdx ? hashIdx : hashIdx + 1;\n    const symbolEndIdx = captureIdx;\n    const symbol = symbolStartIdx == symbolEndIdx ? 'default' : qrl.substring(symbolStartIdx, symbolEndIdx);\n    const captureStartIdx = captureIdx;\n    const captureEndIdx = endIdx;\n    const capture = captureStartIdx === captureEndIdx\n        ? EMPTY_ARRAY\n        : qrl.substring(captureStartIdx + 1, captureEndIdx - 1).split(' ');\n    if (chunk === RUNTIME_QRL) {\n        logError(`Q-ERROR: '${qrl}' is runtime but no instance found on element.`);\n    }\n    const iQrl = new QRLInternal(chunk, symbol, null, null, capture, null);\n    if (el) {\n        iQrl.setContainer(el);\n    }\n    return iQrl;\n}\nfunction indexOf(text, startIdx, char) {\n    const endIdx = text.length;\n    const charIdx = text.indexOf(char, startIdx == endIdx ? 0 : startIdx);\n    return charIdx == -1 ? endIdx : charIdx;\n}\nexport function toQrlOrError(symbolOrQrl) {\n    if (!isQrl(symbolOrQrl)) {\n        if (typeof symbolOrQrl == 'function' || typeof symbolOrQrl == 'string') {\n            symbolOrQrl = runtimeQrl(symbolOrQrl);\n        }\n        else {\n            // TODO(misko): centralize\n            throw new Error(`Q-ERROR Only 'function's and 'string's are supported.`);\n        }\n    }\n    return symbolOrQrl;\n}\n//# sourceMappingURL=data:application/json;base64,","import { toQrlOrError } from '../import/qrl';\nimport { $, implicit$FirstArg } from '../import/qrl.public';\nimport { qPropWriteQRL } from '../props/props-on';\nimport { useWaitOn } from '../use/use-core';\nimport { useHostElement } from '../use/use-host-element.public';\nimport { ComponentScopedStyles, OnRenderProp } from '../util/markers';\nimport { styleKey } from './qrl-styles';\nimport { getContext } from '../props/props';\nimport { jsx } from '../render/jsx/jsx-runtime';\nimport { useSequentialScope } from '../use/use-store.public';\nimport { WatchFlags } from '../watch/watch.public';\n// <docs markdown=\"../readme.md#useCleanup\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useCleanup instead)\n/**\n * A lazy-loadable reference to a component's cleanup hook.\n *\n * Invoked when the component is destroyed (removed from render tree), or paused as part of the\n * SSR serialization.\n *\n * Can be used to release resouces, abort network requets, stop timers...\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   useCleanup$(() => {\n *     // Executed after SSR (pause) or when the component gets removed from the DOM.\n *     // Can be used to release resouces, abort network requets, stop timers...\n *     console.log('component is destroyed');\n *   });\n *   return <div>Hello world</div>;\n * });\n * ```\n *\n * @alpha\n */\n// </docs>\nexport function useCleanupQrl(unmountFn) {\n    const [watch, setWatch] = useSequentialScope();\n    if (!watch) {\n        const el = useHostElement();\n        const watch = {\n            qrl: unmountFn,\n            el,\n            f: WatchFlags.IsCleanup,\n        };\n        setWatch(watch);\n        getContext(el).refMap.add(watch);\n    }\n}\n// <docs markdown=\"../readme.md#useCleanup\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useCleanup instead)\n/**\n * A lazy-loadable reference to a component's cleanup hook.\n *\n * Invoked when the component is destroyed (removed from render tree), or paused as part of the\n * SSR serialization.\n *\n * Can be used to release resouces, abort network requets, stop timers...\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   useCleanup$(() => {\n *     // Executed after SSR (pause) or when the component gets removed from the DOM.\n *     // Can be used to release resouces, abort network requets, stop timers...\n *     console.log('component is destroyed');\n *   });\n *   return <div>Hello world</div>;\n * });\n * ```\n *\n * @alpha\n */\n// </docs>\nexport const useCleanup$ = implicit$FirstArg(useCleanupQrl);\n// <docs markdown=\"../readme.md#useResume\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useResume instead)\n/**\n * A lazy-loadable reference to a component's on resume hook.\n *\n * The hook is eagerly invoked when the application resumes on the client. Because it is called\n * eagerly, this allows the component to resume even if no user interaction has taken place.\n *\n * Only called in the client.\n * Only called once.\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   useResume$(() => {\n *     // Eagerly invoked when the application resumes on the client\n *     console.log('called once in client');\n *   });\n *   return <div>Hello world</div>;\n * });\n * ```\n *\n * @see `useVisible`, `useClientEffect`\n *\n * @alpha\n */\n// </docs>\nexport function useResumeQrl(resumeFn) {\n    useOn('qresume', resumeFn);\n}\n// <docs markdown=\"../readme.md#useResume\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useResume instead)\n/**\n * A lazy-loadable reference to a component's on resume hook.\n *\n * The hook is eagerly invoked when the application resumes on the client. Because it is called\n * eagerly, this allows the component to resume even if no user interaction has taken place.\n *\n * Only called in the client.\n * Only called once.\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   useResume$(() => {\n *     // Eagerly invoked when the application resumes on the client\n *     console.log('called once in client');\n *   });\n *   return <div>Hello world</div>;\n * });\n * ```\n *\n * @see `useVisible`, `useClientEffect`\n *\n * @alpha\n */\n// </docs>\nexport const useResume$ = implicit$FirstArg(useResumeQrl);\n// <docs markdown=\"../readme.md#useVisible\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useVisible instead)\n/**\n * A lazy-loadable reference to a component's on visible hook.\n *\n * The hook is lazily invoked when the component becomes visible in the browser viewport.\n *\n * Only called in the client.\n * Only called once.\n *\n * @see `useResume`, `useClientEffect`\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   const store = useStore({\n *     isVisible: false,\n *   });\n *   useVisible$(() => {\n *     // Invoked once when the component is visible in the browser's viewport\n *     console.log('called once in client when visible');\n *     store.isVisible = true;\n *   });\n *   return <div>{store.isVisible}</div>;\n * });\n * ```\n *\n * @alpha\n */\n// </docs>\nexport function useVisibleQrl(resumeFn) {\n    useOn('qvisible', resumeFn);\n}\n// <docs markdown=\"../readme.md#useVisible\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useVisible instead)\n/**\n * A lazy-loadable reference to a component's on visible hook.\n *\n * The hook is lazily invoked when the component becomes visible in the browser viewport.\n *\n * Only called in the client.\n * Only called once.\n *\n * @see `useResume`, `useClientEffect`\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   const store = useStore({\n *     isVisible: false,\n *   });\n *   useVisible$(() => {\n *     // Invoked once when the component is visible in the browser's viewport\n *     console.log('called once in client when visible');\n *     store.isVisible = true;\n *   });\n *   return <div>{store.isVisible}</div>;\n * });\n * ```\n *\n * @alpha\n */\n// </docs>\nexport const useVisible$ = implicit$FirstArg(useVisibleQrl);\n// <docs markdown=\"../readme.md#useOn\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useOn instead)\n/**\n * Register a listener on the current component's host element.\n *\n * Used to programmatically add event listeners. Useful from custom `use*` methods, which do not\n * have access to the JSX. Otherwise it's adding a JSX listener in the `<Host>` is a better idea.\n *\n * @see `useOn`, `useOnWindow`, `useOnDocument`.\n *\n * @alpha\n */\n// </docs>\nexport function useOn(event, eventFn) {\n    const el = useHostElement();\n    const ctx = getContext(el);\n    qPropWriteQRL(undefined, ctx, `on:${event}`, eventFn);\n}\n// <docs markdown=\"../readme.md#useOnDocument\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useOnDocument instead)\n/**\n * Register a listener on `document`.\n *\n * Used to programmatically add event listeners. Useful from custom `use*` methods, which do not\n * have access to the JSX.\n *\n * @see `useOn`, `useOnWindow`, `useOnDocument`.\n *\n * ```tsx\n * function useScroll() {\n *   useOnDocument(\n *     'scroll',\n *     $(() => {\n *       console.log('body scrolled');\n *     })\n *   );\n * }\n *\n * const Cmp = component$(() => {\n *   useScroll();\n *   return <Host>Profit!</Host>;\n * });\n * ```\n *\n * @alpha\n */\n// </docs>\nexport function useOnDocument(event, eventQrl) {\n    const el = useHostElement();\n    const ctx = getContext(el);\n    qPropWriteQRL(undefined, ctx, `on-document:${event}`, eventQrl);\n}\n// <docs markdown=\"../readme.md#useOnWindow\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useOnWindow instead)\n/**\n * Register a listener on `window`.\n *\n * Used to programmatically add event listeners. Useful from custom `use*` methods, which do not\n * have access to the JSX.\n *\n * @see `useOn`, `useOnWindow`, `useOnDocument`.\n *\n * ```tsx\n * function useAnalytics() {\n *   useOnWindow(\n *     'popstate',\n *     $(() => {\n *       console.log('navigation happened');\n *       // report to analytics\n *     })\n *   );\n * }\n *\n * const Cmp = component$(() => {\n *   useAnalytics();\n *   return <Host>Profit!</Host>;\n * });\n * ```\n *\n * @alpha\n */\n// </docs>\nexport function useOnWindow(event, eventFn) {\n    const el = useHostElement();\n    const ctx = getContext(el);\n    qPropWriteQRL(undefined, ctx, `on-window:${event}`, eventFn);\n}\n// <docs markdown=\"../readme.md#useStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useStyles instead)\n/**\n * A lazy-loadable reference to a component's styles.\n *\n * Component styles allow Qwik to lazy load the style information for the component only when\n * needed. (And avoid double loading it in case of SSR hydration.)\n *\n * ```tsx\n * import styles from './code-block.css?inline';\n *\n * export const CmpStyles = component$(() => {\n *   useStyles$(styles);\n *\n *   return <Host>Some text</Host>;\n * });\n * ```\n *\n * @see `useScopedStyles`.\n *\n * @public\n */\n// </docs>\nexport function useStylesQrl(styles) {\n    _useStyles(styles, false);\n}\n// <docs markdown=\"../readme.md#useStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useStyles instead)\n/**\n * A lazy-loadable reference to a component's styles.\n *\n * Component styles allow Qwik to lazy load the style information for the component only when\n * needed. (And avoid double loading it in case of SSR hydration.)\n *\n * ```tsx\n * import styles from './code-block.css?inline';\n *\n * export const CmpStyles = component$(() => {\n *   useStyles$(styles);\n *\n *   return <Host>Some text</Host>;\n * });\n * ```\n *\n * @see `useScopedStyles`.\n *\n * @public\n */\n// </docs>\nexport const useStyles$ = implicit$FirstArg(useStylesQrl);\n// <docs markdown=\"../readme.md#useScopedStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useScopedStyles instead)\n/**\n * @see `useStyles`.\n *\n * @alpha\n */\n// </docs>\nexport function useScopedStylesQrl(styles) {\n    _useStyles(styles, true);\n}\n// <docs markdown=\"../readme.md#useScopedStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useScopedStyles instead)\n/**\n * @see `useStyles`.\n *\n * @alpha\n */\n// </docs>\nexport const useScopedStyles$ = implicit$FirstArg(useScopedStylesQrl);\n// <docs markdown=\"../readme.md#component\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#component instead)\n/**\n * Declare a Qwik component that can be used to create UI.\n *\n * Use `component$` to declare a Qwik component. A Qwik component is a special kind of component\n * that allows the Qwik framework to lazy load and execute the component independently of other\n * Qwik components as well as lazy load the component's life-cycle hooks and event handlers.\n *\n * Side note: You can also declare regular (standard JSX) components that will have standard\n * synchronous behavior.\n *\n * Qwik component is a facade that describes how the component should be used without forcing the\n * implementation of the component to be eagerly loaded. A minimum Qwik definition consists of:\n *\n * ### Example:\n *\n * An example showing how to create a counter component:\n *\n * ```tsx\n * export interface CounterProps {\n *   initialValue?: number;\n *   step?: number;\n * }\n * export const Counter = component$((props: CounterProps) => {\n *   const state = useStore({ count: props.initialValue || 0 });\n *   return (\n *     <div>\n *       <span>{state.count}</span>\n *       <button onClick$={() => (state.count += props.step || 1)}>+</button>\n *     </div>\n *   );\n * });\n * ```\n *\n * - `component$` is how a component gets declared.\n * - `{ value?: number; step?: number }` declares the public (props) interface of the component.\n * - `{ count: number }` declares the private (state) interface of the component.\n *\n * The above can then be used like so:\n *\n * ```tsx\n * export const OtherComponent = component$(() => {\n *   return <Counter initialValue={100} />;\n * });\n * ```\n *\n * See also: `component`, `useCleanup`, `onResume`, `onPause`, `useOn`, `useOnDocument`,\n * `useOnWindow`, `useStyles`, `useScopedStyles`\n *\n * @public\n */\n// </docs>\nexport function componentQrl(onRenderQrl, options = {}) {\n    const tagName = options.tagName ?? 'div';\n    // Return a QComponent Factory function.\n    return function QSimpleComponent(props, key) {\n        return jsx(tagName, { [OnRenderProp]: onRenderQrl, ...props }, key);\n    };\n}\n// <docs markdown=\"../readme.md#component\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#component instead)\n/**\n * Declare a Qwik component that can be used to create UI.\n *\n * Use `component$` to declare a Qwik component. A Qwik component is a special kind of component\n * that allows the Qwik framework to lazy load and execute the component independently of other\n * Qwik components as well as lazy load the component's life-cycle hooks and event handlers.\n *\n * Side note: You can also declare regular (standard JSX) components that will have standard\n * synchronous behavior.\n *\n * Qwik component is a facade that describes how the component should be used without forcing the\n * implementation of the component to be eagerly loaded. A minimum Qwik definition consists of:\n *\n * ### Example:\n *\n * An example showing how to create a counter component:\n *\n * ```tsx\n * export interface CounterProps {\n *   initialValue?: number;\n *   step?: number;\n * }\n * export const Counter = component$((props: CounterProps) => {\n *   const state = useStore({ count: props.initialValue || 0 });\n *   return (\n *     <div>\n *       <span>{state.count}</span>\n *       <button onClick$={() => (state.count += props.step || 1)}>+</button>\n *     </div>\n *   );\n * });\n * ```\n *\n * - `component$` is how a component gets declared.\n * - `{ value?: number; step?: number }` declares the public (props) interface of the component.\n * - `{ count: number }` declares the private (state) interface of the component.\n *\n * The above can then be used like so:\n *\n * ```tsx\n * export const OtherComponent = component$(() => {\n *   return <Counter initialValue={100} />;\n * });\n * ```\n *\n * See also: `component`, `useCleanup`, `onResume`, `onPause`, `useOn`, `useOnDocument`,\n * `useOnWindow`, `useStyles`, `useScopedStyles`\n *\n * @public\n */\n// </docs>\nexport function component$(onMount, options) {\n    return componentQrl($(onMount), options);\n}\nfunction _useStyles(styles, scoped) {\n    const [style, setStyle] = useSequentialScope();\n    if (style === true) {\n        return;\n    }\n    setStyle(true);\n    const styleQrl = toQrlOrError(styles);\n    const styleId = styleKey(styleQrl);\n    const hostElement = useHostElement();\n    if (scoped) {\n        hostElement.setAttribute(ComponentScopedStyles, styleId);\n    }\n    useWaitOn(styleQrl.resolve(hostElement).then((styleText) => {\n        const task = {\n            type: 'style',\n            styleId,\n            content: scoped ? styleText.replace(/�/g, styleId) : styleText,\n        };\n        return task;\n    }));\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LnB1YmxpYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvcXdpay9zcmMvY29yZS9jb21wb25lbnQvY29tcG9uZW50LnB1YmxpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdDLE9BQU8sRUFBRSxDQUFDLEVBQUUsaUJBQWlCLEVBQU8sTUFBTSxzQkFBc0IsQ0FBQztBQUNqRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFbEQsT0FBTyxFQUFlLFNBQVMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3pELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNoRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdEUsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUd4QyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFNUMsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzdELE9BQU8sRUFBbUIsVUFBVSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFcEUsNENBQTRDO0FBQzVDLHlDQUF5QztBQUN6Qyx5Q0FBeUM7QUFDekM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBb0JHO0FBQ0gsVUFBVTtBQUNWLE1BQU0sVUFBVSxhQUFhLENBQUMsU0FBMEI7SUFDdEQsTUFBTSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsR0FBRyxrQkFBa0IsRUFBRSxDQUFDO0lBQy9DLElBQUksQ0FBQyxLQUFLLEVBQUU7UUFDVixNQUFNLEVBQUUsR0FBRyxjQUFjLEVBQUUsQ0FBQztRQUM1QixNQUFNLEtBQUssR0FBb0I7WUFD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O0lBQ2QsQ0FBQyxDQUFDLENBQ0gsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0b1FybE9yRXJyb3IgfSBmcm9tICcuLi9pbXBvcnQvcXJsJztcbmltcG9ydCB7ICQsIGltcGxpY2l0JEZpcnN0QXJnLCBRUkwgfSBmcm9tICcuLi9pbXBvcnQvcXJsLnB1YmxpYyc7XG5pbXBvcnQgeyBxUHJvcFdyaXRlUVJMIH0gZnJvbSAnLi4vcHJvcHMvcHJvcHMtb24nO1xuaW1wb3J0IHR5cGUgeyBKU1hOb2RlIH0gZnJvbSAnLi4vcmVuZGVyL2pzeC90eXBlcy9qc3gtbm9kZSc7XG5pbXBvcnQgeyBTdHlsZUFwcGVuZCwgdXNlV2FpdE9uIH0gZnJvbSAnLi4vdXNlL3VzZS1jb3JlJztcbmltcG9ydCB7IHVzZUhvc3RFbGVtZW50IH0gZnJvbSAnLi4vdXNlL3VzZS1ob3N0LWVsZW1lbnQucHVibGljJztcbmltcG9ydCB7IENvbXBvbmVudFNjb3BlZFN0eWxlcywgT25SZW5kZXJQcm9wIH0gZnJvbSAnLi4vdXRpbC9tYXJrZXJzJztcbmltcG9ydCB7IHN0eWxlS2V5IH0gZnJvbSAnLi9xcmwtc3R5bGVzJztcbmltcG9ydCB0eXBlIHsgQ29tcG9uZW50QmFzZVByb3BzIH0gZnJvbSAnLi4vcmVuZGVyL2pzeC90eXBlcy9qc3gtcXdpay1hdHRyaWJ1dGVzJztcbmltcG9ydCB0eXBlIHsgVmFsdWVPclByb21pc2UgfSBmcm9tICcuLi91dGlsL3R5cGVzJztcbmltcG9ydCB7IGdldENvbnRleHQgfSBmcm9tICcuLi9wcm9wcy9wcm9wcyc7XG5pbXBvcnQgdHlwZSB7IEZ1bmN0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi4vcmVuZGVyL2pzeC90eXBlcy9qc3gtbm9kZSc7XG5pbXBvcnQgeyBqc3ggfSBmcm9tICcuLi9yZW5kZXIvanN4L2pzeC1ydW50aW1lJztcbmltcG9ydCB7IHVzZVNlcXVlbnRpYWxTY29wZSB9IGZyb20gJy4uL3VzZS91c2Utc3RvcmUucHVibGljJztcbmltcG9ydCB7IFdhdGNoRGVzY3JpcHRvciwgV2F0Y2hGbGFncyB9IGZyb20gJy4uL3dhdGNoL3dhdGNoLnB1YmxpYyc7XG5cbi8vIDxkb2NzIG1hcmtkb3duPVwiLi4vcmVhZG1lLm1kI3VzZUNsZWFudXBcIj5cbi8vICEhRE8gTk9UIEVESVQgVEhJUyBDT01NRU5UIERJUkVDVExZISEhXG4vLyAoZWRpdCAuLi9yZWFkbWUubWQjdXNlQ2xlYW51cCBpbnN0ZWFkKVxuLyoqXG4gKiBBIGxhenktbG9hZGFibGUgcmVmZXJlbmNlIHRvIGEgY29tcG9uZW50J3MgY2xlYW51cCBob29rLlxuICpcbiAqIEludm9rZWQgd2hlbiB0aGUgY29tcG9uZW50IGlzIGRlc3Ryb3llZCAocmVtb3ZlZCBmcm9tIHJlbmRlciB0cmVlKSwgb3IgcGF1c2VkIGFzIHBhcnQgb2YgdGhlXG4gKiBTU1Igc2VyaWFsaXphdGlvbi5cbiAqXG4gKiBDYW4gYmUgdXNlZCB0byByZWxlYXNlIHJlc291Y2VzLCBhYm9ydCBuZXR3b3JrIHJlcXVldHMsIHN0b3AgdGltZXJzLi4uXG4gKlxuICogYGBgdHN4XG4gKiBjb25zdCBDbXAgPSBjb21wb25lbnQkKCgpID0+IHtcbiAqICAgdXNlQ2xlYW51cCQoKCkgPT4ge1xuICogICAgIC8vIEV4ZWN1dGVkIGFmdGVyIFNTUiAocGF1c2UpIG9yIHdoZW4gdGhlIGNvbXBvbmVudCBnZXRzIHJlbW92ZWQgZnJvbSB0aGUgRE9NLlxuICogICAgIC8vIENhbiBiZSB1c2VkIHRvIHJlbGVhc2UgcmVzb3VjZXMsIGFib3J0IG5ldHdvcmsgcmVxdWV0cywgc3RvcCB0aW1lcnMuLi5cbiAqICAgICBjb25zb2xlLmxvZygnY29tcG9uZW50IGlzIGRlc3Ryb3llZCcpO1xuICogICB9KTtcbiAqICAgcmV0dXJuIDxkaXY+SGVsbG8gd29ybGQ8L2Rpdj47XG4gKiB9KTtcbiAqIGBgYFxuICpcbiAqIEBhbHBoYVxuICovXG4vLyA8L2RvY3M+XG5leHBvcnQgZnVuY3Rpb24gdXNlQ2xlYW51cFFybCh1bm1vdW50Rm46IFFSTDwoKSA9PiB2b2lkPik6IHZvaWQge1xuICBjb25zdCBbd2F0Y2gsIHNldFdhdGNoXSA9IHVzZVNlcXVlbnRpYWxTY29wZSgpO1xuICBpZiAoIXdhdGNoKSB7XG4gICAgY29uc3QgZWwgPSB1c2VIb3N0RWxlbWVudCgpO1xuICAgIGNvbnN0IHdhdGNoOiBXYXRjaERlc2NyaXB0b3IgPSB7XG4gICAgICBxcmw6IHVubW91bnRGbixcbiAgICAgIGVsLFxuICAgICAgZjogV2F0Y2hGbGFncy5Jc0NsZWFudXAsXG4gICAgfTtcbiAgICBzZXRXYXRjaCh3YXRjaCk7XG4gICAgZ2V0Q29udGV4dChlbCkucmVmTWFwLmFkZCh3YXRjaCk7XG4gIH1cbn1cblxuLy8gPGRvY3MgbWFya2Rvd249XCIuLi9yZWFkbWUubWQjdXNlQ2xlYW51cFwiPlxuLy8gISFETyBOT1QgRURJVCBUSElTIENPTU1FTlQgRElSRUNUTFkhISFcbi8vIChlZGl0IC4uL3JlYWRtZS5tZCN1c2VDbGVhbnVwIGluc3RlYWQpXG4vKipcbiAqIEEgbGF6eS1sb2FkYWJsZSByZWZlcmVuY2UgdG8gYSBjb21wb25lbnQncyBjbGVhbnVwIGhvb2suXG4gKlxuICogSW52b2tlZCB3aGVuIHRoZSBjb21wb25lbnQgaXMgZGVzdHJveWVkIChyZW1vdmVkIGZyb20gcmVuZGVyIHRyZWUpLCBvciBwYXVzZWQgYXMgcGFydCBvZiB0aGVcbiAqIFNTUiBzZXJpYWxpemF0aW9uLlxuICpcbiAqIENhbiBiZSB1c2VkIHRvIHJlbGVhc2UgcmVzb3VjZXMsIGFib3J0IG5ldHdvcmsgcmVxdWV0cywgc3RvcCB0aW1lcnMuLi5cbiAqXG4gKiBgYGB0c3hcbiAqIGNvbnN0IENtcCA9IGNvbXBvbmVudCQoKCkgPT4ge1xuICogICB1c2VDbGVhbnVwJCgoKSA9PiB7XG4gKiAgICAgLy8gRXhlY3V0ZWQgYWZ0ZXIgU1NSIChwYXVzZSkgb3Igd2hlbiB0aGUgY29tcG9uZW50IGdldHMgcmVtb3ZlZCBmcm9tIHRoZSBET00uXG4gKiAgICAgLy8gQ2FuIGJlIHVzZWQgdG8gcmVsZWFzZSByZXNvdWNlcywgYWJvcnQgbmV0d29yayByZXF1ZXRzLCBzdG9wIHRpbWVycy4uLlxuICogICAgIGNvbnNvbGUubG9nKCdjb21wb25lbnQgaXMgZGVzdHJveWVkJyk7XG4gKiAgIH0pO1xuICogICByZXR1cm4gPGRpdj5IZWxsbyB3b3JsZDwvZGl2PjtcbiAqIH0pO1xuICogYGBgXG4gKlxuICogQGFscGhhXG4gKi9cbi8vIDwvZG9jcz5cbmV4cG9ydCBjb25zdCB1c2VDbGVhbnVwJCA9IGltcGxpY2l0JEZpcnN0QXJnKHVzZUNsZWFudXBRcmwpO1xuXG4vLyA8ZG9jcyBtYXJrZG93bj1cIi4uL3JlYWRtZS5tZCN1c2VSZXN1bWVcIj5cbi8vICEhRE8gTk9UIEVESVQgVEhJUyBDT01NRU5UIERJUkVDVExZISEhXG4vLyAoZWRpdCAuLi9yZWFkbWUubWQjdXNlUmVzdW1lIGluc3RlYWQpXG4vKipcbiAqIEEgbGF6eS1sb2FkYWJsZSByZWZlcmVuY2UgdG8gYSBjb21wb25lbnQncyBvbiByZXN1bWUgaG9vay5cbiAqXG4gKiBUaGUgaG9vayBpcyBlYWdlcmx5IGludm9rZWQgd2hlbiB0aGUgYXBwbGljYXRpb24gcmVzdW1lcyBvbiB0aGUgY2xpZW50LiBCZWNhdXNlIGl0IGlzIGNhbGxlZFxuICogZWFnZXJseSwgdGhpcyBhbGxvd3MgdGhlIGNvbXBvbmVudCB0byByZXN1bWUgZXZlbiBpZiBubyB1c2VyIGludGVyYWN0aW9uIGhhcyB0YWtlbiBwbGFjZS5cbiAqXG4gKiBPbmx5IGNhbGxlZCBpbiB0aGUgY2xpZW50LlxuICogT25seSBjYWxsZWQgb25jZS5cbiAqXG4gKiBgYGB0c3hcbiAqIGNvbnN0IENtcCA9IGNvbXBvbmVudCQoKCkgPT4ge1xuICogICB1c2VSZXN1bWUkKCgpID0+IHtcbiAqICAgICAvLyBFYWdlcmx5IGludm9rZWQgd2hlbiB0aGUgYXBwbGljYXRpb24gcmVzdW1lcyBvbiB0aGUgY2xpZW50XG4gKiAgICAgY29uc29sZS5sb2coJ2NhbGxlZCBvbmNlIGluIGNsaWVudCcpO1xuICogICB9KTtcbiAqICAgcmV0dXJuIDxkaXY+SGVsbG8gd29ybGQ8L2Rpdj47XG4gKiB9KTtcbiAqIGBgYFxuICpcbiAqIEBzZWUgYHVzZVZpc2libGVgLCBgdXNlQ2xpZW50RWZmZWN0YFxuICpcbiAqIEBhbHBoYVxuICovXG4vLyA8L2RvY3M+XG5leHBvcnQgZnVuY3Rpb24gdXNlUmVzdW1lUXJsKHJlc3VtZUZuOiBRUkw8KCkgPT4gdm9pZD4pOiB2b2lkIHtcbiAgdXNlT24oJ3FyZXN1bWUnLCByZXN1bWVGbik7XG59XG5cbi8vIDxkb2NzIG1hcmtkb3duPVwiLi4vcmVhZG1lLm1kI3VzZVJlc3VtZVwiPlxuLy8gISFETyBOT1QgRURJVCBUSElTIENPTU1FTlQgRElSRUNUTFkhISFcbi8vIChlZGl0IC4uL3JlYWRtZS5tZCN1c2VSZXN1bWUgaW5zdGVhZClcbi8qKlxuICogQSBsYXp5LWxvYWRhYmxlIHJlZmVyZW5jZSB0byBhIGNvbXBvbmVudCdzIG9uIHJlc3VtZSBob29rLlxuICpcbiAqIFRoZSBob29rIGlzIGVhZ2VybHkgaW52b2tlZCB3aGVuIHRoZSBhcHBsaWNhdGlvbiByZXN1bWVzIG9uIHRoZSBjbGllbnQuIEJlY2F1c2UgaXQgaXMgY2FsbGVkXG4gKiBlYWdlcmx5LCB0aGlzIGFsbG93cyB0aGUgY29tcG9uZW50IHRvIHJlc3VtZSBldmVuIGlmIG5vIHVzZXIgaW50ZXJhY3Rpb24gaGFzIHRha2VuIHBsYWNlLlxuICpcbiAqIE9ubHkgY2FsbGVkIGluIHRoZSBjbGllbnQuXG4gKiBPbmx5IGNhbGxlZCBvbmNlLlxuICpcbiAqIGBgYHRzeFxuICogY29uc3QgQ21wID0gY29tcG9uZW50JCgoKSA9PiB7XG4gKiAgIHVzZVJlc3VtZSQoKCkgPT4ge1xuICogICAgIC8vIEVhZ2VybHkgaW52b2tlZCB3aGVuIHRoZSBhcHBsaWNhdGlvbiByZXN1bWVzIG9uIHRoZSBjbGllbnRcbiAqICAgICBjb25zb2xlLmxvZygnY2FsbGVkIG9uY2UgaW4gY2xpZW50Jyk7XG4gKiAgIH0pO1xuICogICByZXR1cm4gPGRpdj5IZWxsbyB3b3JsZDwvZGl2PjtcbiAqIH0pO1xuICogYGBgXG4gKlxuICogQHNlZSBgdXNlVmlzaWJsZWAsIGB1c2VDbGllbnRFZmZlY3RgXG4gKlxuICogQGFscGhhXG4gKi9cbi8vIDwvZG9jcz5cbmV4cG9ydCBjb25zdCB1c2VSZXN1bWUkID0gaW1wbGljaXQkRmlyc3RBcmcodXNlUmVzdW1lUXJsKTtcblxuLy8gPGRvY3MgbWFya2Rvd249XCIuLi9yZWFkbWUubWQjdXNlVmlzaWJsZVwiPlxuLy8gISFETyBOT1QgRURJVCBUSElTIENPTU1FTlQgRElSRUNUTFkhISFcbi8vIChlZGl0IC4uL3JlYWRtZS5tZCN1c2VWaXNpYmxlIGluc3RlYWQpXG4vKipcbiAqIEEgbGF6eS1sb2FkYWJsZSByZWZlcmVuY2UgdG8gYSBjb21wb25lbnQncyBvbiB2aXNpYmxlIGhvb2suXG4gKlxuICogVGhlIGhvb2sgaXMgbGF6aWx5IGludm9rZWQgd2hlbiB0aGUgY29tcG9uZW50IGJlY29tZXMgdmlzaWJsZSBpbiB0aGUgYnJvd3NlciB2aWV3cG9ydC5cbiAqXG4gKiBPbmx5IGNhbGxlZCBpbiB0aGUgY2xpZW50LlxuICogT25seSBjYWxsZWQgb25jZS5cbiAqXG4gKiBAc2VlIGB1c2VSZXN1bWVgLCBgdXNlQ2xpZW50RWZmZWN0YFxuICpcbiAqIGBgYHRzeFxuICogY29uc3QgQ21wID0gY29tcG9uZW50JCgoKSA9PiB7XG4gKiAgIGNvbnN0IHN0b3JlID0gdXNlU3RvcmUoe1xuICogICAgIGlzVmlzaWJsZTogZmFsc2UsXG4gKiAgIH0pO1xuICogICB1c2VWaXNpYmxlJCgoKSA9PiB7XG4gKiAgICAgLy8gSW52b2tlZCBvbmNlIHdoZW4gdGhlIGNvbXBvbmVudCBpcyB2aXNpYmxlIGluIHRoZSBicm93c2VyJ3Mgdmlld3BvcnRcbiAqICAgICBjb25zb2xlLmxvZygnY2FsbGVkIG9uY2UgaW4gY2xpZW50IHdoZW4gdmlzaWJsZScpO1xuICogICAgIHN0b3JlLmlzVmlzaWJsZSA9IHRydWU7XG4gKiAgIH0pO1xuICogICByZXR1cm4gPGRpdj57c3RvcmUuaXNWaXNpYmxlfTwvZGl2PjtcbiAqIH0pO1xuICogYGBgXG4gKlxuICogQGFscGhhXG4gKi9cbi8vIDwvZG9jcz5cbmV4cG9ydCBmdW5jdGlvbiB1c2VWaXNpYmxlUXJsKHJlc3VtZUZuOiBRUkw8KCkgPT4gdm9pZD4pOiB2b2lkIHtcbiAgdXNlT24oJ3F2aXNpYmxlJywgcmVzdW1lRm4pO1xufVxuXG4vLyA8ZG9jcyBtYXJrZG93bj1cIi4uL3JlYWRtZS5tZCN1c2VWaXNpYmxlXCI+XG4vLyAhIURPIE5PVCBFRElUIFRISVMgQ09NTUVOVCBESVJFQ1RMWSEhIVxuLy8gKGVkaXQgLi4vcmVhZG1lLm1kI3VzZVZpc2libGUgaW5zdGVhZClcbi8qKlxuICogQSBsYXp5LWxvYWRhYmxlIHJlZmVyZW5jZSB0byBhIGNvbXBvbmVudCdzIG9uIHZpc2libGUgaG9vay5cbiAqXG4gKiBUaGUgaG9vayBpcyBsYXppbHkgaW52b2tlZCB3aGVuIHRoZSBjb21wb25lbnQgYmVjb21lcyB2aXNpYmxlIGluIHRoZSBicm93c2VyIHZpZXdwb3J0LlxuICpcbiAqIE9ubHkgY2FsbGVkIGluIHRoZSBjbGllbnQuXG4gKiBPbmx5IGNhbGxlZCBvbmNlLlxuICpcbiAqIEBzZWUgYHVzZVJlc3VtZWAsIGB1c2VDbGllbnRFZmZlY3RgXG4gKlxuICogYGBgdHN4XG4gKiBjb25zdCBDbXAgPSBjb21wb25lbnQkKCgpID0+IHtcbiAqICAgY29uc3Qgc3RvcmUgPSB1c2VTdG9yZSh7XG4gKiAgICAgaXNWaXNpYmxlOiBmYWxzZSxcbiAqICAgfSk7XG4gKiAgIHVzZVZpc2libGUkKCgpID0+IHtcbiAqICAgICAvLyBJbnZva2VkIG9uY2Ugd2hlbiB0aGUgY29tcG9uZW50IGlzIHZpc2libGUgaW4gdGhlIGJyb3dzZXIncyB2aWV3cG9ydFxuICogICAgIGNvbnNvbGUubG9nKCdjYWxsZWQgb25jZSBpbiBjbGllbnQgd2hlbiB2aXNpYmxlJyk7XG4gKiAgICAgc3RvcmUuaXNWaXNpYmxlID0gdHJ1ZTtcbiAqICAgfSk7XG4gKiAgIHJldHVybiA8ZGl2PntzdG9yZS5pc1Zpc2libGV9PC9kaXY+O1xuICogfSk7XG4gKiBgYGBcbiAqXG4gKiBAYWxwaGFcbiAqL1xuLy8gPC9kb2NzPlxuZXhwb3J0IGNvbnN0IHVzZVZpc2libGUkID0gaW1wbGljaXQkRmlyc3RBcmcodXNlVmlzaWJsZVFybCk7XG5cbi8vIDxkb2NzIG1hcmtkb3duPVwiLi4vcmVhZG1lLm1kI3VzZU9uXCI+XG4vLyAhIURPIE5PVCBFRElUIFRISVMgQ09NTUVOVCBESVJFQ1RMWSEhIVxuLy8gKGVkaXQgLi4vcmVhZG1lLm1kI3VzZU9uIGluc3RlYWQpXG4vKipcbiAqIFJlZ2lzdGVyIGEgbGlzdGVuZXIgb24gdGhlIGN1cnJlbnQgY29tcG9uZW50J3MgaG9zdCBlbGVtZW50LlxuICpcbiAqIFVzZWQgdG8gcHJvZ3JhbW1hdGljYWxseSBhZGQgZXZlbnQgbGlzdGVuZXJzLiBVc2VmdWwgZnJvbSBjdXN0b20gYHVzZSpgIG1ldGhvZHMsIHdoaWNoIGRvIG5vdFxuICogaGF2ZSBhY2Nlc3MgdG8gdGhlIEpTWC4gT3RoZXJ3aXNlIGl0J3MgYWRkaW5nIGEgSlNYIGxpc3RlbmVyIGluIHRoZSBgPEhvc3Q+YCBpcyBhIGJldHRlciBpZGVhLlxuICpcbiAqIEBzZWUgYHVzZU9uYCwgYHVzZU9uV2luZG93YCwgYHVzZU9uRG9jdW1lbnRgLlxuICpcbiAqIEBhbHBoYVxuICovXG4vLyA8L2RvY3M+XG5leHBvcnQgZnVuY3Rpb24gdXNlT24oZXZlbnQ6IHN0cmluZywgZXZlbnRGbjogUVJMPCgpID0+IHZvaWQ+KSB7XG4gIGNvbnN0IGVsID0gdXNlSG9zdEVsZW1lbnQoKTtcbiAgY29uc3QgY3R4ID0gZ2V0Q29udGV4dChlbCk7XG4gIHFQcm9wV3JpdGVRUkwodW5kZWZpbmVkLCBjdHgsIGBvbjoke2V2ZW50fWAsIGV2ZW50Rm4pO1xufVxuXG4vLyA8ZG9jcyBtYXJrZG93bj1cIi4uL3JlYWRtZS5tZCN1c2VPbkRvY3VtZW50XCI+XG4vLyAhIURPIE5PVCBFRElUIFRISVMgQ09NTUVOVCBESVJFQ1RMWSEhIVxuLy8gKGVkaXQgLi4vcmVhZG1lLm1kI3VzZU9uRG9jdW1lbnQgaW5zdGVhZClcbi8qKlxuICogUmVnaXN0ZXIgYSBsaXN0ZW5lciBvbiBgZG9jdW1lbnRgLlxuICpcbiAqIFVzZWQgdG8gcHJvZ3JhbW1hdGljYWxseSBhZGQgZXZlbnQgbGlzdGVuZXJzLiBVc2VmdWwgZnJvbSBjdXN0b20gYHVzZSpgIG1ldGhvZHMsIHdoaWNoIGRvIG5vdFxuICogaGF2ZSBhY2Nlc3MgdG8gdGhlIEpTWC5cbiAqXG4gKiBAc2VlIGB1c2VPbmAsIGB1c2VPbldpbmRvd2AsIGB1c2VPbkRvY3VtZW50YC5cbiAqXG4gKiBgYGB0c3hcbiAqIGZ1bmN0aW9uIHVzZVNjcm9sbCgpIHtcbiAqICAgdXNlT25Eb2N1bWVudChcbiAqICAgICAnc2Nyb2xsJyxcbiAqICAgICAkKCgpID0+IHtcbiAqICAgICAgIGNvbnNvbGUubG9nKCdib2R5IHNjcm9sbGVkJyk7XG4gKiAgICAgfSlcbiAqICAgKTtcbiAqIH1cbiAqXG4gKiBjb25zdCBDbXAgPSBjb21wb25lbnQkKCgpID0+IHtcbiAqICAgdXNlU2Nyb2xsKCk7XG4gKiAgIHJldHVybiA8SG9zdD5Qcm9maXQhPC9Ib3N0PjtcbiAqIH0pO1xuICogYGBgXG4gKlxuICogQGFscGhhXG4gKi9cbi8vIDwvZG9jcz5cbmV4cG9ydCBmdW5jdGlvbiB1c2VPbkRvY3VtZW50KGV2ZW50OiBzdHJpbmcsIGV2ZW50UXJsOiBRUkw8KCkgPT4gdm9pZD4pIHtcbiAgY29uc3QgZWwgPSB1c2VIb3N0RWxlbWVudCgpO1xuICBjb25zdCBjdHggPSBnZXRDb250ZXh0KGVsKTtcbiAgcVByb3BXcml0ZVFSTCh1bmRlZmluZWQsIGN0eCwgYG9uLWRvY3VtZW50OiR7ZXZlbnR9YCwgZXZlbnRRcmwpO1xufVxuXG4vLyA8ZG9jcyBtYXJrZG93bj1cIi4uL3JlYWRtZS5tZCN1c2VPbldpbmRvd1wiPlxuLy8gISFETyBOT1QgRURJVCBUSElTIENPTU1FTlQgRElSRUNUTFkhISFcbi8vIChlZGl0IC4uL3JlYWRtZS5tZCN1c2VPbldpbmRvdyBpbnN0ZWFkKVxuLyoqXG4gKiBSZWdpc3RlciBhIGxpc3RlbmVyIG9uIGB3aW5kb3dgLlxuICpcbiAqIFVzZWQgdG8gcHJvZ3JhbW1hdGljYWxseSBhZGQgZXZlbnQgbGlzdGVuZXJzLiBVc2VmdWwgZnJvbSBjdXN0b20gYHVzZSpgIG1ldGhvZHMsIHdoaWNoIGRvIG5vdFxuICogaGF2ZSBhY2Nlc3MgdG8gdGhlIEpTWC5cbiAqXG4gKiBAc2VlIGB1c2VPbmAsIGB1c2VPbldpbmRvd2AsIGB1c2VPbkRvY3VtZW50YC5cbiAqXG4gKiBgYGB0c3hcbiAqIGZ1bmN0aW9uIHVzZUFuYWx5dGljcygpIHtcbiAqICAgdXNlT25XaW5kb3coXG4gKiAgICAgJ3BvcHN0YXRlJyxcbiAqICAgICAkKCgpID0+IHtcbiAqICAgICAgIGNvbnNvbGUubG9nKCduYXZpZ2F0aW9uIGhhcHBlbmVkJyk7XG4gKiAgICAgICAvLyByZXBvcnQgdG8gYW5hbHl0aWNzXG4gKiAgICAgfSlcbiAqICAgKTtcbiAqIH1cbiAqXG4gKiBjb25zdCBDbXAgPSBjb21wb25lbnQkKCgpID0+IHtcbiAqICAgdXNlQW5hbHl0aWNzKCk7XG4gKiAgIHJldHVybiA8SG9zdD5Qcm9maXQhPC9Ib3N0PjtcbiAqIH0pO1xuICogYGBgXG4gKlxuICogQGFscGhhXG4gKi9cbi8vIDwvZG9jcz5cbmV4cG9ydCBmdW5jdGlvbiB1c2VPbldpbmRvdyhldmVudDogc3RyaW5nLCBldmVudEZuOiBRUkw8KCkgPT4gdm9pZD4pIHtcbiAgY29uc3QgZWwgPSB1c2VIb3N0RWxlbWVudCgpO1xuICBjb25zdCBjdHggPSBnZXRDb250ZXh0KGVsKTtcbiAgcVByb3BXcml0ZVFSTCh1bmRlZmluZWQsIGN0eCwgYG9uLXdpbmRvdzoke2V2ZW50fWAsIGV2ZW50Rm4pO1xufVxuXG4vLyA8ZG9jcyBtYXJrZG93bj1cIi4uL3JlYWRtZS5tZCN1c2VTdHlsZXNcIj5cbi8vICEhRE8gTk9UIEVESVQgVEhJUyBDT01NRU5UIERJUkVDVExZISEhXG4vLyAoZWRpdCAuLi9yZWFkbWUubWQjdXNlU3R5bGVzIGluc3RlYWQpXG4vKipcbiAqIEEgbGF6eS1sb2FkYWJsZSByZWZlcmVuY2UgdG8gYSBjb21wb25lbnQncyBzdHlsZXMuXG4gKlxuICogQ29tcG9uZW50IHN0eWxlcyBhbGxvdyBRd2lrIHRvIGxhenkgbG9hZCB0aGUgc3R5bGUgaW5mb3JtYXRpb24gZm9yIHRoZSBjb21wb25lbnQgb25seSB3aGVuXG4gKiBuZWVkZWQuIChBbmQgYXZvaWQgZG91YmxlIGxvYWRpbmcgaXQgaW4gY2FzZSBvZiBTU1IgaHlkcmF0aW9uLilcbiAqXG4gKiBgYGB0c3hcbiAqIGltcG9ydCBzdHlsZXMgZnJvbSAnLi9jb2RlLWJsb2NrLmNzcz9pbmxpbmUnO1xuICpcbiAqIGV4cG9ydCBjb25zdCBDbXBTdHlsZXMgPSBjb21wb25lbnQkKCgpID0+IHtcbiAqICAgdXNlU3R5bGVzJChzdHlsZXMpO1xuICpcbiAqICAgcmV0dXJuIDxIb3N0PlNvbWUgdGV4dDwvSG9zdD47XG4gKiB9KTtcbiAqIGBgYFxuICpcbiAqIEBzZWUgYHVzZVNjb3BlZFN0eWxlc2AuXG4gKlxuICogQHB1YmxpY1xuICovXG4vLyA8L2RvY3M+XG5leHBvcnQgZnVuY3Rpb24gdXNlU3R5bGVzUXJsKHN0eWxlczogUVJMPHN0cmluZz4pOiB2b2lkIHtcbiAgX3VzZVN0eWxlcyhzdHlsZXMsIGZhbHNlKTtcbn1cblxuLy8gPGRvY3MgbWFya2Rvd249XCIuLi9yZWFkbWUubWQjdXNlU3R5bGVzXCI+XG4vLyAhIURPIE5PVCBFRElUIFRISVMgQ09NTUVOVCBESVJFQ1RMWSEhIVxuLy8gKGVkaXQgLi4vcmVhZG1lLm1kI3VzZVN0eWxlcyBpbnN0ZWFkKVxuLyoqXG4gKiBBIGxhenktbG9hZGFibGUgcmVmZXJlbmNlIHRvIGEgY29tcG9uZW50J3Mgc3R5bGVzLlxuICpcbiAqIENvbXBvbmVudCBzdHlsZXMgYWxsb3cgUXdpayB0byBsYXp5IGxvYWQgdGhlIHN0eWxlIGluZm9ybWF0aW9uIGZvciB0aGUgY29tcG9uZW50IG9ubHkgd2hlblxuICogbmVlZGVkLiAoQW5kIGF2b2lkIGRvdWJsZSBsb2FkaW5nIGl0IGluIGNhc2Ugb2YgU1NSIGh5ZHJhdGlvbi4pXG4gKlxuICogYGBgdHN4XG4gKiBpbXBvcnQgc3R5bGVzIGZyb20gJy4vY29kZS1ibG9jay5jc3M/aW5saW5lJztcbiAqXG4gKiBleHBvcnQgY29uc3QgQ21wU3R5bGVzID0gY29tcG9uZW50JCgoKSA9PiB7XG4gKiAgIHVzZVN0eWxlcyQoc3R5bGVzKTtcbiAqXG4gKiAgIHJldHVybiA8SG9zdD5Tb21lIHRleHQ8L0hvc3Q+O1xuICogfSk7XG4gKiBgYGBcbiAqXG4gKiBAc2VlIGB1c2VTY29wZWRTdHlsZXNgLlxuICpcbiAqIEBwdWJsaWNcbiAqL1xuLy8gPC9kb2NzPlxuZXhwb3J0IGNvbnN0IHVzZVN0eWxlcyQgPSBpbXBsaWNpdCRGaXJzdEFyZyh1c2VTdHlsZXNRcmwpO1xuXG4vLyA8ZG9jcyBtYXJrZG93bj1cIi4uL3JlYWRtZS5tZCN1c2VTY29wZWRTdHlsZXNcIj5cbi8vICEhRE8gTk9UIEVESVQgVEhJUyBDT01NRU5UIERJUkVDVExZISEhXG4vLyAoZWRpdCAuLi9yZWFkbWUubWQjdXNlU2NvcGVkU3R5bGVzIGluc3RlYWQpXG4vKipcbiAqIEBzZWUgYHVzZVN0eWxlc2AuXG4gKlxuICogQGFscGhhXG4gKi9cbi8vIDwvZG9jcz5cbmV4cG9ydCBmdW5jdGlvbiB1c2VTY29wZWRTdHlsZXNRcmwoc3R5bGVzOiBRUkw8c3RyaW5nPik6IHZvaWQge1xuICBfdXNlU3R5bGVzKHN0eWxlcywgdHJ1ZSk7XG59XG5cbi8vIDxkb2NzIG1hcmtkb3duPVwiLi4vcmVhZG1lLm1kI3VzZVNjb3BlZFN0eWxlc1wiPlxuLy8gISFETyBOT1QgRURJVCBUSElTIENPTU1FTlQgRElSRUNUTFkhISFcbi8vIChlZGl0IC4uL3JlYWRtZS5tZCN1c2VTY29wZWRTdHlsZXMgaW5zdGVhZClcbi8qKlxuICogQHNlZSBgdXNlU3R5bGVzYC5cbiAqXG4gKiBAYWxwaGFcbiAqL1xuLy8gPC9kb2NzPlxuZXhwb3J0IGNvbnN0IHVzZVNjb3BlZFN0eWxlcyQgPSBpbXBsaWNpdCRGaXJzdEFyZyh1c2VTY29wZWRTdHlsZXNRcmwpO1xuXG4vKipcbiAqIEluZmVycyBgUHJvcHNgIGZyb20gdGhlIGNvbXBvbmVudC5cbiAqXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBleHBvcnQgY29uc3QgT3RoZXJDb21wb25lbnQgPSBjb21wb25lbnQkKCgpID0+IHtcbiAqICAgcmV0dXJuICQoKCkgPT4gPENvdW50ZXIgdmFsdWU9ezEwMH0gLz4pO1xuICogfSk7XG4gKiBgYGBcbiAqXG4gKiBAcHVibGljXG4gKi9cbi8vIDwvZG9jcz5cbmV4cG9ydCB0eXBlIFByb3BzT2Y8Q09NUCBleHRlbmRzIChwcm9wczogYW55KSA9PiBKU1hOb2RlPGFueT4gfCBudWxsPiA9IENPTVAgZXh0ZW5kcyAoXG4gIHByb3BzOiBpbmZlciBQUk9QU1xuKSA9PiBKU1hOb2RlPGFueT4gfCBudWxsXG4gID8gTm9uTnVsbGFibGU8UFJPUFM+XG4gIDogbmV2ZXI7XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgaW50ZXJmYWNlIENvbXBvbmVudE9wdGlvbnMge1xuICB0YWdOYW1lPzogc3RyaW5nO1xufVxuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IHR5cGUgQ29tcG9uZW50PFBST1BTIGV4dGVuZHMge30+ID0gRnVuY3Rpb25Db21wb25lbnQ8UHVibGljUHJvcHM8UFJPUFM+PjtcblxuLyoqXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCB0eXBlIFB1YmxpY1Byb3BzPFBST1BTIGV4dGVuZHMge30+ID0gUFJPUFMgJiBPbiRQcm9wczxQUk9QUz4gJiBDb21wb25lbnRCYXNlUHJvcHM7XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgdHlwZSBPbiRQcm9wczxUIGV4dGVuZHMge30+ID0ge1xuICBbSyBpbiBrZXlvZiBUIGFzIEsgZXh0ZW5kcyBgJHtpbmZlciBBfVFybGBcbiAgICA/IE5vbk51bGxhYmxlPFRbS10+IGV4dGVuZHMgUVJMXG4gICAgICA/IGAke0F9JGBcbiAgICAgIDogbmV2ZXJcbiAgICA6IG5ldmVyXT86IE5vbk51bGxhYmxlPFRbS10+IGV4dGVuZHMgUVJMPGluZmVyIEI+ID8gQiA6IG5ldmVyO1xufTtcblxuLyoqXG4gKiBAYWxwaGFcbiAqL1xuZXhwb3J0IHR5cGUgRXZlbnRIYW5kbGVyPFQ+ID0gUVJMPCh2YWx1ZTogVCkgPT4gYW55PjtcblxuLy8gPGRvY3MgbWFya2Rvd249XCIuLi9yZWFkbWUubWQjY29tcG9uZW50XCI+XG4vLyAhIURPIE5PVCBFRElUIFRISVMgQ09NTUVOVCBESVJFQ1RMWSEhIVxuLy8gKGVkaXQgLi4vcmVhZG1lLm1kI2NvbXBvbmVudCBpbnN0ZWFkKVxuLyoqXG4gKiBEZWNsYXJlIGEgUXdpayBjb21wb25lbnQgdGhhdCBjYW4gYmUgdXNlZCB0byBjcmVhdGUgVUkuXG4gKlxuICogVXNlIGBjb21wb25lbnQkYCB0byBkZWNsYXJlIGEgUXdpayBjb21wb25lbnQuIEEgUXdpayBjb21wb25lbnQgaXMgYSBzcGVjaWFsIGtpbmQgb2YgY29tcG9uZW50XG4gKiB0aGF0IGFsbG93cyB0aGUgUXdpayBmcmFtZXdvcmsgdG8gbGF6eSBsb2FkIGFuZCBleGVjdXRlIHRoZSBjb21wb25lbnQgaW5kZXBlbmRlbnRseSBvZiBvdGhlclxuICogUXdpayBjb21wb25lbnRzIGFzIHdlbGwgYXMgbGF6eSBsb2FkIHRoZSBjb21wb25lbnQncyBsaWZlLWN5Y2xlIGhvb2tzIGFuZCBldmVudCBoYW5kbGVycy5cbiAqXG4gKiBTaWRlIG5vdGU6IFlvdSBjYW4gYWxzbyBkZWNsYXJlIHJlZ3VsYXIgKHN0YW5kYXJkIEpTWCkgY29tcG9uZW50cyB0aGF0IHdpbGwgaGF2ZSBzdGFuZGFyZFxuICogc3luY2hyb25vdXMgYmVoYXZpb3IuXG4gKlxuICogUXdpayBjb21wb25lbnQgaXMgYSBmYWNhZGUgdGhhdCBkZXNjcmliZXMgaG93IHRoZSBjb21wb25lbnQgc2hvdWxkIGJlIHVzZWQgd2l0aG91dCBmb3JjaW5nIHRoZVxuICogaW1wbGVtZW50YXRpb24gb2YgdGhlIGNvbXBvbmVudCB0byBiZSBlYWdlcmx5IGxvYWRlZC4gQSBtaW5pbXVtIFF3aWsgZGVmaW5pdGlvbiBjb25zaXN0cyBvZjpcbiAqXG4gKiAjIyMgRXhhbXBsZTpcbiAqXG4gKiBBbiBleGFtcGxlIHNob3dpbmcgaG93IHRvIGNyZWF0ZSBhIGNvdW50ZXIgY29tcG9uZW50OlxuICpcbiAqIGBgYHRzeFxuICogZXhwb3J0IGludGVyZmFjZSBDb3VudGVyUHJvcHMge1xuICogICBpbml0aWFsVmFsdWU/OiBudW1iZXI7XG4gKiAgIHN0ZXA/OiBudW1iZXI7XG4gKiB9XG4gKiBleHBvcnQgY29uc3QgQ291bnRlciA9IGNvbXBvbmVudCQoKHByb3BzOiBDb3VudGVyUHJvcHMpID0+IHtcbiAqICAgY29uc3Qgc3RhdGUgPSB1c2VTdG9yZSh7IGNvdW50OiBwcm9wcy5pbml0aWFsVmFsdWUgfHwgMCB9KTtcbiAqICAgcmV0dXJuIChcbiAqICAgICA8ZGl2PlxuICogICAgICAgPHNwYW4+e3N0YXRlLmNvdW50fTwvc3Bhbj5cbiAqICAgICAgIDxidXR0b24gb25DbGljayQ9eygpID0+IChzdGF0ZS5jb3VudCArPSBwcm9wcy5zdGVwIHx8IDEpfT4rPC9idXR0b24+XG4gKiAgICAgPC9kaXY+XG4gKiAgICk7XG4gKiB9KTtcbiAqIGBgYFxuICpcbiAqIC0gYGNvbXBvbmVudCRgIGlzIGhvdyBhIGNvbXBvbmVudCBnZXRzIGRlY2xhcmVkLlxuICogLSBgeyB2YWx1ZT86IG51bWJlcjsgc3RlcD86IG51bWJlciB9YCBkZWNsYXJlcyB0aGUgcHVibGljIChwcm9wcykgaW50ZXJmYWNlIG9mIHRoZSBjb21wb25lbnQuXG4gKiAtIGB7IGNvdW50OiBudW1iZXIgfWAgZGVjbGFyZXMgdGhlIHByaXZhdGUgKHN0YXRlKSBpbnRlcmZhY2Ugb2YgdGhlIGNvbXBvbmVudC5cbiAqXG4gKiBUaGUgYWJvdmUgY2FuIHRoZW4gYmUgdXNlZCBsaWtlIHNvOlxuICpcbiAqIGBgYHRzeFxuICogZXhwb3J0IGNvbnN0IE90aGVyQ29tcG9uZW50ID0gY29tcG9uZW50JCgoKSA9PiB7XG4gKiAgIHJldHVybiA8Q291bnRlciBpbml0aWFsVmFsdWU9ezEwMH0gLz47XG4gKiB9KTtcbiAqIGBgYFxuICpcbiAqIFNlZSBhbHNvOiBgY29tcG9uZW50YCwgYHVzZUNsZWFudXBgLCBgb25SZXN1bWVgLCBgb25QYXVzZWAsIGB1c2VPbmAsIGB1c2VPbkRvY3VtZW50YCxcbiAqIGB1c2VPbldpbmRvd2AsIGB1c2VTdHlsZXNgLCBgdXNlU2NvcGVkU3R5bGVzYFxuICpcbiAqIEBwdWJsaWNcbiAqL1xuLy8gPC9kb2NzPlxuZXhwb3J0IGZ1bmN0aW9uIGNvbXBvbmVudFFybDxQUk9QUyBleHRlbmRzIHt9PihcbiAgb25SZW5kZXJRcmw6IFFSTDxPblJlbmRlckZuPFBST1BTPj4sXG4gIG9wdGlvbnM6IENvbXBvbmVudE9wdGlvbnMgPSB7fVxuKTogQ29tcG9uZW50PFBST1BTPiB7XG4gIGNvbnN0IHRhZ05hbWUgPSBvcHRpb25zLnRhZ05hbWUgPz8gJ2Rpdic7XG5cbiAgLy8gUmV0dXJuIGEgUUNvbXBvbmVudCBGYWN0b3J5IGZ1bmN0aW9uLlxuICByZXR1cm4gZnVuY3Rpb24gUVNpbXBsZUNvbXBvbmVudChwcm9wcywga2V5KTogSlNYTm9kZTxQUk9QUz4ge1xuICAgIHJldHVybiBqc3godGFnTmFtZSwgeyBbT25SZW5kZXJQcm9wXTogb25SZW5kZXJRcmwsIC4uLnByb3BzIH0sIGtleSkgYXMgYW55O1xuICB9O1xufVxuXG4vLyA8ZG9jcyBtYXJrZG93bj1cIi4uL3JlYWRtZS5tZCNjb21wb25lbnRcIj5cbi8vICEhRE8gTk9UIEVESVQgVEhJUyBDT01NRU5UIERJUkVDVExZISEhXG4vLyAoZWRpdCAuLi9yZWFkbWUubWQjY29tcG9uZW50IGluc3RlYWQpXG4vKipcbiAqIERlY2xhcmUgYSBRd2lrIGNvbXBvbmVudCB0aGF0IGNhbiBiZSB1c2VkIHRvIGNyZWF0ZSBVSS5cbiAqXG4gKiBVc2UgYGNvbXBvbmVudCRgIHRvIGRlY2xhcmUgYSBRd2lrIGNvbXBvbmVudC4gQSBRd2lrIGNvbXBvbmVudCBpcyBhIHNwZWNpYWwga2luZCBvZiBjb21wb25lbnRcbiAqIHRoYXQgYWxsb3dzIHRoZSBRd2lrIGZyYW1ld29yayB0byBsYXp5IGxvYWQgYW5kIGV4ZWN1dGUgdGhlIGNvbXBvbmVudCBpbmRlcGVuZGVudGx5IG9mIG90aGVyXG4gKiBRd2lrIGNvbXBvbmVudHMgYXMgd2VsbCBhcyBsYXp5IGxvYWQgdGhlIGNvbXBvbmVudCdzIGxpZmUtY3ljbGUgaG9va3MgYW5kIGV2ZW50IGhhbmRsZXJzLlxuICpcbiAqIFNpZGUgbm90ZTogWW91IGNhbiBhbHNvIGRlY2xhcmUgcmVndWxhciAoc3RhbmRhcmQgSlNYKSBjb21wb25lbnRzIHRoYXQgd2lsbCBoYXZlIHN0YW5kYXJkXG4gKiBzeW5jaHJvbm91cyBiZWhhdmlvci5cbiAqXG4gKiBRd2lrIGNvbXBvbmVudCBpcyBhIGZhY2FkZSB0aGF0IGRlc2NyaWJlcyBob3cgdGhlIGNvbXBvbmVudCBzaG91bGQgYmUgdXNlZCB3aXRob3V0IGZvcmNpbmcgdGhlXG4gKiBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgY29tcG9uZW50IHRvIGJlIGVhZ2VybHkgbG9hZGVkLiBBIG1pbmltdW0gUXdpayBkZWZpbml0aW9uIGNvbnNpc3RzIG9mOlxuICpcbiAqICMjIyBFeGFtcGxlOlxuICpcbiAqIEFuIGV4YW1wbGUgc2hvd2luZyBob3cgdG8gY3JlYXRlIGEgY291bnRlciBjb21wb25lbnQ6XG4gKlxuICogYGBgdHN4XG4gKiBleHBvcnQgaW50ZXJmYWNlIENvdW50ZXJQcm9wcyB7XG4gKiAgIGluaXRpYWxWYWx1ZT86IG51bWJlcjtcbiAqICAgc3RlcD86IG51bWJlcjtcbiAqIH1cbiAqIGV4cG9ydCBjb25zdCBDb3VudGVyID0gY29tcG9uZW50JCgocHJvcHM6IENvdW50ZXJQcm9wcykgPT4ge1xuICogICBjb25zdCBzdGF0ZSA9IHVzZVN0b3JlKHsgY291bnQ6IHByb3BzLmluaXRpYWxWYWx1ZSB8fCAwIH0pO1xuICogICByZXR1cm4gKFxuICogICAgIDxkaXY+XG4gKiAgICAgICA8c3Bhbj57c3RhdGUuY291bnR9PC9zcGFuPlxuICogICAgICAgPGJ1dHRvbiBvbkNsaWNrJD17KCkgPT4gKHN0YXRlLmNvdW50ICs9IHByb3BzLnN0ZXAgfHwgMSl9Pis8L2J1dHRvbj5cbiAqICAgICA8L2Rpdj5cbiAqICAgKTtcbiAqIH0pO1xuICogYGBgXG4gKlxuICogLSBgY29tcG9uZW50JGAgaXMgaG93IGEgY29tcG9uZW50IGdldHMgZGVjbGFyZWQuXG4gKiAtIGB7IHZhbHVlPzogbnVtYmVyOyBzdGVwPzogbnVtYmVyIH1gIGRlY2xhcmVzIHRoZSBwdWJsaWMgKHByb3BzKSBpbnRlcmZhY2Ugb2YgdGhlIGNvbXBvbmVudC5cbiAqIC0gYHsgY291bnQ6IG51bWJlciB9YCBkZWNsYXJlcyB0aGUgcHJpdmF0ZSAoc3RhdGUpIGludGVyZmFjZSBvZiB0aGUgY29tcG9uZW50LlxuICpcbiAqIFRoZSBhYm92ZSBjYW4gdGhlbiBiZSB1c2VkIGxpa2Ugc286XG4gKlxuICogYGBgdHN4XG4gKiBleHBvcnQgY29uc3QgT3RoZXJDb21wb25lbnQgPSBjb21wb25lbnQkKCgpID0+IHtcbiAqICAgcmV0dXJuIDxDb3VudGVyIGluaXRpYWxWYWx1ZT17MTAwfSAvPjtcbiAqIH0pO1xuICogYGBgXG4gKlxuICogU2VlIGFsc286IGBjb21wb25lbnRgLCBgdXNlQ2xlYW51cGAsIGBvblJlc3VtZWAsIGBvblBhdXNlYCwgYHVzZU9uYCwgYHVzZU9uRG9jdW1lbnRgLFxuICogYHVzZU9uV2luZG93YCwgYHVzZVN0eWxlc2AsIGB1c2VTY29wZWRTdHlsZXNgXG4gKlxuICogQHB1YmxpY1xuICovXG4vLyA8L2RvY3M+XG5leHBvcnQgZnVuY3Rpb24gY29tcG9uZW50JDxQUk9QUyBleHRlbmRzIHt9PihcbiAgb25Nb3VudDogT25SZW5kZXJGbjxQUk9QUz4sXG4gIG9wdGlvbnM/OiBDb21wb25lbnRPcHRpb25zXG4pOiBDb21wb25lbnQ8UFJPUFM+IHtcbiAgcmV0dXJuIGNvbXBvbmVudFFybDxQUk9QUz4oJChvbk1vdW50KSwgb3B0aW9ucyk7XG59XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgdHlwZSBPblJlbmRlckZuPFBST1BTPiA9IChwcm9wczogUFJPUFMpID0+IFZhbHVlT3JQcm9taXNlPEpTWE5vZGU8YW55PiB8IG51bGw+O1xuXG5leHBvcnQgaW50ZXJmYWNlIFJlbmRlckZhY3RvcnlPdXRwdXQ8UFJPUFM+IHtcbiAgcmVuZGVyUVJMOiBRUkw8T25SZW5kZXJGbjxQUk9QUz4+O1xuICB3YWl0T246IGFueVtdO1xufVxuXG5mdW5jdGlvbiBfdXNlU3R5bGVzKHN0eWxlczogUVJMPHN0cmluZz4sIHNjb3BlZDogYm9vbGVhbikge1xuICBjb25zdCBbc3R5bGUsIHNldFN0eWxlXSA9IHVzZVNlcXVlbnRpYWxTY29wZSgpO1xuICBpZiAoc3R5bGUgPT09IHRydWUpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgc2V0U3R5bGUodHJ1ZSk7XG4gIGNvbnN0IHN0eWxlUXJsID0gdG9RcmxPckVycm9yKHN0eWxlcyk7XG4gIGNvbnN0IHN0eWxlSWQgPSBzdHlsZUtleShzdHlsZVFybCk7XG4gIGNvbnN0IGhvc3RFbGVtZW50ID0gdXNlSG9zdEVsZW1lbnQoKTtcbiAgaWYgKHNjb3BlZCkge1xuICAgIGhvc3RFbGVtZW50LnNldEF0dHJpYnV0ZShDb21wb25lbnRTY29wZWRTdHlsZXMsIHN0eWxlSWQpO1xuICB9XG5cbiAgdXNlV2FpdE9uKFxuICAgIHN0eWxlUXJsLnJlc29sdmUoaG9zdEVsZW1lbnQpLnRoZW4oKHN0eWxlVGV4dCkgPT4ge1xuICAgICAgY29uc3QgdGFzazogU3R5bGVBcHBlbmQgPSB7XG4gICAgICAgIHR5cGU6ICdzdHlsZScsXG4gICAgICAgIHN0eWxlSWQsXG4gICAgICAgIGNvbnRlbnQ6IHNjb3BlZCA/IHN0eWxlVGV4dC5yZXBsYWNlKC/vv70vZywgc3R5bGVJZCkgOiBzdHlsZVRleHQsXG4gICAgICB9O1xuICAgICAgcmV0dXJuIHRhc2s7XG4gICAgfSlcbiAgKTtcbn1cbiJdfQ==","/* eslint-disable */\nimport { flattenArray } from '../../util/array';\nimport { EMPTY_ARRAY } from '../../util/flyweight';\nimport { JSXNodeImpl } from './jsx-runtime';\n/**\n * @public\n */\nexport function h(type, props, ...children) {\n    // Using legacy h() jsx transform and morphing it\n    // so it can use the modern vdom structure\n    // https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html\n    // https://www.typescriptlang.org/tsconfig#jsxImportSource\n    const normalizedProps = {\n        children: arguments.length > 2 ? flattenArray(children) : EMPTY_ARRAY,\n    };\n    let key;\n    let i;\n    for (i in props) {\n        if (i == 'key')\n            key = props[i];\n        else\n            normalizedProps[i] = props[i];\n    }\n    return new JSXNodeImpl(type, normalizedProps, key);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvcXdpay9zcmMvY29yZS9yZW5kZXIvanN4L2ZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDbkQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUk1Qzs7R0FFRztBQUNILE1BQU0sVUFBVSxDQUFDLENBQ2YsSUFBdUMsRUFDdkMsS0FBbUIsRUFDbkIsR0FBRyxRQUFlO0lBRWxCLGlEQUFpRDtJQUNqRCwwQ0FBMEM7SUFDMUMsNkVBQTZFO0lBQzdFLDBEQUEwRDtJQUUxRCxNQUFNLGVBQWUsR0FBUTtRQUMzQixRQUFRLEVBQUUsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVztLQUN0RSxDQUFDO0lBRUYsSUFBSSxHQUFRLENBQUM7SUFDYixJQUFJLENBQU0sQ0FBQztJQUVYLEtBQUssQ0FBQyxJQUFJLEtBQUssRUFBRTtRQUNmLElBQUksQ0FBQyxJQUFJLEtBQUs7WUFBRSxHQUFHLEdBQUksS0FBNkIsQ0FBQyxDQUFDLENBQUMsQ0FBQzs7WUFDbkQsZUFBZSxDQUFDLENBQUMsQ0FBQyxHQUFJLEtBQTZCLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDN0Q7SUFFRCxPQUFPLElBQUksV0FBVyxDQUFDLElBQUksRUFBRSxlQUFlLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFDckQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlICovXG5pbXBvcnQgeyBmbGF0dGVuQXJyYXkgfSBmcm9tICcuLi8uLi91dGlsL2FycmF5JztcbmltcG9ydCB7IEVNUFRZX0FSUkFZIH0gZnJvbSAnLi4vLi4vdXRpbC9mbHl3ZWlnaHQnO1xuaW1wb3J0IHsgSlNYTm9kZUltcGwgfSBmcm9tICcuL2pzeC1ydW50aW1lJztcbmltcG9ydCB0eXBlIHsgUXdpa0pTWCB9IGZyb20gJy4vdHlwZXMvanN4LXF3aWsnO1xuaW1wb3J0IHR5cGUgeyBGdW5jdGlvbkNvbXBvbmVudCwgSlNYTm9kZSB9IGZyb20gJy4vdHlwZXMvanN4LW5vZGUnO1xuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGg8UFJPUFMgZXh0ZW5kcyB7fSA9IHt9PihcbiAgdHlwZTogc3RyaW5nIHwgRnVuY3Rpb25Db21wb25lbnQ8UFJPUFM+LFxuICBwcm9wczogUFJPUFMgfCBudWxsLFxuICAuLi5jaGlsZHJlbjogYW55W11cbik6IEpTWE5vZGUge1xuICAvLyBVc2luZyBsZWdhY3kgaCgpIGpzeCB0cmFuc2Zvcm0gYW5kIG1vcnBoaW5nIGl0XG4gIC8vIHNvIGl0IGNhbiB1c2UgdGhlIG1vZGVybiB2ZG9tIHN0cnVjdHVyZVxuICAvLyBodHRwczovL3JlYWN0anMub3JnL2Jsb2cvMjAyMC8wOS8yMi9pbnRyb2R1Y2luZy10aGUtbmV3LWpzeC10cmFuc2Zvcm0uaHRtbFxuICAvLyBodHRwczovL3d3dy50eXBlc2NyaXB0bGFuZy5vcmcvdHNjb25maWcjanN4SW1wb3J0U291cmNlXG5cbiAgY29uc3Qgbm9ybWFsaXplZFByb3BzOiBhbnkgPSB7XG4gICAgY2hpbGRyZW46IGFyZ3VtZW50cy5sZW5ndGggPiAyID8gZmxhdHRlbkFycmF5KGNoaWxkcmVuKSA6IEVNUFRZX0FSUkFZLFxuICB9O1xuXG4gIGxldCBrZXk6IGFueTtcbiAgbGV0IGk6IGFueTtcblxuICBmb3IgKGkgaW4gcHJvcHMpIHtcbiAgICBpZiAoaSA9PSAna2V5Jykga2V5ID0gKHByb3BzIGFzIFJlY29yZDxzdHJpbmcsIGFueT4pW2ldO1xuICAgIGVsc2Ugbm9ybWFsaXplZFByb3BzW2ldID0gKHByb3BzIGFzIFJlY29yZDxzdHJpbmcsIGFueT4pW2ldO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBKU1hOb2RlSW1wbCh0eXBlLCBub3JtYWxpemVkUHJvcHMsIGtleSk7XG59XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgZGVjbGFyZSBuYW1lc3BhY2UgaCB7XG4gIGV4cG9ydCBmdW5jdGlvbiBoKHR5cGU6IGFueSk6IEpTWE5vZGU8YW55PjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGgodHlwZTogTm9kZSwgZGF0YTogYW55KTogSlNYTm9kZTxhbnk+O1xuICBleHBvcnQgZnVuY3Rpb24gaCh0eXBlOiBhbnksIHRleHQ6IHN0cmluZyk6IEpTWE5vZGU8YW55PjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGgodHlwZTogYW55LCBjaGlsZHJlbjogQXJyYXk8YW55Pik6IEpTWE5vZGU8YW55PjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGgodHlwZTogYW55LCBkYXRhOiBhbnksIHRleHQ6IHN0cmluZyk6IEpTWE5vZGU8YW55PjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGgoXG4gICAgdHlwZTogYW55LFxuICAgIGRhdGE6IGFueSxcbiAgICBjaGlsZHJlbjogQXJyYXk8SlNYTm9kZTxhbnk+IHwgdW5kZWZpbmVkIHwgbnVsbD5cbiAgKTogSlNYTm9kZTxhbnk+O1xuICBleHBvcnQgZnVuY3Rpb24gaChzZWw6IGFueSwgZGF0YTogYW55IHwgbnVsbCwgY2hpbGRyZW46IEpTWE5vZGU8YW55Pik6IEpTWE5vZGU8YW55PjtcblxuICBleHBvcnQgbmFtZXNwYWNlIEpTWCB7XG4gICAgZXhwb3J0IGludGVyZmFjZSBFbGVtZW50IGV4dGVuZHMgUXdpa0pTWC5FbGVtZW50IHt9XG4gICAgZXhwb3J0IGludGVyZmFjZSBJbnRyaW5zaWNBdHRyaWJ1dGVzIGV4dGVuZHMgUXdpa0pTWC5JbnRyaW5zaWNBdHRyaWJ1dGVzIHt9XG4gICAgZXhwb3J0IGludGVyZmFjZSBJbnRyaW5zaWNFbGVtZW50cyBleHRlbmRzIFF3aWtKU1guSW50cmluc2ljRWxlbWVudHMge31cbiAgICBleHBvcnQgaW50ZXJmYWNlIEVsZW1lbnRDaGlsZHJlbkF0dHJpYnV0ZSB7XG4gICAgICBjaGlsZHJlbj86IGFueTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==","import { jsx } from './jsx-runtime';\n/**\n * @public\n */\nexport const Slot = (props) => {\n    const hasChildren = props.children || (Array.isArray(props.children) && props.children.length > 0);\n    const newChildrem = !hasChildren\n        ? []\n        : jsx('q:fallback', {\n            children: props.children,\n        });\n    return jsx('q:slot', {\n        name: props.name,\n        children: newChildrem,\n    }, props.name);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xvdC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL3F3aWsvc3JjL2NvcmUvcmVuZGVyL2pzeC9zbG90LnB1YmxpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBR3BDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sSUFBSSxHQUdaLENBQUMsS0FBSyxFQUFFLEVBQUU7SUFDYixNQUFNLFdBQVcsR0FDZixLQUFLLENBQUMsUUFBUSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLElBQUksS0FBSyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDakYsTUFBTSxXQUFXLEdBQUcsQ0FBQyxXQUFXO1FBQzlCLENBQUMsQ0FBQyxFQUFFO1FBQ0osQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUU7WUFDaEIsUUFBUSxFQUFFLEtBQUssQ0FBQyxRQUFRO1NBQ3pCLENBQUMsQ0FBQztJQUVQLE9BQU8sR0FBRyxDQUNSLFFBQVEsRUFDUjtRQUNFLElBQUksRUFBRSxLQUFLLENBQUMsSUFBSTtRQUNoQixRQUFRLEVBQUUsV0FBVztLQUN0QixFQUNELEtBQUssQ0FBQyxJQUFJLENBQ1gsQ0FBQztBQUNKLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGpzeCB9IGZyb20gJy4vanN4LXJ1bnRpbWUnO1xuaW1wb3J0IHR5cGUgeyBGdW5jdGlvbkNvbXBvbmVudCB9IGZyb20gJy4vdHlwZXMvanN4LW5vZGUnO1xuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGNvbnN0IFNsb3Q6IEZ1bmN0aW9uQ29tcG9uZW50PHtcbiAgbmFtZT86IHN0cmluZztcbiAgY2hpbGRyZW4/OiBhbnk7XG59PiA9IChwcm9wcykgPT4ge1xuICBjb25zdCBoYXNDaGlsZHJlbiA9XG4gICAgcHJvcHMuY2hpbGRyZW4gfHwgKEFycmF5LmlzQXJyYXkocHJvcHMuY2hpbGRyZW4pICYmIHByb3BzLmNoaWxkcmVuLmxlbmd0aCA+IDApO1xuICBjb25zdCBuZXdDaGlsZHJlbSA9ICFoYXNDaGlsZHJlblxuICAgID8gW11cbiAgICA6IGpzeCgncTpmYWxsYmFjaycsIHtcbiAgICAgICAgY2hpbGRyZW46IHByb3BzLmNoaWxkcmVuLFxuICAgICAgfSk7XG5cbiAgcmV0dXJuIGpzeChcbiAgICAncTpzbG90JyxcbiAgICB7XG4gICAgICBuYW1lOiBwcm9wcy5uYW1lLFxuICAgICAgY2hpbGRyZW46IG5ld0NoaWxkcmVtLFxuICAgIH0sXG4gICAgcHJvcHMubmFtZVxuICApO1xufTtcbiJdfQ==","/**\n * QWIK_VERSION\n * @public\n */\nexport const version = globalThis.QWIK_VERSION;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVyc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvcXdpay9zcmMvY29yZS92ZXJzaW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRztBQUNILE1BQU0sQ0FBQyxNQUFNLE9BQU8sR0FBSSxVQUFrQixDQUFDLFlBQXNCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFFXSUtfVkVSU0lPTlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgY29uc3QgdmVyc2lvbiA9IChnbG9iYWxUaGlzIGFzIGFueSkuUVdJS19WRVJTSU9OIGFzIHN0cmluZztcbiJdfQ==","import { isDocument } from '../util/element';\nimport { executeContext, printRenderStats } from './cursor';\nimport { isJSXNode, jsx, processNode } from './jsx/jsx-runtime';\nimport { visitJsxNode } from './render';\nimport { getRenderingState } from './notify-render';\nimport { getDocument } from '../util/dom';\nimport { qDev, qTest } from '../util/qdev';\nimport { version } from '../version';\nimport { QContainerAttr } from '../util/markers';\nimport { logError } from '../util/log';\nimport { isWatchDescriptor, runWatch, WatchFlags } from '../watch/watch.public';\nimport { appendQwikDevTools, getContext } from '../props/props';\n/**\n * Render JSX.\n *\n * Use this method to render JSX. This function does reconciling which means\n * it always tries to reuse what is already in the DOM (rather then destroy and\n * recrate content.)\n *\n * @param parent - Element which will act as a parent to `jsxNode`. When\n *     possible the rendering will try to reuse existing nodes.\n * @param jsxNode - JSX to render\n * @alpha\n */\nexport async function render(parent, jsxNode) {\n    // If input is not JSX, convert it\n    if (!isJSXNode(jsxNode)) {\n        jsxNode = jsx(jsxNode, null);\n    }\n    const doc = getDocument(parent);\n    const containerEl = getElement(parent);\n    if (qDev && containerEl.hasAttribute('q:container')) {\n        logError('You can render over a existing q:container. Skipping render().');\n        return;\n    }\n    injectQContainer(containerEl);\n    const ctx = {\n        doc,\n        globalState: getRenderingState(containerEl),\n        hostElements: new Set(),\n        operations: [],\n        roots: [parent],\n        component: undefined,\n        containerEl,\n        perf: {\n            visited: 0,\n            timing: [],\n        },\n    };\n    await visitJsxNode(ctx, parent, processNode(jsxNode), false);\n    executeContext(ctx);\n    if (!qTest) {\n        injectQwikSlotCSS(parent);\n    }\n    if (qDev) {\n        appendQwikDevTools(containerEl);\n        if (typeof window !== 'undefined' && window.document != null) {\n            printRenderStats(ctx);\n        }\n    }\n    const promises = [];\n    ctx.hostElements.forEach((host) => {\n        const elCtx = getContext(host);\n        elCtx.refMap.array.filter(isWatchDescriptor).forEach((watch) => {\n            if (watch.f & WatchFlags.IsDirty) {\n                promises.push(runWatch(watch));\n            }\n        });\n    });\n    await Promise.all(promises);\n    return ctx;\n}\nexport function injectQwikSlotCSS(docOrElm) {\n    const doc = getDocument(docOrElm);\n    const element = isDocument(docOrElm) ? docOrElm.head : docOrElm;\n    const style = doc.createElement('style');\n    style.setAttribute('id', 'qwik/base-styles');\n    style.textContent = `q\\\\:slot{display:contents}q\\\\:fallback{display:none}q\\\\:fallback:last-child{display:contents}`;\n    element.insertBefore(style, element.firstChild);\n}\nexport function getElement(docOrElm) {\n    return isDocument(docOrElm) ? docOrElm.documentElement : docOrElm;\n}\nexport function injectQContainer(containerEl) {\n    containerEl.setAttribute('q:version', version || '');\n    containerEl.setAttribute(QContainerAttr, 'resumed');\n}\n//# sourceMappingURL=data:application/json;base64,"],"names":["isNode"],"mappings":"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,QAAQ,IAAI,QAAQ,CAAC,YAAY,CAAC;IACpE;;ICRA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,SAAS,CAAC,CAAC,UAAU,EAAE;IAC9B,IAAI,OAAO,UAAU,CAAC,UAAU,CAAC,CAAC;IAClC,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,SAAS,iBAAiB,CAAC,EAAE,EAAE;IACtC,IAAI,OAAO,UAAU,KAAK,EAAE,GAAG,IAAI,EAAE;IACrC,QAAQ,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;IAChD,KAAK,CAAC;IACN;;IC3HA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,SAAS,cAAc,GAAG;IACjC,IAAI,MAAM,OAAO,GAAG,gBAAgB,EAAE,CAAC,WAAW,CAAC;IACnD,IAAI,aAAa,CAAC,OAAO,CAAC,CAAC;IAC3B,IAAI,OAAO,OAAO,CAAC;IACnB;;IC/BA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,SAAS,WAAW,GAAG;IAC9B,IAAI,MAAM,GAAG,GAAG,gBAAgB,EAAE,CAAC,GAAG,CAAC;IACvC,IAAI,IAAI,CAAC,GAAG,EAAE;IACd,QAAQ,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;IACrE,KAAK;IACL,IAAI,OAAO,GAAG,CAAC;IACf;;ICZA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,SAAS,QAAQ,CAAC,YAAY,EAAE;IACvC,IAAI,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,kBAAkB,EAAE,CAAC;IACnD,IAAI,MAAM,WAAW,GAAG,cAAc,EAAE,CAAC;IACzC,IAAI,IAAI,KAAK,IAAI,IAAI,EAAE;IACvB,QAAQ,OAAO,cAAc,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;IAClD,KAAK;IACL,IAAI,MAAM,KAAK,GAAG,OAAO,YAAY,KAAK,UAAU,GAAG,YAAY,EAAE,GAAG,YAAY,CAAC;IACrF,IAAI,MAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,EAAE,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IAChE,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACvB,IAAI,OAAO,cAAc,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;IACjD,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;I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AI,CAAC,EAAE;IACvB,YAAY,GAAG,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAClC,SAAS;IACT,KAAK;IACL,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACY,UAAC,gBAAgB,GAAG,iBAAiB,CAAC,kBAAkB,EAAE;IACtE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,SAAS,iBAAiB,CAAC,QAAQ,EAAE;IAC5C,IAAI,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,kBAAkB,EAAE,CAAC;IACnD,IAAI,IAAI,CAAC,KAAK,EAAE;IAChB,QAAQ,QAAQ,CAAC,IAAI,CAAC,CAAC;IACvB,QAAQ,MAAM,QAAQ,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,QAAQ,CAAC;IAC7D,QAAQ,IAAI,QAAQ,EAAE;IACtB,YAAY,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;IACzC,SAAS;IACT,KAAK;IACL,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IA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AAC,WAAW,CAAC,CAAC;IAClD,SAAS;IACT,aAAa;IACb;IACA,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,qDAAqD,CAAC,CAAC,CAAC;IACrF,SAAS;IACT,KAAK;IACL,IAAI,OAAO,WAAW,CAAC;IACvB;;ICnLA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,SAAS,aAAa,CAAC,SAAS,EAAE;IACzC,IAAI,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,kBAAkB,EAAE,CAAC;IACnD,IAAI,IAAI,CAAC,KAAK,EAAE;IAChB,QAAQ,MAAM,EAAE,GAAG,cAAc,EAAE,CAAC;IACpC,QAAQ,MAAM,KAAK,GAAG;IACtB,YAAY,GAAG,EAAE,SAAS;IAC1B,YAAY,EAAE;IACd,YAAY,CAAC,EAAE,UAAU,CAAC,SAAS;IACnC,SAAS,CAAC;IACV,QAAQ,QAAQ,CAAC,KAAK,CAAC,CAAC;IACxB,QAAQ,UAAU,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACzC,KAAK;IACL,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACY,UAAC,WAAW,GAAG,iBAAiB,CAAC,aAAa,EAAE;IAC5D;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,SAAS,YAAY,CAAC,QAAQ,EAAE;IACvC,IAAI,KAAK,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IAC/B,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACY,UAAC,UAAU,GAAG,iBAAiB,CAAC,YAAY,EAAE;IAC1D;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,SAAS,aAAa,CAAC,QAAQ,EAAE;IACxC,IAAI,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAChC,CAAC;IAgCD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,SAAS,KAAK,CAAC,KAAK,EAAE,OAAO,EAAE;IACtC,IAAI,MAAM,EAAE,GAAG,cAAc,EAAE,CAAC;IAChC,IAAI,MAAM,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;IAC/B,IAAI,aAAa,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;IAC1D,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,SAAS,aAAa,CAAC,KAAK,EAAE,QAAQ,EAAE;IAC/C,IAAI,MAAM,EAAE,GAAG,cAAc,EAAE,CAAC;IAChC,IAAI,MAAM,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;IAC/B,IAAI,aAAa,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IACpE,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,SAAS,WAAW,CAAC,KAAK,EAAE,OAAO,EAAE;IAC5C,IAAI,MAAM,EAAE,GAAG,cAAc,EAAE,CAAC;IAChC,IAAI,MAAM,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;IAC/B,IAAI,aAAa,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;IACjE,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,SAAS,YAAY,CAAC,MAAM,EAAE;IACrC,IAAI,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC9B,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACY,UAAC,UAAU,GAAG,iBAAiB,CAAC,YAAY,EAAE;IAC1D;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,SAAS,kBAAkB,CAAC,MAAM,EAAE;IAC3C,IAAI,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC7B,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACY,UAAC,gBAAgB,GAAG,iBAAiB,CAAC,kBAAkB,EAAE;IACtE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,SAAS,YAAY,CAAC,WAAW,EAAE,OAAO,GAAG,EAAE,EAAE;IACxD,IAAI,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,KAAK,CAAC;IAC7C;IACA,IAAI,OAAO,SAAS,gBAAgB,CAAC,KAAK,EAAE,GAAG,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"}