{"version":3,"file":"core.cjs","sources":["../tsc-out/src/core/util/qdev.js","../tsc-out/src/core/util/flyweight.js","../tsc-out/src/core/util/log.js","../tsc-out/src/core/assert/assert.js","../tsc-out/src/core/util/markers.js","../tsc-out/src/core/util/dom.js","../tsc-out/src/core/use/use-core.js","../tsc-out/src/core/util/array.js","../tsc-out/src/core/util/promises.js","../tsc-out/src/core/import/qrl-class.js","../tsc-out/src/core/platform/platform.js","../tsc-out/src/core/util/types.js","../tsc-out/src/core/error/stringify.js","../tsc-out/src/core/error/error.js","../tsc-out/src/core/util/element.js","../tsc-out/src/core/object/store.js","../tsc-out/src/core/props/props-obj-map.js","../tsc-out/src/core/json/q-json.js","../tsc-out/src/core/util/case.js","../tsc-out/src/core/util/stringify.js","../tsc-out/src/core/props/props-on.js","../tsc-out/src/core/props/props.js","../tsc-out/src/core/render/jsx/host.public.js","../tsc-out/src/core/import/qrl.public.js","../tsc-out/src/core/render/render.js","../tsc-out/src/core/util/hash_code.js","../tsc-out/src/core/component/qrl-styles.js","../tsc-out/src/core/render/jsx/jsx-runtime.js","../tsc-out/src/core/component/component-ctx.js","../tsc-out/src/core/render/cursor.js","../tsc-out/src/core/use/use-host-element.public.js","../tsc-out/src/core/use/use-document.public.js","../tsc-out/src/core/use/use-store.public.js","../tsc-out/src/core/watch/watch.public.js","../tsc-out/src/core/render/notify-render.js","../tsc-out/src/core/object/q-object.js","../tsc-out/src/core/use/use-subscriber.js","../tsc-out/src/core/import/qrl.js","../tsc-out/src/core/component/component.public.js","../tsc-out/src/core/object/store.public.js","../tsc-out/src/core/render/jsx/async.public.js","../tsc-out/src/core/render/jsx/factory.js","../tsc-out/src/core/render/jsx/slot.public.js","../tsc-out/src/core/version.js","../tsc-out/src/core/render/render.public.js","../tsc-out/src/core/use/use-url.public.js","../tsc-out/src/core/use/use-lexical-scope.public.js"],"sourcesContent":["/*@__PURE__*/ ((gbl) => {\n    // ensures unit tests have globalThis on Node10\n    // this will be removed from production builds\n    if (typeof globalThis === 'undefined') {\n        gbl.globalThis = gbl;\n    }\n})(typeof global !== 'undefined'\n    ? global\n    : typeof window !== 'undefined'\n        ? window\n        : typeof self !== 'undefined'\n            ? self\n            : {});\n// minification can replace the `globalThis.qDev` with `false`\n// which will remove all dev code within from the build\nexport const qDev = globalThis.qDev !== false;\nexport const qTest = globalThis.describe !== undefined;\nexport const qGlobal = globalThis;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicWRldi5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXRpbC9xZGV2LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGFBQWEsQ0FBQyxDQUFDLENBQUMsR0FBUSxFQUFFLEVBQUU7SUFDMUIsK0NBQStDO0lBQy9DLDhDQUE4QztJQUM5QyxJQUFJLE9BQU8sVUFBVSxLQUFLLFdBQVcsRUFBRTtRQUNyQyxHQUFHLENBQUMsVUFBVSxHQUFHLEdBQUcsQ0FBQztLQUN0QjtBQUNILENBQUMsQ0FBQyxDQUNBLE9BQU8sTUFBTSxLQUFLLFdBQVc7SUFDM0IsQ0FBQyxDQUFDLE1BQU07SUFDUixDQUFDLENBQUMsT0FBTyxNQUFNLEtBQUssV0FBVztRQUMvQixDQUFDLENBQUMsTUFBTTtRQUNSLENBQUMsQ0FBQyxPQUFPLElBQUksS0FBSyxXQUFXO1lBQzdCLENBQUMsQ0FBQyxJQUFJO1lBQ04sQ0FBQyxDQUFDLEVBQUUsQ0FDUCxDQUFDO0FBRUYsOERBQThEO0FBQzlELHVEQUF1RDtBQUN2RCxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUksVUFBa0IsQ0FBQyxJQUFJLEtBQUssS0FBSyxDQUFDO0FBQ3ZELE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBSSxVQUFrQixDQUFDLFFBQVEsS0FBSyxTQUFTLENBQUM7QUFDaEUsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLFVBQWlCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKkBfX1BVUkVfXyovICgoZ2JsOiBhbnkpID0+IHtcbiAgLy8gZW5zdXJlcyB1bml0IHRlc3RzIGhhdmUgZ2xvYmFsVGhpcyBvbiBOb2RlMTBcbiAgLy8gdGhpcyB3aWxsIGJlIHJlbW92ZWQgZnJvbSBwcm9kdWN0aW9uIGJ1aWxkc1xuICBpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgZ2JsLmdsb2JhbFRoaXMgPSBnYmw7XG4gIH1cbn0pKFxuICB0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJ1xuICAgID8gZ2xvYmFsXG4gICAgOiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJ1xuICAgID8gd2luZG93XG4gICAgOiB0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCdcbiAgICA/IHNlbGZcbiAgICA6IHt9XG4pO1xuXG4vLyBtaW5pZmljYXRpb24gY2FuIHJlcGxhY2UgdGhlIGBnbG9iYWxUaGlzLnFEZXZgIHdpdGggYGZhbHNlYFxuLy8gd2hpY2ggd2lsbCByZW1vdmUgYWxsIGRldiBjb2RlIHdpdGhpbiBmcm9tIHRoZSBidWlsZFxuZXhwb3J0IGNvbnN0IHFEZXYgPSAoZ2xvYmFsVGhpcyBhcyBhbnkpLnFEZXYgIT09IGZhbHNlO1xuZXhwb3J0IGNvbnN0IHFUZXN0ID0gKGdsb2JhbFRoaXMgYXMgYW55KS5kZXNjcmliZSAhPT0gdW5kZWZpbmVkO1xuZXhwb3J0IGNvbnN0IHFHbG9iYWwgPSBnbG9iYWxUaGlzIGFzIGFueTtcbiJdfQ==","import { qDev } from './qdev';\nexport const EMPTY_ARRAY = [];\nexport const EMPTY_OBJ = {};\nif (qDev) {\n    Object.freeze(EMPTY_ARRAY);\n    Object.freeze(EMPTY_OBJ);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmx5d2VpZ2h0LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS91dGlsL2ZseXdlaWdodC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBRTlCLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxFQUFFLENBQUM7QUFDOUIsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLEVBQUUsQ0FBQztBQUU1QixJQUFJLElBQUksRUFBRTtJQUNSLE1BQU0sQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDM0IsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztDQUMxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHFEZXYgfSBmcm9tICcuL3FkZXYnO1xuXG5leHBvcnQgY29uc3QgRU1QVFlfQVJSQVkgPSBbXTtcbmV4cG9ydCBjb25zdCBFTVBUWV9PQkogPSB7fTtcblxuaWYgKHFEZXYpIHtcbiAgT2JqZWN0LmZyZWV6ZShFTVBUWV9BUlJBWSk7XG4gIE9iamVjdC5mcmVlemUoRU1QVFlfT0JKKTtcbn1cbiJdfQ==","import { qDev } from './qdev';\nconst STYLE = qDev\n    ? `background: #564CE0; color: white; padding: 2px 3px; border-radius: 2px; font-size: 0.8em;`\n    : '';\nexport const logError = (message, ...optionalParams) => {\n    // eslint-disable-next-line no-console\n    console.error('%cQWIK ERROR', STYLE, message, ...optionalParams);\n};\nexport const logWarn = (message, ...optionalParams) => {\n    // eslint-disable-next-line no-console\n    console.warn('%cQWIK WARN', STYLE, message, ...optionalParams);\n};\nexport const logDebug = (message, ...optionalParams) => {\n    if (qDev) {\n        // eslint-disable-next-line no-console\n        console.debug('%cQWIK', STYLE, message, ...optionalParams);\n    }\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS91dGlsL2xvZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBRTlCLE1BQU0sS0FBSyxHQUFHLElBQUk7SUFDaEIsQ0FBQyxDQUFDLDRGQUE0RjtJQUM5RixDQUFDLENBQUMsRUFBRSxDQUFDO0FBRVAsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHLENBQUMsT0FBYSxFQUFFLEdBQUcsY0FBcUIsRUFBRSxFQUFFO0lBQ2xFLHNDQUFzQztJQUN0QyxPQUFPLENBQUMsS0FBSyxDQUFDLGNBQWMsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLEdBQUcsY0FBYyxDQUFDLENBQUM7QUFDbkUsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLENBQUMsT0FBYSxFQUFFLEdBQUcsY0FBcUIsRUFBRSxFQUFFO0lBQ2pFLHNDQUFzQztJQUN0QyxPQUFPLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLEdBQUcsY0FBYyxDQUFDLENBQUM7QUFDakUsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHLENBQUMsT0FBYSxFQUFFLEdBQUcsY0FBcUIsRUFBRSxFQUFFO0lBQ2xFLElBQUksSUFBSSxFQUFFO1FBQ1Isc0NBQXNDO1FBQ3RDLE9BQU8sQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsR0FBRyxjQUFjLENBQUMsQ0FBQztLQUM1RDtBQUNILENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHFEZXYgfSBmcm9tICcuL3FkZXYnO1xuXG5jb25zdCBTVFlMRSA9IHFEZXZcbiAgPyBgYmFja2dyb3VuZDogIzU2NENFMDsgY29sb3I6IHdoaXRlOyBwYWRkaW5nOiAycHggM3B4OyBib3JkZXItcmFkaXVzOiAycHg7IGZvbnQtc2l6ZTogMC44ZW07YFxuICA6ICcnO1xuXG5leHBvcnQgY29uc3QgbG9nRXJyb3IgPSAobWVzc2FnZT86IGFueSwgLi4ub3B0aW9uYWxQYXJhbXM6IGFueVtdKSA9PiB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gIGNvbnNvbGUuZXJyb3IoJyVjUVdJSyBFUlJPUicsIFNUWUxFLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG59O1xuXG5leHBvcnQgY29uc3QgbG9nV2FybiA9IChtZXNzYWdlPzogYW55LCAuLi5vcHRpb25hbFBhcmFtczogYW55W10pID0+IHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgY29uc29sZS53YXJuKCclY1FXSUsgV0FSTicsIFNUWUxFLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG59O1xuXG5leHBvcnQgY29uc3QgbG9nRGVidWcgPSAobWVzc2FnZT86IGFueSwgLi4ub3B0aW9uYWxQYXJhbXM6IGFueVtdKSA9PiB7XG4gIGlmIChxRGV2KSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICBjb25zb2xlLmRlYnVnKCclY1FXSUsnLCBTVFlMRSwgbWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICB9XG59O1xuIl19","import { logError } from '../util/log';\nimport { qDev } from '../util/qdev';\nexport function assertDefined(value, text) {\n    if (qDev) {\n        if (value != null)\n            return;\n        throw newError(text || 'Expected defined value.');\n    }\n}\nexport function assertNotPromise(value, text) {\n    if (qDev) {\n        if (!(value instanceof Promise))\n            return;\n        throw newError(text || 'Expected defined value.');\n    }\n}\nexport function assertDefinedAndNotPromise(value, text) {\n    if (qDev) {\n        assertDefined(value, text);\n        assertNotPromise(value, text);\n    }\n}\nexport function assertInstanceOf(value, type, text) {\n    if (qDev) {\n        if (value instanceof type)\n            return;\n        throw newError(text || `Expected value '${value}' to be instance of '${type}' but was '${typeOf(value)}'.`);\n    }\n}\nexport function assertString(value, text) {\n    if (qDev) {\n        if (typeof value === 'string')\n            return;\n        throw newError(text || `Expected value '${value}' to be 'string' but was '${typeOf(value)}'.`);\n    }\n}\nexport function assertNotEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 !== value2)\n            return;\n        throw newError(text || `Expected '${value1}' !== '${value2}'.`);\n    }\n}\nexport function assertEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 === value2)\n            return;\n        throw newError(text || `Expected '${value1}' === '${value2}'.`);\n    }\n}\nexport function assertLessOrEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 <= value2)\n            return;\n        throw newError(text || `Expected '${value1}' <= '${value2}'.`);\n    }\n}\nexport function assertLess(value1, value2, text) {\n    if (qDev) {\n        if (value1 < value2)\n            return;\n        throw newError(text || `Expected '${value1}' < '${value2}'.`);\n    }\n}\nexport function assertGreaterOrEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 >= value2)\n            return;\n        throw newError(text || `Expected '${value1}' >= '${value2}'.`);\n    }\n}\nexport function assertGreater(value1, value2, text) {\n    if (qDev) {\n        if (value1 > value2)\n            return;\n        throw newError(text || `Expected '${value1}' > '${value2}'.`);\n    }\n}\nfunction typeOf(value) {\n    if (value === null)\n        return 'null';\n    const type = typeof value;\n    if (type === 'object') {\n        return value?.constructor?.name || '<unknown>';\n    }\n    else {\n        return type;\n    }\n}\nfunction newError(text) {\n    debugger; // eslint-disable-line no-debugger\n    const error = new Error(text);\n    logError(error); // eslint-disable-line no-console\n    return error;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXJ0LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9hc3NlcnQvYXNzZXJ0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDdkMsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUVwQyxNQUFNLFVBQVUsYUFBYSxDQUFDLEtBQVUsRUFBRSxJQUFhO0lBQ3JELElBQUksSUFBSSxFQUFFO1FBQ1IsSUFBSSxLQUFLLElBQUksSUFBSTtZQUFFLE9BQU87UUFDMUIsTUFBTSxRQUFRLENBQUMsSUFBSSxJQUFJLHlCQUF5QixDQUFDLENBQUM7S0FDbkQ7QUFDSCxDQUFDO0FBRUQsTUFBTSxVQUFVLGdCQUFnQixDQUFDLEtBQVUsRUFBRSxJQUFhO0lBQ3hELElBQUksSUFBSSxFQUFFO1FBQ1IsSUFBSSxDQUFDLENBQUMsS0FBSyxZQUFZLE9BQU8sQ0FBQztZQUFFLE9BQU87UUFDeEMsTUFBTSxRQUFRLENBQUMsSUFBSSxJQUFJLHlCQUF5QixDQUFDLENBQUM7S0FDbkQ7QUFDSCxDQUFDO0FBRUQsTUFBTSxVQUFVLDBCQUEwQixDQUFDLEtBQVUsRUFBRSxJQUFhO0lBQ2xFLElBQUksSUFBSSxFQUFFO1FBQ1IsYUFBYSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQztRQUMzQixnQkFBZ0IsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7S0FDL0I7QUFDSCxDQUFDO0FBRUQsTUFBTSxVQUFVLGdCQUFnQixDQUFDLEtBQVUsRUFBRSxJQUFTLEVBQUUsSUFBYTtJQUNuRSxJQUFJLElBQUksRUFBRTtRQUNSLElBQUksS0FBSyxZQUFZLElBQUk7WUFBRSxPQUFPO1FBQ2xDLE1BQU0sUUFBUSxDQUNaLElBQUksSUFBSSxtQkFBbUIsS0FBSyx3QkFBd0IsSUFBSSxjQUFjLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUM1RixDQUFDO0tB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ZnJvbSAnLi4vdXRpbC9sb2cnO1xuaW1wb3J0IHsgcURldiB9IGZyb20gJy4uL3V0aWwvcWRldic7XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnREZWZpbmVkKHZhbHVlOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAodmFsdWUgIT0gbnVsbCkgcmV0dXJuO1xuICAgIHRocm93IG5ld0Vycm9yKHRleHQgfHwgJ0V4cGVjdGVkIGRlZmluZWQgdmFsdWUuJyk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydE5vdFByb21pc2UodmFsdWU6IGFueSwgdGV4dD86IHN0cmluZykge1xuICBpZiAocURldikge1xuICAgIGlmICghKHZhbHVlIGluc3RhbmNlb2YgUHJvbWlzZSkpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8ICdFeHBlY3RlZCBkZWZpbmVkIHZhbHVlLicpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnREZWZpbmVkQW5kTm90UHJvbWlzZSh2YWx1ZTogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgYXNzZXJ0RGVmaW5lZCh2YWx1ZSwgdGV4dCk7XG4gICAgYXNzZXJ0Tm90UHJvbWlzZSh2YWx1ZSwgdGV4dCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydEluc3RhbmNlT2YodmFsdWU6IGFueSwgdHlwZTogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgdHlwZSkgcmV0dXJuO1xuICAgIHRocm93IG5ld0Vycm9yKFxuICAgICAgdGV4dCB8fCBgRXhwZWN0ZWQgdmFsdWUgJyR7dmFsdWV9JyB0byBiZSBpbnN0YW5jZSBvZiAnJHt0eXBlfScgYnV0IHdhcyAnJHt0eXBlT2YodmFsdWUpfScuYFxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydFN0cmluZyh2YWx1ZTogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8IGBFeHBlY3RlZCB2YWx1ZSAnJHt2YWx1ZX0nIHRvIGJlICdzdHJpbmcnIGJ1dCB3YXMgJyR7dHlwZU9mKHZhbHVlKX0nLmApO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnROb3RFcXVhbCh2YWx1ZTE6IGFueSwgdmFsdWUyOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAodmFsdWUxICE9PSB2YWx1ZTIpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8IGBFeHBlY3RlZCAnJHt2YWx1ZTF9JyAhPT0gJyR7dmFsdWUyfScuYCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydEVxdWFsKHZhbHVlMTogYW55LCB2YWx1ZTI6IGFueSwgdGV4dD86IHN0cmluZykge1xuICBpZiAocURldikge1xuICAgIGlmICh2YWx1ZTEgPT09IHZhbHVlMikgcmV0dXJuO1xuICAgIHRocm93IG5ld0Vycm9yKHRleHQgfHwgYEV4cGVjdGVkICcke3ZhbHVlMX0nID09PSAnJHt2YWx1ZTJ9Jy5gKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0TGVzc09yRXF1YWwodmFsdWUxOiBhbnksIHZhbHVlMjogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKHZhbHVlMSA8PSB2YWx1ZTIpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8IGBFeHBlY3RlZCAnJHt2YWx1ZTF9JyA8PSAnJHt2YWx1ZTJ9Jy5gKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0TGVzcyh2YWx1ZTE6IGFueSwgdmFsdWUyOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAodmFsdWUxIDwgdmFsdWUyKSByZXR1cm47XG4gICAgdGhyb3cgbmV3RXJyb3IodGV4dCB8fCBgRXhwZWN0ZWQgJyR7dmFsdWUxfScgPCAnJHt2YWx1ZTJ9Jy5gKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0R3JlYXRlck9yRXF1YWwodmFsdWUxOiBhbnksIHZhbHVlMjogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKHZhbHVlMSA+PSB2YWx1ZTIpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8IGBFeHBlY3RlZCAnJHt2YWx1ZTF9JyA+PSAnJHt2YWx1ZTJ9Jy5gKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0R3JlYXRlcih2YWx1ZTE6IGFueSwgdmFsdWUyOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAodmFsdWUxID4gdmFsdWUyKSByZXR1cm47XG4gICAgdGhyb3cgbmV3RXJyb3IodGV4dCB8fCBgRXhwZWN0ZWQgJyR7dmFsdWUxfScgPiAnJHt2YWx1ZTJ9Jy5gKTtcbiAgfVxufVxuXG5mdW5jdGlvbiB0eXBlT2YodmFsdWU6IGFueSkge1xuICBpZiAodmFsdWUgPT09IG51bGwpIHJldHVybiAnbnVsbCc7XG4gIGNvbnN0IHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gIGlmICh0eXBlID09PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiB2YWx1ZT8uY29uc3RydWN0b3I/Lm5hbWUgfHwgJzx1bmtub3duPic7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHR5cGU7XG4gIH1cbn1cblxuZnVuY3Rpb24gbmV3RXJyb3IodGV4dDogc3RyaW5nKSB7XG4gIGRlYnVnZ2VyOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWRlYnVnZ2VyXG4gIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKHRleHQpO1xuICBsb2dFcnJvcihlcnJvcik7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZVxuICByZXR1cm4gZXJyb3I7XG59XG4iXX0=","/**\n * State factory of the component.\n */\nexport const OnMount = 'on:q-mount';\n/**\n * State factory of the component.\n */\nexport const QHostAttr = 'q:host';\nexport const OnRenderProp = 'q:renderFn';\n/**\n * State factory of the component.\n */\nexport const OnRenderSelector = '[q\\\\:host]';\n/**\n * State factory of the component.\n */\nexport const OnUnmount = 'on:q-unmount';\n/**\n * State factory of the component.\n */\nexport const OnResume = 'on:q-resume';\n/**\n * Component Styles.\n */\nexport const ComponentScopedStyles = 'q:sstyle';\n/**\n * Unscoped Component Styles.\n */\nexport const ComponentUnscopedStyles = 'q:ustyle';\n/**\n * Component style host prefix\n */\nexport const ComponentStylesPrefixHost = '💎';\n/**\n * Component style content prefix\n */\nexport const ComponentStylesPrefixContent = '⭐️';\n/**\n * Prefix used to identify on listeners.\n */\nexport const EventPrefix = 'on:';\n/**\n * Attribute used to mark that an event listener is attached.\n */\nexport const EventAny = 'on:.';\n/**\n * Tag name used for projection.\n */\nexport const QSlot = 'Q:SLOT';\nexport const QSlotSelector = 'Q\\\\:SLOT';\n/**\n * `<some-element q:slot=\"...\">`\n */\nexport const QSlotAttr = 'q:slot';\nexport const QObjAttr = 'q:obj';\nexport const QSeqAttr = 'q:seq';\nexport const QContainerAttr = 'q:container';\nexport const QObjSelector = '[q\\\\:obj]';\nexport const QContainerSelector = '[q\\\\:container]';\nexport const RenderEvent = 'qRender';\n/**\n * `<q:slot name=\"...\">`\n */\nexport const QSlotName = 'name';\nexport const QSlotInertName = '\\u0000';\nexport const ELEMENT_ID = 'q:id';\nexport const ELEMENT_ID_SELECTOR = '[q\\\\:id]';\nexport const ELEMENT_ID_PREFIX = '#';\nexport const ELEMENT_ID_Q_PROPS_PREFIX = '&';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFya2Vycy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXRpbC9tYXJrZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLFlBQVksQ0FBQztBQUVwQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxRQUFRLENBQUM7QUFDbEMsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLFlBQVksQ0FBQztBQUV6Qzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLFlBQVksQ0FBQztBQUU3Qzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxjQUFjLENBQUM7QUFFeEM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsYUFBYSxDQUFDO0FBRXRDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUcsVUFBVSxDQUFDO0FBRWhEOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQUcsVUFBVSxDQUFDO0FBRWxEOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDO0FBRTlDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQUcsSUFBSSxDQUFDO0FBRWpEOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLEtBQUssQ0FBQztBQUVqQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUM7QUFFL0I7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxLQUFLLEdBQUcsUUFBUSxDQUFDO0FBQzlCLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxVQUFVLENBQUM7QUFFeEM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDO0FBRWxDLE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxPQUFPLENBQUM7QUFFaEMsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQztBQUVoQyxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsYUFBYSxDQUFDO0FBRTVDLE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxXQUFXLENBQUM7QUFFeEMsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsaUJBQWlCLENBQUM7QUFFcEQsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLFNBQVMsQ0FBQztBQUNyQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxNQUFNLENBQUM7QUFDaEMsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLFFBQVEsQ0FBQztBQUV2QyxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsTUFBTSxDQUFDO0FBQ2pDLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLFVBQVUsQ0FBQztBQUM5QyxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxHQUFHLENBQUM7QUFDckMsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQUcsR0FBRyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBTdGF0ZSBmYWN0b3J5IG9mIHRoZSBjb21wb25lbnQuXG4gKi9cbmV4cG9ydCBjb25zdCBPbk1vdW50ID0gJ29uOnEtbW91bnQnO1xuXG4vKipcbiAqIFN0YXRlIGZhY3Rvcnkgb2YgdGhlIGNvbXBvbmVudC5cbiAqL1xuZXhwb3J0IGNvbnN0IFFIb3N0QXR0ciA9ICdxOmhvc3QnO1xuZXhwb3J0IGNvbnN0IE9uUmVuZGVyUHJvcCA9ICdxOnJlbmRlckZuJztcblxuLyoqXG4gKiBTdGF0ZSBmYWN0b3J5IG9mIHRoZSBjb21wb25lbnQuXG4gKi9cbmV4cG9ydCBjb25zdCBPblJlbmRlclNlbGVjdG9yID0gJ1txXFxcXDpob3N0XSc7XG5cbi8qKlxuICogU3RhdGUgZmFjdG9yeSBvZiB0aGUgY29tcG9uZW50LlxuICovXG5leHBvcnQgY29uc3QgT25Vbm1vdW50ID0gJ29uOnEtdW5tb3VudCc7XG5cbi8qKlxuICogU3RhdGUgZmFjdG9yeSBvZiB0aGUgY29tcG9uZW50LlxuICovXG5leHBvcnQgY29uc3QgT25SZXN1bWUgPSAnb246cS1yZXN1bWUnO1xuXG4vKipcbiAqIENvbXBvbmVudCBTdHlsZXMuXG4gKi9cbmV4cG9ydCBjb25zdCBDb21wb25lbnRTY29wZWRTdHlsZXMgPSAncTpzc3R5bGUnO1xuXG4vKipcbiAqIFVuc2NvcGVkIENvbXBvbmVudCBTdHlsZXMuXG4gKi9cbmV4cG9ydCBjb25zdCBDb21wb25lbnRVbnNjb3BlZFN0eWxlcyA9ICdxOnVzdHlsZSc7XG5cbi8qKlxuICogQ29tcG9uZW50IHN0eWxlIGhvc3QgcHJlZml4XG4gKi9cbmV4cG9ydCBjb25zdCBDb21wb25lbnRTdHlsZXNQcmVmaXhIb3N0ID0gJ/Cfko4nO1xuXG4vKipcbiAqIENvbXBvbmVudCBzdHlsZSBjb250ZW50IHByZWZpeFxuICovXG5leHBvcnQgY29uc3QgQ29tcG9uZW50U3R5bGVzUHJlZml4Q29udGVudCA9ICfirZDvuI8nO1xuXG4vKipcbiAqIFByZWZpeCB1c2VkIHRvIGlkZW50aWZ5IG9uIGxpc3RlbmVycy5cbiAqL1xuZXhwb3J0IGNvbnN0IEV2ZW50UHJlZml4ID0gJ29uOic7XG5cbi8qKlxuICogQXR0cmlidXRlIHVzZWQgdG8gbWFyayB0aGF0IGFuIGV2ZW50IGxpc3RlbmVyIGlzIGF0dGFjaGVkLlxuICovXG5leHBvcnQgY29uc3QgRXZlbnRBbnkgPSAnb246Lic7XG5cbi8qKlxuICogVGFnIG5hbWUgdXNlZCBmb3IgcHJvamVjdGlvbi5cbiAqL1xuZXhwb3J0IGNvbnN0IFFTbG90ID0gJ1E6U0xPVCc7XG5leHBvcnQgY29uc3QgUVNsb3RTZWxlY3RvciA9ICdRXFxcXDpTTE9UJztcblxuLyoqXG4gKiBgPHNvbWUtZWxlbWVudCBxOnNsb3Q9XCIuLi5cIj5gXG4gKi9cbmV4cG9ydCBjb25zdCBRU2xvdEF0dHIgPSAncTpzbG90JztcblxuZXhwb3J0IGNvbnN0IFFPYmpBdHRyID0gJ3E6b2JqJztcblxuZXhwb3J0IGNvbnN0IFFTZXFBdHRyID0gJ3E6c2VxJztcblxuZXhwb3J0IGNvbnN0IFFDb250YWluZXJBdHRyID0gJ3E6Y29udGFpbmVyJztcblxuZXhwb3J0IGNvbnN0IFFPYmpTZWxlY3RvciA9ICdbcVxcXFw6b2JqXSc7XG5cbmV4cG9ydCBjb25zdCBRQ29udGFpbmVyU2VsZWN0b3IgPSAnW3FcXFxcOmNvbnRhaW5lcl0nO1xuXG5leHBvcnQgY29uc3QgUmVuZGVyRXZlbnQgPSAncVJlbmRlcic7XG4vKipcbiAqIGA8cTpzbG90IG5hbWU9XCIuLi5cIj5gXG4gKi9cbmV4cG9ydCBjb25zdCBRU2xvdE5hbWUgPSAnbmFtZSc7XG5leHBvcnQgY29uc3QgUVNsb3RJbmVydE5hbWUgPSAnXFx1MDAwMCc7XG5cbmV4cG9ydCBjb25zdCBFTEVNRU5UX0lEID0gJ3E6aWQnO1xuZXhwb3J0IGNvbnN0IEVMRU1FTlRfSURfU0VMRUNUT1IgPSAnW3FcXFxcOmlkXSc7XG5leHBvcnQgY29uc3QgRUxFTUVOVF9JRF9QUkVGSVggPSAnIyc7XG5leHBvcnQgY29uc3QgRUxFTUVOVF9JRF9RX1BST1BTX1BSRUZJWCA9ICcmJztcbiJdfQ==","import { assertDefined } from '../assert/assert';\nexport function getDocument(node) {\n    if (typeof document !== 'undefined') {\n        return document;\n    }\n    if (node.nodeType === 9) {\n        return node;\n    }\n    let doc = node.ownerDocument;\n    while (doc && doc.nodeType !== 9) {\n        doc = doc.parentNode;\n    }\n    assertDefined(doc);\n    return doc;\n}\nexport function getParentElement(node) {\n    return node.parentElement || previousParent.get(node) || null;\n}\nexport const previousParent = new WeakMap();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9tLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS91dGlsL2RvbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFakQsTUFBTSxVQUFVLFdBQVcsQ0FBQyxJQUFVO0lBQ3BDLElBQUksT0FBTyxRQUFRLEtBQUssV0FBVyxFQUFFO1FBQ25DLE9BQU8sUUFBUSxDQUFDO0tBQ2pCO0lBQ0QsSUFBSSxJQUFJLENBQUMsUUFBUSxLQUFLLENBQUMsRUFBRTtRQUN2QixPQUFPLElBQWdCLENBQUM7S0FDekI7SUFDRCxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDO0lBQzdCLE9BQU8sR0FBRyxJQUFJLEdBQUcsQ0FBQyxRQUFRLEtBQUssQ0FBQyxFQUFFO1FBQ2hDLEdBQUcsR0FBRyxHQUFHLENBQUMsVUFBaUIsQ0FBQztLQUM3QjtJQUNELGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNuQixPQUFPLEdBQUksQ0FBQztBQUNkLENBQUM7QUFFRCxNQUFNLFVBQVUsZ0JBQWdCLENBQUMsSUFBVTtJQUN6QyxPQUFPLElBQUksQ0FBQyxhQUFhLElBQUksY0FBYyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUM7QUFDaEUsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxJQUFJLE9BQU8sRUFBaUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzc2VydERlZmluZWQgfSBmcm9tICcuLi9hc3NlcnQvYXNzZXJ0JztcblxuZXhwb3J0IGZ1bmN0aW9uIGdldERvY3VtZW50KG5vZGU6IE5vZGUpOiBEb2N1bWVudCB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIGRvY3VtZW50O1xuICB9XG4gIGlmIChub2RlLm5vZGVUeXBlID09PSA5KSB7XG4gICAgcmV0dXJuIG5vZGUgYXMgRG9jdW1lbnQ7XG4gIH1cbiAgbGV0IGRvYyA9IG5vZGUub3duZXJEb2N1bWVudDtcbiAgd2hpbGUgKGRvYyAmJiBkb2Mubm9kZVR5cGUgIT09IDkpIHtcbiAgICBkb2MgPSBkb2MucGFyZW50Tm9kZSBhcyBhbnk7XG4gIH1cbiAgYXNzZXJ0RGVmaW5lZChkb2MpO1xuICByZXR1cm4gZG9jITtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFBhcmVudEVsZW1lbnQobm9kZTogTm9kZSk6IEVsZW1lbnQgfCBudWxsIHtcbiAgcmV0dXJuIG5vZGUucGFyZW50RWxlbWVudCB8fCBwcmV2aW91c1BhcmVudC5nZXQobm9kZSkgfHwgbnVsbDtcbn1cblxuZXhwb3J0IGNvbnN0IHByZXZpb3VzUGFyZW50ID0gbmV3IFdlYWtNYXA8Tm9kZSwgRWxlbWVudD4oKTtcbiJdfQ==","import { assertDefined } from '../assert/assert';\nimport { QContainerSelector, QHostAttr } from '../util/markers';\nimport { getDocument } from '../util/dom';\nexport const CONTAINER = Symbol('container');\nexport function isStyleTask(obj) {\n    return obj && typeof obj === 'object' && obj.type === 'style';\n}\nlet _context;\nexport function tryGetInvokeContext() {\n    if (!_context) {\n        const context = typeof document !== 'undefined' && document && document.__q_context__;\n        if (!context) {\n            return undefined;\n        }\n        if (Array.isArray(context)) {\n            const element = context[0];\n            const hostElement = getHostElement(element);\n            assertDefined(element);\n            return (document.__q_context__ = newInvokeContext(getDocument(element), hostElement, element, context[1], context[2]));\n        }\n        return context;\n    }\n    return _context;\n}\nexport function getInvokeContext() {\n    const ctx = tryGetInvokeContext();\n    if (!ctx) {\n        throw new Error(\"Q-ERROR: invoking 'use*()' method outside of invocation context.\");\n    }\n    return ctx;\n}\nexport function useInvoke(context, fn, ...args) {\n    const previousContext = _context;\n    let returnValue;\n    try {\n        _context = context;\n        returnValue = fn.apply(null, args);\n    }\n    finally {\n        const currentCtx = _context;\n        _context = previousContext;\n        if (currentCtx.waitOn && currentCtx.waitOn.length > 0) {\n            // eslint-disable-next-line no-unsafe-finally\n            return Promise.all(currentCtx.waitOn).then(() => returnValue);\n        }\n    }\n    return returnValue;\n}\nexport function newInvokeContext(doc, hostElement, element, event, url) {\n    return {\n        seq: 0,\n        doc,\n        hostElement,\n        element,\n        event: event,\n        url: url || null,\n        qrl: undefined,\n    };\n}\n/**\n * @private\n */\nexport function useWaitOn(promise) {\n    const ctx = getInvokeContext();\n    (ctx.waitOn || (ctx.waitOn = [])).push(promise);\n}\nexport function getHostElement(el) {\n    let foundSlot = false;\n    let node = el;\n    while (node) {\n        const isHost = node.hasAttribute(QHostAttr);\n        const isSlot = node.tagName === 'Q:SLOT';\n        if (isHost) {\n            if (!foundSlot) {\n                break;\n            }\n            else {\n                foundSlot = false;\n            }\n        }\n        if (isSlot) {\n            foundSlot = true;\n        }\n        node = node.parentElement;\n    }\n    return node;\n}\nexport function getContainer(el) {\n    let container = el[CONTAINER];\n    if (!container) {\n        container = el.closest(QContainerSelector);\n        el[CONTAINER] = container;\n    }\n    return container;\n}\n//# sourceMappingURL=data:application/json;base64,","export function flattenArray(array, dst) {\n    // Yes this function is just Array.flat, but we need to run on old versions of Node.\n    if (!dst)\n        dst = [];\n    for (const item of array) {\n        if (Array.isArray(item)) {\n            flattenArray(item, dst);\n        }\n        else {\n            dst.push(item);\n        }\n    }\n    return dst;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJyYXkuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3V0aWwvYXJyYXkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxVQUFVLFlBQVksQ0FBSSxLQUFrQixFQUFFLEdBQVM7SUFDM0Qsb0ZBQW9GO0lBQ3BGLElBQUksQ0FBQyxHQUFHO1FBQUUsR0FBRyxHQUFHLEVBQUUsQ0FBQztJQUNuQixLQUFLLE1BQU0sSUFBSSxJQUFJLEtBQUssRUFBRTtRQUN4QixJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDdkIsWUFBWSxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQztTQUN6QjthQUFNO1lBQ0wsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNoQjtLQUNGO0lBQ0QsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGZsYXR0ZW5BcnJheTxUPihhcnJheTogKFQgfCBUW10pW10sIGRzdD86IFRbXSk6IFRbXSB7XG4gIC8vIFllcyB0aGlzIGZ1bmN0aW9uIGlzIGp1c3QgQXJyYXkuZmxhdCwgYnV0IHdlIG5lZWQgdG8gcnVuIG9uIG9sZCB2ZXJzaW9ucyBvZiBOb2RlLlxuICBpZiAoIWRzdCkgZHN0ID0gW107XG4gIGZvciAoY29uc3QgaXRlbSBvZiBhcnJheSkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGl0ZW0pKSB7XG4gICAgICBmbGF0dGVuQXJyYXkoaXRlbSwgZHN0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgZHN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9XG4gIHJldHVybiBkc3Q7XG59XG4iXX0=","import { flattenArray } from './array';\n/**\n * Converts a tree of Promises into a flat array of resolved promise values.\n *\n * @param tree - array of arrays of values or promises of values.\n * @returns a `Promise` of array of values.\n */\nexport function flattenPromiseTree(tree) {\n    return Promise.all(tree).then((values) => {\n        const flatArray = flattenArray(values);\n        for (let i = 0; i < flatArray.length; i++) {\n            if (isPromise(flatArray[i])) {\n                return flattenPromiseTree(flatArray);\n            }\n        }\n        return flatArray;\n    });\n}\nexport function isPromise(value) {\n    return value instanceof Promise;\n}\nexport const then = (promise, thenFn) => {\n    return isPromise(promise) ? promise.then(thenFn) : thenFn(promise);\n};\nexport const promiseAll = (promises) => {\n    const hasPromise = promises.some(isPromise);\n    if (hasPromise) {\n        return Promise.all(promises);\n    }\n    return promises;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvbWlzZXMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3V0aWwvcHJvbWlzZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUl2Qzs7Ozs7R0FLRztBQUNILE1BQU0sVUFBVSxrQkFBa0IsQ0FBSSxJQUFvQjtJQUN4RCxPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBVyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBYSxFQUFFLEVBQUU7UUFDckQsTUFBTSxTQUFTLEdBQUcsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3pDLElBQUksU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO2dCQUMzQixPQUFPLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxDQUFDO2FBQ3RDO1NBQ0Y7UUFDRCxPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUM7QUFFRCxNQUFNLFVBQVUsU0FBUyxDQUFDLEtBQVU7SUFDbEMsT0FBTyxLQUFLLFlBQVksT0FBTyxDQUFDO0FBQ2xDLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUcsQ0FDbEIsT0FBMEIsRUFDMUIsTUFBOEMsRUFDM0IsRUFBRTtJQUNyQixPQUFPLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQWMsQ0FBQyxDQUFDO0FBQ25GLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxDQUFrQixRQUFXLEVBQXFCLEVBQUU7SUFDNUUsTUFBTSxVQUFVLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM1QyxJQUFJLFVBQVUsRUFBRTtRQUNkLE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztLQUM5QjtJQUNELE9BQU8sUUFBUSxDQUFDO0FBQ2xCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgVmFsdWVPclByb21pc2UgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCB7IGZsYXR0ZW5BcnJheSB9IGZyb20gJy4vYXJyYXknO1xuXG5leHBvcnQgdHlwZSBQcm9taXNlVHJlZTxUPiA9IFQgfCBQcm9taXNlPFQ+IHwgUHJvbWlzZTxUW10+IHwgQXJyYXk8UHJvbWlzZVRyZWU8VD4+O1xuXG4vKipcbiAqIENvbnZlcnRzIGEgdHJlZSBvZiBQcm9taXNlcyBpbnRvIGEgZmxhdCBhcnJheSBvZiByZXNvbHZlZCBwcm9taXNlIHZhbHVlcy5cbiAqXG4gKiBAcGFyYW0gdHJlZSAtIGFycmF5IG9mIGFycmF5cyBvZiB2YWx1ZXMgb3IgcHJvbWlzZXMgb2YgdmFsdWVzLlxuICogQHJldHVybnMgYSBgUHJvbWlzZWAgb2YgYXJyYXkgb2YgdmFsdWVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZmxhdHRlblByb21pc2VUcmVlPFQ+KHRyZWU6IFByb21pc2VUcmVlPFQ+KTogUHJvbWlzZTxUW10+IHtcbiAgcmV0dXJuIFByb21pc2UuYWxsKHRyZWUgYXMgVFtdKS50aGVuKCh2YWx1ZXM6IGFueVtdKSA9PiB7XG4gICAgY29uc3QgZmxhdEFycmF5ID0gZmxhdHRlbkFycmF5KHZhbHVlcyk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBmbGF0QXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChpc1Byb21pc2UoZmxhdEFycmF5W2ldKSkge1xuICAgICAgICByZXR1cm4gZmxhdHRlblByb21pc2VUcmVlKGZsYXRBcnJheSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmbGF0QXJyYXk7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNQcm9taXNlKHZhbHVlOiBhbnkpOiB2YWx1ZSBpcyBQcm9taXNlPGFueT4ge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQcm9taXNlO1xufVxuXG5leHBvcnQgY29uc3QgdGhlbiA9IDxULCBCPihcbiAgcHJvbWlzZTogVmFsdWVPclByb21pc2U8VD4sXG4gIHRoZW5GbjogKGFyZzogQXdhaXRlZDxUPikgPT4gVmFsdWVPclByb21pc2U8Qj5cbik6IFZhbHVlT3JQcm9taXNlPEI+ID0+IHtcbiAgcmV0dXJuIGlzUHJvbWlzZShwcm9taXNlKSA/IHByb21pc2UudGhlbih0aGVuRm4gYXMgYW55KSA6IHRoZW5Gbihwcm9taXNlIGFzIGFueSk7XG59O1xuXG5leHBvcnQgY29uc3QgcHJvbWlzZUFsbCA9IDxUIGV4dGVuZHMgYW55W10+KHByb21pc2VzOiBUKTogVmFsdWVPclByb21pc2U8VD4gPT4ge1xuICBjb25zdCBoYXNQcm9taXNlID0gcHJvbWlzZXMuc29tZShpc1Byb21pc2UpO1xuICBpZiAoaGFzUHJvbWlzZSkge1xuICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcyk7XG4gIH1cbiAgcmV0dXJuIHByb21pc2VzO1xufTtcbiJdfQ==","import { newInvokeContext, useInvoke } from '../use/use-core';\nimport { then } from '../util/promises';\nimport { qrlImport, stringifyQRL } from './qrl';\nexport function isQrl(value) {\n    return value instanceof QRLInternal;\n}\nclass QRL {\n    constructor(chunk, symbol, symbolRef, symbolFn, capture, captureRef) {\n        this.chunk = chunk;\n        this.symbol = symbol;\n        this.symbolRef = symbolRef;\n        this.symbolFn = symbolFn;\n        this.capture = capture;\n        this.captureRef = captureRef;\n        this.canonicalChunk = chunk.replace(FIND_EXT, '');\n    }\n    setContainer(el) {\n        if (!this.el) {\n            this.el = el;\n        }\n    }\n    async resolve(el) {\n        if (el) {\n            this.setContainer(el);\n        }\n        return qrlImport(this.el, this);\n    }\n    invokeFn(el, currentCtx) {\n        return ((...args) => {\n            const fn = (typeof this.symbolRef === 'function' ? this.symbolRef : this.resolve(el));\n            return then(fn, (fn) => {\n                if (typeof fn === 'function') {\n                    const baseContext = currentCtx ?? newInvokeContext();\n                    const context = {\n                        ...baseContext,\n                        qrl: this,\n                    };\n                    return useInvoke(context, fn, ...args);\n                }\n                throw new Error('QRL is not a function');\n            });\n        });\n    }\n    copy() {\n        return new QRLInternal(this.chunk, this.symbol, this.symbolRef, this.symbolFn, null, this.captureRef);\n    }\n    invoke(...args) {\n        const fn = this.invokeFn();\n        return fn(...args);\n    }\n    serialize(options) {\n        return stringifyQRL(this, options);\n    }\n}\nexport const QRLInternal = QRL;\n// https://regexr.com/6enjv\nconst FIND_EXT = /\\?[\\w=&]+$/;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXJsLWNsYXNzLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9pbXBvcnQvcXJsLWNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBaUIsZ0JBQWdCLEVBQUUsU0FBUyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDN0UsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRXhDLE9BQU8sRUFBRSxTQUFTLEVBQXVCLFlBQVksRUFBRSxNQUFNLE9BQU8sQ0FBQztBQUdyRSxNQUFNLFVBQVUsS0FBSyxDQUFDLEtBQVU7SUFDOUIsT0FBTyxLQUFLLFlBQVksV0FBVyxDQUFDO0FBQ3RDLENBQUM7QUFFRCxNQUFNLEdBQUc7SUFLUCxZQUNTLEtBQWEsRUFDYixNQUFjLEVBQ2QsU0FBc0MsRUFDdEMsUUFBcUQsRUFDckQsT0FBd0IsRUFDeEIsVUFBd0I7UUFMeEIsVUFBSyxHQUFMLEtBQUssQ0FBUTtRQUNiLFdBQU0sR0FBTixNQUFNLENBQVE7UUFDZCxjQUFTLEdBQVQsU0FBUyxDQUE2QjtRQUN0QyxhQUFRLEdBQVIsUUFBUSxDQUE2QztRQUNyRCxZQUFPLEdBQVAsT0FBTyxDQUFpQjtRQUN4QixlQUFVLEdBQVYsVUFBVSxDQUFjO1FBRS9CLElBQUksQ0FBQyxjQUFjLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVELFlBQVksQ0FBQyxFQUFXO1FBQ3RCLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFO1lBQ1osSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7U0FDZDtJQUNILENBQUM7SUFFRCxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQVk7UUFDeEIsSUFBSSxFQUFFLEVBQUU7WUFDTixJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQ3ZCO1FBQ0QsT0FBTyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxJQUFXLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBRUQsUUFBUSxDQUFDLEVBQVksRUFBRSxVQUEwQjtRQUMvQyxPQUFPLENBQUMsQ0FBQyxHQUFHLElBQVcsRUFBTyxFQUFFO1lBQzlCLE1BQU0sRUFBRSxHQUFHLENBQUMsT0FBTyxJQUFJLENBQUMsU0FBUyxLQUFLLFVBQVUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsQ0FBUyxDQUFDO1lBQzlGLE9BQU8sSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO2dCQUNyQixJQUFJLE9BQU8sRUFBRSxLQUFLLFVBQVUsRUFBRTtvQkFDNUIsTUFBTSxXQUFXLEdBQUcsVUFBVSxJQUFJLGdCQUFnQixFQUFFLENBQUM7b0JBQ3JELE1BQU0sT0FBTyxHQUFrQjt3QkFDN0IsR0FBRyxXQUFXO3dCQUNkLEdBQUcsRUFBRSxJQUFJO3FCQUNWLENBQUM7b0JBQ0YsT0FBTyxTQUFTLENBQUMsT0FBTyxFQUFFLEVBQVMsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDO2lCQUMvQztnQkFDRCxNQUFNLElBQUksS0FBSyxDQUFDLHVCQUF1QixDQUFDLENBQUM7WUFDM0MsQ0FBQyxDQUFDLENBQUM7UUFDTCxDQUFDLENBQVEsQ0FBQztJQUNaLENBQUM7SUFFRCxJQUFJO1FBQ0YsT0FBTyxJQUFJLFdBQVcsQ0FDcEIsSUFBSSxDQUFDLEtBQUssRUFDVixJQUFJLENBQUMsTUFBTSxFQUNYLElBQUksQ0FBQyxTQUFTLEVBQ2QsSUFBSSxDQUFDLFFBQVEsRUFDYixJQUFJLEVBQ0osSUFBSSxDQUFDLFVBQVUsQ0FDaEIsQ0FBQztJQUNKLENBQUM7SUFFRCxNQUFNLENBQUMsR0FBRyxJQUE4RDtRQUN0RSxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDM0IsT0FBTyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQVEsQ0FBQztJQUM1QixDQUFDO0lBRUQsU0FBUyxDQUFDLE9BQTZCO1FBQ3JDLE9BQU8sWUFBWSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztJQUNyQyxDQUFDO0NBQ0Y7QUFHRCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQWUsR0FBRyxDQUFDO0FBRTNDLDJCQUEyQjtBQUMzQixNQUFNLFFBQVEsR0FBRyxZQUFZLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnZva2VDb250ZXh0LCBuZXdJbnZva2VDb250ZXh0LCB1c2VJbnZva2UgfSBmcm9tICcuLi91c2UvdXNlLWNvcmUnO1xuaW1wb3J0IHsgdGhlbiB9IGZyb20gJy4uL3V0aWwvcHJvbWlzZXMnO1xuaW1wb3J0IHR5cGUgeyBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJy4uL3V0aWwvdHlwZXMnO1xuaW1wb3J0IHsgcXJsSW1wb3J0LCBRUkxTZXJpYWxpemVPcHRpb25zLCBzdHJpbmdpZnlRUkwgfSBmcm9tICcuL3FybCc7XG5pbXBvcnQgdHlwZSB7IFFSTCBhcyBJUVJMIH0gZnJvbSAnLi9xcmwucHVibGljJztcblxuZXhwb3J0IGZ1bmN0aW9uIGlzUXJsKHZhbHVlOiBhbnkpOiB2YWx1ZSBpcyBRUkxJbnRlcm5hbCB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFFSTEludGVybmFsO1xufVxuXG5jbGFzcyBRUkw8VFlQRSA9IGFueT4gaW1wbGVtZW50cyBJUVJMPFRZUEU+IHtcbiAgX19icmFuZF9fUVJMX18hOiBUWVBFO1xuICBjYW5vbmljYWxDaHVuazogc3RyaW5nO1xuICBwcml2YXRlIGVsOiBFbGVtZW50IHwgdW5kZWZpbmVkO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBjaHVuazogc3RyaW5nLFxuICAgIHB1YmxpYyBzeW1ib2w6IHN0cmluZyxcbiAgICBwdWJsaWMgc3ltYm9sUmVmOiBudWxsIHwgVmFsdWVPclByb21pc2U8VFlQRT4sXG4gICAgcHVibGljIHN5bWJvbEZuOiBudWxsIHwgKCgpID0+IFByb21pc2U8UmVjb3JkPHN0cmluZywgYW55Pj4pLFxuICAgIHB1YmxpYyBjYXB0dXJlOiBudWxsIHwgc3RyaW5nW10sXG4gICAgcHVibGljIGNhcHR1cmVSZWY6IG51bGwgfCBhbnlbXVxuICApIHtcbiAgICB0aGlzLmNhbm9uaWNhbENodW5rID0gY2h1bmsucmVwbGFjZShGSU5EX0VYVCwgJycpO1xuICB9XG5cbiAgc2V0Q29udGFpbmVyKGVsOiBFbGVtZW50KSB7XG4gICAgaWYgKCF0aGlzLmVsKSB7XG4gICAgICB0aGlzLmVsID0gZWw7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgcmVzb2x2ZShlbD86IEVsZW1lbnQpOiBQcm9taXNlPFRZUEU+IHtcbiAgICBpZiAoZWwpIHtcbiAgICAgIHRoaXMuc2V0Q29udGFpbmVyKGVsKTtcbiAgICB9XG4gICAgcmV0dXJuIHFybEltcG9ydCh0aGlzLmVsLCB0aGlzIGFzIGFueSk7XG4gIH1cblxuICBpbnZva2VGbihlbD86IEVsZW1lbnQsIGN1cnJlbnRDdHg/OiBJbnZva2VDb250ZXh0KTogYW55IHtcbiAgICByZXR1cm4gKCguLi5hcmdzOiBhbnlbXSk6IGFueSA9PiB7XG4gICAgICBjb25zdCBmbiA9ICh0eXBlb2YgdGhpcy5zeW1ib2xSZWYgPT09ICdmdW5jdGlvbicgPyB0aGlzLnN5bWJvbFJlZiA6IHRoaXMucmVzb2x2ZShlbCkpIGFzIFRZUEU7XG4gICAgICByZXR1cm4gdGhlbihmbiwgKGZuKSA9PiB7XG4gICAgICAgIGlmICh0eXBlb2YgZm4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICBjb25zdCBiYXNlQ29udGV4dCA9IGN1cnJlbnRDdHggPz8gbmV3SW52b2tlQ29udGV4dCgpO1xuICAgICAgICAgIGNvbnN0IGNvbnRleHQ6IEludm9rZUNvbnRleHQgPSB7XG4gICAgICAgICAgICAuLi5iYXNlQ29udGV4dCxcbiAgICAgICAgICAgIHFybDogdGhpcyxcbiAgICAgICAgICB9O1xuICAgICAgICAgIHJldHVybiB1c2VJbnZva2UoY29udGV4dCwgZm4gYXMgYW55LCAuLi5hcmdzKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1FSTCBpcyBub3QgYSBmdW5jdGlvbicpO1xuICAgICAgfSk7XG4gICAgfSkgYXMgYW55O1xuICB9XG5cbiAgY29weSgpOiBRUkxJbnRlcm5hbDxUWVBFPiB7XG4gICAgcmV0dXJuIG5ldyBRUkxJbnRlcm5hbChcbiAgICAgIHRoaXMuY2h1bmssXG4gICAgICB0aGlzLnN5bWJvbCxcbiAgICAgIHRoaXMuc3ltYm9sUmVmLFxuICAgICAgdGhpcy5zeW1ib2xGbixcbiAgICAgIG51bGwsXG4gICAgICB0aGlzLmNhcHR1cmVSZWZcbiAgICApO1xuICB9XG5cbiAgaW52b2tlKC4uLmFyZ3M6IFRZUEUgZXh0ZW5kcyAoLi4uYXJnczogaW5mZXIgQVJHUykgPT4gYW55ID8gQVJHUyA6IG5ldmVyKSB7XG4gICAgY29uc3QgZm4gPSB0aGlzLmludm9rZUZuKCk7XG4gICAgcmV0dXJuIGZuKC4uLmFyZ3MpIGFzIGFueTtcbiAgfVxuXG4gIHNlcmlhbGl6ZShvcHRpb25zPzogUVJMU2VyaWFsaXplT3B0aW9ucykge1xuICAgIHJldHVybiBzdHJpbmdpZnlRUkwodGhpcywgb3B0aW9ucyk7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgUVJMSW50ZXJuYWw8VCA9IGFueT4gPSBRUkw8VD47XG5leHBvcnQgY29uc3QgUVJMSW50ZXJuYWw6IHR5cGVvZiBRUkwgPSBRUkw7XG5cbi8vIGh0dHBzOi8vcmVnZXhyLmNvbS82ZW5qdlxuY29uc3QgRklORF9FWFQgPSAvXFw/W1xcdz0mXSskLztcbiJdfQ==","import { getContainer } from '../use/use-core';\nimport { getDocument } from '../util/dom';\nexport const createPlatform = (doc) => {\n    const moduleCache = new Map();\n    return {\n        importSymbol(element, url, symbolName) {\n            const urlDoc = toUrl(doc, element, url).toString();\n            const urlCopy = new URL(urlDoc);\n            urlCopy.hash = '';\n            urlCopy.search = '';\n            const importURL = urlCopy.href;\n            const mod = moduleCache.get(importURL);\n            if (mod) {\n                return mod[symbolName];\n            }\n            return import(/* @vite-ignore */ importURL).then((mod) => {\n                moduleCache.set(importURL, mod);\n                return mod[symbolName];\n            });\n        },\n        raf: (fn) => {\n            return new Promise((resolve) => {\n                requestAnimationFrame(() => {\n                    resolve(fn());\n                });\n            });\n        },\n        nextTick: (fn) => {\n            return new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(fn());\n                });\n            });\n        },\n        chunkForSymbol() {\n            return undefined;\n        },\n    };\n};\n/**\n * Convert relative base URI and relative URL into a fully qualified URL.\n *\n * @param base -`QRL`s are relative, and therefore they need a base for resolution.\n *    - `Element` use `base.ownerDocument.baseURI`\n *    - `Document` use `base.baseURI`\n *    - `string` use `base` as is\n *    - `QConfig` use `base.baseURI`\n * @param url - relative URL\n * @returns fully qualified URL.\n */\nexport function toUrl(doc, element, url) {\n    const containerEl = getContainer(element);\n    const base = new URL(containerEl?.getAttribute('q:base') ?? doc.baseURI, doc.baseURI);\n    return new URL(url, base);\n}\n/**\n * @public\n */\nexport const setPlatform = (doc, plt) => (doc[DocumentPlatform] = plt);\n/**\n * @public\n */\nexport const getPlatform = (docOrNode) => {\n    const doc = getDocument(docOrNode);\n    return doc[DocumentPlatform] || (doc[DocumentPlatform] = createPlatform(doc));\n};\nconst DocumentPlatform = /*@__PURE__*/ Symbol();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhdGZvcm0uanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3BsYXRmb3JtL3BsYXRmb3JtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRzFDLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxDQUFDLEdBQWEsRUFBZ0IsRUFBRTtJQUM1RCxNQUFNLFdBQVcsR0FBRyxJQUFJLEdBQUcsRUFBcUMsQ0FBQztJQUNqRSxPQUFPO1FBQ0wsWUFBWSxDQUFDLE9BQU8sRUFBRSxHQUFHLEVBQUUsVUFBVTtZQUNuQyxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLE9BQU8sRUFBRSxHQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUVuRCxNQUFNLE9BQU8sR0FBRyxJQUFJLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUNoQyxPQUFPLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztZQUNsQixPQUFPLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztZQUNwQixNQUFNLFNBQVMsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDO1lBQy9CLE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDdkMsSUFBSSxHQUFHLEVBQUU7Z0JBQ1AsT0FBTyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7YUFDeEI7WUFDRCxPQUFPLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtnQkFDdkQsV0FBVyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQ2hDLE9BQU8sR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ3pCLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUNELEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO1lBQ1YsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFO2dCQUM3QixxQkFBcUIsQ0FBQyxHQUFHLEVBQUU7b0JBQ3pCLE9BQU8sQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO2dCQUNoQixDQUFDLENBQUMsQ0FBQztZQUNMLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUNELFFBQVEsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO1lBQ2YsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFO2dCQUM3QixVQUFVLENBQUMsR0FBRyxFQUFFO29CQUNkLE9BQU8sQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO2dCQUNoQixDQUFDLENBQUMsQ0FBQztZQUNMLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUNELGNBQWM7WUFDWixPQUFPLFNBQVMsQ0FBQztRQUNuQixDQUFDO0tBQ0YsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGOzs7Ozs7Ozs7O0dBVUc7QUFDSCxNQUFNLFVBQVUsS0FBSyxDQUFDLEdBQWEsRUFBRSxPQUFnQixFQUFFLEdBQWlCO0lBQ3RFLE1BQU0sV0FBVyxHQUFHLFlBQVksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMxQyxNQUFNLElBQUksR0FBRyxJQUFJLEdBQUcsQ0FBQyxXQUFXLEVBQUUsWUFBWSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3RGLE9BQU8sSUFBSSxHQUFHLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQzVCLENBQUM7QUFFRDs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxDQUFDLEdBQWEsRUFBRSxHQUFpQixFQUFFLEVBQUUsQ0FDOUQsQ0FBRSxHQUF3QixDQUFDLGdCQUFnQixDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7QUFFdEQ7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsQ0FBQyxTQUEwQixFQUFFLEVBQUU7SUFDeEQsTUFBTSxHQUFHLEdBQUcsV0FBVyxDQUFDLFNBQVMsQ0FBcUIsQ0FBQztJQUN2RCxPQUFPLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLEdBQUcsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7QUFDaEYsQ0FBQyxDQUFDO0FBRUYsTUFBTSxnQkFBZ0IsR0FBRyxhQUFhLENBQUMsTUFBTSxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRDb250YWluZXIgfSBmcm9tICcuLi91c2UvdXNlLWNvcmUnO1xuaW1wb3J0IHsgZ2V0RG9jdW1lbnQgfSBmcm9tICcuLi91dGlsL2RvbSc7XG5pbXBvcnQgdHlwZSB7IENvcmVQbGF0Zm9ybSB9IGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgY29uc3QgY3JlYXRlUGxhdGZvcm0gPSAoZG9jOiBEb2N1bWVudCk6IENvcmVQbGF0Zm9ybSA9PiB7XG4gIGNvbnN0IG1vZHVsZUNhY2hlID0gbmV3IE1hcDxzdHJpbmcsIHsgW3N5bWJvbDogc3RyaW5nXTogYW55IH0+KCk7XG4gIHJldHVybiB7XG4gICAgaW1wb3J0U3ltYm9sKGVsZW1lbnQsIHVybCwgc3ltYm9sTmFtZSkge1xuICAgICAgY29uc3QgdXJsRG9jID0gdG9VcmwoZG9jLCBlbGVtZW50LCB1cmwpLnRvU3RyaW5nKCk7XG5cbiAgICAgIGNvbnN0IHVybENvcHkgPSBuZXcgVVJMKHVybERvYyk7XG4gICAgICB1cmxDb3B5Lmhhc2ggPSAnJztcbiAgICAgIHVybENvcHkuc2VhcmNoID0gJyc7XG4gICAgICBjb25zdCBpbXBvcnRVUkwgPSB1cmxDb3B5LmhyZWY7XG4gICAgICBjb25zdCBtb2QgPSBtb2R1bGVDYWNoZS5nZXQoaW1wb3J0VVJMKTtcbiAgICAgIGlmIChtb2QpIHtcbiAgICAgICAgcmV0dXJuIG1vZFtzeW1ib2xOYW1lXTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBpbXBvcnQoLyogQHZpdGUtaWdub3JlICovIGltcG9ydFVSTCkudGhlbigobW9kKSA9PiB7XG4gICAgICAgIG1vZHVsZUNhY2hlLnNldChpbXBvcnRVUkwsIG1vZCk7XG4gICAgICAgIHJldHVybiBtb2Rbc3ltYm9sTmFtZV07XG4gICAgICB9KTtcbiAgICB9LFxuICAgIHJhZjogKGZuKSA9PiB7XG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHtcbiAgICAgICAgICByZXNvbHZlKGZuKCkpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgbmV4dFRpY2s6IChmbikgPT4ge1xuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHJlc29sdmUoZm4oKSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBjaHVua0ZvclN5bWJvbCgpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfSxcbiAgfTtcbn07XG5cbi8qKlxuICogQ29udmVydCByZWxhdGl2ZSBiYXNlIFVSSSBhbmQgcmVsYXRpdmUgVVJMIGludG8gYSBmdWxseSBxdWFsaWZpZWQgVVJMLlxuICpcbiAqIEBwYXJhbSBiYXNlIC1gUVJMYHMgYXJlIHJlbGF0aXZlLCBhbmQgdGhlcmVmb3JlIHRoZXkgbmVlZCBhIGJhc2UgZm9yIHJlc29sdXRpb24uXG4gKiAgICAtIGBFbGVtZW50YCB1c2UgYGJhc2Uub3duZXJEb2N1bWVudC5iYXNlVVJJYFxuICogICAgLSBgRG9jdW1lbnRgIHVzZSBgYmFzZS5iYXNlVVJJYFxuICogICAgLSBgc3RyaW5nYCB1c2UgYGJhc2VgIGFzIGlzXG4gKiAgICAtIGBRQ29uZmlnYCB1c2UgYGJhc2UuYmFzZVVSSWBcbiAqIEBwYXJhbSB1cmwgLSByZWxhdGl2ZSBVUkxcbiAqIEByZXR1cm5zIGZ1bGx5IHF1YWxpZmllZCBVUkwuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b1VybChkb2M6IERvY3VtZW50LCBlbGVtZW50OiBFbGVtZW50LCB1cmw6IHN0cmluZyB8IFVSTCk6IFVSTCB7XG4gIGNvbnN0IGNvbnRhaW5lckVsID0gZ2V0Q29udGFpbmVyKGVsZW1lbnQpO1xuICBjb25zdCBiYXNlID0gbmV3IFVSTChjb250YWluZXJFbD8uZ2V0QXR0cmlidXRlKCdxOmJhc2UnKSA/PyBkb2MuYmFzZVVSSSwgZG9jLmJhc2VVUkkpO1xuICByZXR1cm4gbmV3IFVSTCh1cmwsIGJhc2UpO1xufVxuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGNvbnN0IHNldFBsYXRmb3JtID0gKGRvYzogRG9jdW1lbnQsIHBsdDogQ29yZVBsYXRmb3JtKSA9PlxuICAoKGRvYyBhcyBQbGF0Zm9ybURvY3VtZW50KVtEb2N1bWVudFBsYXRmb3JtXSA9IHBsdCk7XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgY29uc3QgZ2V0UGxhdGZvcm0gPSAoZG9jT3JOb2RlOiBEb2N1bWVudCB8IE5vZGUpID0+IHtcbiAgY29uc3QgZG9jID0gZ2V0RG9jdW1lbnQoZG9jT3JOb2RlKSBhcyBQbGF0Zm9ybURvY3VtZW50O1xuICByZXR1cm4gZG9jW0RvY3VtZW50UGxhdGZvcm1dIHx8IChkb2NbRG9jdW1lbnRQbGF0Zm9ybV0gPSBjcmVhdGVQbGF0Zm9ybShkb2MpKTtcbn07XG5cbmNvbnN0IERvY3VtZW50UGxhdGZvcm0gPSAvKkBfX1BVUkVfXyovIFN5bWJvbCgpO1xuXG5pbnRlcmZhY2UgUGxhdGZvcm1Eb2N1bWVudCBleHRlbmRzIERvY3VtZW50IHtcbiAgW0RvY3VtZW50UGxhdGZvcm1dPzogQ29yZVBsYXRmb3JtO1xufVxuIl19","import { QHostAttr, QSlotAttr } from './markers';\n/**\n * Returns true if the `node` is `Element` and of the right `tagName`.\n *\n * @param node\n * @private\n */\nexport function isDomElementWithTagName(node, tagName) {\n    return isHtmlElement(node) && node.tagName.toUpperCase() == tagName.toUpperCase();\n}\n/**\n * @private\n */\nexport function isTemplateElement(node) {\n    return isDomElementWithTagName(node, 'template');\n}\n/**\n * @private\n */\nexport function isQSLotTemplateElement(node) {\n    return isTemplateElement(node) && node.hasAttribute(QSlotAttr);\n}\n/**\n * @private\n */\nexport function isComponentElement(node) {\n    return isHtmlElement(node) && node.hasAttribute(QHostAttr);\n}\n/**\n * @private\n */\nexport function isHtmlElement(node) {\n    return node ? node.nodeType === NodeType.ELEMENT_NODE : false;\n}\n/**\n * `Node.type` enumeration\n */\nexport var NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"ELEMENT_NODE\"] = 1] = \"ELEMENT_NODE\";\n    NodeType[NodeType[\"ATTRIBUTE_NODE\"] = 2] = \"ATTRIBUTE_NODE\";\n    NodeType[NodeType[\"TEXT_NODE\"] = 3] = \"TEXT_NODE\";\n    NodeType[NodeType[\"CDATA_SECTION_NODE\"] = 4] = \"CDATA_SECTION_NODE\";\n    NodeType[NodeType[\"PROCESSING_INSTRUCTION_NODE\"] = 7] = \"PROCESSING_INSTRUCTION_NODE\";\n    // document, such as <?xml-stylesheet … ?>.\n    NodeType[NodeType[\"COMMENT_NODE\"] = 8] = \"COMMENT_NODE\";\n    NodeType[NodeType[\"DOCUMENT_NODE\"] = 9] = \"DOCUMENT_NODE\";\n    NodeType[NodeType[\"DOCUMENT_TYPE_NODE\"] = 10] = \"DOCUMENT_TYPE_NODE\";\n    NodeType[NodeType[\"DOCUMENT_FRAGMENT_NODE\"] = 11] = \"DOCUMENT_FRAGMENT_NODE\";\n})(NodeType || (NodeType = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3V0aWwvdHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFFakQ7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsdUJBQXVCLENBQ3JDLElBQTZCLEVBQzdCLE9BQWU7SUFFZixPQUFPLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxJQUFJLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQztBQUNwRixDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQUMsSUFBNkI7SUFDN0QsT0FBTyx1QkFBdUIsQ0FBQyxJQUFJLEVBQUUsVUFBVSxDQUFDLENBQUM7QUFDbkQsQ0FBQztBQUVEOztHQUVHO0FBQ0gsTUFBTSxVQUFVLHNCQUFzQixDQUFDLElBQTZCO0lBQ2xFLE9BQU8saUJBQWlCLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUNqRSxDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsa0JBQWtCLENBQUMsSUFBNkI7SUFDOUQsT0FBTyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUM3RCxDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsYUFBYSxDQUFDLElBQVM7SUFDckMsT0FBTyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLEtBQUssUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0FBQ2hFLENBQUM7QUFRRDs7R0FFRztBQUNILE1BQU0sQ0FBTixJQUFrQixRQVdqQjtBQVhELFdBQWtCLFFBQVE7SUFDeEIsdURBQWdCLENBQUE7SUFDaEIsMkRBQWtCLENBQUE7SUFDbEIsaURBQWEsQ0FBQTtJQUNiLG1FQUFzQixDQUFBO0lBQ3RCLHFGQUErQixDQUFBO0lBQy9CLDJDQUEyQztJQUMzQyx1REFBZ0IsQ0FBQTtJQUNoQix5REFBaUIsQ0FBQTtJQUNqQixvRUFBdUIsQ0FBQTtJQUN2Qiw0RUFBMkIsQ0FBQTtBQUM3QixDQUFDLEVBWGlCLFFBQVEsS0FBUixRQUFRLFFBV3pCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUUhvc3RBdHRyLCBRU2xvdEF0dHIgfSBmcm9tICcuL21hcmtlcnMnO1xuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgYG5vZGVgIGlzIGBFbGVtZW50YCBhbmQgb2YgdGhlIHJpZ2h0IGB0YWdOYW1lYC5cbiAqXG4gKiBAcGFyYW0gbm9kZVxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzRG9tRWxlbWVudFdpdGhUYWdOYW1lKFxuICBub2RlOiBOb2RlIHwgbnVsbCB8IHVuZGVmaW5lZCxcbiAgdGFnTmFtZTogc3RyaW5nXG4pOiBub2RlIGlzIEVsZW1lbnQge1xuICByZXR1cm4gaXNIdG1sRWxlbWVudChub2RlKSAmJiBub2RlLnRhZ05hbWUudG9VcHBlckNhc2UoKSA9PSB0YWdOYW1lLnRvVXBwZXJDYXNlKCk7XG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVGVtcGxhdGVFbGVtZW50KG5vZGU6IE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkKTogbm9kZSBpcyBIVE1MVGVtcGxhdGVFbGVtZW50IHtcbiAgcmV0dXJuIGlzRG9tRWxlbWVudFdpdGhUYWdOYW1lKG5vZGUsICd0ZW1wbGF0ZScpO1xufVxuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1FTTG90VGVtcGxhdGVFbGVtZW50KG5vZGU6IE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkKTogbm9kZSBpcyBIVE1MVGVtcGxhdGVFbGVtZW50IHtcbiAgcmV0dXJuIGlzVGVtcGxhdGVFbGVtZW50KG5vZGUpICYmIG5vZGUuaGFzQXR0cmlidXRlKFFTbG90QXR0cik7XG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzQ29tcG9uZW50RWxlbWVudChub2RlOiBOb2RlIHwgbnVsbCB8IHVuZGVmaW5lZCk6IG5vZGUgaXMgSFRNTEVsZW1lbnQge1xuICByZXR1cm4gaXNIdG1sRWxlbWVudChub2RlKSAmJiBub2RlLmhhc0F0dHJpYnV0ZShRSG9zdEF0dHIpO1xufVxuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0h0bWxFbGVtZW50KG5vZGU6IGFueSk6IG5vZGUgaXMgRWxlbWVudCB7XG4gIHJldHVybiBub2RlID8gbm9kZS5ub2RlVHlwZSA9PT0gTm9kZVR5cGUuRUxFTUVOVF9OT0RFIDogZmFsc2U7XG59XG5cbi8qKlxuICogVHlwZSByZXByZXNlbnRpbmcgYSB2YWx1ZSB3aGljaCBpcyBlaXRoZXIgcmVzb2x2ZSBvciBhIHByb21pc2UuXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCB0eXBlIFZhbHVlT3JQcm9taXNlPFQ+ID0gVCB8IFByb21pc2U8VD47XG5cbi8qKlxuICogYE5vZGUudHlwZWAgZW51bWVyYXRpb25cbiAqL1xuZXhwb3J0IGNvbnN0IGVudW0gTm9kZVR5cGUge1xuICBFTEVNRU5UX05PREUgPSAxLCAvLyBBbiBFbGVtZW50IG5vZGUgbGlrZSA8cD4gb3IgPGRpdj4uXG4gIEFUVFJJQlVURV9OT0RFID0gMiwgLy8gQW4gQXR0cmlidXRlIG9mIGFuIEVsZW1lbnQuXG4gIFRFWFRfTk9ERSA9IDMsIC8vIFRoZSBhY3R1YWwgVGV4dCBpbnNpZGUgYW4gRWxlbWVudCBvciBBdHRyLlxuICBDREFUQV9TRUNUSU9OX05PREUgPSA0LCAvLyBBIENEQVRBU2VjdGlvbiwgc3VjaCBhcyA8IUNEQVRBW1sg4oCmIF1dPi5cbiAgUFJPQ0VTU0lOR19JTlNUUlVDVElPTl9OT0RFID0gNywgLy8gQSBQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24gb2YgYW4gWE1MXG4gIC8vIGRvY3VtZW50LCBzdWNoIGFzIDw/eG1sLXN0eWxlc2hlZXQg4oCmID8+LlxuICBDT01NRU5UX05PREUgPSA4LCAvLyBBIENvbW1lbnQgbm9kZSwgc3VjaCBhcyA8IS0tIOKApiAtLT4uXG4gIERPQ1VNRU5UX05PREUgPSA5LCAvLyBBIERvY3VtZW50IG5vZGUuXG4gIERPQ1VNRU5UX1RZUEVfTk9ERSA9IDEwLCAvLyBBIERvY3VtZW50VHlwZSBub2RlLCBzdWNoIGFzIDwhRE9DVFlQRSBodG1sPi5cbiAgRE9DVU1FTlRfRlJBR01FTlRfTk9ERSA9IDExLCAvLyBBIERvY3VtZW50RnJhZ21lbnQgbm9kZS5cbn1cbiJdfQ==","import { isHtmlElement } from '../util/types';\nexport function stringifyDebug(value) {\n    if (value == null)\n        return String(value);\n    if (typeof value === 'function')\n        return value.name;\n    if (isHtmlElement(value))\n        return stringifyElement(value);\n    if (value instanceof URL)\n        return String(value);\n    if (typeof value === 'object')\n        return JSON.stringify(value, function (key, value) {\n            if (isHtmlElement(value))\n                return stringifyElement(value);\n            return value;\n        });\n    return String(value);\n}\nexport function stringifyElement(element) {\n    let html = '<' + element.localName;\n    const attributes = element.attributes;\n    const names = [];\n    for (let i = 0; i < attributes.length; i++) {\n        names.push(attributes[i].name);\n    }\n    names.sort();\n    for (let i = 0; i < names.length; i++) {\n        const name = names[i];\n        let value = element.getAttribute(name);\n        if (value?.startsWith('file:/')) {\n            value = value.replace(/(file:\\/\\/).*(\\/.*)$/, (all, protocol, file) => protocol + '...' + file);\n        }\n        html +=\n            ' ' + name + (value == null || value == '' ? '' : \"='\" + value.replace(\"'\", '&apos;') + \"'\");\n    }\n    return html + '>';\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaW5naWZ5LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9lcnJvci9zdHJpbmdpZnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU5QyxNQUFNLFVBQVUsY0FBYyxDQUFDLEtBQVU7SUFDdkMsSUFBSSxLQUFLLElBQUksSUFBSTtRQUFFLE9BQU8sTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLElBQUksT0FBTyxLQUFLLEtBQUssVUFBVTtRQUFFLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQztJQUNuRCxJQUFJLGFBQWEsQ0FBQyxLQUFLLENBQUM7UUFBRSxPQUFPLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3pELElBQUksS0FBSyxZQUFZLEdBQUc7UUFBRSxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMvQyxJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVE7UUFDM0IsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxVQUFxQixHQUFXLEVBQUUsS0FBVTtZQUN2RSxJQUFJLGFBQWEsQ0FBQyxLQUFLLENBQUM7Z0JBQUUsT0FBTyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN6RCxPQUFPLEtBQUssQ0FBQztRQUNmLENBQUMsQ0FBQyxDQUFDO0lBQ0wsT0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDdkIsQ0FBQztBQUVELE1BQU0sVUFBVSxnQkFBZ0IsQ0FBQyxPQUFnQjtJQUMvQyxJQUFJLElBQUksR0FBRyxHQUFHLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQztJQUNuQyxNQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDO0lBQ3RDLE1BQU0sS0FBSyxHQUFHLEVBQUUsQ0FBQztJQUNqQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsVUFBVSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUMxQyxLQUFLLENBQUMsSUFBSSxDQUFFLFVBQVUsQ0FBQyxDQUFDLENBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUMxQztJQUNELEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNiLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ3JDLE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QixJQUFJLEtBQUssR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZDLElBQUksS0FBSyxFQUFFLFVBQVUsQ0FBQyxRQUFRLENBQUMsRUFBRTtZQUMvQixLQUFLLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FDbkIsc0JBQXNCLEVBQ3RCLENBQUMsR0FBRyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLFFBQVEsR0FBRyxLQUFLLEdBQUcsSUFBSSxDQUNqRCxDQUFDO1NBQ0g7UUFDRCxJQUFJO1lBQ0YsR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEtBQUssSUFBSSxJQUFJLElBQUksS0FBSyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7S0FDaEc7SUFDRCxPQUFPLElBQUksR0FBRyxHQUFHLENBQUM7QUFDcEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzSHRtbEVsZW1lbnQgfSBmcm9tICcuLi91dGlsL3R5cGVzJztcblxuZXhwb3J0IGZ1bmN0aW9uIHN0cmluZ2lmeURlYnVnKHZhbHVlOiBhbnkpOiBzdHJpbmcgfCBudWxsIHtcbiAgaWYgKHZhbHVlID09IG51bGwpIHJldHVybiBTdHJpbmcodmFsdWUpO1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nKSByZXR1cm4gdmFsdWUubmFtZTtcbiAgaWYgKGlzSHRtbEVsZW1lbnQodmFsdWUpKSByZXR1cm4gc3RyaW5naWZ5RWxlbWVudCh2YWx1ZSk7XG4gIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFVSTCkgcmV0dXJuIFN0cmluZyh2YWx1ZSk7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnKVxuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh2YWx1ZSwgZnVuY3Rpb24gKHRoaXM6IGFueSwga2V5OiBzdHJpbmcsIHZhbHVlOiBhbnkpIHtcbiAgICAgIGlmIChpc0h0bWxFbGVtZW50KHZhbHVlKSkgcmV0dXJuIHN0cmluZ2lmeUVsZW1lbnQodmFsdWUpO1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0pO1xuICByZXR1cm4gU3RyaW5nKHZhbHVlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN0cmluZ2lmeUVsZW1lbnQoZWxlbWVudDogRWxlbWVudCk6IHN0cmluZyB7XG4gIGxldCBodG1sID0gJzwnICsgZWxlbWVudC5sb2NhbE5hbWU7XG4gIGNvbnN0IGF0dHJpYnV0ZXMgPSBlbGVtZW50LmF0dHJpYnV0ZXM7XG4gIGNvbnN0IG5hbWVzID0gW107XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYXR0cmlidXRlcy5sZW5ndGg7IGkrKykge1xuICAgIG5hbWVzLnB1c2goKGF0dHJpYnV0ZXNbaV0gYXMgQXR0cikubmFtZSk7XG4gIH1cbiAgbmFtZXMuc29ydCgpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IG5hbWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgbmFtZSA9IG5hbWVzW2ldO1xuICAgIGxldCB2YWx1ZSA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKG5hbWUpO1xuICAgIGlmICh2YWx1ZT8uc3RhcnRzV2l0aCgnZmlsZTovJykpIHtcbiAgICAgIHZhbHVlID0gdmFsdWUucmVwbGFjZShcbiAgICAgICAgLyhmaWxlOlxcL1xcLykuKihcXC8uKikkLyxcbiAgICAgICAgKGFsbCwgcHJvdG9jb2wsIGZpbGUpID0+IHByb3RvY29sICsgJy4uLicgKyBmaWxlXG4gICAgICApO1xuICAgIH1cbiAgICBodG1sICs9XG4gICAgICAnICcgKyBuYW1lICsgKHZhbHVlID09IG51bGwgfHwgdmFsdWUgPT0gJycgPyAnJyA6IFwiPSdcIiArIHZhbHVlLnJlcGxhY2UoXCInXCIsICcmYXBvczsnKSArIFwiJ1wiKTtcbiAgfVxuICByZXR1cm4gaHRtbCArICc+Jztcbn1cbiJdfQ==","import { stringifyDebug } from './stringify';\nimport { qDev } from '../util/qdev';\nexport var QError;\n(function (QError) {\n    // core 000-099\n    QError[QError[\"TODO\"] = 0] = \"TODO\";\n    QError[QError[\"Core_qConfigNotFound_path\"] = 1] = \"Core_qConfigNotFound_path\";\n    QError[QError[\"Core_unrecognizedStack_frame\"] = 2] = \"Core_unrecognizedStack_frame\";\n    QError[QError[\"Core_noAttribute_atr1_element\"] = 3] = \"Core_noAttribute_atr1_element\";\n    QError[QError[\"Core_noAttribute_atr1_attr2_element\"] = 4] = \"Core_noAttribute_atr1_attr2_element\";\n    QError[QError[\"Core_missingProperty_name_props\"] = 5] = \"Core_missingProperty_name_props\";\n    QError[QError[\"Core_missingExport_name_url_props\"] = 6] = \"Core_missingExport_name_url_props\";\n    // QRL 100-199\n    QError[QError[\"QRL_expectFunction_url_actual\"] = 100] = \"QRL_expectFunction_url_actual\";\n    // Injection 200-299\n    QError[QError[\"Injector_noHost_element\"] = 200] = \"Injector_noHost_element\";\n    QError[QError[\"Injector_expectedSpecificInjector_expected_actual\"] = 201] = \"Injector_expectedSpecificInjector_expected_actual\";\n    QError[QError[\"Injector_notElement_arg\"] = 202] = \"Injector_notElement_arg\";\n    QError[QError[\"Injector_wrongMethodThis_expected_actual\"] = 203] = \"Injector_wrongMethodThis_expected_actual\";\n    QError[QError[\"Injector_missingSerializedState_entityKey_element\"] = 204] = \"Injector_missingSerializedState_entityKey_element\";\n    QError[QError[\"Injector_notFound_element\"] = 206] = \"Injector_notFound_element\";\n    QError[QError[\"Injector_eventInjectorNotSerializable\"] = 207] = \"Injector_eventInjectorNotSerializable\";\n    // Entities 300-399\n    QError[QError[\"Entity_notValidKey_key\"] = 300] = \"Entity_notValidKey_key\";\n    QError[QError[\"Entity_keyAlreadyExists_key\"] = 301] = \"Entity_keyAlreadyExists_key\";\n    QError[QError[\"Entity_invalidAttribute_name\"] = 303] = \"Entity_invalidAttribute_name\";\n    QError[QError[\"Entity_missingExpandoOrState_attrName\"] = 304] = \"Entity_missingExpandoOrState_attrName\";\n    QError[QError[\"Entity_elementMissingEntityAttr_element_attr\"] = 305] = \"Entity_elementMissingEntityAttr_element_attr\";\n    QError[QError[\"Entity_noState_entity_props\"] = 306] = \"Entity_noState_entity_props\";\n    QError[QError[\"Entity_expected_obj\"] = 307] = \"Entity_expected_obj\";\n    QError[QError[\"Entity_overridesConstructor_entity\"] = 308] = \"Entity_overridesConstructor_entity\";\n    QError[QError[\"Entity_keyMissingParts_key_key\"] = 309] = \"Entity_keyMissingParts_key_key\";\n    QError[QError[\"Entity_no$type_entity\"] = 310] = \"Entity_no$type_entity\";\n    QError[QError[\"Entity_no$keyProps_entity\"] = 311] = \"Entity_no$keyProps_entity\";\n    QError[QError[\"Entity_no$qrl_entity\"] = 312] = \"Entity_no$qrl_entity\";\n    QError[QError[\"Entity_nameCollision_name_currentQrl_expectedQrl\"] = 313] = \"Entity_nameCollision_name_currentQrl_expectedQrl\";\n    QError[QError[\"Entity_keyTooManyParts_entity_parts_key\"] = 314] = \"Entity_keyTooManyParts_entity_parts_key\";\n    QError[QError[\"Entity_keyNameMismatch_key_name_entity_name\"] = 315] = \"Entity_keyNameMismatch_key_name_entity_name\";\n    QError[QError[\"Entity_stateMissingKey_state\"] = 316] = \"Entity_stateMissingKey_state\";\n    // Component 400-499\n    QError[QError[\"Component_bindNeedsKey\"] = 400] = \"Component_bindNeedsKey\";\n    QError[QError[\"Component_bindNeedsValue\"] = 401] = \"Component_bindNeedsValue\";\n    QError[QError[\"Component_needsState\"] = 402] = \"Component_needsState\";\n    QError[QError[\"Component_needsInjectionContext_constructor\"] = 403] = \"Component_needsInjectionContext_constructor\";\n    QError[QError[\"Component_noProperty_propName_props_host\"] = 404] = \"Component_noProperty_propName_props_host\";\n    QError[QError[\"Component_notFound_component\"] = 405] = \"Component_notFound_component\";\n    QError[QError[\"Component_doesNotMatch_component_actual\"] = 406] = \"Component_doesNotMatch_component_actual\";\n    QError[QError[\"Component_noState_component_props\"] = 408] = \"Component_noState_component_props\";\n    // Provider 500-599\n    QError[QError[\"Provider_unrecognizedFormat_value\"] = 500] = \"Provider_unrecognizedFormat_value\";\n    // Render 600-699\n    QError[QError[\"Render_unexpectedJSXNodeType_type\"] = 600] = \"Render_unexpectedJSXNodeType_type\";\n    QError[QError[\"Render_unsupportedFormat_obj_attr\"] = 601] = \"Render_unsupportedFormat_obj_attr\";\n    QError[QError[\"Render_expectingEntity_entity\"] = 602] = \"Render_expectingEntity_entity\";\n    QError[QError[\"Render_expectingEntityArray_obj\"] = 603] = \"Render_expectingEntityArray_obj\";\n    QError[QError[\"Render_expectingEntityOrComponent_obj\"] = 604] = \"Render_expectingEntityOrComponent_obj\";\n    QError[QError[\"Render_stateMachineStuck\"] = 699] = \"Render_stateMachineStuck\";\n    // Event\n    QError[QError[\"Event_emitEventRequiresName_url\"] = 700] = \"Event_emitEventRequiresName_url\";\n    QError[QError[\"Event_emitEventCouldNotFindListener_event_element\"] = 701] = \"Event_emitEventCouldNotFindListener_event_element\";\n})(QError || (QError = {}));\nexport function qError(code, ...args) {\n    if (qDev) {\n        const text = codeToText(code);\n        const parts = text.split('{}');\n        const error = parts\n            .map((value, index) => {\n            return value + (index === parts.length - 1 ? '' : stringifyDebug(args[index]));\n        })\n            .join('');\n        debugger; // eslint-disable-line no-debugger\n        return new Error(error);\n    }\n    else {\n        return new Error(`QError ` + code);\n    }\n}\nfunction codeToText(code) {\n    const area = {\n        0: 'ERROR',\n        1: 'QRL-ERROR',\n        2: 'INJECTOR-ERROR',\n        3: 'SERVICE-ERROR',\n        4: 'COMPONENT-ERROR',\n        5: 'PROVIDER-ERROR',\n        6: 'RENDER-ERROR',\n        7: 'EVENT-ERROR',\n    }[Math.floor(code / 100)];\n    const text = {\n        [QError.TODO]: '{}',\n        [QError.Core_qConfigNotFound_path]: \"QConfig not found in path '{}'.\",\n        [QError.Core_unrecognizedStack_frame]: \"Unrecognized stack format '{}'\",\n        [QError.Core_noAttribute_atr1_element]: \"Could not find entity state '{}' at '{}' or any of it's parents.\",\n        [QError.Core_noAttribute_atr1_attr2_element]: \"Could not find entity state '{}' ( or entity provider '{}') at '{}' or any of it's parents.\",\n        [QError.Core_missingProperty_name_props]: \"Missing property '{}' in props '{}'.\",\n        [QError.Core_missingExport_name_url_props]: \"Missing export '{}' from '{}'. Exported symbols are: {}\",\n        //////////////\n        [QError.QRL_expectFunction_url_actual]: \"QRL '${}' should point to function, was '{}'.\",\n        //////////////\n        [QError.Injector_noHost_element]: \"Can't find host element above '{}'.\",\n        [QError.Injector_expectedSpecificInjector_expected_actual]: \"Provider is expecting '{}' but got '{}'.\",\n        [QError.Injector_notElement_arg]: \"Expected 'Element' was '{}'.\",\n        [QError.Injector_wrongMethodThis_expected_actual]: \"Expected injection 'this' to be of type '{}', but was of type '{}'.\",\n        [QError.Injector_missingSerializedState_entityKey_element]: \"Entity key '{}' is found on '{}' but does not contain state. Was 'serializeState()' not run during dehydration?\",\n        [QError.Injector_notFound_element]: \"No injector can be found starting at '{}'.\",\n        [QError.Injector_eventInjectorNotSerializable]: 'EventInjector does not support serialization.',\n        //////////////\n        [QError.Entity_notValidKey_key]: \"Data key '{}' is not a valid key.\\n\" +\n            '  - Data key can only contain characters (preferably lowercase) or number\\n' +\n            '  - Data key is prefixed with entity name\\n' +\n            \"  - Data key is made up from parts that are separated with ':'.\",\n        [QError.Entity_keyAlreadyExists_key]: \"A entity with key '{}' already exists.\",\n        [QError.Entity_invalidAttribute_name]: \"'{}' is not a valid attribute. \" +\n            \"Attributes can only contain 'a-z' (lowercase), '0-9', '-' and '_'.\",\n        [QError.Entity_missingExpandoOrState_attrName]: \"Found '{}' but expando did not have entity and attribute did not have state.\",\n        [QError.Entity_elementMissingEntityAttr_element_attr]: \"Element '{}' is missing entity attribute definition '{}'.\",\n        [QError.Entity_noState_entity_props]: \"Unable to create state for entity '{}' with props '{}' because no state found and '$newState()' method was not defined on entity.\",\n        [QError.Entity_expected_obj]: \"'{}' is not an instance of 'Entity'.\",\n        [QError.Entity_overridesConstructor_entity]: \"'{}' overrides 'constructor' property preventing 'EntityType' retrieval.\",\n        [QError.Entity_no$keyProps_entity]: \"Entity '{}' does not define '$keyProps'.\",\n        [QError.Entity_no$type_entity]: \"Entity '{}' must have static '$type' property defining the name of the entity.\",\n        [QError.Entity_no$qrl_entity]: \"Entity '{}' must have static '$qrl' property defining the import location of the entity.\",\n        [QError.Entity_nameCollision_name_currentQrl_expectedQrl]: \"Name collision. Already have entity named '{}' with QRL '{}' but expected QRL '{}'.\",\n        [QError.Entity_keyMissingParts_key_key]: \"Entity key '{}' is missing values. Expecting '{}:someValue'.\",\n        [QError.Entity_keyTooManyParts_entity_parts_key]: \"Entity '{}' defines '$keyProps' as  '{}'. Actual key '{}' has more parts than entity defines.\",\n        [QError.Entity_keyNameMismatch_key_name_entity_name]: \"Key '{}' belongs to entity named '{}', but expected entity '{}' with name '{}'.\",\n        [QError.Entity_stateMissingKey_state]: \"Entity state is missing '$key'. Are you sure you passed in state? Got '{}'.\",\n        //////////////\n        [QError.Component_bindNeedsKey]: \"'bind:' must have an key. (Example: 'bind:key=\\\"propertyName\\\"').\",\n        [QError.Component_bindNeedsValue]: \"'bind:id' must have a property name. (Example: 'bind:key=\\\"propertyName\\\"').\",\n        [QError.Component_needsState]: \"Can't find state on host element.\",\n        [QError.Component_needsInjectionContext_constructor]: \"Components must be instantiated inside an injection context. Use '{}.new(...)' for creation.\",\n        [QError.Component_noProperty_propName_props_host]: \"Property '{}' not found in '{}' on component '{}'.\",\n        [QError.Component_notFound_component]: \"Unable to find '{}' component.\",\n        [QError.Component_doesNotMatch_component_actual]: \"Requesting component type '{}' does not match existing component instance '{}'.\",\n        [QError.Component_noState_component_props]: \"Unable to create state for component '{}' with props '{}' because no state found and '$newState()' method was not defined on component.\",\n        //////////////\n        [QError.Provider_unrecognizedFormat_value]: \"Unrecognized expression format '{}'.\",\n        //////////////\n        [QError.Render_unexpectedJSXNodeType_type]: 'Unexpected JSXNode<{}> type.',\n        [QError.Render_unsupportedFormat_obj_attr]: \"Value '{}' can't be written into '{}' attribute.\",\n        [QError.Render_expectingEntity_entity]: \"Expecting entity object, got '{}'.\",\n        [QError.Render_expectingEntityArray_obj]: \"Expecting array of entities, got '{}'.\",\n        [QError.Render_expectingEntityOrComponent_obj]: \"Expecting Entity or Component got '{}'.\",\n        [QError.Render_stateMachineStuck]: 'Render state machine did not advance.',\n        //////////////\n        [QError.Event_emitEventRequiresName_url]: \"Missing '$type' attribute in the '{}' url.\",\n        [QError.Event_emitEventCouldNotFindListener_event_element]: \"Re-emitting event '{}' but no listener found at '{}' or any of its parents.\",\n    }[code];\n    let textCode = '000' + code;\n    textCode = textCode.slice(-3);\n    return `${area}(Q-${textCode}): ${text}`;\n}\n//# sourceMappingURL=data:application/json;base64,","import { NodeType } from './types';\nexport function isNode(value) {\n    return value && typeof value.nodeType == 'number';\n}\nexport function isDocument(value) {\n    return value && value.nodeType == NodeType.DOCUMENT_NODE;\n}\nexport function isElement(value) {\n    return isNode(value) && value.nodeType == NodeType.ELEMENT_NODE;\n}\nexport function isText(value) {\n    return isNode(value) && value.nodeType == NodeType.TEXT_NODE;\n}\nexport function isComment(value) {\n    return isNode(value) && value.nodeType == NodeType.COMMENT_NODE;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWxlbWVudC5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXRpbC9lbGVtZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFbkMsTUFBTSxVQUFVLE1BQU0sQ0FBQyxLQUFVO0lBQy9CLE9BQU8sS0FBSyxJQUFJLE9BQU8sS0FBSyxDQUFDLFFBQVEsSUFBSSxRQUFRLENBQUM7QUFDcEQsQ0FBQztBQUNELE1BQU0sVUFBVSxVQUFVLENBQUMsS0FBVTtJQUNuQyxPQUFPLEtBQUssSUFBSSxLQUFLLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxhQUFhLENBQUM7QUFDM0QsQ0FBQztBQUNELE1BQU0sVUFBVSxTQUFTLENBQUMsS0FBVTtJQUNsQyxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxZQUFZLENBQUM7QUFDbEUsQ0FBQztBQUNELE1BQU0sVUFBVSxNQUFNLENBQUMsS0FBVTtJQUMvQixPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxTQUFTLENBQUM7QUFDL0QsQ0FBQztBQUNELE1BQU0sVUFBVSxTQUFTLENBQUMsS0FBVTtJQUNsQyxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxZQUFZLENBQUM7QUFDbEUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5vZGVUeXBlIH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBpc05vZGUodmFsdWU6IGFueSk6IHZhbHVlIGlzIE5vZGUge1xuICByZXR1cm4gdmFsdWUgJiYgdHlwZW9mIHZhbHVlLm5vZGVUeXBlID09ICdudW1iZXInO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzRG9jdW1lbnQodmFsdWU6IGFueSk6IHZhbHVlIGlzIERvY3VtZW50IHtcbiAgcmV0dXJuIHZhbHVlICYmIHZhbHVlLm5vZGVUeXBlID09IE5vZGVUeXBlLkRPQ1VNRU5UX05PREU7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNFbGVtZW50KHZhbHVlOiBhbnkpOiB2YWx1ZSBpcyBIVE1MRWxlbWVudCB7XG4gIHJldHVybiBpc05vZGUodmFsdWUpICYmIHZhbHVlLm5vZGVUeXBlID09IE5vZGVUeXBlLkVMRU1FTlRfTk9ERTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1RleHQodmFsdWU6IGFueSk6IHZhbHVlIGlzIFRleHQge1xuICByZXR1cm4gaXNOb2RlKHZhbHVlKSAmJiB2YWx1ZS5ub2RlVHlwZSA9PSBOb2RlVHlwZS5URVhUX05PREU7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNDb21tZW50KHZhbHVlOiBhbnkpOiB2YWx1ZSBpcyBDb21tZW50IHtcbiAgcmV0dXJuIGlzTm9kZSh2YWx1ZSkgJiYgdmFsdWUubm9kZVR5cGUgPT0gTm9kZVR5cGUuQ09NTUVOVF9OT0RFO1xufVxuIl19","import { getPlatform } from '../platform/platform';\nimport { assertDefined, assertEqual } from '../assert/assert';\nimport { parseQRL, stringifyQRL } from '../import/qrl';\nimport { isQrl } from '../import/qrl-class';\nimport { getContext } from '../props/props';\nimport { getDocument } from '../util/dom';\nimport { isElement } from '../util/element';\nimport { logDebug, logError, logWarn } from '../util/log';\nimport { ELEMENT_ID, ELEMENT_ID_PREFIX, QContainerAttr, QHostAttr, QObjAttr, QSeqAttr, } from '../util/markers';\nimport { qDev } from '../util/qdev';\nimport { getProxyMap, QOjectSubsSymbol, QOjectTargetSymbol, shouldSerialize, _restoreQObject, } from './q-object';\nexport const UNDEFINED_PREFIX = '\\u0010';\nexport const QRL_PREFIX = '\\u0011';\nexport function resumeContainer(containerEl) {\n    if (!isContainer(containerEl)) {\n        logWarn('Skipping hydration because parent element is not q:container');\n        return;\n    }\n    const doc = getDocument(containerEl);\n    const isDocElement = containerEl === doc.documentElement;\n    const parentJSON = isDocElement ? doc.body : containerEl;\n    const script = getQwikJSON(parentJSON);\n    if (!script) {\n        logWarn('Skipping hydration qwik/json metadata was not found.');\n        return;\n    }\n    script.remove();\n    const map = getProxyMap(doc);\n    const meta = JSON.parse(script.textContent || '{}');\n    // Collect all elements\n    const elements = new Map();\n    getNodesInScope(containerEl, hasQId).forEach((el) => {\n        const id = el.getAttribute(ELEMENT_ID);\n        elements.set(ELEMENT_ID_PREFIX + id, el);\n    });\n    const getObject = (id) => {\n        return getObjectImpl(id, elements, meta.objs, map);\n    };\n    // Revive proxies with subscriptions into the proxymap\n    reviveValues(meta.objs, meta.subs, getObject, map, parentJSON);\n    // Rebuild target objects\n    for (const obj of meta.objs) {\n        reviveNestedObjects(obj, getObject);\n    }\n    // Walk all elements with q:obj and resume their state\n    getNodesInScope(containerEl, hasQObj).forEach((el) => {\n        const qobj = el.getAttribute(QObjAttr);\n        const seq = el.getAttribute(QSeqAttr);\n        const host = el.getAttribute(QHostAttr);\n        const ctx = getContext(el);\n        // Restore captured objets\n        qobj.split(' ').forEach((part) => {\n            if (part !== '') {\n                const obj = getObject(part);\n                ctx.refMap.add(obj);\n            }\n            else if (qDev) {\n                logError('QObj contains empty ref');\n            }\n        });\n        // Restore sequence scoping\n        ctx.seq = seq.split(' ').map((part) => strToInt(part));\n        if (host) {\n            const [props, renderQrl] = host.split(' ').map(strToInt);\n            assertDefined(props);\n            assertDefined(renderQrl);\n            ctx.props = ctx.refMap.get(props);\n            ctx.renderQrl = ctx.refMap.get(renderQrl);\n        }\n    });\n    containerEl.setAttribute(QContainerAttr, 'resumed');\n    logDebug('Container resumed');\n}\nexport function snapshotState(containerEl) {\n    const doc = getDocument(containerEl);\n    const proxyMap = getProxyMap(doc);\n    const objSet = new Set();\n    const platform = getPlatform(doc);\n    const elementToIndex = new Map();\n    // Collect all qObjected around the DOM\n    const elements = getNodesInScope(containerEl, hasQObj);\n    elements.forEach((node) => {\n        const props = getContext(node);\n        const qMap = props.refMap;\n        qMap.array.forEach((v) => {\n            collectValue(v, objSet);\n        });\n    });\n    // Convert objSet to array\n    const objs = Array.from(objSet);\n    objs.sort((a, b) => {\n        const isProxyA = proxyMap.has(a) ? 0 : 1;\n        const isProxyB = proxyMap.has(b) ? 0 : 1;\n        return isProxyA - isProxyB;\n    });\n    const objToId = new Map();\n    let count = 0;\n    for (const obj of objs) {\n        objToId.set(obj, count);\n        count++;\n    }\n    function getElementID(el) {\n        let id = elementToIndex.get(el);\n        if (id === undefined) {\n            if (el.isConnected) {\n                id = intToStr(elementToIndex.size);\n                el.setAttribute(ELEMENT_ID, id);\n                id = ELEMENT_ID_PREFIX + id;\n            }\n            else {\n                id = null;\n            }\n            elementToIndex.set(el, id);\n        }\n        return id;\n    }\n    function getObjId(obj) {\n        if (obj !== null && typeof obj === 'object') {\n            const target = obj[QOjectTargetSymbol];\n            const id = objToId.get(normalizeObj(target ?? obj));\n            if (id !== undefined) {\n                const proxySuffix = target ? '!' : '';\n                return intToStr(id) + proxySuffix;\n            }\n            if (!target && isElement(obj)) {\n                return getElementID(obj);\n            }\n        }\n        else {\n            const id = objToId.get(normalizeObj(obj));\n            if (id !== undefined) {\n                return intToStr(id);\n            }\n        }\n        return null;\n    }\n    const subs = objs\n        .map((obj) => {\n        const subs = proxyMap.get(obj)?.[QOjectSubsSymbol];\n        if (subs) {\n            return Object.fromEntries(Array.from(subs.entries()).map(([sub, set]) => {\n                const id = getObjId(sub);\n                if (id !== null) {\n                    return [id, Array.from(set)];\n                }\n                else {\n                    return [undefined, undefined];\n                }\n            }));\n        }\n        else {\n            return null;\n        }\n    })\n        .filter((a) => !!a);\n    const serialize = (value) => {\n        return getObjId(value) ?? value;\n    };\n    const qrlSerializeOptions = {\n        platform,\n        getObjId,\n    };\n    const convertedObjs = objs.map((obj) => {\n        if (Array.isArray(obj)) {\n            return obj.map(serialize);\n        }\n        else if (obj && typeof obj === 'object') {\n            if (isQrl(obj)) {\n                return QRL_PREFIX + stringifyQRL(obj, qrlSerializeOptions);\n            }\n            const output = {};\n            Object.entries(obj).forEach(([key, value]) => {\n                output[key] = serialize(value);\n            });\n            return output;\n        }\n        return obj;\n    });\n    // Write back to the dom\n    elements.forEach((node) => {\n        const ctx = getContext(node);\n        const props = ctx.props;\n        const renderQrl = ctx.renderQrl;\n        const attribute = ctx.refMap.array\n            .map((obj) => {\n            const id = getObjId(obj);\n            assertDefined(id);\n            return id;\n        })\n            .join(' ');\n        node.setAttribute(QObjAttr, attribute);\n        const seq = ctx.seq.map((index) => intToStr(index)).join(' ');\n        node.setAttribute(QSeqAttr, seq);\n        if (props) {\n            const objs = [props];\n            if (renderQrl) {\n                objs.push(renderQrl);\n            }\n            node.setAttribute(QHostAttr, objs.map((obj) => ctx.refMap.indexOf(obj)).join(' '));\n        }\n    });\n    // Sanity check of serialized element\n    if (qDev) {\n        elementToIndex.forEach((value, el) => {\n            if (getDocument(el) !== doc) {\n                logWarn('element from different document', value, el.tagName);\n            }\n            if (!value) {\n                logWarn('unconnected element', el.tagName, '\\n');\n            }\n        });\n    }\n    return {\n        objs: convertedObjs,\n        subs,\n    };\n}\nexport function getQwikJSON(parentElm) {\n    let child = parentElm.lastElementChild;\n    while (child) {\n        if (child.tagName === 'SCRIPT' && child.getAttribute('type') === 'qwik/json') {\n            return child;\n        }\n        child = child.previousElementSibling;\n    }\n    return undefined;\n}\nexport function getNodesInScope(parent, predicate) {\n    const nodes = [];\n    walkNodes(nodes, parent, predicate);\n    return nodes;\n}\nexport function walkNodes(nodes, parent, predicate) {\n    let child = parent.firstElementChild;\n    while (child) {\n        if (!isContainer(child)) {\n            if (predicate(child)) {\n                nodes.push(child);\n            }\n            walkNodes(nodes, child, predicate);\n        }\n        child = child.nextElementSibling;\n    }\n}\nfunction reviveValues(objs, subs, getObject, map, containerEl) {\n    for (let i = 0; i < objs.length; i++) {\n        const value = objs[i];\n        if (typeof value === 'string') {\n            if (value === UNDEFINED_PREFIX) {\n                objs[i] = undefined;\n            }\n            else if (value.startsWith(QRL_PREFIX)) {\n                objs[i] = parseQRL(value.slice(1), containerEl);\n            }\n        }\n        else {\n            const sub = subs[i];\n            if (sub) {\n                const converted = new Map();\n                Object.entries(sub).forEach((entry) => {\n                    const el = getObject(entry[0]);\n                    if (!el) {\n                        logWarn('QWIK can not revive subscriptions because of missing element ID', entry, value);\n                        return;\n                    }\n                    const set = new Set(entry[1]);\n                    converted.set(el, set);\n                });\n                _restoreQObject(value, map, converted);\n            }\n        }\n    }\n}\nfunction reviveNestedObjects(obj, getObject) {\n    if (obj && typeof obj == 'object') {\n        if (isQrl(obj)) {\n            if (obj.capture && obj.capture.length > 0) {\n                obj.captureRef = obj.capture.map(getObject);\n                obj.capture = null;\n            }\n            return;\n        }\n        else if (Array.isArray(obj)) {\n            for (let i = 0; i < obj.length; i++) {\n                const value = obj[i];\n                if (typeof value == 'string') {\n                    obj[i] = getObject(value);\n                }\n                else {\n                    reviveNestedObjects(value, getObject);\n                }\n            }\n        }\n        else if (Object.getPrototypeOf(obj) === Object.prototype) {\n            for (const key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    const value = obj[key];\n                    if (typeof value == 'string') {\n                        obj[key] = getObject(value);\n                    }\n                    else {\n                        reviveNestedObjects(value, getObject);\n                    }\n                }\n            }\n        }\n    }\n}\nfunction getObjectImpl(id, elements, objs, map) {\n    if (id.startsWith(ELEMENT_ID_PREFIX)) {\n        assertEqual(elements.has(id), true);\n        return elements.get(id);\n    }\n    const index = strToInt(id);\n    assertEqual(objs.length > index, true);\n    const obj = objs[index];\n    const needsProxy = id.endsWith('!');\n    if (needsProxy) {\n        const finalObj = map.get(obj);\n        assertDefined(finalObj);\n        return finalObj;\n    }\n    return obj;\n}\nfunction normalizeObj(obj) {\n    if (obj === undefined || !shouldSerialize(obj)) {\n        return UNDEFINED_PREFIX;\n    }\n    if (obj && typeof obj === 'object') {\n        const value = obj[QOjectTargetSymbol] ?? obj;\n        return value;\n    }\n    return obj;\n}\nfunction collectValue(obj, seen) {\n    collectQObjects(obj, seen);\n    seen.add(normalizeObj(obj));\n}\nfunction collectQrl(obj, seen) {\n    seen.add(normalizeObj(obj));\n    if (obj.captureRef) {\n        obj.captureRef.forEach((obj) => collectValue(obj, seen));\n    }\n}\nfunction collectQObjects(obj, seen) {\n    if (obj != null) {\n        if (typeof obj === 'object') {\n            if (!obj[QOjectTargetSymbol] && isElement(obj)) {\n                return;\n            }\n            if (isQrl(obj)) {\n                collectQrl(obj, seen);\n                return;\n            }\n            obj = normalizeObj(obj);\n        }\n        if (typeof obj === 'object') {\n            if (seen.has(obj))\n                return;\n            seen.add(obj);\n            if (Array.isArray(obj)) {\n                for (let i = 0; i < obj.length; i++) {\n                    collectQObjects(obj[i], seen);\n                }\n            }\n            else {\n                for (const key in obj) {\n                    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                        collectQObjects(obj[key], seen);\n                    }\n                }\n            }\n        }\n        if (typeof obj === 'string') {\n            seen.add(obj);\n        }\n    }\n}\nexport function isProxy(obj) {\n    return obj !== null && typeof obj === 'object' && QOjectTargetSymbol in obj;\n}\nexport function isContainer(el) {\n    return el.hasAttribute(QContainerAttr);\n}\nfunction hasQObj(el) {\n    return el.hasAttribute(QObjAttr);\n}\nfunction hasQId(el) {\n    return el.hasAttribute(ELEMENT_ID);\n}\nexport const intToStr = (nu) => {\n    return nu.toString(36);\n};\nexport const strToInt = (nu) => {\n    return parseInt(nu, 36);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmUuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL29iamVjdC9zdG9yZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDbkQsT0FBTyxFQUFFLGFBQWEsRUFBRSxXQUFXLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUM5RCxPQUFPLEVBQUUsUUFBUSxFQUF1QixZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUUsT0FBTyxFQUFFLEtBQUssRUFBZSxNQUFNLHFCQUFxQixDQUFDO0FBQ3pELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM1QyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUM1QyxPQUFPLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDMUQsT0FBTyxFQUNMLFVBQVUsRUFDVixpQkFBaUIsRUFDakIsY0FBYyxFQUNkLFNBQVMsRUFDVCxRQUFRLEVBQ1IsUUFBUSxHQUNULE1BQU0saUJBQWlCLENBQUM7QUFDekIsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUNwQyxPQUFPLEVBQ0wsV0FBVyxFQUVYLGdCQUFnQixFQUNoQixrQkFBa0IsRUFDbEIsZUFBZSxFQUNmLGVBQWUsR0FDaEIsTUFBTSxZQUFZLENBQUM7QUFVcEIsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsUUFBUSxDQUFDO0FBQ3pDLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxRQUFRLENBQUM7QUFFbkMsTUFBTSxVQUFVLGVBQWUsQ0FBQyxXQUFvQjtJQUNsRCxJQUFJLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxFQUFFO1FBQzdCLE9BQU8sQ0FBQyw4REFBOEQsQ0FBQyxD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QyxDQUFDO0FBQ3JDLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsQ0FBQyxFQUFVLEVBQUUsRUFBRTtJQUNyQyxPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDekIsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHLENBQUMsRUFBVSxFQUFFLEVBQUU7SUFDckMsT0FBTyxRQUFRLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQzFCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFBsYXRmb3JtIH0gZnJvbSAnLi4vcGxhdGZvcm0vcGxhdGZvcm0nO1xuaW1wb3J0IHsgYXNzZXJ0RGVmaW5lZCwgYXNzZXJ0RXF1YWwgfSBmcm9tICcuLi9hc3NlcnQvYXNzZXJ0JztcbmltcG9ydCB7IHBhcnNlUVJMLCBRUkxTZXJpYWxpemVPcHRpb25zLCBzdHJpbmdpZnlRUkwgfSBmcm9tICcuLi9pbXBvcnQvcXJsJztcbmltcG9ydCB7IGlzUXJsLCBRUkxJbnRlcm5hbCB9IGZyb20gJy4uL2ltcG9ydC9xcmwtY2xhc3MnO1xuaW1wb3J0IHsgZ2V0Q29udGV4dCB9IGZyb20gJy4uL3Byb3BzL3Byb3BzJztcbmltcG9ydCB7IGdldERvY3VtZW50IH0gZnJvbSAnLi4vdXRpbC9kb20nO1xuaW1wb3J0IHsgaXNFbGVtZW50IH0gZnJvbSAnLi4vdXRpbC9lbGVtZW50JztcbmltcG9ydCB7IGxvZ0RlYnVnLCBsb2dFcnJvciwgbG9nV2FybiB9IGZyb20gJy4uL3V0aWwvbG9nJztcbmltcG9ydCB7XG4gIEVMRU1FTlRfSUQsXG4gIEVMRU1FTlRfSURfUFJFRklYLFxuICBRQ29udGFpbmVyQXR0cixcbiAgUUhvc3RBdHRyLFxuICBRT2JqQXR0cixcbiAgUVNlcUF0dHIsXG59IGZyb20gJy4uL3V0aWwvbWFya2Vycyc7XG5pbXBvcnQgeyBxRGV2IH0gZnJvbSAnLi4vdXRpbC9xZGV2JztcbmltcG9ydCB7XG4gIGdldFByb3h5TWFwLFxuICBPYmpUb1Byb3h5TWFwLFxuICBRT2plY3RTdWJzU3ltYm9sLFxuICBRT2plY3RUYXJnZXRTeW1ib2wsXG4gIHNob3VsZFNlcmlhbGl6ZSxcbiAgX3Jlc3RvcmVRT2JqZWN0LFxufSBmcm9tICcuL3Etb2JqZWN0JztcblxuZXhwb3J0IGludGVyZmFjZSBTdG9yZSB7XG4gIGRvYzogRG9jdW1lbnQ7XG4gIG9ianM6IFJlY29yZDxzdHJpbmcsIGFueT47XG59XG5cbmV4cG9ydCB0eXBlIEdldE9iamVjdCA9IChpZDogc3RyaW5nKSA9PiBhbnk7XG5leHBvcnQgdHlwZSBHZXRPYmpJRCA9IChvYmo6IGFueSkgPT4gc3RyaW5nIHwgbnVsbDtcblxuZXhwb3J0IGNvbnN0IFVOREVGSU5FRF9QUkVGSVggPSAnXFx1MDAxMCc7XG5leHBvcnQgY29uc3QgUVJMX1BSRUZJWCA9ICdcXHUwMDExJztcblxuZXhwb3J0IGZ1bmN0aW9uIHJlc3VtZUNvbnRhaW5lcihjb250YWluZXJFbDogRWxlbWVudCkge1xuICBpZiAoIWlzQ29udGFpbmVyKGNvbnRhaW5lckVsKSkge1xuICAgIGxvZ1dhcm4oJ1NraXBwaW5nIGh5ZHJhdGlvbiBiZWNhdXNlIHBhcmVudCBlbGVtZW50IGlzIG5vdCBxOmNvbnRhaW5lcicpO1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCBkb2MgPSBnZXREb2N1bWVudChjb250YWluZXJFbCk7XG4gIGNvbnN0IGlzRG9jRWxlbWVudCA9IGNvbnRhaW5lckVsID09PSBkb2MuZG9jdW1lbnRFbGVtZW50O1xuICBjb25zdCBwYXJlbnRKU09OID0gaXNEb2NFbGVtZW50ID8gZG9jLmJvZHkgOiBjb250YWluZXJFbDtcbiAgY29uc3Qgc2NyaXB0ID0gZ2V0UXdpa0pTT04ocGFyZW50SlNPTik7XG4gIGlmICghc2NyaXB0KSB7XG4gICAgbG9nV2FybignU2tpcHBpbmcgaHlkcmF0aW9uIHF3aWsvanNvbiBtZXRhZGF0YSB3YXMgbm90IGZvdW5kLicpO1xuICAgIHJldHVybjtcbiAgfVxuICBzY3JpcHQucmVtb3ZlKCk7XG5cbiAgY29uc3QgbWFwID0gZ2V0UHJveHlNYXAoZG9jKTtcbiAgY29uc3QgbWV0YSA9IEpTT04ucGFyc2Uoc2NyaXB0LnRleHRDb250ZW50IHx8ICd7fScpIGFzIGFueTtcblxuICAvLyBDb2xsZWN0IGFsbCBlbGVtZW50c1xuICBjb25zdCBlbGVtZW50cyA9IG5ldyBNYXA8c3RyaW5nLCBFbGVtZW50PigpO1xuICBnZXROb2Rlc0luU2NvcGUoY29udGFpbmVyRWwsIGhhc1FJZCkuZm9yRWFjaCgoZWwpID0+IHtcbiAgICBjb25zdCBpZCA9IGVsLmdldEF0dHJpYnV0ZShFTEVNRU5UX0lEKSE7XG4gICAgZWxlbWVudHMuc2V0KEVMRU1FTlRfSURfUFJFRklYICsgaWQsIGVsKTtcbiAgfSk7XG5cbiAgY29uc3QgZ2V0T2JqZWN0OiBHZXRPYmplY3QgPSAoaWQpID0+IHtcbiAgICByZXR1cm4gZ2V0T2JqZWN0SW1wbChpZCwgZWxlbWVudHMsIG1ldGEub2JqcywgbWFwKTtcbiAgfTtcblxuICAvLyBSZXZpdmUgcHJveGllcyB3aXRoIHN1YnNjcmlwdGlvbnMgaW50byB0aGUgcHJveHltYXBcbiAgcmV2aXZlVmFsdWVzKG1ldGEub2JqcywgbWV0YS5zdWJzLCBnZXRPYmplY3QsIG1hcCwgcGFyZW50SlNPTik7XG5cbiAgLy8gUmVidWlsZCB0YXJnZXQgb2JqZWN0c1xuICBmb3IgKGNvbnN0IG9iaiBvZiBtZXRhLm9ianMpIHtcbiAgICByZXZpdmVOZXN0ZWRPYmplY3RzKG9iaiwgZ2V0T2JqZWN0KTtcbiAgfVxuXG4gIC8vIFdhbGsgYWxsIGVsZW1lbnRzIHdpdGggcTpvYmogYW5kIHJlc3VtZSB0aGVpciBzdGF0ZVxuICBnZXROb2Rlc0luU2NvcGUoY29udGFpbmVyRWwsIGhhc1FPYmopLmZvckVhY2goKGVsKSA9PiB7XG4gICAgY29uc3QgcW9iaiA9IGVsLmdldEF0dHJpYnV0ZShRT2JqQXR0cikhO1xuICAgIGNvbnN0IHNlcSA9IGVsLmdldEF0dHJpYnV0ZShRU2VxQXR0cikhO1xuICAgIGNvbnN0IGhvc3QgPSBlbC5nZXRBdHRyaWJ1dGUoUUhvc3RBdHRyKTtcbiAgICBjb25zdCBjdHggPSBnZXRDb250ZXh0KGVsKTtcblxuICAgIC8vIFJlc3RvcmUgY2FwdHVyZWQgb2JqZXRzXG4gICAgcW9iai5zcGxpdCgnICcpLmZvckVhY2goKHBhcnQpID0+IHtcbiAgICAgIGlmIChwYXJ0ICE9PSAnJykge1xuICAgICAgICBjb25zdCBvYmogPSBnZXRPYmplY3QocGFydCk7XG4gICAgICAgIGN0eC5yZWZNYXAuYWRkKG9iaik7XG4gICAgICB9IGVsc2UgaWYgKHFEZXYpIHtcbiAgICAgICAgbG9nRXJyb3IoJ1FPYmogY29udGFpbnMgZW1wdHkgcmVmJyk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBSZXN0b3JlIHNlcXVlbmNlIHNjb3BpbmdcbiAgICBjdHguc2VxID0gc2VxLnNwbGl0KCcgJykubWFwKChwYXJ0KSA9PiBzdHJUb0ludChwYXJ0KSk7XG5cbiAgICBpZiAoaG9zdCkge1xuICAgICAgY29uc3QgW3Byb3BzLCByZW5kZXJRcmxdID0gaG9zdC5zcGxpdCgnICcpLm1hcChzdHJUb0ludCk7XG4gICAgICBhc3NlcnREZWZpbmVkKHByb3BzKTtcbiAgICAgIGFzc2VydERlZmluZWQocmVuZGVyUXJsKTtcbiAgICAgIGN0eC5wcm9wcyA9IGN0eC5yZWZNYXAuZ2V0KHByb3BzKTtcbiAgICAgIGN0eC5yZW5kZXJRcmwgPSBjdHgucmVmTWFwLmdldChyZW5kZXJRcmwpO1xuICAgIH1cbiAgfSk7XG4gIGNvbnRhaW5lckVsLnNldEF0dHJpYnV0ZShRQ29udGFpbmVyQXR0ciwgJ3Jlc3VtZWQnKTtcbiAgbG9nRGVidWcoJ0NvbnRhaW5lciByZXN1bWVkJyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzbmFwc2hvdFN0YXRlKGNvbnRhaW5lckVsOiBFbGVtZW50KSB7XG4gIGNvbnN0IGRvYyA9IGdldERvY3VtZW50KGNvbnRhaW5lckVsKTtcbiAgY29uc3QgcHJveHlNYXAgPSBnZXRQcm94eU1hcChkb2MpO1xuICBjb25zdCBvYmpTZXQgPSBuZXcgU2V0PGFueT4oKTtcbiAgY29uc3QgcGxhdGZvcm0gPSBnZXRQbGF0Zm9ybShkb2MpO1xuICBjb25zdCBlbGVtZW50VG9JbmRleCA9IG5ldyBNYXA8RWxlbWVudCwgc3RyaW5nIHwgbnVsbD4oKTtcblxuICAvLyBDb2xsZWN0IGFsbCBxT2JqZWN0ZWQgYXJvdW5kIHRoZSBET01cbiAgY29uc3QgZWxlbWVudHMgPSBnZXROb2Rlc0luU2NvcGUoY29udGFpbmVyRWwsIGhhc1FPYmopO1xuICBlbGVtZW50cy5mb3JFYWNoKChub2RlKSA9PiB7XG4gICAgY29uc3QgcHJvcHMgPSBnZXRDb250ZXh0KG5vZGUpO1xuICAgIGNvbnN0IHFNYXAgPSBwcm9wcy5yZWZNYXA7XG4gICAgcU1hcC5hcnJheS5mb3JFYWNoKCh2KSA9PiB7XG4gICAgICBjb2xsZWN0VmFsdWUodiwgb2JqU2V0KTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgLy8gQ29udmVydCBvYmpTZXQgdG8gYXJyYXlcbiAgY29uc3Qgb2JqcyA9IEFycmF5LmZyb20ob2JqU2V0KTtcblxuICBvYmpzLnNvcnQoKGEsIGIpID0+IHtcbiAgICBjb25zdCBpc1Byb3h5QSA9IHByb3h5TWFwLmhhcyhhKSA/IDAgOiAxO1xuICAgIGNvbnN0IGlzUHJveHlCID0gcHJveHlNYXAuaGFzKGIpID8gMCA6IDE7XG4gICAgcmV0dXJuIGlzUHJveHlBIC0gaXNQcm94eUI7XG4gIH0pO1xuXG4gIGNvbnN0IG9ialRvSWQgPSBuZXcgTWFwPGFueSwgbnVtYmVyPigpO1xuICBsZXQgY291bnQgPSAwO1xuICBmb3IgKGNvbnN0IG9iaiBvZiBvYmpzKSB7XG4gICAgb2JqVG9JZC5zZXQob2JqLCBjb3VudCk7XG4gICAgY291bnQrKztcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldEVsZW1lbnRJRChlbDogRWxlbWVudCk6IHN0cmluZyB8IG51bGwge1xuICAgIGxldCBpZCA9IGVsZW1lbnRUb0luZGV4LmdldChlbCk7XG4gICAgaWYgKGlkID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGlmIChlbC5pc0Nvbm5lY3RlZCkge1xuICAgICAgICBpZCA9IGludFRvU3RyKGVsZW1lbnRUb0luZGV4LnNpemUpO1xuICAgICAgICBlbC5zZXRBdHRyaWJ1dGUoRUxFTUVOVF9JRCwgaWQpO1xuICAgICAgICBpZCA9IEVMRU1FTlRfSURfUFJFRklYICsgaWQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZCA9IG51bGw7XG4gICAgICB9XG4gICAgICBlbGVtZW50VG9JbmRleC5zZXQoZWwsIGlkKTtcbiAgICB9XG4gICAgcmV0dXJuIGlkO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0T2JqSWQob2JqOiBhbnkpOiBzdHJpbmcgfCBudWxsIHtcbiAgICBpZiAob2JqICE9PSBudWxsICYmIHR5cGVvZiBvYmogPT09ICdvYmplY3QnKSB7XG4gICAgICBjb25zdCB0YXJnZXQgPSBvYmpbUU9qZWN0VGFyZ2V0U3ltYm9sXTtcbiAgICAgIGNvbnN0IGlkID0gb2JqVG9JZC5nZXQobm9ybWFsaXplT2JqKHRhcmdldCA/PyBvYmopKTtcbiAgICAgIGlmIChpZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGNvbnN0IHByb3h5U3VmZml4ID0gdGFyZ2V0ID8gJyEnIDogJyc7XG4gICAgICAgIHJldHVybiBpbnRUb1N0cihpZCkgKyBwcm94eVN1ZmZpeDtcbiAgICAgIH1cbiAgICAgIGlmICghdGFyZ2V0ICYmIGlzRWxlbWVudChvYmopKSB7XG4gICAgICAgIHJldHVybiBnZXRFbGVtZW50SUQob2JqKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgaWQgPSBvYmpUb0lkLmdldChub3JtYWxpemVPYmoob2JqKSk7XG4gICAgICBpZiAoaWQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gaW50VG9TdHIoaWQpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGNvbnN0IHN1YnMgPSBvYmpzXG4gICAgLm1hcCgob2JqKSA9PiB7XG4gICAgICBjb25zdCBzdWJzID0gcHJveHlNYXAuZ2V0KG9iaik/LltRT2plY3RTdWJzU3ltYm9sXSBhcyBNYXA8RWxlbWVudCwgU2V0PHN0cmluZz4+O1xuICAgICAgaWYgKHN1YnMpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5mcm9tRW50cmllcyhcbiAgICAgICAgICBBcnJheS5mcm9tKHN1YnMuZW50cmllcygpKS5tYXAoKFtzdWIsIHNldF0pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGlkID0gZ2V0T2JqSWQoc3ViKTtcbiAgICAgICAgICAgIGlmIChpZCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICByZXR1cm4gW2lkLCBBcnJheS5mcm9tKHNldCldO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFt1bmRlZmluZWQsIHVuZGVmaW5lZF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgICAgKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuICAgIH0pXG4gICAgLmZpbHRlcigoYSkgPT4gISFhKTtcblxuICBjb25zdCBzZXJpYWxpemUgPSAodmFsdWU6IGFueSkgPT4ge1xuICAgIHJldHVybiBnZXRPYmpJZCh2YWx1ZSkgPz8gdmFsdWU7XG4gIH07XG5cbiAgY29uc3QgcXJsU2VyaWFsaXplT3B0aW9uczogUVJMU2VyaWFsaXplT3B0aW9ucyA9IHtcbiAgICBwbGF0Zm9ybSxcbiAgICBnZXRPYmpJZCxcbiAgfTtcblxuICBjb25zdCBjb252ZXJ0ZWRPYmpzID0gb2Jqcy5tYXAoKG9iaikgPT4ge1xuICAgIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICAgIHJldHVybiBvYmoubWFwKHNlcmlhbGl6ZSk7XG4gICAgfSBlbHNlIGlmIChvYmogJiYgdHlwZW9mIG9iaiA9PT0gJ29iamVjdCcpIHtcbiAgICAgIGlmIChpc1FybChvYmopKSB7XG4gICAgICAgIHJldHVybiBRUkxfUFJFRklYICsgc3RyaW5naWZ5UVJMKG9iaiwgcXJsU2VyaWFsaXplT3B0aW9ucyk7XG4gICAgICB9XG4gICAgICBjb25zdCBvdXRwdXQ6IFJlY29yZDxzdHJpbmcsIGFueT4gPSB7fTtcbiAgICAgIE9iamVjdC5lbnRyaWVzKG9iaikuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgICAgIG91dHB1dFtrZXldID0gc2VyaWFsaXplKHZhbHVlKTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIG91dHB1dDtcbiAgICB9XG4gICAgcmV0dXJuIG9iajtcbiAgfSk7XG5cbiAgLy8gV3JpdGUgYmFjayB0byB0aGUgZG9tXG4gIGVsZW1lbnRzLmZvckVhY2goKG5vZGUpID0+IHtcbiAgICBjb25zdCBjdHggPSBnZXRDb250ZXh0KG5vZGUpO1xuICAgIGNvbnN0IHByb3BzID0gY3R4LnByb3BzO1xuICAgIGNvbnN0IHJlbmRlclFybCA9IGN0eC5yZW5kZXJRcmw7XG4gICAgY29uc3QgYXR0cmlidXRlID0gY3R4LnJlZk1hcC5hcnJheVxuICAgICAgLm1hcCgob2JqKSA9PiB7XG4gICAgICAgIGNvbnN0IGlkID0gZ2V0T2JqSWQob2JqKTtcbiAgICAgICAgYXNzZXJ0RGVmaW5lZChpZCk7XG4gICAgICAgIHJldHVybiBpZDtcbiAgICAgIH0pXG4gICAgICAuam9pbignICcpO1xuICAgIG5vZGUuc2V0QXR0cmlidXRlKFFPYmpBdHRyLCBhdHRyaWJ1dGUpO1xuXG4gICAgY29uc3Qgc2VxID0gY3R4LnNlcS5tYXAoKGluZGV4KSA9PiBpbnRUb1N0cihpbmRleCkpLmpvaW4oJyAnKTtcbiAgICBub2RlLnNldEF0dHJpYnV0ZShRU2VxQXR0ciwgc2VxKTtcblxuICAgIGlmIChwcm9wcykge1xuICAgICAgY29uc3Qgb2JqcyA9IFtwcm9wc107XG4gICAgICBpZiAocmVuZGVyUXJsKSB7XG4gICAgICAgIG9ianMucHVzaChyZW5kZXJRcmwpO1xuICAgICAgfVxuICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoUUhvc3RBdHRyLCBvYmpzLm1hcCgob2JqKSA9PiBjdHgucmVmTWFwLmluZGV4T2Yob2JqKSkuam9pbignICcpKTtcbiAgICB9XG4gIH0pO1xuXG4gIC8vIFNhbml0eSBjaGVjayBvZiBzZXJpYWxpemVkIGVsZW1lbnRcbiAgaWYgKHFEZXYpIHtcbiAgICBlbGVtZW50VG9JbmRleC5mb3JFYWNoKCh2YWx1ZSwgZWwpID0+IHtcbiAgICAgIGlmIChnZXREb2N1bWVudChlbCkgIT09IGRvYykge1xuICAgICAgICBsb2dXYXJuKCdlbGVtZW50IGZyb20gZGlmZmVyZW50IGRvY3VtZW50JywgdmFsdWUsIGVsLnRhZ05hbWUpO1xuICAgICAgfVxuICAgICAgaWYgKCF2YWx1ZSkge1xuICAgICAgICBsb2dXYXJuKCd1bmNvbm5lY3RlZCBlbGVtZW50JywgZWwudGFnTmFtZSwgJ1xcbicpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIHJldHVybiB7XG4gICAgb2JqczogY29udmVydGVkT2JqcyxcbiAgICBzdWJzLFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UXdpa0pTT04ocGFyZW50RWxtOiBFbGVtZW50KTogSFRNTFNjcmlwdEVsZW1lbnQgfCB1bmRlZmluZWQge1xuICBsZXQgY2hpbGQgPSBwYXJlbnRFbG0ubGFzdEVsZW1lbnRDaGlsZDtcbiAgd2hpbGUgKGNoaWxkKSB7XG4gICAgaWYgKGNoaWxkLnRhZ05hbWUgPT09ICdTQ1JJUFQnICYmIGNoaWxkLmdldEF0dHJpYnV0ZSgndHlwZScpID09PSAncXdpay9qc29uJykge1xuICAgICAgcmV0dXJuIGNoaWxkIGFzIEhUTUxTY3JpcHRFbGVtZW50O1xuICAgIH1cbiAgICBjaGlsZCA9IGNoaWxkLnByZXZpb3VzRWxlbWVudFNpYmxpbmc7XG4gIH1cbiAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldE5vZGVzSW5TY29wZShwYXJlbnQ6IEVsZW1lbnQsIHByZWRpY2F0ZTogKGVsOiBFbGVtZW50KSA9PiBib29sZWFuKSB7XG4gIGNvbnN0IG5vZGVzOiBFbGVtZW50W10gPSBbXTtcbiAgd2Fsa05vZGVzKG5vZGVzLCBwYXJlbnQsIHByZWRpY2F0ZSk7XG4gIHJldHVybiBub2Rlcztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHdhbGtOb2Rlcyhub2RlczogRWxlbWVudFtdLCBwYXJlbnQ6IEVsZW1lbnQsIHByZWRpY2F0ZTogKGVsOiBFbGVtZW50KSA9PiBib29sZWFuKSB7XG4gIGxldCBjaGlsZCA9IHBhcmVudC5maXJzdEVsZW1lbnRDaGlsZDtcbiAgd2hpbGUgKGNoaWxkKSB7XG4gICAgaWYgKCFpc0NvbnRhaW5lcihjaGlsZCkpIHtcbiAgICAgIGlmIChwcmVkaWNhdGUoY2hpbGQpKSB7XG4gICAgICAgIG5vZGVzLnB1c2goY2hpbGQpO1xuICAgICAgfVxuICAgICAgd2Fsa05vZGVzKG5vZGVzLCBjaGlsZCwgcHJlZGljYXRlKTtcbiAgICB9XG4gICAgY2hpbGQgPSBjaGlsZC5uZXh0RWxlbWVudFNpYmxpbmc7XG4gIH1cbn1cblxuZnVuY3Rpb24gcmV2aXZlVmFsdWVzKFxuICBvYmpzOiBhbnlbXSxcbiAgc3ViczogYW55W10sXG4gIGdldE9iamVjdDogR2V0T2JqZWN0LFxuICBtYXA6IE9ialRvUHJveHlNYXAsXG4gIGNvbnRhaW5lckVsOiBFbGVtZW50XG4pIHtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBvYmpzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgdmFsdWUgPSBvYmpzW2ldO1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICBpZiAodmFsdWUgPT09IFVOREVGSU5FRF9QUkVGSVgpIHtcbiAgICAgICAgb2Jqc1tpXSA9IHVuZGVmaW5lZDtcbiAgICAgIH0gZWxzZSBpZiAodmFsdWUuc3RhcnRzV2l0aChRUkxfUFJFRklYKSkge1xuICAgICAgICBvYmpzW2ldID0gcGFyc2VRUkwodmFsdWUuc2xpY2UoMSksIGNvbnRhaW5lckVsKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3Qgc3ViID0gc3Vic1tpXTtcbiAgICAgIGlmIChzdWIpIHtcbiAgICAgICAgY29uc3QgY29udmVydGVkID0gbmV3IE1hcCgpO1xuICAgICAgICBPYmplY3QuZW50cmllcyhzdWIpLmZvckVhY2goKGVudHJ5KSA9PiB7XG4gICAgICAgICAgY29uc3QgZWwgPSBnZXRPYmplY3QoZW50cnlbMF0pO1xuICAgICAgICAgIGlmICghZWwpIHtcbiAgICAgICAgICAgIGxvZ1dhcm4oXG4gICAgICAgICAgICAgICdRV0lLIGNhbiBub3QgcmV2aXZlIHN1YnNjcmlwdGlvbnMgYmVjYXVzZSBvZiBtaXNzaW5nIGVsZW1lbnQgSUQnLFxuICAgICAgICAgICAgICBlbnRyeSxcbiAgICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnN0IHNldCA9IG5ldyBTZXQoZW50cnlbMV0gYXMgYW55KSBhcyBTZXQ8c3RyaW5nPjtcbiAgICAgICAgICBjb252ZXJ0ZWQuc2V0KGVsLCBzZXQpO1xuICAgICAgICB9KTtcbiAgICAgICAgX3Jlc3RvcmVRT2JqZWN0KHZhbHVlLCBtYXAsIGNvbnZlcnRlZCk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIHJldml2ZU5lc3RlZE9iamVjdHMob2JqOiBhbnksIGdldE9iamVjdDogR2V0T2JqZWN0KSB7XG4gIGlmIChvYmogJiYgdHlwZW9mIG9iaiA9PSAnb2JqZWN0Jykge1xuICAgIGlmIChpc1FybChvYmopKSB7XG4gICAgICBpZiAob2JqLmNhcHR1cmUgJiYgb2JqLmNhcHR1cmUubGVuZ3RoID4gMCkge1xuICAgICAgICBvYmouY2FwdHVyZVJlZiA9IG9iai5jYXB0dXJlLm1hcChnZXRPYmplY3QpO1xuICAgICAgICBvYmouY2FwdHVyZSA9IG51bGw7XG4gICAgICB9XG4gICAgICByZXR1cm47XG4gICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgb2JqLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gb2JqW2ldO1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgb2JqW2ldID0gZ2V0T2JqZWN0KHZhbHVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZpdmVOZXN0ZWRPYmplY3RzKHZhbHVlLCBnZXRPYmplY3QpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChPYmplY3QuZ2V0UHJvdG90eXBlT2Yob2JqKSA9PT0gT2JqZWN0LnByb3RvdHlwZSkge1xuICAgICAgZm9yIChjb25zdCBrZXkgaW4gb2JqKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7XG4gICAgICAgICAgY29uc3QgdmFsdWUgPSBvYmpba2V5XTtcbiAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBvYmpba2V5XSA9IGdldE9iamVjdCh2YWx1ZSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldml2ZU5lc3RlZE9iamVjdHModmFsdWUsIGdldE9iamVjdCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGdldE9iamVjdEltcGwoXG4gIGlkOiBzdHJpbmcsXG4gIGVsZW1lbnRzOiBNYXA8c3RyaW5nLCBFbGVtZW50PixcbiAgb2JqczogYW55W10sXG4gIG1hcDogT2JqVG9Qcm94eU1hcFxuKSB7XG4gIGlmIChpZC5zdGFydHNXaXRoKEVMRU1FTlRfSURfUFJFRklYKSkge1xuICAgIGFzc2VydEVxdWFsKGVsZW1lbnRzLmhhcyhpZCksIHRydWUpO1xuICAgIHJldHVybiBlbGVtZW50cy5nZXQoaWQpO1xuICB9XG4gIGNvbnN0IGluZGV4ID0gc3RyVG9JbnQoaWQpO1xuICBhc3NlcnRFcXVhbChvYmpzLmxlbmd0aCA+IGluZGV4LCB0cnVlKTtcbiAgY29uc3Qgb2JqID0gb2Jqc1tpbmRleF07XG4gIGNvbnN0IG5lZWRzUHJveHkgPSBpZC5lbmRzV2l0aCgnIScpO1xuICBpZiAobmVlZHNQcm94eSkge1xuICAgIGNvbnN0IGZpbmFsT2JqID0gbWFwLmdldChvYmopO1xuICAgIGFzc2VydERlZmluZWQoZmluYWxPYmopO1xuICAgIHJldHVybiBmaW5hbE9iajtcbiAgfVxuICByZXR1cm4gb2JqO1xufVxuXG5mdW5jdGlvbiBub3JtYWxpemVPYmoob2JqOiBhbnkpIHtcbiAgaWYgKG9iaiA9PT0gdW5kZWZpbmVkIHx8ICFzaG91bGRTZXJpYWxpemUob2JqKSkge1xuICAgIHJldHVybiBVTkRFRklORURfUFJFRklYO1xuICB9XG4gIGlmIChvYmogJiYgdHlwZW9mIG9iaiA9PT0gJ29iamVjdCcpIHtcbiAgICBjb25zdCB2YWx1ZSA9IG9ialtRT2plY3RUYXJnZXRTeW1ib2xdID8/IG9iajtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbiAgcmV0dXJuIG9iajtcbn1cblxuZnVuY3Rpb24gY29sbGVjdFZhbHVlKG9iajogUVJMSW50ZXJuYWwsIHNlZW46IFNldDxhbnk+KSB7XG4gIGNvbGxlY3RRT2JqZWN0cyhvYmosIHNlZW4pO1xuICBzZWVuLmFkZChub3JtYWxpemVPYmoob2JqKSk7XG59XG5cbmZ1bmN0aW9uIGNvbGxlY3RRcmwob2JqOiBRUkxJbnRlcm5hbCwgc2VlbjogU2V0PGFueT4pIHtcbiAgc2Vlbi5hZGQobm9ybWFsaXplT2JqKG9iaikpO1xuICBpZiAob2JqLmNhcHR1cmVSZWYpIHtcbiAgICBvYmouY2FwdHVyZVJlZi5mb3JFYWNoKChvYmopID0+IGNvbGxlY3RWYWx1ZShvYmosIHNlZW4pKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjb2xsZWN0UU9iamVjdHMob2JqOiBhbnksIHNlZW46IFNldDxhbnk+KSB7XG4gIGlmIChvYmogIT0gbnVsbCkge1xuICAgIGlmICh0eXBlb2Ygb2JqID09PSAnb2JqZWN0Jykge1xuICAgICAgaWYgKCFvYmpbUU9qZWN0VGFyZ2V0U3ltYm9sXSAmJiBpc0VsZW1lbnQob2JqKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAoaXNRcmwob2JqKSkge1xuICAgICAgICBjb2xsZWN0UXJsKG9iaiwgc2Vlbik7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIG9iaiA9IG5vcm1hbGl6ZU9iaihvYmopO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIG9iaiA9PT0gJ29iamVjdCcpIHtcbiAgICAgIGlmIChzZWVuLmhhcyhvYmopKSByZXR1cm47XG4gICAgICBzZWVuLmFkZChvYmopO1xuXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShvYmopKSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgb2JqLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgY29sbGVjdFFPYmplY3RzKG9ialtpXSwgc2Vlbik7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IGluIG9iaikge1xuICAgICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7XG4gICAgICAgICAgICBjb2xsZWN0UU9iamVjdHMob2JqW2tleV0sIHNlZW4pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBpZiAodHlwZW9mIG9iaiA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHNlZW4uYWRkKG9iaik7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1Byb3h5KG9iajogYW55KTogYm9vbGVhbiB7XG4gIHJldHVybiBvYmogIT09IG51bGwgJiYgdHlwZW9mIG9iaiA9PT0gJ29iamVjdCcgJiYgUU9qZWN0VGFyZ2V0U3ltYm9sIGluIG9iajtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzQ29udGFpbmVyKGVsOiBFbGVtZW50KSB7XG4gIHJldHVybiBlbC5oYXNBdHRyaWJ1dGUoUUNvbnRhaW5lckF0dHIpO1xufVxuXG5mdW5jdGlvbiBoYXNRT2JqKGVsOiBFbGVtZW50KSB7XG4gIHJldHVybiBlbC5oYXNBdHRyaWJ1dGUoUU9iakF0dHIpO1xufVxuXG5mdW5jdGlvbiBoYXNRSWQoZWw6IEVsZW1lbnQpIHtcbiAgcmV0dXJuIGVsLmhhc0F0dHJpYnV0ZShFTEVNRU5UX0lEKTtcbn1cblxuZXhwb3J0IGNvbnN0IGludFRvU3RyID0gKG51OiBudW1iZXIpID0+IHtcbiAgcmV0dXJuIG51LnRvU3RyaW5nKDM2KTtcbn07XG5cbmV4cG9ydCBjb25zdCBzdHJUb0ludCA9IChudTogc3RyaW5nKSA9PiB7XG4gIHJldHVybiBwYXJzZUludChudSwgMzYpO1xufTtcbiJdfQ==","import { QObjAttr } from '../util/markers';\nexport function newQObjectMap(element) {\n    const array = [];\n    let added = element.hasAttribute(QObjAttr);\n    return {\n        array,\n        get(index) {\n            return array[index];\n        },\n        indexOf(obj) {\n            const index = array.indexOf(obj);\n            return index === -1 ? undefined : index;\n        },\n        add(object) {\n            const index = array.indexOf(object);\n            if (index === -1) {\n                array.push(object);\n                if (!added) {\n                    element.setAttribute(QObjAttr, '');\n                    added = true;\n                }\n                return array.length - 1;\n            }\n            return index;\n        },\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvcHMtb2JqLW1hcC5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvcHJvcHMvcHJvcHMtb2JqLW1hcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFTM0MsTUFBTSxVQUFVLGFBQWEsQ0FBQyxPQUFnQjtJQUM1QyxNQUFNLEtBQUssR0FBbUIsRUFBRSxDQUFDO0lBQ2pDLElBQUksS0FBSyxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUM7SUFFM0MsT0FBTztRQUNMLEtBQUs7UUFDTCxHQUFHLENBQUMsS0FBYTtZQUNmLE9BQU8sS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3RCLENBQUM7UUFDRCxPQUFPLENBQUMsR0FBVztZQUNqQixNQUFNLEtBQUssR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ2pDLE9BQU8sS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztRQUMxQyxDQUFDO1FBQ0QsR0FBRyxDQUFDLE1BQW9CO1lBQ3RCLE1BQU0sS0FBSyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDcEMsSUFBSSxLQUFLLEtBQUssQ0FBQyxDQUFDLEVBQUU7Z0JBQ2hCLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7Z0JBQ25CLElBQUksQ0FBQyxLQUFLLEVBQUU7b0JBQ1YsT0FBTyxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUM7b0JBQ25DLEtBQUssR0FBRyxJQUFJLENBQUM7aUJBQ2Q7Z0JBQ0QsT0FBTyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQzthQUN6QjtZQUNELE9BQU8sS0FBSyxDQUFDO1FBQ2YsQ0FBQztLQUNZLENBQUM7QUFDbEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgUU9iamVjdCB9IGZyb20gJy4uL29iamVjdC9xLW9iamVjdCc7XG5pbXBvcnQgeyBRT2JqQXR0ciB9IGZyb20gJy4uL3V0aWwvbWFya2Vycyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUU9iamVjdE1hcCB7XG4gIGFkZChxT2JqZWN0OiBRT2JqZWN0PGFueT4pOiBudW1iZXI7XG4gIGdldChpbmRleDogbnVtYmVyKTogUU9iamVjdDxhbnk+IHwgdW5kZWZpbmVkO1xuICBpbmRleE9mKG9iamVjdDogUU9iamVjdDxhbnk+KTogbnVtYmVyIHwgdW5kZWZpbmVkO1xuICBhcnJheTogUU9iamVjdDxhbnk+W107XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBuZXdRT2JqZWN0TWFwKGVsZW1lbnQ6IEVsZW1lbnQpOiBRT2JqZWN0TWFwIHtcbiAgY29uc3QgYXJyYXk6IFFPYmplY3Q8YW55PltdID0gW107XG4gIGxldCBhZGRlZCA9IGVsZW1lbnQuaGFzQXR0cmlidXRlKFFPYmpBdHRyKTtcblxuICByZXR1cm4ge1xuICAgIGFycmF5LFxuICAgIGdldChpbmRleDogbnVtYmVyKTogUU9iamVjdDxhbnk+IHwgdW5kZWZpbmVkIHtcbiAgICAgIHJldHVybiBhcnJheVtpbmRleF07XG4gICAgfSxcbiAgICBpbmRleE9mKG9iajogc3RyaW5nKTogbnVtYmVyIHwgdW5kZWZpbmVkIHtcbiAgICAgIGNvbnN0IGluZGV4ID0gYXJyYXkuaW5kZXhPZihvYmopO1xuICAgICAgcmV0dXJuIGluZGV4ID09PSAtMSA/IHVuZGVmaW5lZCA6IGluZGV4O1xuICAgIH0sXG4gICAgYWRkKG9iamVjdDogUU9iamVjdDxhbnk+KSB7XG4gICAgICBjb25zdCBpbmRleCA9IGFycmF5LmluZGV4T2Yob2JqZWN0KTtcbiAgICAgIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICAgICAgYXJyYXkucHVzaChvYmplY3QpO1xuICAgICAgICBpZiAoIWFkZGVkKSB7XG4gICAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoUU9iakF0dHIsICcnKTtcbiAgICAgICAgICBhZGRlZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFycmF5Lmxlbmd0aCAtIDE7XG4gICAgICB9XG4gICAgICByZXR1cm4gaW5kZXg7XG4gICAgfSxcbiAgfSBhcyBRT2JqZWN0TWFwO1xufVxuIl19","// TODO(misko): need full object parsing /serializing\nimport { assertEqual } from '../assert/assert';\nexport function qDeflate(obj, hostCtx) {\n    return String(hostCtx.refMap.add(obj));\n}\nexport function qInflate(ref, hostCtx) {\n    const int = parseInt(ref, 10);\n    const obj = hostCtx.refMap.get(int);\n    assertEqual(hostCtx.refMap.array.length > int, true);\n    return obj;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicS1qc29uLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9qc29uL3EtanNvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxREFBcUQ7QUFDckQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRy9DLE1BQU0sVUFBVSxRQUFRLENBQUMsR0FBUSxFQUFFLE9BQWlCO0lBQ2xELE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7QUFDekMsQ0FBQztBQUVELE1BQU0sVUFBVSxRQUFRLENBQUMsR0FBVyxFQUFFLE9BQWlCO0lBQ3JELE1BQU0sR0FBRyxHQUFHLFFBQVEsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDOUIsTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDcEMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDckQsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVE9ETyhtaXNrbyk6IG5lZWQgZnVsbCBvYmplY3QgcGFyc2luZyAvc2VyaWFsaXppbmdcbmltcG9ydCB7IGFzc2VydEVxdWFsIH0gZnJvbSAnLi4vYXNzZXJ0L2Fzc2VydCc7XG5pbXBvcnQgdHlwZSB7IFFDb250ZXh0IH0gZnJvbSAnLi4vcHJvcHMvcHJvcHMnO1xuXG5leHBvcnQgZnVuY3Rpb24gcURlZmxhdGUob2JqOiBhbnksIGhvc3RDdHg6IFFDb250ZXh0KTogc3RyaW5nIHtcbiAgcmV0dXJuIFN0cmluZyhob3N0Q3R4LnJlZk1hcC5hZGQob2JqKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBxSW5mbGF0ZShyZWY6IHN0cmluZywgaG9zdEN0eDogUUNvbnRleHQpOiBhbnkge1xuICBjb25zdCBpbnQgPSBwYXJzZUludChyZWYsIDEwKTtcbiAgY29uc3Qgb2JqID0gaG9zdEN0eC5yZWZNYXAuZ2V0KGludCk7XG4gIGFzc2VydEVxdWFsKGhvc3RDdHgucmVmTWFwLmFycmF5Lmxlbmd0aCA+IGludCwgdHJ1ZSk7XG4gIHJldHVybiBvYmo7XG59XG4iXX0=","export function fromCamelToKebabCase(text) {\n    return text.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\nexport function fromKebabToCamelCase(text) {\n    return text.replace(/-./g, (x) => x[1].toUpperCase());\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FzZS5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXRpbC9jYXNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sVUFBVSxvQkFBb0IsQ0FBQyxJQUFZO0lBQy9DLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsRUFBRSxPQUFPLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztBQUNoRSxDQUFDO0FBRUQsTUFBTSxVQUFVLG9CQUFvQixDQUFDLElBQVk7SUFDL0MsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7QUFDeEQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBmcm9tQ2FtZWxUb0tlYmFiQ2FzZSh0ZXh0OiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gdGV4dC5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCAnJDEtJDInKS50b0xvd2VyQ2FzZSgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZnJvbUtlYmFiVG9DYW1lbENhc2UodGV4dDogc3RyaW5nKTogc3RyaW5nIHtcbiAgcmV0dXJuIHRleHQucmVwbGFjZSgvLS4vZywgKHgpID0+IHhbMV0udG9VcHBlckNhc2UoKSk7XG59XG4iXX0=","export function stringify(value) {\n    return value == null ? null : String(value);\n}\nexport function debugStringify(value) {\n    if (value != null && typeof value == 'object') {\n        return String(value.constructor.name) + '\\n' + safeJSONStringify(value);\n    }\n    return String(value);\n}\nfunction safeJSONStringify(value) {\n    try {\n        return JSON.stringify(value, null, '  ');\n    }\n    catch (e) {\n        return String(e);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaW5naWZ5LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS91dGlsL3N0cmluZ2lmeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLFVBQVUsU0FBUyxDQUFDLEtBQVU7SUFDbEMsT0FBTyxLQUFLLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUM5QyxDQUFDO0FBRUQsTUFBTSxVQUFVLGNBQWMsQ0FBQyxLQUFVO0lBQ3ZDLElBQUksS0FBSyxJQUFJLElBQUksSUFBSSxPQUFPLEtBQUssSUFBSSxRQUFRLEVBQUU7UUFDN0MsT0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLEdBQUcsaUJBQWlCLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDekU7SUFDRCxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUN2QixDQUFDO0FBRUQsU0FBUyxpQkFBaUIsQ0FBQyxLQUFVO0lBQ25DLElBQUk7UUFDRixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztLQUMxQztJQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ1YsT0FBTyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDbEI7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHN0cmluZ2lmeSh2YWx1ZTogYW55KTogc3RyaW5nIHwgbnVsbCB7XG4gIHJldHVybiB2YWx1ZSA9PSBudWxsID8gbnVsbCA6IFN0cmluZyh2YWx1ZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkZWJ1Z1N0cmluZ2lmeSh2YWx1ZTogYW55KTogc3RyaW5nIHtcbiAgaWYgKHZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlID09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIFN0cmluZyh2YWx1ZS5jb25zdHJ1Y3Rvci5uYW1lKSArICdcXG4nICsgc2FmZUpTT05TdHJpbmdpZnkodmFsdWUpO1xuICB9XG4gIHJldHVybiBTdHJpbmcodmFsdWUpO1xufVxuXG5mdW5jdGlvbiBzYWZlSlNPTlN0cmluZ2lmeSh2YWx1ZTogYW55KSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHZhbHVlLCBudWxsLCAnICAnKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBTdHJpbmcoZSk7XG4gIH1cbn1cbiJdfQ==","import { getPlatform } from '../platform/platform';\nimport { QError, qError } from '../error/error';\nimport { parseQRL, qrlImport, stringifyQRL } from '../import/qrl';\nimport { isQrl } from '../import/qrl-class';\nimport { qDeflate } from '../json/q-json';\nimport { getInvokeContext, useInvoke } from '../use/use-core';\nimport { fromCamelToKebabCase } from '../util/case';\nimport { EMPTY_ARRAY } from '../util/flyweight';\nimport { isPromise } from '../util/promises';\nimport { debugStringify } from '../util/stringify';\nimport { getDocument } from '../util/dom';\nimport { setAttribute } from '../render/cursor';\nimport { emitEvent } from '../util/event';\nconst ON_PROP_REGEX = /^on([A-Z]|-.).*Qrl$/;\nconst ON$_PROP_REGEX = /^on([A-Z]|-.).*\\$$/;\nexport function isOnProp(prop) {\n    return ON_PROP_REGEX.test(prop);\n}\nexport function isOn$Prop(prop) {\n    return ON$_PROP_REGEX.test(prop);\n}\nexport function qPropReadQRL(ctx, prop) {\n    const existingQRLs = getExistingQRLs(ctx, prop);\n    if (existingQRLs.length === 0) {\n        return null;\n    }\n    return () => {\n        const context = getInvokeContext();\n        const qrls = getExistingQRLs(ctx, prop);\n        return Promise.all(qrls.map(async (qrlOrPromise) => {\n            const qrl = await qrlOrPromise;\n            if (!qrl.symbolRef) {\n                qrl.symbolRef = await qrlImport(ctx.element, qrl);\n            }\n            context.qrl = qrl;\n            emitEvent(ctx.element, 'qSymbol', { name: qrl.symbol }, true);\n            return useInvoke(context, qrl.symbolRef);\n        }));\n    };\n}\nexport function qPropWriteQRL(rctx, ctx, prop, value) {\n    if (!value) {\n        return;\n    }\n    if (typeof value == 'string') {\n        value = parseQRL(value, ctx.element);\n    }\n    const existingQRLs = getExistingQRLs(ctx, prop);\n    if (Array.isArray(value)) {\n        value.forEach((value) => qPropWriteQRL(rctx, ctx, prop, value));\n    }\n    else if (isQrl(value)) {\n        const cp = value.copy();\n        cp.setContainer(ctx.element);\n        const capture = cp.capture;\n        if (capture == null) {\n            // we need to serialize the lexical scope references\n            const captureRef = cp.captureRef;\n            cp.capture =\n                captureRef && captureRef.length ? captureRef.map((ref) => qDeflate(ref, ctx)) : EMPTY_ARRAY;\n        }\n        // Important we modify the array as it is cached.\n        for (let i = 0; i < existingQRLs.length; i++) {\n            const qrl = existingQRLs[i];\n            if (!isPromise(qrl) && qrl.canonicalChunk === cp.canonicalChunk && qrl.symbol === cp.symbol) {\n                existingQRLs.splice(i, 1);\n                i--;\n            }\n        }\n        existingQRLs.push(cp);\n    }\n    else if (isPromise(value)) {\n        const writePromise = value.then((qrl) => {\n            existingQRLs.splice(existingQRLs.indexOf(writePromise), 1);\n            qPropWriteQRL(rctx, ctx, prop, qrl);\n            return qrl;\n        });\n        existingQRLs.push(writePromise);\n    }\n    else {\n        // TODO(misko): Test/better text\n        throw qError(QError.TODO, `Not QRLInternal: prop: ${prop}; value: ` + value);\n    }\n    const kebabProp = fromCamelToKebabCase(prop);\n    const newValue = serializeQRLs(existingQRLs, ctx);\n    if (ctx.element.getAttribute(kebabProp) !== newValue) {\n        if (rctx) {\n            setAttribute(rctx, ctx.element, kebabProp, newValue);\n        }\n        else {\n            ctx.element.setAttribute(kebabProp, newValue);\n        }\n    }\n}\nexport function closureRefError(ref) {\n    return new Error(`QWIK-ERROR: A closure can only lexically capture 'QObject' and 'QProp' const references. Got: ` +\n        debugStringify(ref));\n}\nfunction getExistingQRLs(ctx, prop) {\n    const key = 'event:' + prop;\n    let parts = ctx.cache.get(key);\n    if (!parts) {\n        const attrName = fromCamelToKebabCase(prop);\n        parts = [];\n        (ctx.element.getAttribute(attrName) || '').split('\\n').forEach((qrl) => {\n            if (qrl) {\n                parts.push(parseQRL(qrl, ctx.element));\n            }\n        });\n        ctx.cache.set(key, parts);\n    }\n    return parts;\n}\nfunction serializeQRLs(existingQRLs, ctx) {\n    const platform = getPlatform(getDocument(ctx.element));\n    const element = ctx.element;\n    const opts = {\n        platform,\n        element,\n    };\n    return existingQRLs\n        .map((qrl) => (isPromise(qrl) ? '' : stringifyQRL(qrl, opts)))\n        .filter((v) => !!v)\n        .join('\\n');\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvcHMtb24uanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3Byb3BzL3Byb3BzLW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNsRSxPQUFPLEVBQUUsS0FBSyxFQUFlLE1BQU0scUJBQXFCLENBQUM7QUFDekQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzFDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxTQUFTLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDcEQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFHbkQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMxQyxPQUFPLEVBQWlCLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQy9ELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFMUMsTUFBTSxhQUFhLEdBQUcscUJBQXFCLENBQUM7QUFDNUMsTUFBTSxjQUFjLEdBQUcsb0JBQW9CLENBQUM7QUFFNUMsTUFBTSxVQUFVLFFBQVEsQ0FBQyxJQUFZO0lBQ25DLE9BQU8sYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNsQyxDQUFDO0FBRUQsTUFBTSxVQUFVLFNBQVMsQ0FBQyxJQUFZO0lBQ3BD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QUFHLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUN2RCxNQUFNLE9BQU8sR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDO0lBQzVCLE1BQU0sSUFBSSxHQUFHO1FBQ1gsUUFBUTtRQUNSLE9BQU87S0FDUixDQUFDO0lBQ0YsT0FBTyxZQUFZO1NBQ2hCLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO1NBQzdELE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNsQixJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDaEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFBsYXRmb3JtIH0gZnJvbSAnLi4vcGxhdGZvcm0vcGxhdGZvcm0nO1xuaW1wb3J0IHsgUUVycm9yLCBxRXJyb3IgfSBmcm9tICcuLi9lcnJvci9lcnJvcic7XG5pbXBvcnQgeyBwYXJzZVFSTCwgcXJsSW1wb3J0LCBzdHJpbmdpZnlRUkwgfSBmcm9tICcuLi9pbXBvcnQvcXJsJztcbmltcG9ydCB7IGlzUXJsLCBRUkxJbnRlcm5hbCB9IGZyb20gJy4uL2ltcG9ydC9xcmwtY2xhc3MnO1xuaW1wb3J0IHsgcURlZmxhdGUgfSBmcm9tICcuLi9qc29uL3EtanNvbic7XG5pbXBvcnQgeyBnZXRJbnZva2VDb250ZXh0LCB1c2VJbnZva2UgfSBmcm9tICcuLi91c2UvdXNlLWNvcmUnO1xuaW1wb3J0IHsgZnJvbUNhbWVsVG9LZWJhYkNhc2UgfSBmcm9tICcuLi91dGlsL2Nhc2UnO1xuaW1wb3J0IHsgRU1QVFlfQVJSQVkgfSBmcm9tICcuLi91dGlsL2ZseXdlaWdodCc7XG5pbXBvcnQgeyBpc1Byb21pc2UgfSBmcm9tICcuLi91dGlsL3Byb21pc2VzJztcbmltcG9ydCB7IGRlYnVnU3RyaW5naWZ5IH0gZnJvbSAnLi4vdXRpbC9zdHJpbmdpZnknO1xuaW1wb3J0IHR5cGUgeyBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJy4uL3V0aWwvdHlwZXMnO1xuaW1wb3J0IHR5cGUgeyBRQ29udGV4dCB9IGZyb20gJy4vcHJvcHMnO1xuaW1wb3J0IHsgZ2V0RG9jdW1lbnQgfSBmcm9tICcuLi91dGlsL2RvbSc7XG5pbXBvcnQgeyBSZW5kZXJDb250ZXh0LCBzZXRBdHRyaWJ1dGUgfSBmcm9tICcuLi9yZW5kZXIvY3Vyc29yJztcbmltcG9ydCB7IGVtaXRFdmVudCB9IGZyb20gJy4uL3V0aWwvZXZlbnQnO1xuXG5jb25zdCBPTl9QUk9QX1JFR0VYID0gL15vbihbQS1aXXwtLikuKlFybCQvO1xuY29uc3QgT04kX1BST1BfUkVHRVggPSAvXm9uKFtBLVpdfC0uKS4qXFwkJC87XG5cbmV4cG9ydCBmdW5jdGlvbiBpc09uUHJvcChwcm9wOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgcmV0dXJuIE9OX1BST1BfUkVHRVgudGVzdChwcm9wKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzT24kUHJvcChwcm9wOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgcmV0dXJuIE9OJF9QUk9QX1JFR0VYLnRlc3QocHJvcCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBxUHJvcFJlYWRRUkwoXG4gIGN0eDogUUNvbnRleHQsXG4gIHByb3A6IHN0cmluZ1xuKTogKChldmVudDogRXZlbnQpID0+IFByb21pc2U8YW55W10+KSB8IG51bGwge1xuICBjb25zdCBleGlzdGluZ1FSTHMgPSBnZXRFeGlzdGluZ1FSTHMoY3R4LCBwcm9wKTtcbiAgaWYgKGV4aXN0aW5nUVJMcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gKCkgPT4ge1xuICAgIGNvbnN0IGNvbnRleHQgPSBnZXRJbnZva2VDb250ZXh0KCk7XG4gICAgY29uc3QgcXJscyA9IGdldEV4aXN0aW5nUVJMcyhjdHgsIHByb3ApO1xuICAgIHJldHVybiBQcm9taXNlLmFsbChcbiAgICAgIHFybHMubWFwKGFzeW5jIChxcmxPclByb21pc2UpID0+IHtcbiAgICAgICAgY29uc3QgcXJsID0gYXdhaXQgcXJsT3JQcm9taXNlO1xuICAgICAgICBpZiAoIXFybC5zeW1ib2xSZWYpIHtcbiAgICAgICAgICBxcmwuc3ltYm9sUmVmID0gYXdhaXQgcXJsSW1wb3J0KGN0eC5lbGVtZW50LCBxcmwpO1xuICAgICAgICB9XG5cbiAgICAgICAgY29udGV4dC5xcmwgPSBxcmw7XG4gICAgICAgIGVtaXRFdmVudChjdHguZWxlbWVudCwgJ3FTeW1ib2wnLCB7IG5hbWU6IHFybC5zeW1ib2wgfSwgdHJ1ZSk7XG4gICAgICAgIHJldHVybiB1c2VJbnZva2UoY29udGV4dCwgcXJsLnN5bWJvbFJlZik7XG4gICAgICB9KVxuICAgICk7XG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBxUHJvcFdyaXRlUVJMKFxuICByY3R4OiBSZW5kZXJDb250ZXh0IHwgdW5kZWZpbmVkLFxuICBjdHg6IFFDb250ZXh0LFxuICBwcm9wOiBzdHJpbmcsXG4gIHZhbHVlOiBhbnlcbikge1xuICBpZiAoIXZhbHVlKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmICh0eXBlb2YgdmFsdWUgPT0gJ3N0cmluZycpIHtcbiAgICB2YWx1ZSA9IHBhcnNlUVJMKHZhbHVlLCBjdHguZWxlbWVudCk7XG4gIH1cbiAgY29uc3QgZXhpc3RpbmdRUkxzID0gZ2V0RXhpc3RpbmdRUkxzKGN0eCwgcHJvcCk7XG4gIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgIHZhbHVlLmZvckVhY2goKHZhbHVlKSA9PiBxUHJvcFdyaXRlUVJMKHJjdHgsIGN0eCwgcHJvcCwgdmFsdWUpKTtcbiAgfSBlbHNlIGlmIChpc1FybCh2YWx1ZSkpIHtcbiAgICBjb25zdCBjcCA9IHZhbHVlLmNvcHkoKTtcbiAgICBjcC5zZXRDb250YWluZXIoY3R4LmVsZW1lbnQpO1xuICAgIGNvbnN0IGNhcHR1cmUgPSBjcC5jYXB0dXJlO1xuICAgIGlmIChjYXB0dXJlID09IG51bGwpIHtcbiAgICAgIC8vIHdlIG5lZWQgdG8gc2VyaWFsaXplIHRoZSBsZXhpY2FsIHNjb3BlIHJlZmVyZW5jZXNcbiAgICAgIGNvbnN0IGNhcHR1cmVSZWYgPSBjcC5jYXB0dXJlUmVmO1xuICAgICAgY3AuY2FwdHVyZSA9XG4gICAgICAgIGNhcHR1cmVSZWYgJiYgY2FwdHVyZVJlZi5sZW5ndGggPyBjYXB0dXJlUmVmLm1hcCgocmVmKSA9PiBxRGVmbGF0ZShyZWYsIGN0eCkpIDogRU1QVFlfQVJSQVk7XG4gICAgfVxuXG4gICAgLy8gSW1wb3J0YW50IHdlIG1vZGlmeSB0aGUgYXJyYXkgYXMgaXQgaXMgY2FjaGVkLlxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZXhpc3RpbmdRUkxzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBxcmwgPSBleGlzdGluZ1FSTHNbaV07XG4gICAgICBpZiAoIWlzUHJvbWlzZShxcmwpICYmIHFybC5jYW5vbmljYWxDaHVuayA9PT0gY3AuY2Fub25pY2FsQ2h1bmsgJiYgcXJsLnN5bWJvbCA9PT0gY3Auc3ltYm9sKSB7XG4gICAgICAgIGV4aXN0aW5nUVJMcy5zcGxpY2UoaSwgMSk7XG4gICAgICAgIGktLTtcbiAgICAgIH1cbiAgICB9XG4gICAgZXhpc3RpbmdRUkxzLnB1c2goY3ApO1xuICB9IGVsc2UgaWYgKGlzUHJvbWlzZSh2YWx1ZSkpIHtcbiAgICBjb25zdCB3cml0ZVByb21pc2UgPSB2YWx1ZS50aGVuKChxcmw6IFFSTEludGVybmFsKSA9PiB7XG4gICAgICBleGlzdGluZ1FSTHMuc3BsaWNlKGV4aXN0aW5nUVJMcy5pbmRleE9mKHdyaXRlUHJvbWlzZSksIDEpO1xuICAgICAgcVByb3BXcml0ZVFSTChyY3R4LCBjdHgsIHByb3AsIHFybCk7XG4gICAgICByZXR1cm4gcXJsO1xuICAgIH0pO1xuICAgIGV4aXN0aW5nUVJMcy5wdXNoKHdyaXRlUHJvbWlzZSk7XG4gIH0gZWxzZSB7XG4gICAgLy8gVE9ETyhtaXNrbyk6IFRlc3QvYmV0dGVyIHRleHRcbiAgICB0aHJvdyBxRXJyb3IoUUVycm9yLlRPRE8sIGBOb3QgUVJMSW50ZXJuYWw6IHByb3A6ICR7cHJvcH07IHZhbHVlOiBgICsgdmFsdWUpO1xuICB9XG4gIGNvbnN0IGtlYmFiUHJvcCA9IGZyb21DYW1lbFRvS2ViYWJDYXNlKHByb3ApO1xuICBjb25zdCBuZXdWYWx1ZSA9IHNlcmlhbGl6ZVFSTHMoZXhpc3RpbmdRUkxzLCBjdHgpO1xuICBpZiAoY3R4LmVsZW1lbnQuZ2V0QXR0cmlidXRlKGtlYmFiUHJvcCkgIT09IG5ld1ZhbHVlKSB7XG4gICAgaWYgKHJjdHgpIHtcbiAgICAgIHNldEF0dHJpYnV0ZShyY3R4LCBjdHguZWxlbWVudCwga2ViYWJQcm9wLCBuZXdWYWx1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGN0eC5lbGVtZW50LnNldEF0dHJpYnV0ZShrZWJhYlByb3AsIG5ld1ZhbHVlKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNsb3N1cmVSZWZFcnJvcihyZWY6IGFueSkge1xuICByZXR1cm4gbmV3IEVycm9yKFxuICAgIGBRV0lLLUVSUk9SOiBBIGNsb3N1cmUgY2FuIG9ubHkgbGV4aWNhbGx5IGNhcHR1cmUgJ1FPYmplY3QnIGFuZCAnUVByb3AnIGNvbnN0IHJlZmVyZW5jZXMuIEdvdDogYCArXG4gICAgICBkZWJ1Z1N0cmluZ2lmeShyZWYpXG4gICk7XG59XG5cbmZ1bmN0aW9uIGdldEV4aXN0aW5nUVJMcyhjdHg6IFFDb250ZXh0LCBwcm9wOiBzdHJpbmcpOiBWYWx1ZU9yUHJvbWlzZTxRUkxJbnRlcm5hbD5bXSB7XG4gIGNvbnN0IGtleSA9ICdldmVudDonICsgcHJvcDtcbiAgbGV0IHBhcnRzID0gY3R4LmNhY2hlLmdldChrZXkpIGFzIFFSTEludGVybmFsW107XG4gIGlmICghcGFydHMpIHtcbiAgICBjb25zdCBhdHRyTmFtZSA9IGZyb21DYW1lbFRvS2ViYWJDYXNlKHByb3ApO1xuICAgIHBhcnRzID0gW107XG4gICAgKGN0eC5lbGVtZW50LmdldEF0dHJpYnV0ZShhdHRyTmFtZSkgfHwgJycpLnNwbGl0KCdcXG4nKS5mb3JFYWNoKChxcmwpID0+IHtcbiAgICAgIGlmIChxcmwpIHtcbiAgICAgICAgcGFydHMucHVzaChwYXJzZVFSTChxcmwsIGN0eC5lbGVtZW50KSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgY3R4LmNhY2hlLnNldChrZXksIHBhcnRzKTtcbiAgfVxuICByZXR1cm4gcGFydHM7XG59XG5cbmZ1bmN0aW9uIHNlcmlhbGl6ZVFSTHMoZXhpc3RpbmdRUkxzOiBWYWx1ZU9yUHJvbWlzZTxRUkxJbnRlcm5hbD5bXSwgY3R4OiBRQ29udGV4dCk6IHN0cmluZyB7XG4gIGNvbnN0IHBsYXRmb3JtID0gZ2V0UGxhdGZvcm0oZ2V0RG9jdW1lbnQoY3R4LmVsZW1lbnQpKTtcbiAgY29uc3QgZWxlbWVudCA9IGN0eC5lbGVtZW50O1xuICBjb25zdCBvcHRzID0ge1xuICAgIHBsYXRmb3JtLFxuICAgIGVsZW1lbnQsXG4gIH07XG4gIHJldHVybiBleGlzdGluZ1FSTHNcbiAgICAubWFwKChxcmwpID0+IChpc1Byb21pc2UocXJsKSA/ICcnIDogc3RyaW5naWZ5UVJMKHFybCwgb3B0cykpKVxuICAgIC5maWx0ZXIoKHYpID0+ICEhdilcbiAgICAuam9pbignXFxuJyk7XG59XG4iXX0=","import { QError, qError } from '../error/error';\nimport { getProxyMap, readWriteProxy } from '../object/q-object';\nimport { resumeContainer } from '../object/store';\nimport { getDocument } from '../util/dom';\nimport { newQObjectMap } from './props-obj-map';\nimport { qPropWriteQRL, qPropReadQRL } from './props-on';\nimport { QContainerAttr } from '../util/markers';\nError.stackTraceLimit = 9999;\nconst Q_CTX = '__ctx__';\nexport function resumeIfNeeded(containerEl) {\n    const isResumed = containerEl.getAttribute(QContainerAttr);\n    if (isResumed === 'paused') {\n        resumeContainer(containerEl);\n    }\n}\nexport function getContext(element) {\n    let ctx = element[Q_CTX];\n    if (!ctx) {\n        const cache = new Map();\n        element[Q_CTX] = ctx = {\n            element,\n            cache,\n            refMap: newQObjectMap(element),\n            dirty: false,\n            seq: [],\n            props: undefined,\n            renderQrl: undefined,\n            component: undefined,\n        };\n    }\n    return ctx;\n}\nconst PREFIXES = ['onWindow', 'onWindow', 'on'];\nexport function normalizeOnProp(prop) {\n    let scope = 'on';\n    for (const prefix of PREFIXES) {\n        if (prop.startsWith(prefix)) {\n            scope = prefix;\n            prop = prop.slice(prefix.length);\n        }\n    }\n    if (prop.startsWith('-')) {\n        prop = prop.slice(1);\n    }\n    else {\n        prop = prop.toLowerCase();\n    }\n    return `${scope}:${prop}`;\n}\nexport function setEvent(rctx, ctx, prop, value) {\n    qPropWriteQRL(rctx, ctx, normalizeOnProp(prop), value);\n}\nexport function getEvent(ctx, prop) {\n    return qPropReadQRL(ctx, normalizeOnProp(prop));\n}\nexport function getProps(ctx) {\n    if (!ctx.props) {\n        ctx.props = readWriteProxy({}, getProxyMap(getDocument(ctx.element)));\n        ctx.refMap.add(ctx.props);\n    }\n    return ctx.props;\n}\n/**\n * Turn an `Array` or object literal into a `class` or `style`\n *\n * @param obj `string`, `Array` or object literal\n * @param isClass `true` if expecting `class` output\n * @returns `string`\n */\nexport function stringifyClassOrStyle(obj, isClass) {\n    if (obj == null)\n        return '';\n    if (typeof obj == 'object') {\n        let text = '';\n        let sep = '';\n        if (Array.isArray(obj)) {\n            if (!isClass) {\n                throw qError(QError.Render_unsupportedFormat_obj_attr, obj, 'style');\n            }\n            for (let i = 0; i < obj.length; i++) {\n                text += sep + obj[i];\n                sep = ' ';\n            }\n        }\n        else {\n            for (const key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    const value = obj[key];\n                    text += isClass ? (value ? sep + key : '') : sep + key + ':' + value;\n                    sep = isClass ? ' ' : ';';\n                }\n            }\n        }\n        return text;\n    }\n    return String(obj);\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * Place at the root of the component View to allow binding of attributes on the Host element.\n *\n * ```\n * <Host someAttr={someExpr} someAttrStatic=\"value\">\n *   View content implementation.\n * </Host>\n * ```\n *\n * Qwik requires that components have [docs/HOST_ELEMENTS.ts] so that it is possible to have\n * asynchronous loading point. Host element is not owned by the component. At times it is\n * desirable for the component to render additional attributes on the host element. `<Host>`\n * servers that purpose.\n * @public\n */\nexport const Host = { __brand__: 'host' };\n/**\n * @public\n */\nexport const SkipRerender = { __brand__: 'skip' };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG9zdC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3JlbmRlci9qc3gvaG9zdC5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7Ozs7Ozs7Ozs7Ozs7O0dBY0c7QUFDSCxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQW1ELEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBUyxDQUFDO0FBRWpHOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUEwQixFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQVMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgSFRNTEF0dHJpYnV0ZXMgfSBmcm9tICcuL3R5cGVzL2pzeC1nZW5lcmF0ZWQnO1xuaW1wb3J0IHR5cGUgeyBGdW5jdGlvbkNvbXBvbmVudCB9IGZyb20gJy4vdHlwZXMvanN4LW5vZGUnO1xuXG4vKipcbiAqIFBsYWNlIGF0IHRoZSByb290IG9mIHRoZSBjb21wb25lbnQgVmlldyB0byBhbGxvdyBiaW5kaW5nIG9mIGF0dHJpYnV0ZXMgb24gdGhlIEhvc3QgZWxlbWVudC5cbiAqXG4gKiBgYGBcbiAqIDxIb3N0IHNvbWVBdHRyPXtzb21lRXhwcn0gc29tZUF0dHJTdGF0aWM9XCJ2YWx1ZVwiPlxuICogICBWaWV3IGNvbnRlbnQgaW1wbGVtZW50YXRpb24uXG4gKiA8L0hvc3Q+XG4gKiBgYGBcbiAqXG4gKiBRd2lrIHJlcXVpcmVzIHRoYXQgY29tcG9uZW50cyBoYXZlIFtkb2NzL0hPU1RfRUxFTUVOVFMudHNdIHNvIHRoYXQgaXQgaXMgcG9zc2libGUgdG8gaGF2ZVxuICogYXN5bmNocm9ub3VzIGxvYWRpbmcgcG9pbnQuIEhvc3QgZWxlbWVudCBpcyBub3Qgb3duZWQgYnkgdGhlIGNvbXBvbmVudC4gQXQgdGltZXMgaXQgaXNcbiAqIGRlc2lyYWJsZSBmb3IgdGhlIGNvbXBvbmVudCB0byByZW5kZXIgYWRkaXRpb25hbCBhdHRyaWJ1dGVzIG9uIHRoZSBob3N0IGVsZW1lbnQuIGA8SG9zdD5gXG4gKiBzZXJ2ZXJzIHRoYXQgcHVycG9zZS5cbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGNvbnN0IEhvc3Q6IEZ1bmN0aW9uQ29tcG9uZW50PEhUTUxBdHRyaWJ1dGVzPEhUTUxFbGVtZW50Pj4gPSB7IF9fYnJhbmRfXzogJ2hvc3QnIH0gYXMgYW55O1xuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGNvbnN0IFNraXBSZXJlbmRlcjogRnVuY3Rpb25Db21wb25lbnQ8e30+ID0geyBfX2JyYW5kX186ICdza2lwJyB9IGFzIGFueTtcbiJdfQ==","import { runtimeQrl } from './qrl';\n// <docs markdown=\"https://hackmd.io/m5DzCi5MTa26LuUj5t3HpQ#$\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fm5DzCi5MTa26LuUj5t3HpQ%3Fboth#$ instead)\n/**\n * Qwik Optimizer marker function.\n *\n * Use `$(...)` to tell Qwik Optimizer to extract the expression in `$(...)` into a lazy-loadable\n * resource referenced by `QRL`.\n *\n * See: `implicit$FirstArg` for additional `____$(...)` rules.\n *\n * In this example `$(...)` is used to capture the callback function of `onmousemove` into\n * lazy-loadable reference. This allows the code to refer to the function without actually\n * loading the function. In this example, the callback function does not get loaded until\n * `mousemove` event fires.\n *\n * ```typescript\n * onDocument(\n *   'mousemove',\n *   $(() => console.log('mousemove'))\n * );\n * ```\n *\n * In this code the Qwik Optimizer detects `$(...)` and transforms the code into:\n *\n * ```typescript\n * // FILE: <current file>\n * onDocument('mousemove', qrl('./chunk-abc.js', 'onMousemove'));\n *\n * // FILE: chunk-abc.js\n * export const onMousemove = () => console.log('mousemove');\n * ```\n *\n * ## Special Rules\n *\n * The Qwik Optimizer places special rules on functions that can be lazy-loaded.\n *\n * 1. The expression of the `$(expression)` function must be importable by the system.\n * (expression shows up in `import` or has `export`)\n * 2. If inlined function then all lexically captured values must be:\n *    - importable (vars shows up in `import` or has `export`)\n *    - const (The capturing process differs from JS capturing in that writing to captured\n * variables does not update them, and therefore writes are forbidden. The best practice is that\n * all captured variables are constants.)\n *    - Must be runtime serializable.\n *\n * ```typescript\n * import { importedFn } from './example';\n *\n * export const greet = () => console.log('greet');\n * function topLevelFn() {}\n *\n * function myCode() {\n *   const store = useStore({});\n *   function localFn() {}\n *   // Valid Examples\n *   $(greet); // greet is importable\n *   $(importedFn); // importedFn is importable\n *   $(() => greet()); // greet is importable;\n *   $(() => importedFn()); // importedFn is importable\n *   $(() => console.log(store)); // store is serializable.\n *\n *   // Compile time errors\n *   $(topLevelFn); // ERROR: `topLevelFn` not importable\n *   $(() => topLevelFn()); // ERROR: `topLevelFn` not importable\n *\n *   // Runtime errors\n *   $(localFn); // ERROR: `localFn` fails serialization\n *   $(() => localFn()); // ERROR: `localFn` fails serialization\n * }\n *\n * ```\n *\n * @param expression - Expression which should be lazy loaded\n * @public\n */\n// </docs>\nexport function $(expression) {\n    return runtimeQrl(expression);\n}\n// <docs markdown=\"https://hackmd.io/m5DzCi5MTa26LuUj5t3HpQ#implicit$FirstArg\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fm5DzCi5MTa26LuUj5t3HpQ%3Fboth#implicit$FirstArg instead)\n/**\n * Create a `____$(...)` convenience method from `___(...)`.\n *\n * It is very common for functions to take a lazy-loadable resource as a first argument. For this\n * reason, the Qwik Optimizer automatically extracts the first argument from any function which\n * ends in `$`.\n *\n * This means that `foo$(arg0)` and `foo($(arg0))` are equivalent with respect to Qwik Optimizer.\n * The former is just a shorthand for the latter.\n *\n * For example these function call are equivalent:\n *\n * - `component$(() => {...})` is same as `onRender($(() => {...}))`\n *\n * ```typescript\n * export function myApi(callback: QRL<() => void>): void {\n *   // ...\n * }\n *\n * export const myApi$ = implicit$FirstArg(myApi);\n * // type of myApi$: (callback: () => void): void\n *\n * // can be used as:\n * myApi$(() => console.log('callback'));\n *\n * // will be transpiled to:\n * // FILE: <current file>\n * myApi(qrl('./chunk-abc.js', 'callback'));\n *\n * // FILE: chunk-abc.js\n * export const callback = () => console.log('callback');\n * ```\n *\n * @param fn - function that should have its first argument automatically `$`.\n * @public\n */\n// </docs>\nexport function implicit$FirstArg(fn) {\n    return function (first, ...rest) {\n        return fn.call(null, $(first), ...rest);\n    };\n}\n//# sourceMappingURL=data:application/json;base64,","import { Host } from '../render/jsx/host.public';\nimport { getContext } from '../props/props';\nimport { smartUpdateChildren, updateProperties } from './cursor';\nexport function visitJsxNode(ctx, elm, jsxNode, isSvg) {\n    if (jsxNode === undefined) {\n        return smartUpdateChildren(ctx, elm, [], 'root', isSvg);\n    }\n    if (Array.isArray(jsxNode)) {\n        return smartUpdateChildren(ctx, elm, jsxNode.flat(), 'root', isSvg);\n    }\n    else if (jsxNode.type === Host) {\n        updateProperties(ctx, getContext(elm), jsxNode.props, isSvg);\n        return smartUpdateChildren(ctx, elm, jsxNode.children || [], 'root', isSvg);\n    }\n    else {\n        return smartUpdateChildren(ctx, elm, [jsxNode], 'root', isSvg);\n    }\n}\nexport function whileResolvingRender(...args) {\n    throw new Error('Function not implemented.' + args);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVuZGVyLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9yZW5kZXIvcmVuZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFNUMsT0FBTyxFQUFpQixtQkFBbUIsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUloRixNQUFNLFVBQVUsWUFBWSxDQUMxQixHQUFrQixFQUNsQixHQUFZLEVBQ1osT0FBd0MsRUFDeEMsS0FBYztJQUVkLElBQUksT0FBTyxLQUFLLFNBQVMsRUFBRTtRQUN6QixPQUFPLG1CQUFtQixDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztLQUN6RDtJQUNELElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtRQUMxQixPQUFPLG1CQUFtQixDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztLQUNyRTtTQUFNLElBQUksT0FBTyxDQUFDLElBQUksS0FBSyxJQUFJLEVBQUU7UUFDaEMsZ0JBQWdCLENBQUMsR0FBRyxFQUFFLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxPQUFPLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzdELE9BQU8sbUJBQW1CLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxPQUFPLENBQUMsUUFBUSxJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7S0FDN0U7U0FBTTtRQUNMLE9BQU8sbUJBQW1CLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxFQUFFLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztLQUNoRTtBQUNILENBQUM7QUFFRCxNQUFNLFVBQVUsb0JBQW9CLENBQ2xDLEdBQUcsSUFBdUQ7SUFFMUQsTUFBTSxJQUFJLEtBQUssQ0FBQywyQkFBMkIsR0FBRyxJQUFJLENBQUMsQ0FBQztBQUN0RCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSG9zdCB9IGZyb20gJy4uL3JlbmRlci9qc3gvaG9zdC5wdWJsaWMnO1xuaW1wb3J0IHsgZ2V0Q29udGV4dCB9IGZyb20gJy4uL3Byb3BzL3Byb3BzJztcbmltcG9ydCB0eXBlIHsgVmFsdWVPclByb21pc2UgfSBmcm9tICcuLi91dGlsL3R5cGVzJztcbmltcG9ydCB7IFJlbmRlckNvbnRleHQsIHNtYXJ0VXBkYXRlQ2hpbGRyZW4sIHVwZGF0ZVByb3BlcnRpZXMgfSBmcm9tICcuL2N1cnNvcic7XG5pbXBvcnQgdHlwZSB7IEpTWE5vZGUgfSBmcm9tICcuL2pzeC90eXBlcy9qc3gtbm9kZSc7XG5leHBvcnQgdHlwZSBDb21wb25lbnRSZW5kZXJRdWV1ZSA9IFByb21pc2U8SFRNTEVsZW1lbnRbXT5bXTtcblxuZXhwb3J0IGZ1bmN0aW9uIHZpc2l0SnN4Tm9kZShcbiAgY3R4OiBSZW5kZXJDb250ZXh0LFxuICBlbG06IEVsZW1lbnQsXG4gIGpzeE5vZGU6IEpTWE5vZGUgfCBKU1hOb2RlW10gfCB1bmRlZmluZWQsXG4gIGlzU3ZnOiBib29sZWFuXG4pOiBWYWx1ZU9yUHJvbWlzZTx2b2lkPiB7XG4gIGlmIChqc3hOb2RlID09PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gc21hcnRVcGRhdGVDaGlsZHJlbihjdHgsIGVsbSwgW10sICdyb290JywgaXNTdmcpO1xuICB9XG4gIGlmIChBcnJheS5pc0FycmF5KGpzeE5vZGUpKSB7XG4gICAgcmV0dXJuIHNtYXJ0VXBkYXRlQ2hpbGRyZW4oY3R4LCBlbG0sIGpzeE5vZGUuZmxhdCgpLCAncm9vdCcsIGlzU3ZnKTtcbiAgfSBlbHNlIGlmIChqc3hOb2RlLnR5cGUgPT09IEhvc3QpIHtcbiAgICB1cGRhdGVQcm9wZXJ0aWVzKGN0eCwgZ2V0Q29udGV4dChlbG0pLCBqc3hOb2RlLnByb3BzLCBpc1N2Zyk7XG4gICAgcmV0dXJuIHNtYXJ0VXBkYXRlQ2hpbGRyZW4oY3R4LCBlbG0sIGpzeE5vZGUuY2hpbGRyZW4gfHwgW10sICdyb290JywgaXNTdmcpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBzbWFydFVwZGF0ZUNoaWxkcmVuKGN0eCwgZWxtLCBbanN4Tm9kZV0sICdyb290JywgaXNTdmcpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3aGlsZVJlc29sdmluZ1JlbmRlcjxBUkdTIGV4dGVuZHMgYW55W10sIFJFVD4oXG4gIC4uLmFyZ3M6IFsuLi5BUkdTLCAoLi4uYXJnczogUmVzb2x2ZWRWYWx1ZXM8QVJHUz4pID0+IFJFVF1cbik6IFJFVCB7XG4gIHRocm93IG5ldyBFcnJvcignRnVuY3Rpb24gbm90IGltcGxlbWVudGVkLicgKyBhcmdzKTtcbn1cblxuZXhwb3J0IHR5cGUgUmVzb2x2ZWRWYWx1ZXM8QVJHUyBleHRlbmRzIGFueVtdPiA9IHtcbiAgW0sgaW4ga2V5b2YgQVJHU106IEFSR1NbS10gZXh0ZW5kcyBWYWx1ZU9yUHJvbWlzZTxpbmZlciBVPiA/IFUgOiBBUkdTW0tdO1xufTtcbiJdfQ==","export function hashCode(text, hash = 0) {\n    if (text.length === 0)\n        return hash;\n    for (let i = 0; i < text.length; i++) {\n        const chr = text.charCodeAt(i);\n        hash = (hash << 5) - hash + chr;\n        hash |= 0; // Convert to 32bit integer\n    }\n    return Number(Math.abs(hash)).toString(36);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFzaF9jb2RlLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS91dGlsL2hhc2hfY29kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLFVBQVUsUUFBUSxDQUFDLElBQVksRUFBRSxPQUFlLENBQUM7SUFDckQsSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLENBQUM7UUFBRSxPQUFPLElBQUksQ0FBQztJQUNuQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNwQyxNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQy9CLElBQUksR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLEdBQUcsR0FBRyxDQUFDO1FBQ2hDLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQywyQkFBMkI7S0FDdkM7SUFDRCxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQzdDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaGFzaENvZGUodGV4dDogc3RyaW5nLCBoYXNoOiBudW1iZXIgPSAwKSB7XG4gIGlmICh0ZXh0Lmxlbmd0aCA9PT0gMCkgcmV0dXJuIGhhc2g7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdGV4dC5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGNociA9IHRleHQuY2hhckNvZGVBdChpKTtcbiAgICBoYXNoID0gKGhhc2ggPDwgNSkgLSBoYXNoICsgY2hyO1xuICAgIGhhc2ggfD0gMDsgLy8gQ29udmVydCB0byAzMmJpdCBpbnRlZ2VyXG4gIH1cbiAgcmV0dXJuIE51bWJlcihNYXRoLmFicyhoYXNoKSkudG9TdHJpbmcoMzYpO1xufVxuIl19","import { ComponentStylesPrefixContent, ComponentStylesPrefixHost } from '../util/markers';\nimport { hashCode } from '../util/hash_code';\nexport function styleKey(qStyles) {\n    return qStyles && String(hashCode(qStyles.symbol));\n}\nexport function styleHost(styleId) {\n    return styleId && ComponentStylesPrefixHost + styleId;\n}\nexport function styleContent(styleId) {\n    return styleId && ComponentStylesPrefixContent + styleId;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXJsLXN0eWxlcy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvY29tcG9uZW50L3FybC1zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLDRCQUE0QixFQUFFLHlCQUF5QixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDMUYsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBTzdDLE1BQU0sVUFBVSxRQUFRLENBQUMsT0FBbUM7SUFDMUQsT0FBTyxPQUFPLElBQUksTUFBTSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztBQUNyRCxDQUFDO0FBT0QsTUFBTSxVQUFVLFNBQVMsQ0FBQyxPQUEyQjtJQUNuRCxPQUFPLE9BQU8sSUFBSSx5QkFBeUIsR0FBRyxPQUFPLENBQUM7QUFDeEQsQ0FBQztBQU9ELE1BQU0sVUFBVSxZQUFZLENBQUMsT0FBMkI7SUFDdEQsT0FBTyxPQUFPLElBQUksNEJBQTRCLEdBQUcsT0FBTyxDQUFDO0FBQzNELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFFSTEludGVybmFsIH0gZnJvbSAnLi4vaW1wb3J0L3FybC1jbGFzcyc7XG5pbXBvcnQgeyBDb21wb25lbnRTdHlsZXNQcmVmaXhDb250ZW50LCBDb21wb25lbnRTdHlsZXNQcmVmaXhIb3N0IH0gZnJvbSAnLi4vdXRpbC9tYXJrZXJzJztcbmltcG9ydCB7IGhhc2hDb2RlIH0gZnJvbSAnLi4vdXRpbC9oYXNoX2NvZGUnO1xuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlS2V5KHFTdHlsZXM6IFFSTEludGVybmFsPHN0cmluZz4pOiBzdHJpbmc7XG5leHBvcnQgZnVuY3Rpb24gc3R5bGVLZXkocVN0eWxlczogUVJMSW50ZXJuYWw8c3RyaW5nPiB8IG51bGwpOiBzdHJpbmcgfCBudWxsO1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlS2V5KHFTdHlsZXM6IFFSTEludGVybmFsPHN0cmluZz4gfCBudWxsKTogc3RyaW5nIHwgbnVsbCB7XG4gIHJldHVybiBxU3R5bGVzICYmIFN0cmluZyhoYXNoQ29kZShxU3R5bGVzLnN5bWJvbCkpO1xufVxuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlSG9zdChzdHlsZUlkOiBzdHJpbmcpOiBzdHJpbmc7XG5leHBvcnQgZnVuY3Rpb24gc3R5bGVIb3N0KHN0eWxlSWQ6IHN0cmluZyB8IHVuZGVmaW5lZCk6IHN0cmluZyB8IHVuZGVmaW5lZDtcbmV4cG9ydCBmdW5jdGlvbiBzdHlsZUhvc3Qoc3R5bGVJZDogc3RyaW5nIHwgdW5kZWZpbmVkKTogc3RyaW5nIHwgdW5kZWZpbmVkIHtcbiAgcmV0dXJuIHN0eWxlSWQgJiYgQ29tcG9uZW50U3R5bGVzUHJlZml4SG9zdCArIHN0eWxlSWQ7XG59XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgZnVuY3Rpb24gc3R5bGVDb250ZW50KHN0eWxlSWQ6IHN0cmluZyk6IHN0cmluZztcbmV4cG9ydCBmdW5jdGlvbiBzdHlsZUNvbnRlbnQoc3R5bGVJZDogc3RyaW5nIHwgdW5kZWZpbmVkKTogc3RyaW5nIHwgdW5kZWZpbmVkO1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlQ29udGVudChzdHlsZUlkOiBzdHJpbmcgfCB1bmRlZmluZWQpOiBzdHJpbmcgfCB1bmRlZmluZWQge1xuICByZXR1cm4gc3R5bGVJZCAmJiBDb21wb25lbnRTdHlsZXNQcmVmaXhDb250ZW50ICsgc3R5bGVJZDtcbn1cbiJdfQ==","import { qDev } from '../../util/qdev';\nimport { Host, SkipRerender } from './host.public';\nimport { EMPTY_ARRAY } from '../../util/flyweight';\nimport { logWarn } from '../../util/log';\n/**\n * @public\n */\nexport function jsx(type, props, key) {\n    return new JSXNodeImpl(type, props, key);\n}\nexport class JSXNodeImpl {\n    constructor(type, props, key = null) {\n        this.type = type;\n        this.props = props;\n        this.children = EMPTY_ARRAY;\n        this.text = undefined;\n        this.key = null;\n        if (key != null) {\n            this.key = String(key);\n        }\n        if (props) {\n            const children = processNode(props.children);\n            if (children !== undefined) {\n                if (Array.isArray(children)) {\n                    this.children = children;\n                }\n                else {\n                    this.children = [children];\n                }\n            }\n        }\n    }\n}\nexport function processNode(node) {\n    if (node == null || typeof node === 'boolean') {\n        return undefined;\n    }\n    if (isJSXNode(node)) {\n        if (node.type === Host || node.type === SkipRerender) {\n            return node;\n        }\n        else if (typeof node.type === 'function') {\n            return processNode(node.type({ ...node.props, children: node.children }, node.key));\n        }\n        else {\n            return node;\n        }\n    }\n    else if (Array.isArray(node)) {\n        return node.flatMap(processNode).filter((e) => e != null);\n    }\n    else if (typeof node === 'string' || typeof node === 'number' || typeof node === 'boolean') {\n        const newNode = new JSXNodeImpl('#text', null, null);\n        newNode.text = String(node);\n        return newNode;\n    }\n    else {\n        logWarn('Unvalid node, skipping');\n        return undefined;\n    }\n}\nexport const isJSXNode = (n) => {\n    if (qDev) {\n        if (n instanceof JSXNodeImpl) {\n            return true;\n        }\n        if (n && typeof n === 'object' && n.constructor.name === JSXNodeImpl.name) {\n            throw new Error(`Duplicate implementations of \"JSXNodeImpl\" found`);\n        }\n        return false;\n    }\n    else {\n        return n instanceof JSXNodeImpl;\n    }\n};\n/**\n * @public\n */\nexport const Fragment = (props) => props.children;\nexport { jsx as jsxs, jsx as jsxDEV };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianN4LXJ1bnRpbWUuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3JlbmRlci9qc3gvanN4LXJ1bnRpbWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFekM7O0dBRUc7QUFDSCxNQUFNLFVBQVUsR0FBRyxDQUNqQixJQUFPLEVBQ1AsS0FBWSxFQUNaLEdBQXFCO0lBRXJCLE9BQU8sSUFBSSxXQUFXLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxHQUFHLENBQVEsQ0FBQztBQUNsRCxDQUFDO0FBRUQsTUFBTSxPQUFPLFdBQVc7SUFLdEIsWUFDUyxJQUFPLEVBQ1AsS0FBaUMsRUFDeEMsTUFBOEIsSUFBSTtRQUYzQixTQUFJLEdBQUosSUFBSSxDQUFHO1FBQ1AsVUFBSyxHQUFMLEtBQUssQ0FBNEI7UUFOMUMsYUFBUSxHQUFjLFdBQVcsQ0FBQztRQUNsQyxTQUFJLEdBQXdCLFNBQVMsQ0FBQztRQUN0QyxRQUFHLEdBQWtCLElBQUksQ0FBQztRQU94QixJQUFJLEdBQUcsSUFBSSxJQUFJLEVBQUU7WUFDZixJQUFJLENBQUMsR0FBRyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUN4QjtRQUNELElBQUksS0FBSyxFQUFFO1lBQ1QsTUFBTSxRQUFRLEdBQUcsV0FBVyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUM3QyxJQUFJLFFBQVEsS0FBSyxTQUFTLEVBQUU7Z0JBQzFCLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRTtvQkFDM0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7aUJBQzFCO3FCQUFNO29CQUNMLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztpQkFDNUI7YUFDRjtTQUNGO0lBQ0gsQ0FBQztDQUNGO0FBRUQsTUFBTSxVQUFVLFdBQVcsQ0FBQyxJQUFTO0lBQ25DLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxPQUFPLElBQUksS0FBSyxTQUFTLEVBQUU7UUFDN0MsT0FBTyxTQUFTLENBQUM7S0FDbEI7SUFDRCxJQUFJLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUNuQixJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssWUFBWSxFQUFFO1lBQ3BELE9BQU8sSUFBSSxDQUFDO1NBQ2I7YUFBTSxJQUFJLE9BQU8sSUFBSSxDQUFDLElBQUksS0FBSyxVQUFVLEVBQUU7WUFDMUMsT0FBTyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1NBQ3JGO2FBQU07WUFDTCxPQUFPLElBQUksQ0FBQztTQUNiO0tBQ0Y7U0FBTSxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUU7UUFDOUIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBYyxDQUFDO0tBQ3hFO1NBQU0sSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLElBQUksT0FBTyxJQUFJLEtBQUssUUFBUSxJQUFJLE9BQU8sSUFBSSxLQUFLLFNBQVMsRUFBRTtRQUM1RixNQUFNLE9BQU8sR0FBRyxJQUFJLFdBQVcsQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3JELE9BQU8sQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzVCLE9BQU8sT0FBTyxDQUFDO0tBQ2hCO1NBQU07UUFDTCxPQUFPLENBQUMsd0JBQXdCLENBQUMsQ0FBQztRQUNsQyxPQUFPLFNBQVMsQ0FBQztLQUNsQjtBQUNILENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsQ0FBQyxDQUFNLEVBQXlCLEVBQUU7SUFDekQsSUFBSSxJQUFJLEVBQUU7UUFDUixJQUFJLENBQUMsWUFBWSxXQUFXLEVBQUU7WUFDNUIsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELElBQUksQ0FBQyxJQUFJLE9BQU8sQ0FBQyxLQUFLLFFBQVEsSUFBSSxDQUFDLENBQUMsV0FBVyxDQUFDLElBQUksS0FBSyxXQUFXLENBQUMsSUFBSSxFQUFFO1lBQ3pFLE1BQU0sSUFBSSxLQUFLLENBQUMsa0RBQWtELENBQUMsQ0FBQztTQUNyRTtRQUNELE9BQU8sS0FBSyxDQUFDO0tBQ2Q7U0FBTTtRQUNMLE9BQU8sQ0FBQyxZQUFZLFdBQVcsQ0FBQztLQUNqQztBQUNILENBQUMsQ0FBQztBQUVGOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUEwQyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLFFBQWUsQ0FBQztBQUloRyxPQUFPLEVBQUUsR0FBRyxJQUFJLElBQUksRUFBRSxHQUFHLElBQUksTUFBTSxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IEZ1bmN0aW9uQ29tcG9uZW50LCBKU1hOb2RlIH0gZnJvbSAnLi90eXBlcy9qc3gtbm9kZSc7XG5pbXBvcnQgdHlwZSB7IFF3aWtKU1ggfSBmcm9tICcuL3R5cGVzL2pzeC1xd2lrJztcbmltcG9ydCB7IHFEZXYgfSBmcm9tICcuLi8uLi91dGlsL3FkZXYnO1xuaW1wb3J0IHsgSG9zdCwgU2tpcFJlcmVuZGVyIH0gZnJvbSAnLi9ob3N0LnB1YmxpYyc7XG5pbXBvcnQgeyBFTVBUWV9BUlJBWSB9IGZyb20gJy4uLy4uL3V0aWwvZmx5d2VpZ2h0JztcbmltcG9ydCB7IGxvZ1dhcm4gfSBmcm9tICcuLi8uLi91dGlsL2xvZyc7XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgZnVuY3Rpb24ganN4PFQgZXh0ZW5kcyBzdHJpbmcgfCBGdW5jdGlvbkNvbXBvbmVudDxQUk9QUz4sIFBST1BTPihcbiAgdHlwZTogVCxcbiAgcHJvcHM6IFBST1BTLFxuICBrZXk/OiBzdHJpbmcgfCBudW1iZXJcbik6IEpTWE5vZGU8VD4ge1xuICByZXR1cm4gbmV3IEpTWE5vZGVJbXBsKHR5cGUsIHByb3BzLCBrZXkpIGFzIGFueTtcbn1cblxuZXhwb3J0IGNsYXNzIEpTWE5vZGVJbXBsPFQ+IGltcGxlbWVudHMgSlNYTm9kZTxUPiB7XG4gIGNoaWxkcmVuOiBKU1hOb2RlW10gPSBFTVBUWV9BUlJBWTtcbiAgdGV4dD86IHN0cmluZyB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZDtcbiAga2V5OiBzdHJpbmcgfCBudWxsID0gbnVsbDtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgdHlwZTogVCxcbiAgICBwdWJsaWMgcHJvcHM6IFJlY29yZDxzdHJpbmcsIGFueT4gfCBudWxsLFxuICAgIGtleTogc3RyaW5nIHwgbnVtYmVyIHwgbnVsbCA9IG51bGxcbiAgKSB7XG4gICAgaWYgKGtleSAhPSBudWxsKSB7XG4gICAgICB0aGlzLmtleSA9IFN0cmluZyhrZXkpO1xuICAgIH1cbiAgICBpZiAocHJvcHMpIHtcbiAgICAgIGNvbnN0IGNoaWxkcmVuID0gcHJvY2Vzc05vZGUocHJvcHMuY2hpbGRyZW4pO1xuICAgICAgaWYgKGNoaWxkcmVuICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pKSB7XG4gICAgICAgICAgdGhpcy5jaGlsZHJlbiA9IGNoaWxkcmVuO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuY2hpbGRyZW4gPSBbY2hpbGRyZW5dO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwcm9jZXNzTm9kZShub2RlOiBhbnkpOiBKU1hOb2RlW10gfCBKU1hOb2RlIHwgdW5kZWZpbmVkIHtcbiAgaWYgKG5vZGUgPT0gbnVsbCB8fCB0eXBlb2Ygbm9kZSA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuICBpZiAoaXNKU1hOb2RlKG5vZGUpKSB7XG4gICAgaWYgKG5vZGUudHlwZSA9PT0gSG9zdCB8fCBub2RlLnR5cGUgPT09IFNraXBSZXJlbmRlcikge1xuICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfSBlbHNlIGlmICh0eXBlb2Ygbm9kZS50eXBlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXR1cm4gcHJvY2Vzc05vZGUobm9kZS50eXBlKHsgLi4ubm9kZS5wcm9wcywgY2hpbGRyZW46IG5vZGUuY2hpbGRyZW4gfSwgbm9kZS5rZXkpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfVxuICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkobm9kZSkpIHtcbiAgICByZXR1cm4gbm9kZS5mbGF0TWFwKHByb2Nlc3NOb2RlKS5maWx0ZXIoKGUpID0+IGUgIT0gbnVsbCkgYXMgSlNYTm9kZVtdO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBub2RlID09PSAnc3RyaW5nJyB8fCB0eXBlb2Ygbm9kZSA9PT0gJ251bWJlcicgfHwgdHlwZW9mIG5vZGUgPT09ICdib29sZWFuJykge1xuICAgIGNvbnN0IG5ld05vZGUgPSBuZXcgSlNYTm9kZUltcGwoJyN0ZXh0JywgbnVsbCwgbnVsbCk7XG4gICAgbmV3Tm9kZS50ZXh0ID0gU3RyaW5nKG5vZGUpO1xuICAgIHJldHVybiBuZXdOb2RlO1xuICB9IGVsc2Uge1xuICAgIGxvZ1dhcm4oJ1VudmFsaWQgbm9kZSwgc2tpcHBpbmcnKTtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG59XG5cbmV4cG9ydCBjb25zdCBpc0pTWE5vZGUgPSAobjogYW55KTogbiBpcyBKU1hOb2RlPHVua25vd24+ID0+IHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAobiBpbnN0YW5jZW9mIEpTWE5vZGVJbXBsKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKG4gJiYgdHlwZW9mIG4gPT09ICdvYmplY3QnICYmIG4uY29uc3RydWN0b3IubmFtZSA9PT0gSlNYTm9kZUltcGwubmFtZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBEdXBsaWNhdGUgaW1wbGVtZW50YXRpb25zIG9mIFwiSlNYTm9kZUltcGxcIiBmb3VuZGApO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIG4gaW5zdGFuY2VvZiBKU1hOb2RlSW1wbDtcbiAgfVxufTtcblxuLyoqXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBjb25zdCBGcmFnbWVudDogRnVuY3Rpb25Db21wb25lbnQ8eyBjaGlsZHJlbj86IGFueSB9PiA9IChwcm9wcykgPT4gcHJvcHMuY2hpbGRyZW4gYXMgYW55O1xuXG5leHBvcnQgdHlwZSB7IFF3aWtKU1ggYXMgSlNYIH07XG5cbmV4cG9ydCB7IGpzeCBhcyBqc3hzLCBqc3ggYXMganN4REVWIH07XG4iXX0=","import { assertDefined } from '../assert/assert';\nimport { appendStyle } from '../render/cursor';\nimport { visitJsxNode } from '../render/render';\nimport { ComponentScopedStyles, QHostAttr, RenderEvent } from '../util/markers';\nimport { promiseAll, then } from '../util/promises';\nimport { styleContent, styleHost } from './qrl-styles';\nimport { isStyleTask, newInvokeContext } from '../use/use-core';\nimport { getProps } from '../props/props';\nimport { processNode } from '../render/jsx/jsx-runtime';\nimport { wrapSubscriber } from '../use/use-subscriber';\nimport { logDebug } from '../util/log';\nimport { removeSub } from '../object/q-object';\nexport const firstRenderComponent = (rctx, ctx) => {\n    ctx.element.setAttribute(QHostAttr, '');\n    return renderComponent(rctx, ctx);\n};\nexport const renderComponent = (rctx, ctx) => {\n    const hostElement = ctx.element;\n    const onRenderQRL = ctx.renderQrl;\n    assertDefined(onRenderQRL);\n    // Component is not dirty any more\n    ctx.dirty = false;\n    rctx.globalState.hostsStaging.delete(hostElement);\n    // Invoke render hook\n    const invocatinContext = newInvokeContext(rctx.doc, hostElement, hostElement, RenderEvent);\n    invocatinContext.subscriber = hostElement;\n    const waitOn = (invocatinContext.waitOn = []);\n    // Clean current subscription before render\n    ctx.refMap.array.forEach((obj) => {\n        removeSub(obj, hostElement);\n    });\n    const onRenderFn = onRenderQRL.invokeFn(rctx.containerEl, invocatinContext);\n    // Execution of the render function\n    const renderPromise = onRenderFn(wrapSubscriber(getProps(ctx), hostElement));\n    // Wait for results\n    return then(renderPromise, (jsxNode) => {\n        rctx.hostElements.add(hostElement);\n        const waitOnPromise = promiseAll(waitOn);\n        return then(waitOnPromise, (waitOnResolved) => {\n            waitOnResolved.forEach((task) => {\n                if (isStyleTask(task)) {\n                    appendStyle(rctx, hostElement, task);\n                }\n            });\n            if (ctx.dirty) {\n                logDebug('Dropping render. State changed during render.');\n                return renderComponent(rctx, ctx);\n            }\n            let componentCtx = ctx.component;\n            if (!componentCtx) {\n                componentCtx = ctx.component = {\n                    hostElement,\n                    slots: [],\n                    styleHostClass: undefined,\n                    styleClass: undefined,\n                    styleId: undefined,\n                };\n                const scopedStyleId = hostElement.getAttribute(ComponentScopedStyles) ?? undefined;\n                if (scopedStyleId) {\n                    componentCtx.styleId = scopedStyleId;\n                    componentCtx.styleHostClass = styleHost(scopedStyleId);\n                    componentCtx.styleClass = styleContent(scopedStyleId);\n                    hostElement.classList.add(componentCtx.styleHostClass);\n                }\n            }\n            componentCtx.slots = [];\n            const newCtx = {\n                ...rctx,\n                component: componentCtx,\n            };\n            return visitJsxNode(newCtx, hostElement, processNode(jsxNode), false);\n        });\n    });\n};\n//# sourceMappingURL=data:application/json;base64,","import { OnRenderProp, QSlotAttr } from '../util/markers';\nimport { getContext, getProps, setEvent } from '../props/props';\nimport { isOn$Prop, isOnProp } from '../props/props-on';\nimport { Host } from '../render/jsx/host.public';\nimport { $ } from '../import/qrl.public';\nimport { firstRenderComponent, renderComponent } from '../component/component-ctx';\nimport { promiseAll, then } from '../util/promises';\nimport { assertDefined, assertEqual } from '../assert/assert';\nimport { NodeType } from '../util/types';\nimport { intToStr } from '../object/store';\nimport { EMPTY_ARRAY } from '../util/flyweight';\nimport { SkipRerender } from './jsx/host.public';\nimport { logDebug, logError, logWarn } from '../util/log';\nimport { qDev } from '../util/qdev';\nimport { qError, QError } from '../error/error';\nimport { fromCamelToKebabCase } from '../util/case';\nimport { CONTAINER } from '../use/use-core';\nexport const SVG_NS = 'http://www.w3.org/2000/svg';\nexport function smartUpdateChildren(ctx, elm, ch, mode, isSvg) {\n    if (ch.length === 1 && ch[0].type === SkipRerender) {\n        if (elm.firstChild !== null) {\n            return;\n        }\n        ch = ch[0].children;\n    }\n    const oldCh = getChildren(elm, mode);\n    if (oldCh.length > 0 && ch.length > 0) {\n        return updateChildren(ctx, elm, oldCh, ch, isSvg);\n    }\n    else if (ch.length > 0) {\n        return addVnodes(ctx, elm, undefined, ch, 0, ch.length - 1, isSvg);\n    }\n    else if (oldCh.length > 0) {\n        return removeVnodes(ctx, elm, oldCh, 0, oldCh.length - 1);\n    }\n}\nexport function updateChildren(ctx, parentElm, oldCh, newCh, isSvg) {\n    let oldStartIdx = 0;\n    let newStartIdx = 0;\n    let oldEndIdx = oldCh.length - 1;\n    let oldStartVnode = oldCh[0];\n    let oldEndVnode = oldCh[oldEndIdx];\n    let newEndIdx = newCh.length - 1;\n    let newStartVnode = newCh[0];\n    let newEndVnode = newCh[newEndIdx];\n    let oldKeyToIdx;\n    let idxInOld;\n    let elmToMove;\n    const results = [];\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (oldStartVnode == null) {\n            oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left\n        }\n        else if (oldEndVnode == null) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (newStartVnode == null) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (newEndVnode == null) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldStartVnode, newStartVnode)) {\n            results.push(patchVnode(ctx, oldStartVnode, newStartVnode, isSvg));\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (sameVnode(oldEndVnode, newEndVnode)) {\n            results.push(patchVnode(ctx, oldEndVnode, newEndVnode, isSvg));\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldStartVnode, newEndVnode)) {\n            // Vnode moved right\n            results.push(patchVnode(ctx, oldStartVnode, newEndVnode, isSvg));\n            insertBefore(ctx, parentElm, oldStartVnode, oldEndVnode.nextSibling);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldEndVnode, newStartVnode)) {\n            // Vnode moved left\n            results.push(patchVnode(ctx, oldEndVnode, newStartVnode, isSvg));\n            insertBefore(ctx, parentElm, oldEndVnode, oldStartVnode);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            if (oldKeyToIdx === undefined) {\n                oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n            }\n            idxInOld = oldKeyToIdx[newStartVnode.key];\n            if (idxInOld === undefined) {\n                // New element\n                const newElm = createElm(ctx, newStartVnode, isSvg);\n                results.push(then(newElm, (newElm) => {\n                    insertBefore(ctx, parentElm, newElm, oldStartVnode);\n                }));\n            }\n            else {\n                elmToMove = oldCh[idxInOld];\n                if (elmToMove.nodeName !== newStartVnode.type) {\n                    const newElm = createElm(ctx, newStartVnode, isSvg);\n                    results.push(then(newElm, (newElm) => {\n                        insertBefore(ctx, parentElm, newElm, oldStartVnode);\n                    }));\n                }\n                else {\n                    results.push(patchVnode(ctx, elmToMove, newStartVnode, isSvg));\n                    oldCh[idxInOld] = undefined;\n                    insertBefore(ctx, parentElm, elmToMove, oldStartVnode);\n                }\n            }\n            newStartVnode = newCh[++newStartIdx];\n        }\n    }\n    if (newStartIdx <= newEndIdx) {\n        const before = newCh[newEndIdx + 1] == null ? undefined : newCh[newEndIdx + 1].elm;\n        results.push(addVnodes(ctx, parentElm, before, newCh, newStartIdx, newEndIdx, isSvg));\n    }\n    let wait = promiseAll(results);\n    if (oldStartIdx <= oldEndIdx) {\n        wait = then(wait, () => {\n            removeVnodes(ctx, parentElm, oldCh, oldStartIdx, oldEndIdx);\n        });\n    }\n    return wait;\n}\nfunction isComponentNode(node) {\n    return node.props && OnRenderProp in node.props;\n}\nfunction getCh(elm) {\n    return Array.from(elm.childNodes).filter(isNode);\n}\nexport function getChildren(elm, mode) {\n    switch (mode) {\n        case 'default':\n            return getCh(elm);\n        case 'slot':\n            return getCh(elm).filter(isChildSlot);\n        case 'root':\n            return getCh(elm).filter(isChildComponent);\n        case 'fallback':\n            return getCh(elm).filter(isFallback);\n    }\n}\nexport function isNode(elm) {\n    return elm.nodeType === 1 || elm.nodeType === 3;\n}\nfunction isFallback(node) {\n    return node.nodeName === 'Q:FALLBACK';\n}\nfunction isChildSlot(node) {\n    return node.nodeName !== 'Q:FALLBACK' && isChildComponent(node);\n}\nfunction isSlotTemplate(node) {\n    return node.nodeName === 'TEMPLATE' && node.hasAttribute(QSlotAttr);\n}\nfunction isChildComponent(node) {\n    return node.nodeName !== 'TEMPLATE' || !node.hasAttribute(QSlotAttr);\n}\nfunction splitBy(input, condition) {\n    const output = {};\n    for (const item of input) {\n        const key = condition(item);\n        const array = output[key] ?? (output[key] = []);\n        array.push(item);\n    }\n    return output;\n}\nexport function patchVnode(rctx, elm, vnode, isSvg) {\n    rctx.perf.visited++;\n    vnode.elm = elm;\n    const tag = vnode.type;\n    if (tag === '#text') {\n        if (elm.data !== vnode.text) {\n            setProperty(rctx, elm, 'data', vnode.text);\n        }\n        return;\n    }\n    if (tag === Host || tag === SkipRerender) {\n        return;\n    }\n    if (!isSvg) {\n        isSvg = tag === 'svg';\n    }\n    let promise;\n    const props = vnode.props;\n    const ctx = getContext(elm);\n    const dirty = updateProperties(rctx, ctx, props, isSvg);\n    const isSlot = tag === 'q:slot';\n    if (isSvg && vnode.type === 'foreignObject') {\n        isSvg = false;\n    }\n    else if (isSlot) {\n        rctx.component.slots.push(vnode);\n    }\n    const isComponent = isComponentNode(vnode);\n    if (dirty) {\n        promise = renderComponent(rctx, ctx);\n    }\n    const ch = vnode.children;\n    if (isComponent) {\n        return then(promise, () => {\n            const slotMaps = getSlots(ctx.component, elm);\n            const splittedChidren = splitBy(ch, getSlotName);\n            const promises = [];\n            // Mark empty slots and remove content\n            Object.entries(slotMaps.slots).forEach(([key, slotEl]) => {\n                if (slotEl && !splittedChidren[key]) {\n                    const oldCh = getChildren(slotEl, 'slot');\n                    if (oldCh.length > 0) {\n                        removeVnodes(rctx, slotEl, oldCh, 0, oldCh.length - 1);\n                    }\n                }\n            });\n            // Render into slots\n            Object.entries(splittedChidren).forEach(([key, ch]) => {\n                const slotElm = getSlotElement(rctx, slotMaps, elm, key);\n                promises.push(smartUpdateChildren(rctx, slotElm, ch, 'slot', isSvg));\n            });\n            return then(promiseAll(promises), () => {\n                removeTemplates(rctx, slotMaps);\n            });\n        });\n    }\n    const setsInnerHTML = checkInnerHTML(props);\n    if (setsInnerHTML) {\n        if (qDev && ch.length > 0) {\n            logWarn('Node can not have children when innerHTML is set');\n        }\n        return;\n    }\n    return then(promise, () => {\n        const mode = isSlot ? 'fallback' : 'default';\n        return smartUpdateChildren(rctx, elm, ch, mode, isSvg);\n    });\n}\nfunction addVnodes(ctx, parentElm, before, vnodes, startIdx, endIdx, isSvg) {\n    const promises = [];\n    for (; startIdx <= endIdx; ++startIdx) {\n        const ch = vnodes[startIdx];\n        assertDefined(ch);\n        promises.push(createElm(ctx, ch, isSvg));\n    }\n    return then(promiseAll(promises), (children) => {\n        for (const child of children) {\n            insertBefore(ctx, parentElm, child, before);\n        }\n    });\n}\nfunction removeVnodes(ctx, parentElm, nodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n        const ch = nodes[startIdx];\n        assertDefined(ch);\n        removeNode(ctx, ch);\n    }\n}\nlet refCount = 0;\nconst RefSymbol = Symbol();\nfunction setSlotRef(ctx, hostElm, slotEl) {\n    let ref = hostElm[RefSymbol] ?? hostElm.getAttribute('q:sref');\n    if (ref === null) {\n        ref = intToStr(refCount++);\n        hostElm[RefSymbol] = ref;\n        setAttribute(ctx, hostElm, 'q:sref', ref);\n    }\n    slotEl.setAttribute('q:sref', ref);\n}\nfunction getSlotElement(ctx, slotMaps, parentEl, slotName) {\n    const slotEl = slotMaps.slots[slotName];\n    if (slotEl) {\n        return slotEl;\n    }\n    const templateEl = slotMaps.templates[slotName];\n    if (templateEl) {\n        return templateEl.content;\n    }\n    const template = createTemplate(ctx, slotName);\n    prepend(ctx, parentEl, template);\n    slotMaps.templates[slotName] = template;\n    return template.content;\n}\nfunction createTemplate(ctx, slotName) {\n    const template = createElement(ctx, 'template', false);\n    template.setAttribute(QSlotAttr, slotName);\n    return template;\n}\nfunction removeTemplates(ctx, slotMaps) {\n    Object.keys(slotMaps.templates).forEach((key) => {\n        const template = slotMaps.templates[key];\n        if (template && slotMaps.slots[key] !== undefined) {\n            removeNode(ctx, template);\n            slotMaps.templates[key] = undefined;\n        }\n    });\n}\nexport function resolveSlotProjection(ctx, hostElm, before, after) {\n    Object.entries(before.slots).forEach(([key, slotEl]) => {\n        if (slotEl && !after.slots[key]) {\n            // Slot removed\n            // Move slot to template\n            const template = createTemplate(ctx, key);\n            const slotChildren = getChildren(slotEl, 'slot');\n            template.content.append(...slotChildren);\n            hostElm.insertBefore(template, hostElm.firstChild);\n            ctx.operations.push({\n                el: template,\n                operation: 'slot-to-template',\n                args: slotChildren,\n                fn: () => { },\n            });\n        }\n    });\n    Object.entries(after.slots).forEach(([key, slotEl]) => {\n        if (slotEl && !before.slots[key]) {\n            // Slot created\n            // Move template to slot\n            const template = before.templates[key];\n            if (template) {\n                slotEl.appendChild(template.content);\n                template.remove();\n                ctx.operations.push({\n                    el: slotEl,\n                    operation: 'template-to-slot',\n                    args: [template],\n                    fn: () => { },\n                });\n            }\n        }\n    });\n}\nfunction getSlotName(node) {\n    return node.props?.['q:slot'] ?? '';\n}\nfunction createElm(rctx, vnode, isSvg) {\n    rctx.perf.visited++;\n    const tag = vnode.type;\n    if (tag === '#text') {\n        return (vnode.elm = createTextNode(rctx, vnode.text));\n    }\n    if (!isSvg) {\n        isSvg = tag === 'svg';\n    }\n    const props = vnode.props;\n    const elm = (vnode.elm = createElement(rctx, tag, isSvg));\n    const isComponent = isComponentNode(vnode);\n    const ctx = getContext(elm);\n    setKey(elm, vnode.key);\n    updateProperties(rctx, ctx, props, isSvg);\n    if (isSvg && tag === 'foreignObject') {\n        isSvg = false;\n    }\n    const currentComponent = rctx.component;\n    if (currentComponent) {\n        const styleTag = currentComponent.styleClass;\n        if (styleTag) {\n            classlistAdd(rctx, elm, styleTag);\n        }\n        if (tag === 'q:slot') {\n            setSlotRef(rctx, currentComponent.hostElement, elm);\n            rctx.component.slots.push(vnode);\n        }\n    }\n    let wait;\n    if (isComponent) {\n        // Run mount hook\n        const renderQRL = props[OnRenderProp];\n        ctx.renderQrl = renderQRL;\n        ctx.refMap.add(renderQRL);\n        wait = firstRenderComponent(rctx, ctx);\n    }\n    else {\n        const setsInnerHTML = checkInnerHTML(props);\n        if (setsInnerHTML) {\n            if (qDev && vnode.children.length > 0) {\n                logWarn('Node can not have children when innerHTML is set');\n            }\n            return elm;\n        }\n    }\n    return then(wait, () => {\n        let children = vnode.children;\n        if (children.length > 0) {\n            if (children.length === 1 && children[0].type === SkipRerender) {\n                children = children[0].children;\n            }\n            const slotMap = isComponent ? getSlots(ctx.component, elm) : undefined;\n            const promises = children.map((ch) => createElm(rctx, ch, isSvg));\n            return then(promiseAll(promises), () => {\n                let parent = elm;\n                for (const node of children) {\n                    if (slotMap) {\n                        parent = getSlotElement(rctx, slotMap, elm, getSlotName(node));\n                    }\n                    parent.appendChild(node.elm);\n                }\n                return elm;\n            });\n        }\n        return elm;\n    });\n}\nconst getSlots = (componentCtx, hostElm) => {\n    const slots = {};\n    const templates = {};\n    const slotRef = hostElm.getAttribute('q:sref');\n    const existingSlots = Array.from(hostElm.querySelectorAll(`q\\\\:slot[q\\\\:sref=\"${slotRef}\"]`));\n    const newSlots = componentCtx?.slots ?? EMPTY_ARRAY;\n    const t = Array.from(hostElm.childNodes).filter(isSlotTemplate);\n    // Map slots\n    for (const elm of existingSlots) {\n        slots[elm.getAttribute('name') ?? ''] = elm;\n    }\n    // Map virtual slots\n    for (const vnode of newSlots) {\n        slots[vnode.props?.name ?? ''] = vnode.elm;\n    }\n    // Map templates\n    for (const elm of t) {\n        templates[elm.getAttribute('q:slot') ?? ''] = elm;\n    }\n    return { slots, templates };\n};\nconst handleStyle = (ctx, elm, _, newValue) => {\n    setAttribute(ctx, elm, 'style', stringifyClassOrStyle(newValue, false));\n    return true;\n};\nconst handleClass = (ctx, elm, _, newValue) => {\n    setAttribute(ctx, elm, 'class', stringifyClassOrStyle(newValue, true));\n    return true;\n};\nconst checkBeforeAssign = (ctx, elm, prop, newValue) => {\n    if (prop in elm) {\n        if (elm[prop] !== newValue) {\n            setProperty(ctx, elm, prop, newValue);\n        }\n    }\n    return true;\n};\nconst dangerouslySetInnerHTML = 'dangerouslySetInnerHTML';\nconst setInnerHTML = (ctx, elm, _, newValue) => {\n    if (dangerouslySetInnerHTML in elm) {\n        setProperty(ctx, elm, dangerouslySetInnerHTML, newValue);\n    }\n    else if ('innerHTML' in elm) {\n        setProperty(ctx, elm, 'innerHTML', newValue);\n    }\n    return true;\n};\nconst PROP_HANDLER_MAP = {\n    style: handleStyle,\n    class: handleClass,\n    className: handleClass,\n    value: checkBeforeAssign,\n    checked: checkBeforeAssign,\n    [dangerouslySetInnerHTML]: setInnerHTML,\n};\nconst ALLOWS_PROPS = ['class', 'className', 'style', 'id', 'q:slot'];\nconst HOST_PREFIX = 'host:';\nexport function updateProperties(rctx, ctx, expectProps, isSvg) {\n    if (!expectProps) {\n        return false;\n    }\n    const elm = ctx.element;\n    const qwikProps = OnRenderProp in expectProps ? getProps(ctx) : undefined;\n    for (let key of Object.keys(expectProps)) {\n        if (key === 'children' || key === OnRenderProp) {\n            continue;\n        }\n        const newValue = expectProps[key];\n        if (key === 'ref') {\n            newValue.current = elm;\n            continue;\n        }\n        // Early exit if value didnt change\n        const oldValue = ctx.cache.get(key);\n        if (newValue === oldValue) {\n            continue;\n        }\n        ctx.cache.set(key, newValue);\n        // Check of data- or aria-\n        if (key.startsWith('data-') || key.startsWith('aria-')) {\n            setAttribute(rctx, elm, key, newValue);\n            continue;\n        }\n        if (qwikProps) {\n            const skipProperty = ALLOWS_PROPS.includes(key);\n            const hPrefixed = key.startsWith(HOST_PREFIX);\n            if (!skipProperty && !hPrefixed) {\n                // Qwik props\n                qwikProps[key] = newValue;\n                continue;\n            }\n            if (hPrefixed) {\n                key = key.slice(HOST_PREFIX.length);\n            }\n        }\n        else if (qDev && key.startsWith(HOST_PREFIX)) {\n            logWarn(`${HOST_PREFIX} prefix can not be used in non components`);\n            continue;\n        }\n        if (isOnProp(key)) {\n            setEvent(rctx, ctx, key.slice(0, -3), newValue);\n            continue;\n        }\n        if (isOn$Prop(key)) {\n            setEvent(rctx, ctx, key.slice(0, -1), $(newValue));\n            continue;\n        }\n        // Check if its an exception\n        const exception = PROP_HANDLER_MAP[key];\n        if (exception) {\n            if (exception(rctx, elm, key, newValue, oldValue)) {\n                continue;\n            }\n        }\n        // Check if property in prototype\n        if (!isSvg && key in elm) {\n            setProperty(rctx, elm, key, newValue);\n            continue;\n        }\n        // Fallback to render attribute\n        setAttribute(rctx, elm, key, newValue);\n    }\n    return ctx.dirty;\n}\nexport const startEvent = (ctx, name) => {\n    const event = {\n        name,\n        timeStart: performance.now(),\n        timeEnd: 0,\n    };\n    ctx.perf.timing.push(event);\n    return () => {\n        event.timeEnd = performance.now();\n    };\n};\nexport function setAttribute(ctx, el, prop, value) {\n    const fn = () => {\n        if (value == null) {\n            el.removeAttribute(prop);\n        }\n        else {\n            el.setAttribute(prop, String(value));\n        }\n    };\n    ctx.operations.push({\n        el,\n        operation: 'set-attribute',\n        args: [prop, value],\n        fn,\n    });\n}\nexport function classlistAdd(ctx, el, hostStyleTag) {\n    const fn = () => {\n        el.classList.add(hostStyleTag);\n    };\n    ctx.operations.push({\n        el,\n        operation: 'classlist-add',\n        args: [hostStyleTag],\n        fn,\n    });\n}\nfunction setProperty(ctx, node, key, value) {\n    const fn = () => {\n        try {\n            node[key] = value;\n        }\n        catch (err) {\n            logError('Set property', { node, key, value }, err);\n        }\n    };\n    ctx.operations.push({\n        el: node,\n        operation: 'set-property',\n        args: [key, value],\n        fn,\n    });\n}\nfunction createElement(ctx, expectTag, isSvg) {\n    const el = isSvg ? ctx.doc.createElementNS(SVG_NS, expectTag) : ctx.doc.createElement(expectTag);\n    el[CONTAINER] = ctx.containerEl;\n    ctx.operations.push({\n        el,\n        operation: 'create-element',\n        args: [expectTag],\n        fn: () => { },\n    });\n    return el;\n}\nfunction insertBefore(ctx, parent, newChild, refChild) {\n    const fn = () => {\n        parent.insertBefore(newChild, refChild ? refChild : null);\n    };\n    ctx.operations.push({\n        el: parent,\n        operation: 'insert-before',\n        args: [newChild, refChild],\n        fn,\n    });\n    return newChild;\n}\nexport function appendStyle(ctx, hostElement, styleTask) {\n    const fn = () => {\n        const containerEl = ctx.containerEl;\n        const stylesParent = ctx.doc.documentElement === containerEl ? ctx.doc.head ?? containerEl : containerEl;\n        if (!stylesParent.querySelector(`style[q\\\\:style=\"${styleTask.styleId}\"]`)) {\n            const style = ctx.doc.createElement('style');\n            style.setAttribute('q:style', styleTask.styleId);\n            style.textContent = styleTask.content;\n            stylesParent.insertBefore(style, stylesParent.firstChild);\n        }\n    };\n    ctx.operations.push({\n        el: hostElement,\n        operation: 'append-style',\n        args: [styleTask],\n        fn,\n    });\n}\nfunction prepend(ctx, parent, newChild) {\n    const fn = () => {\n        parent.insertBefore(newChild, parent.firstChild);\n    };\n    ctx.operations.push({\n        el: parent,\n        operation: 'prepend',\n        args: [newChild],\n        fn,\n    });\n}\nfunction removeNode(ctx, el) {\n    const fn = () => {\n        const parent = el.parentNode;\n        if (parent) {\n            parent.removeChild(el);\n        }\n        else if (qDev) {\n            logWarn('Trying to remove component already removed', el);\n        }\n    };\n    ctx.operations.push({\n        el: el,\n        operation: 'remove',\n        args: [],\n        fn,\n    });\n}\nfunction createTextNode(ctx, text) {\n    return ctx.doc.createTextNode(text);\n}\nexport function executeContextWithSlots(ctx) {\n    const before = ctx.roots.map((elm) => getSlots(undefined, elm));\n    executeContext(ctx);\n    const after = ctx.roots.map((elm) => getSlots(undefined, elm));\n    assertEqual(before.length, after.length);\n    for (let i = 0; i < before.length; i++) {\n        resolveSlotProjection(ctx, ctx.roots[i], before[i], after[i]);\n    }\n}\nexport function executeContext(ctx) {\n    for (const op of ctx.operations) {\n        op.fn();\n    }\n}\nexport function printRenderStats(ctx) {\n    const byOp = {};\n    for (const op of ctx.operations) {\n        byOp[op.operation] = (byOp[op.operation] ?? 0) + 1;\n    }\n    const affectedElements = Array.from(new Set(ctx.operations.map((a) => a.el)));\n    const stats = {\n        byOp,\n        roots: ctx.roots,\n        hostElements: Array.from(ctx.hostElements),\n        affectedElements,\n        visitedNodes: ctx.perf.visited,\n        operations: ctx.operations.map((v) => [v.operation, v.el, ...v.args]),\n    };\n    logDebug('Render stats', stats);\n    return stats;\n}\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n    const map = {};\n    for (let i = beginIdx; i <= endIdx; ++i) {\n        const child = children[i];\n        if (child.nodeType == NodeType.ELEMENT_NODE) {\n            const key = getKey(child);\n            if (key !== undefined) {\n                map[key] = i;\n            }\n        }\n    }\n    return map;\n}\nconst KEY_SYMBOL = Symbol('vnode key');\nfunction getKey(el) {\n    let key = el[KEY_SYMBOL];\n    if (key === undefined) {\n        key = el[KEY_SYMBOL] = el.getAttribute('q:key');\n    }\n    return key;\n}\nfunction setKey(el, key) {\n    if (typeof key === 'string') {\n        el.setAttribute('q:key', key);\n    }\n    el[KEY_SYMBOL] = key;\n}\nfunction sameVnode(vnode1, vnode2) {\n    const isSameSel = vnode1.nodeName.toLowerCase() === vnode2.type;\n    const isSameKey = vnode1.nodeType === NodeType.ELEMENT_NODE ? getKey(vnode1) === vnode2.key : true;\n    return isSameSel && isSameKey;\n}\nfunction checkInnerHTML(props) {\n    return props && ('innerHTML' in props || dangerouslySetInnerHTML in props);\n}\nexport function stringifyClassOrStyle(obj, isClass) {\n    if (obj == null)\n        return '';\n    if (typeof obj == 'object') {\n        let text = '';\n        let sep = '';\n        if (Array.isArray(obj)) {\n            if (!isClass) {\n                throw qError(QError.Render_unsupportedFormat_obj_attr, obj, 'style');\n            }\n            for (let i = 0; i < obj.length; i++) {\n                text += sep + obj[i];\n                sep = ' ';\n            }\n        }\n        else {\n            for (const key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    const value = obj[key];\n                    if (value) {\n                        text += isClass\n                            ? value\n                                ? sep + key\n                                : ''\n                            : sep + fromCamelToKebabCase(key) + ':' + value;\n                        sep = isClass ? ' ' : ';';\n                    }\n                }\n            }\n        }\n        return text;\n    }\n    return String(obj);\n}\n//# sourceMappingURL=data:application/json;base64,","import { assertDefined } from '../assert/assert';\nimport { getInvokeContext } from './use-core';\n// <docs markdown=\"https://hackmd.io/lQ8v7fyhR-WD3b-2aRUpyw#useHostElement\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2FlQ8v7fyhR-WD3b-2aRUpyw%3Fboth#useHostElement instead)\n/**\n * Retrieves the Host Element of the current component.\n *\n * NOTE: `useHostElement` method can only be used in the synchronous portion of the callback\n * (before any `await` statements.)\n *\n * @public\n */\n// </docs>\nexport function useHostElement() {\n    const element = getInvokeContext().hostElement;\n    assertDefined(element);\n    return element;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWhvc3QtZWxlbWVudC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3VzZS91c2UtaG9zdC1lbGVtZW50LnB1YmxpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDakQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRTlDLDRFQUE0RTtBQUM1RSx5Q0FBeUM7QUFDekMsd0dBQXdHO0FBQ3hHOzs7Ozs7O0dBT0c7QUFDSCxVQUFVO0FBQ1YsTUFBTSxVQUFVLGNBQWM7SUFDNUIsTUFBTSxPQUFPLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQyxXQUFZLENBQUM7SUFDaEQsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3ZCLE9BQU8sT0FBTyxDQUFDO0FBQ2pCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnREZWZpbmVkIH0gZnJvbSAnLi4vYXNzZXJ0L2Fzc2VydCc7XG5pbXBvcnQgeyBnZXRJbnZva2VDb250ZXh0IH0gZnJvbSAnLi91c2UtY29yZSc7XG5cbi8vIDxkb2NzIG1hcmtkb3duPVwiaHR0cHM6Ly9oYWNrbWQuaW8vbFE4djdmeWhSLVdEM2ItMmFSVXB5dyN1c2VIb3N0RWxlbWVudFwiPlxuLy8gISFETyBOT1QgRURJVCBUSElTIENPTU1FTlQgRElSRUNUTFkhISFcbi8vIChlZGl0IGh0dHBzOi8vaGFja21kLmlvL0Bxd2lrLWRvY3MvQmt4cFN6ODBZLyUyRmxROHY3ZnloUi1XRDNiLTJhUlVweXclM0Zib3RoI3VzZUhvc3RFbGVtZW50IGluc3RlYWQpXG4vKipcbiAqIFJldHJpZXZlcyB0aGUgSG9zdCBFbGVtZW50IG9mIHRoZSBjdXJyZW50IGNvbXBvbmVudC5cbiAqXG4gKiBOT1RFOiBgdXNlSG9zdEVsZW1lbnRgIG1ldGhvZCBjYW4gb25seSBiZSB1c2VkIGluIHRoZSBzeW5jaHJvbm91cyBwb3J0aW9uIG9mIHRoZSBjYWxsYmFja1xuICogKGJlZm9yZSBhbnkgYGF3YWl0YCBzdGF0ZW1lbnRzLilcbiAqXG4gKiBAcHVibGljXG4gKi9cbi8vIDwvZG9jcz5cbmV4cG9ydCBmdW5jdGlvbiB1c2VIb3N0RWxlbWVudCgpOiBFbGVtZW50IHtcbiAgY29uc3QgZWxlbWVudCA9IGdldEludm9rZUNvbnRleHQoKS5ob3N0RWxlbWVudCE7XG4gIGFzc2VydERlZmluZWQoZWxlbWVudCk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuIl19","import { getInvokeContext } from './use-core';\n/**\n * @public\n */\nexport function useDocument() {\n    const doc = getInvokeContext().doc;\n    if (!doc) {\n        throw new Error('Cant access document for existing context');\n    }\n    return doc;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWRvY3VtZW50LnB1YmxpYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXNlL3VzZS1kb2N1bWVudC5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRTlDOztHQUVHO0FBQ0gsTUFBTSxVQUFVLFdBQVc7SUFDekIsTUFBTSxHQUFHLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQyxHQUFHLENBQUM7SUFDbkMsSUFBSSxDQUFDLEdBQUcsRUFBRTtRQUNSLE1BQU0sSUFBSSxLQUFLLENBQUMsMkNBQTJDLENBQUMsQ0FBQztLQUM5RDtJQUNELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEludm9rZUNvbnRleHQgfSBmcm9tICcuL3VzZS1jb3JlJztcblxuLyoqXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VEb2N1bWVudCgpOiBEb2N1bWVudCB7XG4gIGNvbnN0IGRvYyA9IGdldEludm9rZUNvbnRleHQoKS5kb2M7XG4gIGlmICghZG9jKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdDYW50IGFjY2VzcyBkb2N1bWVudCBmb3IgZXhpc3RpbmcgY29udGV4dCcpO1xuICB9XG4gIHJldHVybiBkb2M7XG59XG4iXX0=","import { useDocument } from '../use/use-document.public';\nimport { getProxyMap, qObject } from '../object/q-object';\nimport { getInvokeContext } from './use-core';\nimport { useHostElement } from './use-host-element.public';\nimport { getContext } from '../props/props';\nimport { wrapSubscriber } from './use-subscriber';\nimport { assertEqual } from '../assert/assert';\nimport { RenderEvent } from '../util/markers';\n// <docs markdown=\"https://hackmd.io/lQ8v7fyhR-WD3b-2aRUpyw#useStore\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2FlQ8v7fyhR-WD3b-2aRUpyw%3Fboth#useStore instead)\n/**\n * Creates a object that Qwik can track across serializations.\n *\n * Use `useStore` to create state for your application. The return object is a proxy which has a\n * unique ID. The ID of the object is used in the `QRL`s to refer to the store.\n *\n * ## Example\n *\n * Example showing how `useStore` is used in Counter example to keep track of count.\n *\n * ```typescript\n * export const Counter = component$(() => {\n *   const store = useStore({ count: 0 });\n *   return $(() => <button onClick$={() => store.count++}>{store.count}</button>);\n * });\n * ```\n *\n * @public\n */\n// </docs>\nexport function useStore(initialState) {\n    const [store, setStore] = useSequentialScope();\n    const hostElement = useHostElement();\n    if (store != null) {\n        return wrapSubscriber(store, hostElement);\n    }\n    const newStore = qObject(initialState, getProxyMap(useDocument()));\n    setStore(newStore);\n    return wrapSubscriber(newStore, hostElement);\n}\n/**\n * @alpha\n */\nexport function useRef(current) {\n    return useStore({ current });\n}\nexport function useSequentialScope() {\n    const ctx = getInvokeContext();\n    assertEqual(ctx.event, RenderEvent);\n    const index = ctx.seq;\n    const hostElement = useHostElement();\n    const elementCtx = getContext(hostElement);\n    ctx.seq++;\n    const updateFn = (value) => {\n        elementCtx.seq[index] = elementCtx.refMap.add(value);\n    };\n    const seqIndex = elementCtx.seq[index];\n    if (typeof seqIndex === 'number') {\n        return [elementCtx.refMap.get(seqIndex), updateFn];\n    }\n    return [undefined, updateFn];\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLXN0b3JlLnB1YmxpYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXNlL3VzZS1zdG9yZS5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3pELE9BQU8sRUFBRSxXQUFXLEVBQUUsT0FBTyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDMUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQzlDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDNUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUMvQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFOUMsc0VBQXNFO0FBQ3RFLHlDQUF5QztBQUN6QyxrR0FBa0c7QUFDbEc7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQWtCRztBQUNILFVBQVU7QUFDVixNQUFNLFVBQVUsUUFBUSxDQUFtQixZQUFtQjtJQUM1RCxNQUFNLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxHQUFHLGtCQUFrQixFQUFFLENBQUM7SUFDL0MsTUFBTSxXQUFXLEdBQUcsY0FBYyxFQUFFLENBQUM7SUFDckMsSUFBSSxLQUFLLElBQUksSUFBSSxFQUFFO1FBQ2pCLE9BQU8sY0FBYyxDQUFDLEtBQUssRUFBRSxXQUFXLENBQUMsQ0FBQztLQUMzQztJQUNELE1BQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyxZQUFZLEVBQUUsV0FBVyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNuRSxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbkIsT0FBTyxjQUFjLENBQUMsUUFBUSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0FBQy9DLENBQUM7QUFTRDs7R0FFRztBQUNILE1BQU0sVUFBVSxNQUFNLENBQWMsT0FBVztJQUM3QyxPQUFPLFFBQVEsQ0FBQyxFQUFFLE9BQU8sRUFBRSxDQUFDLENBQUM7QUFDL0IsQ0FBQztBQUVELE1BQU0sVUFBVSxrQkFBa0I7SUFDaEMsTUFBTSxHQUFHLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQztJQUMvQixXQUFXLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxXQUFXLENBQUMsQ0FBQztJQUNwQyxNQUFNLEtBQUssR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDO0lBQ3RCLE1BQU0sV0FBVyxHQUFHLGNBQWMsRUFBRSxDQUFDO0lBQ3JDLE1BQU0sVUFBVSxHQUFHLFVBQVUsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUMzQyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDVixNQUFNLFFBQVEsR0FBRyxDQUFDLEtBQVUsRUFBRSxFQUFFO1FBQzlCLFVBQVUsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdkQsQ0FBQyxDQUFDO0lBQ0YsTUFBTSxRQUFRLEdBQUcsVUFBVSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN2QyxJQUFJLE9BQU8sUUFBUSxLQUFLLFFBQVEsRUFBRTtRQUNoQyxPQUFPLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUM7S0FDcEQ7SUFDRCxPQUFPLENBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0FBQy9CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VEb2N1bWVudCB9IGZyb20gJy4uL3VzZS91c2UtZG9jdW1lbnQucHVibGljJztcbmltcG9ydCB7IGdldFByb3h5TWFwLCBxT2JqZWN0IH0gZnJvbSAnLi4vb2JqZWN0L3Etb2JqZWN0JztcbmltcG9ydCB7IGdldEludm9rZUNvbnRleHQgfSBmcm9tICcuL3VzZS1jb3JlJztcbmltcG9ydCB7IHVzZUhvc3RFbGVtZW50IH0gZnJvbSAnLi91c2UtaG9zdC1lbGVtZW50LnB1YmxpYyc7XG5pbXBvcnQgeyBnZXRDb250ZXh0IH0gZnJvbSAnLi4vcHJvcHMvcHJvcHMnO1xuaW1wb3J0IHsgd3JhcFN1YnNjcmliZXIgfSBmcm9tICcuL3VzZS1zdWJzY3JpYmVyJztcbmltcG9ydCB7IGFzc2VydEVxdWFsIH0gZnJvbSAnLi4vYXNzZXJ0L2Fzc2VydCc7XG5pbXBvcnQgeyBSZW5kZXJFdmVudCB9IGZyb20gJy4uL3V0aWwvbWFya2Vycyc7XG5cbi8vIDxkb2NzIG1hcmtkb3duPVwiaHR0cHM6Ly9oYWNrbWQuaW8vbFE4djdmeWhSLVdEM2ItMmFSVXB5dyN1c2VTdG9yZVwiPlxuLy8gISFETyBOT1QgRURJVCBUSElTIENPTU1FTlQgRElSRUNUTFkhISFcbi8vIChlZGl0IGh0dHBzOi8vaGFja21kLmlvL0Bxd2lrLWRvY3MvQmt4cFN6ODBZLyUyRmxROHY3ZnloUi1XRDNiLTJhUlVweXclM0Zib3RoI3VzZVN0b3JlIGluc3RlYWQpXG4vKipcbiAqIENyZWF0ZXMgYSBvYmplY3QgdGhhdCBRd2lrIGNhbiB0cmFjayBhY3Jvc3Mgc2VyaWFsaXphdGlvbnMuXG4gKlxuICogVXNlIGB1c2VTdG9yZWAgdG8gY3JlYXRlIHN0YXRlIGZvciB5b3VyIGFwcGxpY2F0aW9uLiBUaGUgcmV0dXJuIG9iamVjdCBpcyBhIHByb3h5IHdoaWNoIGhhcyBhXG4gKiB1bmlxdWUgSUQuIFRoZSBJRCBvZiB0aGUgb2JqZWN0IGlzIHVzZWQgaW4gdGhlIGBRUkxgcyB0byByZWZlciB0byB0aGUgc3RvcmUuXG4gKlxuICogIyMgRXhhbXBsZVxuICpcbiAqIEV4YW1wbGUgc2hvd2luZyBob3cgYHVzZVN0b3JlYCBpcyB1c2VkIGluIENvdW50ZXIgZXhhbXBsZSB0byBrZWVwIHRyYWNrIG9mIGNvdW50LlxuICpcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGV4cG9ydCBjb25zdCBDb3VudGVyID0gY29tcG9uZW50JCgoKSA9PiB7XG4gKiAgIGNvbnN0IHN0b3JlID0gdXNlU3RvcmUoeyBjb3VudDogMCB9KTtcbiAqICAgcmV0dXJuICQoKCkgPT4gPGJ1dHRvbiBvbkNsaWNrJD17KCkgPT4gc3RvcmUuY291bnQrK30+e3N0b3JlLmNvdW50fTwvYnV0dG9uPik7XG4gKiB9KTtcbiAqIGBgYFxuICpcbiAqIEBwdWJsaWNcbiAqL1xuLy8gPC9kb2NzPlxuZXhwb3J0IGZ1bmN0aW9uIHVzZVN0b3JlPFNUQVRFIGV4dGVuZHMge30+KGluaXRpYWxTdGF0ZTogU1RBVEUpOiBTVEFURSB7XG4gIGNvbnN0IFtzdG9yZSwgc2V0U3RvcmVdID0gdXNlU2VxdWVudGlhbFNjb3BlKCk7XG4gIGNvbnN0IGhvc3RFbGVtZW50ID0gdXNlSG9zdEVsZW1lbnQoKTtcbiAgaWYgKHN0b3JlICE9IG51bGwpIHtcbiAgICByZXR1cm4gd3JhcFN1YnNjcmliZXIoc3RvcmUsIGhvc3RFbGVtZW50KTtcbiAgfVxuICBjb25zdCBuZXdTdG9yZSA9IHFPYmplY3QoaW5pdGlhbFN0YXRlLCBnZXRQcm94eU1hcCh1c2VEb2N1bWVudCgpKSk7XG4gIHNldFN0b3JlKG5ld1N0b3JlKTtcbiAgcmV0dXJuIHdyYXBTdWJzY3JpYmVyKG5ld1N0b3JlLCBob3N0RWxlbWVudCk7XG59XG5cbi8qKlxuICogQGFscGhhXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUmVmPFQ+IHtcbiAgY3VycmVudD86IFQ7XG59XG5cbi8qKlxuICogQGFscGhhXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VSZWY8VCA9IEVsZW1lbnQ+KGN1cnJlbnQ/OiBUKTogUmVmPFQ+IHtcbiAgcmV0dXJuIHVzZVN0b3JlKHsgY3VycmVudCB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZVNlcXVlbnRpYWxTY29wZSgpOiBbYW55LCAocHJvcDogYW55KSA9PiB2b2lkXSB7XG4gIGNvbnN0IGN0eCA9IGdldEludm9rZUNvbnRleHQoKTtcbiAgYXNzZXJ0RXF1YWwoY3R4LmV2ZW50LCBSZW5kZXJFdmVudCk7XG4gIGNvbnN0IGluZGV4ID0gY3R4LnNlcTtcbiAgY29uc3QgaG9zdEVsZW1lbnQgPSB1c2VIb3N0RWxlbWVudCgpO1xuICBjb25zdCBlbGVtZW50Q3R4ID0gZ2V0Q29udGV4dChob3N0RWxlbWVudCk7XG4gIGN0eC5zZXErKztcbiAgY29uc3QgdXBkYXRlRm4gPSAodmFsdWU6IGFueSkgPT4ge1xuICAgIGVsZW1lbnRDdHguc2VxW2luZGV4XSA9IGVsZW1lbnRDdHgucmVmTWFwLmFkZCh2YWx1ZSk7XG4gIH07XG4gIGNvbnN0IHNlcUluZGV4ID0gZWxlbWVudEN0eC5zZXFbaW5kZXhdO1xuICBpZiAodHlwZW9mIHNlcUluZGV4ID09PSAnbnVtYmVyJykge1xuICAgIHJldHVybiBbZWxlbWVudEN0eC5yZWZNYXAuZ2V0KHNlcUluZGV4KSwgdXBkYXRlRm5dO1xuICB9XG4gIHJldHVybiBbdW5kZWZpbmVkLCB1cGRhdGVGbl07XG59XG4iXX0=","import { noSerialize, removeSub } from '../object/q-object';\nimport { implicit$FirstArg } from '../import/qrl.public';\nimport { getContext } from '../props/props';\nimport { newInvokeContext, useWaitOn } from '../use/use-core';\nimport { useHostElement } from '../use/use-host-element.public';\nimport { logDebug, logError } from '../util/log';\nimport { then } from '../util/promises';\nimport { wrapSubscriber } from '../use/use-subscriber';\nimport { useSequentialScope } from '../use/use-store.public';\nimport { getDocument } from '../util/dom';\nexport var WatchMode;\n(function (WatchMode) {\n    WatchMode[WatchMode[\"Watch\"] = 0] = \"Watch\";\n    WatchMode[WatchMode[\"LayoutEffect\"] = 1] = \"LayoutEffect\";\n    WatchMode[WatchMode[\"Effect\"] = 2] = \"Effect\";\n})(WatchMode || (WatchMode = {}));\n// <docs markdown=\"https://hackmd.io/_Kl9br9tT8OB-1Dv8uR4Kg#useWatch\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2F_Kl9br9tT8OB-1Dv8uR4Kg%3Fboth#useWatch instead)\n/**\n * Reruns the `watchFn` when the observed inputs change.\n *\n * Use `useWatch` to observe changes on a set of inputs, and then re-execute the `watchFn` when\n * those inputs change.\n *\n * The `watchFn` only executes if the observed inputs change. To observe the inputs use the `obs`\n * function to wrap property reads. This creates subscriptions which will trigger the `watchFn`\n * to re-run.\n *\n * See: `Observer`\n *\n * @public\n *\n * ## Example\n *\n * The `useWatch` function is used to observe the `state.count` property. Any changes to the\n * `state.count` cause the `watchFn` to execute which in turn updates the `state.doubleCount` to\n * the double of `state.count`.\n *\n * ```typescript\n * export const MyComp = component$(() => {\n *   const store = useStore({ count: 0, doubleCount: 0 });\n *   useWatch$((obs) => {\n *     store.doubleCount = 2 * obs(store).count;\n *   });\n *   return $(() => (\n *     <div>\n *       <span>\n *         {store.count} / {store.doubleCount}\n *       </span>\n *       <button onClick$={() => store.count++}>+</button>\n *     </div>\n *   ));\n * });\n * ```\n *\n *\n * @param watch - Function which should be re-executed when changes to the inputs are detected\n * @public\n */\n// </docs>\nexport function useWatchQrl(watchQrl) {\n    const [watch, setWatch] = useSequentialScope();\n    if (!watch) {\n        const hostElement = useHostElement();\n        const watch = {\n            watchQrl: watchQrl,\n            hostElement,\n            mode: WatchMode.Watch,\n            isConnected: true,\n            dirty: true,\n        };\n        setWatch(watch);\n        getContext(hostElement).refMap.add(watch);\n        useWaitOn(Promise.resolve().then(() => runWatch(watch)));\n    }\n}\nexport const isWatchDescriptor = (obj) => {\n    return obj && typeof obj === 'object' && 'watchQrl' in obj;\n};\n// <docs markdown=\"https://hackmd.io/_Kl9br9tT8OB-1Dv8uR4Kg#useWatch\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2F_Kl9br9tT8OB-1Dv8uR4Kg%3Fboth#useWatch instead)\n/**\n * Reruns the `watchFn` when the observed inputs change.\n *\n * Use `useWatch` to observe changes on a set of inputs, and then re-execute the `watchFn` when\n * those inputs change.\n *\n * The `watchFn` only executes if the observed inputs change. To observe the inputs use the `obs`\n * function to wrap property reads. This creates subscriptions which will trigger the `watchFn`\n * to re-run.\n *\n * See: `Observer`\n *\n * @public\n *\n * ## Example\n *\n * The `useWatch` function is used to observe the `state.count` property. Any changes to the\n * `state.count` cause the `watchFn` to execute which in turn updates the `state.doubleCount` to\n * the double of `state.count`.\n *\n * ```typescript\n * export const MyComp = component$(() => {\n *   const store = useStore({ count: 0, doubleCount: 0 });\n *   useWatch$((obs) => {\n *     store.doubleCount = 2 * obs(store).count;\n *   });\n *   return $(() => (\n *     <div>\n *       <span>\n *         {store.count} / {store.doubleCount}\n *       </span>\n *       <button onClick$={() => store.count++}>+</button>\n *     </div>\n *   ));\n * });\n * ```\n *\n *\n * @param watch - Function which should be re-executed when changes to the inputs are detected\n * @public\n */\n// </docs>\nexport const useWatch$ = implicit$FirstArg(useWatchQrl);\n/**\n * @alpha\n */\nexport function useEffectQrl(watchQrl) {\n    const [watch, setWatch] = useSequentialScope();\n    if (!watch) {\n        const hostElement = useHostElement();\n        const watch = {\n            watchQrl: watchQrl,\n            hostElement,\n            mode: WatchMode.Effect,\n            isConnected: true,\n            dirty: true,\n        };\n        setWatch(watch);\n        getContext(hostElement).refMap.add(watch);\n    }\n}\n/**\n * @alpha\n */\nexport const useEffect$ = implicit$FirstArg(useEffectQrl);\nexport function runWatch(watch) {\n    if (!watch.dirty) {\n        logDebug('Watch is not dirty, skipping run', watch);\n        return Promise.resolve(watch);\n    }\n    watch.dirty = false;\n    const promise = new Promise((resolve) => {\n        then(watch.running, () => {\n            const destroy = watch.destroy;\n            if (destroy) {\n                watch.destroy = undefined;\n                try {\n                    destroy();\n                }\n                catch (err) {\n                    logError(err);\n                }\n            }\n            const hostElement = watch.hostElement;\n            const invokationContext = newInvokeContext(getDocument(hostElement), hostElement, hostElement, 'WatchEvent');\n            invokationContext.watch = watch;\n            invokationContext.subscriber = watch;\n            const watchFn = watch.watchQrl.invokeFn(hostElement, invokationContext);\n            const obs = (obj) => wrapSubscriber(obj, watch);\n            const captureRef = watch.watchQrl.captureRef;\n            if (Array.isArray(captureRef)) {\n                captureRef.forEach((obj) => {\n                    removeSub(obj, watch);\n                });\n            }\n            return then(watchFn(obs), (returnValue) => {\n                if (typeof returnValue === 'function') {\n                    watch.destroy = noSerialize(returnValue);\n                }\n                resolve(watch);\n            });\n        });\n    });\n    watch.running = noSerialize(promise);\n    return promise;\n}\n//# sourceMappingURL=data:application/json;base64,","import { assertDefined } from '../assert/assert';\nimport { QHostAttr } from '../util/markers';\nimport { executeContextWithSlots, printRenderStats } from './cursor';\nimport { getContext, resumeIfNeeded } from '../props/props';\nimport { qDev } from '../util/qdev';\nimport { getPlatform } from '../platform/platform';\nimport { getDocument } from '../util/dom';\nimport { renderComponent } from '../component/component-ctx';\nimport { logDebug } from '../util/log';\nimport { getContainer } from '../use/use-core';\nimport { runWatch } from '../watch/watch.public';\nimport { waitForWatches } from '../object/q-object';\n/**\n * Mark component for rendering.\n *\n * Use `notifyRender` method to mark a component for rendering at some later point in time.\n * This method uses `getPlatform(doc).queueRender` for scheduling of the rendering. The\n * default implementation of the method is to use `requestAnimationFrame` to do actual rendering.\n *\n * The method is intended to coalesce multiple calls into `notifyRender` into a single call for\n * rendering.\n *\n * @param hostElement - Host-element of the component to re-render.\n * @returns A promise which is resolved when the component has been rendered.\n * @public\n */\nexport function notifyRender(hostElement) {\n    assertDefined(hostElement.getAttribute(QHostAttr));\n    const containerEl = getContainer(hostElement);\n    assertDefined(containerEl);\n    resumeIfNeeded(containerEl);\n    const ctx = getContext(hostElement);\n    const state = getRenderingState(containerEl);\n    if (ctx.dirty) {\n        // TODO\n        return state.renderPromise;\n    }\n    ctx.dirty = true;\n    const activeRendering = state.hostsRendering !== undefined;\n    if (activeRendering) {\n        state.hostsStaging.add(hostElement);\n        return state.renderPromise.then((ctx) => {\n            if (state.hostsNext.has(hostElement)) {\n                // TODO\n                return state.renderPromise;\n            }\n            else {\n                return ctx;\n            }\n        });\n    }\n    else {\n        state.hostsNext.add(hostElement);\n        return scheduleFrame(containerEl, state);\n    }\n}\nexport function scheduleFrame(containerEl, state) {\n    if (state.renderPromise === undefined) {\n        state.renderPromise = getPlatform(containerEl).nextTick(() => renderMarked(containerEl, state));\n    }\n    return state.renderPromise;\n}\nconst SCHEDULE = Symbol('Render state');\nexport function getRenderingState(containerEl) {\n    let set = containerEl[SCHEDULE];\n    if (!set) {\n        containerEl[SCHEDULE] = set = {\n            watchNext: new Set(),\n            watchStagging: new Set(),\n            watchRunning: new Set(),\n            hostsNext: new Set(),\n            hostsStaging: new Set(),\n            renderPromise: undefined,\n            hostsRendering: undefined,\n        };\n    }\n    return set;\n}\nexport async function renderMarked(containerEl, state) {\n    await waitForWatches(state);\n    state.hostsRendering = new Set(state.hostsNext);\n    state.hostsNext.clear();\n    const doc = getDocument(containerEl);\n    const platform = getPlatform(containerEl);\n    const renderingQueue = Array.from(state.hostsRendering);\n    sortNodes(renderingQueue);\n    const ctx = {\n        doc,\n        globalState: state,\n        hostElements: new Set(),\n        operations: [],\n        roots: [],\n        containerEl,\n        component: undefined,\n        perf: {\n            visited: 0,\n            timing: [],\n        },\n    };\n    for (const el of renderingQueue) {\n        if (!ctx.hostElements.has(el)) {\n            ctx.roots.push(el);\n            await renderComponent(ctx, getContext(el));\n        }\n    }\n    // Early exist, no dom operations\n    if (ctx.operations.length === 0) {\n        if (qDev) {\n            if (typeof window !== 'undefined' && window.document != null) {\n                logDebug('Render skipped. No operations.');\n                printRenderStats(ctx);\n            }\n        }\n        postRendering(containerEl, state, ctx);\n        return ctx;\n    }\n    return platform.raf(() => {\n        executeContextWithSlots(ctx);\n        if (qDev) {\n            if (typeof window !== 'undefined' && window.document != null) {\n                printRenderStats(ctx);\n            }\n        }\n        postRendering(containerEl, state, ctx);\n        return ctx;\n    });\n}\nasync function postRendering(containerEl, state, ctx) {\n    // Run useEffect() watch\n    const promises = [];\n    state.watchNext.forEach((watch) => {\n        promises.push(runWatch(watch));\n    });\n    state.watchNext.clear();\n    state.watchStagging.forEach((watch) => {\n        if (ctx.hostElements.has(watch.hostElement)) {\n            promises.push(runWatch(watch));\n        }\n        else {\n            state.watchNext.add(watch);\n        }\n    });\n    // Wait for all promises\n    await Promise.all(promises);\n    // Move elements from staging to nextRender\n    state.hostsStaging.forEach((el) => {\n        state.hostsNext.add(el);\n    });\n    // Clear staging\n    state.hostsStaging.clear();\n    state.hostsRendering = undefined;\n    state.renderPromise = undefined;\n    if (state.hostsNext.size + state.watchNext.size > 0) {\n        scheduleFrame(containerEl, state);\n    }\n}\nfunction sortNodes(elements) {\n    elements.sort((a, b) => (a.compareDocumentPosition(b) & 2 ? 1 : -1));\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZ5LXJlbmRlci5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvcmVuZGVyL25vdGlmeS1yZW5kZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUM1QyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsZ0JBQWdCLEVBQWlCLE1BQU0sVUFBVSxDQUFDO0FBQ3BGLE9BQU8sRUFBRSxVQUFVLEVBQUUsY0FBYyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUNwQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDbkQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMxQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDN0QsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN2QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBbUIsTUFBTSx1QkFBdUIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFcEQ7Ozs7Ozs7Ozs7Ozs7R0FhRztBQUNILE1BQU0sVUFBVSxZQUFZLENBQUMsV0FBb0I7SUFDL0MsYUFBYSxDQUFDLFdBQVcsQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztJQUVuRCxNQUFNLFdBQVcsR0FBRyxZQUFZLENBQUMsV0FBVyxDQUFFLENBQUM7SUFDL0MsYUFBYSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQzNCLGNBQWMsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUU1QixNQUFNLEdBQUcsR0FBRyxV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S0FBSyxDQUFDLGFBQWEsR0FBRyxTQUFTLENBQUM7SUFFaEMsSUFBSSxLQUFLLENBQUMsU0FBUyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFDLElBQUksR0FBRyxDQUFDLEVBQUU7UUFDbkQsYUFBYSxDQUFDLFdBQVcsRUFBRSxLQUFLLENBQUMsQ0FBQztLQUNuQztBQUNILENBQUM7QUFFRCxTQUFTLFNBQVMsQ0FBQyxRQUFtQjtJQUNwQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsdUJBQXVCLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN2RSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXNzZXJ0RGVmaW5lZCB9IGZyb20gJy4uL2Fzc2VydC9hc3NlcnQnO1xuaW1wb3J0IHsgUUhvc3RBdHRyIH0gZnJvbSAnLi4vdXRpbC9tYXJrZXJzJztcbmltcG9ydCB7IGV4ZWN1dGVDb250ZXh0V2l0aFNsb3RzLCBwcmludFJlbmRlclN0YXRzLCBSZW5kZXJDb250ZXh0IH0gZnJvbSAnLi9jdXJzb3InO1xuaW1wb3J0IHsgZ2V0Q29udGV4dCwgcmVzdW1lSWZOZWVkZWQgfSBmcm9tICcuLi9wcm9wcy9wcm9wcyc7XG5pbXBvcnQgeyBxRGV2IH0gZnJvbSAnLi4vdXRpbC9xZGV2JztcbmltcG9ydCB7IGdldFBsYXRmb3JtIH0gZnJvbSAnLi4vcGxhdGZvcm0vcGxhdGZvcm0nO1xuaW1wb3J0IHsgZ2V0RG9jdW1lbnQgfSBmcm9tICcuLi91dGlsL2RvbSc7XG5pbXBvcnQgeyByZW5kZXJDb21wb25lbnQgfSBmcm9tICcuLi9jb21wb25lbnQvY29tcG9uZW50LWN0eCc7XG5pbXBvcnQgeyBsb2dEZWJ1ZyB9IGZyb20gJy4uL3V0aWwvbG9nJztcbmltcG9ydCB7IGdldENvbnRhaW5lciB9IGZyb20gJy4uL3VzZS91c2UtY29yZSc7XG5pbXBvcnQgeyBydW5XYXRjaCwgV2F0Y2hEZXNjcmlwdG9yIH0gZnJvbSAnLi4vd2F0Y2gvd2F0Y2gucHVibGljJztcbmltcG9ydCB7IHdhaXRGb3JXYXRjaGVzIH0gZnJvbSAnLi4vb2JqZWN0L3Etb2JqZWN0JztcblxuLyoqXG4gKiBNYXJrIGNvbXBvbmVudCBmb3IgcmVuZGVyaW5nLlxuICpcbiAqIFVzZSBgbm90aWZ5UmVuZGVyYCBtZXRob2QgdG8gbWFyayBhIGNvbXBvbmVudCBmb3IgcmVuZGVyaW5nIGF0IHNvbWUgbGF0ZXIgcG9pbnQgaW4gdGltZS5cbiAqIFRoaXMgbWV0aG9kIHVzZXMgYGdldFBsYXRmb3JtKGRvYykucXVldWVSZW5kZXJgIGZvciBzY2hlZHVsaW5nIG9mIHRoZSByZW5kZXJpbmcuIFRoZVxuICogZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgbWV0aG9kIGlzIHRvIHVzZSBgcmVxdWVzdEFuaW1hdGlvbkZyYW1lYCB0byBkbyBhY3R1YWwgcmVuZGVyaW5nLlxuICpcbiAqIFRoZSBtZXRob2QgaXMgaW50ZW5kZWQgdG8gY29hbGVzY2UgbXVsdGlwbGUgY2FsbHMgaW50byBgbm90aWZ5UmVuZGVyYCBpbnRvIGEgc2luZ2xlIGNhbGwgZm9yXG4gKiByZW5kZXJpbmcuXG4gKlxuICogQHBhcmFtIGhvc3RFbGVtZW50IC0gSG9zdC1lbGVtZW50IG9mIHRoZSBjb21wb25lbnQgdG8gcmUtcmVuZGVyLlxuICogQHJldHVybnMgQSBwcm9taXNlIHdoaWNoIGlzIHJlc29sdmVkIHdoZW4gdGhlIGNvbXBvbmVudCBoYXMgYmVlbiByZW5kZXJlZC5cbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG5vdGlmeVJlbmRlcihob3N0RWxlbWVudDogRWxlbWVudCk6IFByb21pc2U8UmVuZGVyQ29udGV4dD4ge1xuICBhc3NlcnREZWZpbmVkKGhvc3RFbGVtZW50LmdldEF0dHJpYnV0ZShRSG9zdEF0dHIpKTtcblxuICBjb25zdCBjb250YWluZXJFbCA9IGdldENvbnRhaW5lcihob3N0RWxlbWVudCkhO1xuICBhc3NlcnREZWZpbmVkKGNvbnRhaW5lckVsKTtcbiAgcmVzdW1lSWZOZWVkZWQoY29udGFpbmVyRWwpO1xuXG4gIGNvbnN0IGN0eCA9IGdldENvbnRleHQoaG9zdEVsZW1lbnQpO1xuICBjb25zdCBzdGF0ZSA9IGdldFJlbmRlcmluZ1N0YXRlKGNvbnRhaW5lckVsKTtcbiAgaWYgKGN0eC5kaXJ0eSkge1xuICAgIC8vIFRPRE9cbiAgICByZXR1cm4gc3RhdGUucmVuZGVyUHJvbWlzZSE7XG4gIH1cbiAgY3R4LmRpcnR5ID0gdHJ1ZTtcbiAgY29uc3QgYWN0aXZlUmVuZGVyaW5nID0gc3RhdGUuaG9zdHNSZW5kZXJpbmcgIT09IHVuZGVmaW5lZDtcbiAgaWYgKGFjdGl2ZVJlbmRlcmluZykge1xuICAgIHN0YXRlLmhvc3RzU3RhZ2luZy5hZGQoaG9zdEVsZW1lbnQpO1xuICAgIHJldHVybiBzdGF0ZS5yZW5kZXJQcm9taXNlIS50aGVuKChjdHgpID0+IHtcbiAgICAgIGlmIChzdGF0ZS5ob3N0c05leHQuaGFzKGhvc3RFbGVtZW50KSkge1xuICAgICAgICAvLyBUT0RPXG4gICAgICAgIHJldHVybiBzdGF0ZS5yZW5kZXJQcm9taXNlITtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBjdHg7XG4gICAgICB9XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgc3RhdGUuaG9zdHNOZXh0LmFkZChob3N0RWxlbWVudCk7XG4gICAgcmV0dXJuIHNjaGVkdWxlRnJhbWUoY29udGFpbmVyRWwsIHN0YXRlKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc2NoZWR1bGVGcmFtZShjb250YWluZXJFbDogRWxlbWVudCwgc3RhdGU6IFJlbmRlcmluZ1N0YXRlKTogUHJvbWlzZTxSZW5kZXJDb250ZXh0PiB7XG4gIGlmIChzdGF0ZS5yZW5kZXJQcm9taXNlID09PSB1bmRlZmluZWQpIHtcbiAgICBzdGF0ZS5yZW5kZXJQcm9taXNlID0gZ2V0UGxhdGZvcm0oY29udGFpbmVyRWwpLm5leHRUaWNrKCgpID0+IHJlbmRlck1hcmtlZChjb250YWluZXJFbCwgc3RhdGUpKTtcbiAgfVxuICByZXR1cm4gc3RhdGUucmVuZGVyUHJvbWlzZTtcbn1cblxuY29uc3QgU0NIRURVTEUgPSBTeW1ib2woJ1JlbmRlciBzdGF0ZScpO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJlbmRlcmluZ1N0YXRlIHtcbiAgd2F0Y2hSdW5uaW5nOiBTZXQ8UHJvbWlzZTxXYXRjaERlc2NyaXB0b3I+PjtcbiAgd2F0Y2hOZXh0OiBTZXQ8V2F0Y2hEZXNjcmlwdG9yPjtcbiAgd2F0Y2hTdGFnZ2luZzogU2V0PFdhdGNoRGVzY3JpcHRvcj47XG5cbiAgaG9zdHNOZXh0OiBTZXQ8RWxlbWVudD47XG4gIGhvc3RzU3RhZ2luZzogU2V0PEVsZW1lbnQ+O1xuICBob3N0c1JlbmRlcmluZzogU2V0PEVsZW1lbnQ+IHwgdW5kZWZpbmVkO1xuICByZW5kZXJQcm9taXNlOiBQcm9taXNlPFJlbmRlckNvbnRleHQ+IHwgdW5kZWZpbmVkO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmVuZGVyaW5nU3RhdGUoY29udGFpbmVyRWw6IEVsZW1lbnQpOiBSZW5kZXJpbmdTdGF0ZSB7XG4gIGxldCBzZXQgPSAoY29udGFpbmVyRWwgYXMgYW55KVtTQ0hFRFVMRV0gYXMgUmVuZGVyaW5nU3RhdGU7XG4gIGlmICghc2V0KSB7XG4gICAgKGNvbnRhaW5lckVsIGFzIGFueSlbU0NIRURVTEVdID0gc2V0ID0ge1xuICAgICAgd2F0Y2hOZXh0OiBuZXcgU2V0KCksXG4gICAgICB3YXRjaFN0YWdnaW5nOiBuZXcgU2V0KCksXG4gICAgICB3YXRjaFJ1bm5pbmc6IG5ldyBTZXQoKSxcblxuICAgICAgaG9zdHNOZXh0OiBuZXcgU2V0KCksXG4gICAgICBob3N0c1N0YWdpbmc6IG5ldyBTZXQoKSxcbiAgICAgIHJlbmRlclByb21pc2U6IHVuZGVmaW5lZCxcbiAgICAgIGhvc3RzUmVuZGVyaW5nOiB1bmRlZmluZWQsXG4gICAgfTtcbiAgfVxuICByZXR1cm4gc2V0O1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcmVuZGVyTWFya2VkKFxuICBjb250YWluZXJFbDogRWxlbWVudCxcbiAgc3RhdGU6IFJlbmRlcmluZ1N0YXRlXG4pOiBQcm9taXNlPFJlbmRlckNvbnRleHQ+IHtcbiAgYXdhaXQgd2FpdEZvcldhdGNoZXMoc3RhdGUpO1xuXG4gIHN0YXRlLmhvc3RzUmVuZGVyaW5nID0gbmV3IFNldChzdGF0ZS5ob3N0c05leHQpO1xuICBzdGF0ZS5ob3N0c05leHQuY2xlYXIoKTtcblxuICBjb25zdCBkb2MgPSBnZXREb2N1bWVudChjb250YWluZXJFbCk7XG4gIGNvbnN0IHBsYXRmb3JtID0gZ2V0UGxhdGZvcm0oY29udGFpbmVyRWwpO1xuICBjb25zdCByZW5kZXJpbmdRdWV1ZSA9IEFycmF5LmZyb20oc3RhdGUuaG9zdHNSZW5kZXJpbmcpO1xuICBzb3J0Tm9kZXMocmVuZGVyaW5nUXVldWUpO1xuXG4gIGNvbnN0IGN0eDogUmVuZGVyQ29udGV4dCA9IHtcbiAgICBkb2MsXG4gICAgZ2xvYmFsU3RhdGU6IHN0YXRlLFxuICAgIGhvc3RFbGVtZW50czogbmV3IFNldCgpLFxuICAgIG9wZXJhdGlvbnM6IFtdLFxuICAgIHJvb3RzOiBbXSxcbiAgICBjb250YWluZXJFbCxcbiAgICBjb21wb25lbnQ6IHVuZGVmaW5lZCxcbiAgICBwZXJmOiB7XG4gICAgICB2aXNpdGVkOiAwLFxuICAgICAgdGltaW5nOiBbXSxcbiAgICB9LFxuICB9O1xuXG4gIGZvciAoY29uc3QgZWwgb2YgcmVuZGVyaW5nUXVldWUpIHtcbiAgICBpZiAoIWN0eC5ob3N0RWxlbWVudHMuaGFzKGVsKSkge1xuICAgICAgY3R4LnJvb3RzLnB1c2goZWwpO1xuICAgICAgYXdhaXQgcmVuZGVyQ29tcG9uZW50KGN0eCwgZ2V0Q29udGV4dChlbCkpO1xuICAgIH1cbiAgfVxuXG4gIC8vIEVhcmx5IGV4aXN0LCBubyBkb20gb3BlcmF0aW9uc1xuICBpZiAoY3R4Lm9wZXJhdGlvbnMubGVuZ3RoID09PSAwKSB7XG4gICAgaWYgKHFEZXYpIHtcbiAgICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgIT0gbnVsbCkge1xuICAgICAgICBsb2dEZWJ1ZygnUmVuZGVyIHNraXBwZWQuIE5vIG9wZXJhdGlvbnMuJyk7XG4gICAgICAgIHByaW50UmVuZGVyU3RhdHMoY3R4KTtcbiAgICAgIH1cbiAgICB9XG4gICAgcG9zdFJlbmRlcmluZyhjb250YWluZXJFbCwgc3RhdGUsIGN0eCk7XG4gICAgcmV0dXJuIGN0eDtcbiAgfVxuXG4gIHJldHVybiBwbGF0Zm9ybS5yYWYoKCkgPT4ge1xuICAgIGV4ZWN1dGVDb250ZXh0V2l0aFNsb3RzKGN0eCk7XG4gICAgaWYgKHFEZXYpIHtcbiAgICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgIT0gbnVsbCkge1xuICAgICAgICBwcmludFJlbmRlclN0YXRzKGN0eCk7XG4gICAgICB9XG4gICAgfVxuICAgIHBvc3RSZW5kZXJpbmcoY29udGFpbmVyRWwsIHN0YXRlLCBjdHgpO1xuICAgIHJldHVybiBjdHg7XG4gIH0pO1xufVxuXG5hc3luYyBmdW5jdGlvbiBwb3N0UmVuZGVyaW5nKGNvbnRhaW5lckVsOiBFbGVtZW50LCBzdGF0ZTogUmVuZGVyaW5nU3RhdGUsIGN0eDogUmVuZGVyQ29udGV4dCkge1xuICAvLyBSdW4gdXNlRWZmZWN0KCkgd2F0Y2hcbiAgY29uc3QgcHJvbWlzZXM6IFByb21pc2U8V2F0Y2hEZXNjcmlwdG9yPltdID0gW107XG4gIHN0YXRlLndhdGNoTmV4dC5mb3JFYWNoKCh3YXRjaCkgPT4ge1xuICAgIHByb21pc2VzLnB1c2gocnVuV2F0Y2god2F0Y2gpKTtcbiAgfSk7XG5cbiAgc3RhdGUud2F0Y2hOZXh0LmNsZWFyKCk7XG4gIHN0YXRlLndhdGNoU3RhZ2dpbmcuZm9yRWFjaCgod2F0Y2gpID0+IHtcbiAgICBpZiAoY3R4Lmhvc3RFbGVtZW50cy5oYXMod2F0Y2guaG9zdEVsZW1lbnQpKSB7XG4gICAgICBwcm9taXNlcy5wdXNoKHJ1bldhdGNoKHdhdGNoKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0YXRlLndhdGNoTmV4dC5hZGQod2F0Y2gpO1xuICAgIH1cbiAgfSk7XG5cbiAgLy8gV2FpdCBmb3IgYWxsIHByb21pc2VzXG4gIGF3YWl0IFByb21pc2UuYWxsKHByb21pc2VzKTtcblxuICAvLyBNb3ZlIGVsZW1lbnRzIGZyb20gc3RhZ2luZyB0byBuZXh0UmVuZGVyXG4gIHN0YXRlLmhvc3RzU3RhZ2luZy5mb3JFYWNoKChlbCkgPT4ge1xuICAgIHN0YXRlLmhvc3RzTmV4dC5hZGQoZWwpO1xuICB9KTtcblxuICAvLyBDbGVhciBzdGFnaW5nXG4gIHN0YXRlLmhvc3RzU3RhZ2luZy5jbGVhcigpO1xuICBzdGF0ZS5ob3N0c1JlbmRlcmluZyA9IHVuZGVmaW5lZDtcbiAgc3RhdGUucmVuZGVyUHJvbWlzZSA9IHVuZGVmaW5lZDtcblxuICBpZiAoc3RhdGUuaG9zdHNOZXh0LnNpemUgKyBzdGF0ZS53YXRjaE5leHQuc2l6ZSA+IDApIHtcbiAgICBzY2hlZHVsZUZyYW1lKGNvbnRhaW5lckVsLCBzdGF0ZSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gc29ydE5vZGVzKGVsZW1lbnRzOiBFbGVtZW50W10pIHtcbiAgZWxlbWVudHMuc29ydCgoYSwgYikgPT4gKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikgJiAyID8gMSA6IC0xKSk7XG59XG4iXX0=","import { assertEqual } from '../assert/assert';\nimport { QError, qError } from '../error/error';\nimport { isQrl } from '../import/qrl-class';\nimport { getRenderingState, notifyRender, scheduleFrame, } from '../render/notify-render';\nimport { getContainer, tryGetInvokeContext } from '../use/use-core';\nimport { isElement } from '../util/element';\nimport { logWarn } from '../util/log';\nimport { qDev, qTest } from '../util/qdev';\nimport { debugStringify } from '../util/stringify';\nimport { runWatch, WatchMode } from '../watch/watch.public';\nconst ProxyMapSymbol = Symbol('ProxyMapSymbol');\nexport function getProxyMap(doc) {\n    let map = doc[ProxyMapSymbol];\n    if (!map) {\n        map = doc[ProxyMapSymbol] = new WeakMap();\n    }\n    return map;\n}\nexport function qObject(obj, proxyMap) {\n    assertEqual(unwrapProxy(obj), obj, 'Unexpected proxy at this location');\n    if (obj == null || typeof obj !== 'object') {\n        // TODO(misko): centralize\n        throw new Error(`Q-ERROR: Only objects can be wrapped in 'QObject', got ` + debugStringify(obj));\n    }\n    if (obj.constructor !== Object) {\n        throw new Error(`Q-ERROR: Only objects literals can be wrapped in 'QObject', got ` + debugStringify(obj));\n    }\n    return readWriteProxy(obj, proxyMap);\n}\nexport function _restoreQObject(obj, map, subs) {\n    return readWriteProxy(obj, map, subs);\n}\n/**\n * Creates a proxy which notifies of any writes.\n */\nexport function readWriteProxy(target, proxyMap, subs) {\n    if (!target || typeof target !== 'object')\n        return target;\n    let proxy = proxyMap.get(target);\n    if (proxy)\n        return proxy;\n    proxy = new Proxy(target, new ReadWriteProxyHandler(proxyMap, subs));\n    proxyMap.set(target, proxy);\n    return proxy;\n}\nexport const QOjectTargetSymbol = ':target:';\nexport const QOjectSubsSymbol = ':subs:';\nexport const QOjectOriginalProxy = ':proxy:';\nexport const SetSubscriber = Symbol('SetSubscriber');\nexport function unwrapProxy(proxy) {\n    if (proxy && typeof proxy == 'object') {\n        const value = proxy[QOjectTargetSymbol];\n        if (value)\n            return value;\n    }\n    return proxy;\n}\nexport function wrap(value, proxyMap) {\n    if (value && typeof value === 'object') {\n        if (isQrl(value)) {\n            return value;\n        }\n        if (isElement(value)) {\n            return value;\n        }\n        const nakedValue = unwrapProxy(value);\n        if (nakedValue !== value) {\n            // already a proxy return;\n            return value;\n        }\n        if (qDev) {\n            verifySerializable(value);\n        }\n        const proxy = proxyMap.get(value);\n        return proxy ? proxy : readWriteProxy(value, proxyMap);\n    }\n    else {\n        return value;\n    }\n}\nclass ReadWriteProxyHandler {\n    constructor(proxyMap, subs = new Map()) {\n        this.proxyMap = proxyMap;\n        this.subs = subs;\n    }\n    getSub(el) {\n        let sub = this.subs.get(el);\n        if (!sub) {\n            this.subs.set(el, (sub = new Set()));\n        }\n        return sub;\n    }\n    get(target, prop) {\n        let subscriber = this.subscriber;\n        this.subscriber = undefined;\n        if (prop === QOjectTargetSymbol)\n            return target;\n        if (prop === QOjectSubsSymbol)\n            return this.subs;\n        if (prop === QOjectOriginalProxy)\n            return this.proxyMap.get(target);\n        const value = target[prop];\n        if (typeof prop === 'symbol') {\n            return value;\n        }\n        const invokeCtx = tryGetInvokeContext();\n        if (qDev && !invokeCtx && !qTest) {\n            logWarn(`State assigned outside invocation context. Getting prop \"${prop}\" of:`, target);\n        }\n        if (invokeCtx) {\n            if (invokeCtx.subscriber === null) {\n                subscriber = undefined;\n            }\n            else if (!subscriber) {\n                subscriber = invokeCtx.subscriber;\n            }\n        }\n        else if (qDev && !qTest && !subscriber) {\n            logWarn(`State assigned outside invocation context. Getting prop \"${prop}\" of:`, target);\n        }\n        if (subscriber) {\n            const isArray = Array.isArray(target);\n            const sub = this.getSub(subscriber);\n            if (!isArray) {\n                sub.add(prop);\n            }\n        }\n        return wrap(value, this.proxyMap);\n    }\n    set(target, prop, newValue) {\n        if (typeof prop === 'symbol') {\n            if (prop === SetSubscriber) {\n                this.subscriber = newValue;\n            }\n            else {\n                target[prop] = newValue;\n            }\n            return true;\n        }\n        const subs = this.subs;\n        const unwrappedNewValue = unwrapProxy(newValue);\n        verifySerializable(unwrappedNewValue);\n        const isArray = Array.isArray(target);\n        if (isArray) {\n            target[prop] = unwrappedNewValue;\n            subs.forEach((_, sub) => {\n                if (sub.isConnected) {\n                    notifyChange(sub);\n                }\n                else {\n                    subs.delete(sub);\n                }\n            });\n            return true;\n        }\n        const oldValue = target[prop];\n        if (oldValue !== unwrappedNewValue) {\n            target[prop] = unwrappedNewValue;\n            subs.forEach((propSets, sub) => {\n                if (sub.isConnected) {\n                    if (propSets.has(prop)) {\n                        notifyChange(sub);\n                    }\n                }\n                else {\n                    subs.delete(sub);\n                }\n            });\n        }\n        return true;\n    }\n    has(target, property) {\n        if (property === QOjectTargetSymbol)\n            return true;\n        if (property === QOjectSubsSymbol)\n            return true;\n        return Object.prototype.hasOwnProperty.call(target, property);\n    }\n    ownKeys(target) {\n        return Object.getOwnPropertyNames(target);\n    }\n}\nexport function removeSub(obj, subscriber) {\n    if (obj && typeof obj === 'object') {\n        const subs = obj[QOjectSubsSymbol];\n        if (subs) {\n            subs.delete(subscriber);\n        }\n    }\n}\nexport function notifyChange(subscriber) {\n    if (isElement(subscriber)) {\n        notifyRender(subscriber);\n    }\n    else {\n        notifyWatch(subscriber);\n    }\n}\nexport function notifyWatch(watch) {\n    const containerEl = getContainer(watch.hostElement);\n    const state = getRenderingState(containerEl);\n    watch.dirty = true;\n    if (watch.mode === WatchMode.Watch) {\n        const promise = runWatch(watch);\n        state.watchRunning.add(promise);\n        promise.then(() => {\n            state.watchRunning.delete(promise);\n        });\n    }\n    else {\n        const activeRendering = state.hostsRendering !== undefined;\n        if (activeRendering) {\n            state.watchStagging.add(watch);\n        }\n        else {\n            state.watchNext.add(watch);\n            scheduleFrame(containerEl, state);\n        }\n    }\n}\nexport async function waitForWatches(state) {\n    while (state.watchRunning.size > 0) {\n        await Promise.all(state.watchRunning);\n    }\n}\nfunction verifySerializable(value) {\n    if (shouldSerialize(value) && typeof value == 'object' && value !== null) {\n        if (Array.isArray(value))\n            return;\n        if (Object.getPrototypeOf(value) !== Object.prototype) {\n            if (isQrl(value))\n                return;\n            if (isElement(value))\n                return;\n            throw qError(QError.TODO, 'Only primitive and object literals can be serialized.');\n        }\n    }\n}\nconst NOSERIALIZE = Symbol('NoSerialize');\nexport function shouldSerialize(obj) {\n    if (obj !== null && (typeof obj == 'object' || typeof obj === 'function')) {\n        const noSerialize = obj[NOSERIALIZE] === true;\n        return !noSerialize;\n    }\n    return true;\n}\n/**\n * @alpha\n */\nexport function noSerialize(input) {\n    input[NOSERIALIZE] = true;\n    return input;\n}\n//# sourceMappingURL=data:application/json;base64,","import { QOjectOriginalProxy, QOjectTargetSymbol, SetSubscriber } from '../object/q-object';\nimport { RenderEvent } from '../util/markers';\nimport { assertDefined, assertEqual } from '../assert/assert';\nimport { getInvokeContext } from './use-core';\n/**\n * @alpha\n */\nexport function useSubscriber(obj) {\n    const ctx = getInvokeContext();\n    let subscriber = ctx.watch;\n    if (!subscriber) {\n        assertEqual(ctx.event, RenderEvent);\n        subscriber = ctx.hostElement;\n    }\n    assertDefined(subscriber);\n    return wrapSubscriber(obj, subscriber);\n}\n/**\n * @alpha\n */\nexport function wrapSubscriber(obj, subscriber) {\n    if (obj && typeof obj === 'object') {\n        const target = obj[QOjectTargetSymbol];\n        if (!target) {\n            return obj;\n        }\n        return new Proxy(obj, {\n            get(target, prop) {\n                if (prop === QOjectOriginalProxy) {\n                    return target;\n                }\n                target[SetSubscriber] = subscriber;\n                return target[prop];\n            },\n        });\n    }\n    return obj;\n}\n/**\n * @alpha\n */\nexport function unwrapSubscriber(obj) {\n    if (obj && typeof obj === 'object') {\n        const proxy = obj[QOjectOriginalProxy];\n        if (proxy) {\n            return proxy;\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLXN1YnNjcmliZXIuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3VzZS91c2Utc3Vic2NyaWJlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsa0JBQWtCLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFNUYsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxhQUFhLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sWUFBWSxDQUFDO0FBSTlDOztHQUVHO0FBQ0gsTUFBTSxVQUFVLGFBQWEsQ0FBZSxHQUFNO0lBQ2hELE1BQU0sR0FBRyxHQUFHLGdCQUFnQixFQUFFLENBQUM7SUFDL0IsSUFBSSxVQUFVLEdBQTJCLEdBQUcsQ0FBQyxLQUFLLENBQUM7SUFDbkQsSUFBSSxDQUFDLFVBQVUsRUFBRTtRQUNmLFdBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQ3BDLFVBQVUsR0FBRyxHQUFHLENBQUMsV0FBVyxDQUFDO0tBQzlCO0lBQ0QsYUFBYSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzFCLE9BQU8sY0FBYyxDQUFDLEdBQUcsRUFBRSxVQUFXLENBQUMsQ0FBQztBQUMxQyxDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsY0FBYyxDQUFlLEdBQU0sRUFBRSxVQUFzQjtJQUN6RSxJQUFJLEdBQUcsSUFBSSxPQUFPLEdBQUcsS0FBSyxRQUFRLEVBQUU7UUFDbEMsTUFBTSxNQUFNLEdBQUksR0FBVyxDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFDaEQsSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNYLE9BQU8sR0FBRyxDQUFDO1NBQ1o7UUFDRCxPQUFPLElBQUksS0FBSyxDQUFNLEdBQUcsRUFBRTtZQUN6QixHQUFHLENBQUMsTUFBTSxFQUFFLElBQUk7Z0JBQ2QsSUFBSSxJQUFJLEtBQUssbUJBQW1CLEVBQUU7b0JBQ2hDLE9BQU8sTUFBTSxDQUFDO2lCQUNmO2dCQUNELE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBRyxVQUFVLENBQUM7Z0JBQ25DLE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3RCLENBQUM7U0FDRixDQUFDLENBQUM7S0FDSjtJQUNELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQztBQUVEOztHQUVHO0FBQ0gsTUFBTSxVQUFVLGdCQUFnQixDQUFlLEdBQU07SUFDbkQsSUFBSSxHQUFHLElBQUksT0FBTyxHQUFHLEtBQUssUUFBUSxFQUFFO1FBQ2xDLE1BQU0sS0FBSyxHQUFJLEdBQVcsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1FBQ2hELElBQUksS0FBSyxFQUFFO1lBQ1QsT0FBTyxLQUFLLENBQUM7U0FDZDtLQUNGO0lBQ0QsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUU9qZWN0T3JpZ2luYWxQcm94eSwgUU9qZWN0VGFyZ2V0U3ltYm9sLCBTZXRTdWJzY3JpYmVyIH0gZnJvbSAnLi4vb2JqZWN0L3Etb2JqZWN0JztcbmltcG9ydCB0eXBlIHsgV2F0Y2hEZXNjcmlwdG9yIH0gZnJvbSAnLi4vd2F0Y2gvd2F0Y2gucHVibGljJztcbmltcG9ydCB7IFJlbmRlckV2ZW50IH0gZnJvbSAnLi4vdXRpbC9tYXJrZXJzJztcbmltcG9ydCB7IGFzc2VydERlZmluZWQsIGFzc2VydEVxdWFsIH0gZnJvbSAnLi4vYXNzZXJ0L2Fzc2VydCc7XG5pbXBvcnQgeyBnZXRJbnZva2VDb250ZXh0IH0gZnJvbSAnLi91c2UtY29yZSc7XG5cbmV4cG9ydCB0eXBlIFN1YnNjcmliZXIgPSBXYXRjaERlc2NyaXB0b3IgfCBFbGVtZW50O1xuXG4vKipcbiAqIEBhbHBoYVxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlU3Vic2NyaWJlcjxUIGV4dGVuZHMge30+KG9iajogVCk6IFQge1xuICBjb25zdCBjdHggPSBnZXRJbnZva2VDb250ZXh0KCk7XG4gIGxldCBzdWJzY3JpYmVyOiBTdWJzY3JpYmVyIHwgdW5kZWZpbmVkID0gY3R4LndhdGNoO1xuICBpZiAoIXN1YnNjcmliZXIpIHtcbiAgICBhc3NlcnRFcXVhbChjdHguZXZlbnQsIFJlbmRlckV2ZW50KTtcbiAgICBzdWJzY3JpYmVyID0gY3R4Lmhvc3RFbGVtZW50O1xuICB9XG4gIGFzc2VydERlZmluZWQoc3Vic2NyaWJlcik7XG4gIHJldHVybiB3cmFwU3Vic2NyaWJlcihvYmosIHN1YnNjcmliZXIhKTtcbn1cblxuLyoqXG4gKiBAYWxwaGFcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHdyYXBTdWJzY3JpYmVyPFQgZXh0ZW5kcyB7fT4ob2JqOiBULCBzdWJzY3JpYmVyOiBTdWJzY3JpYmVyKSB7XG4gIGlmIChvYmogJiYgdHlwZW9mIG9iaiA9PT0gJ29iamVjdCcpIHtcbiAgICBjb25zdCB0YXJnZXQgPSAob2JqIGFzIGFueSlbUU9qZWN0VGFyZ2V0U3ltYm9sXTtcbiAgICBpZiAoIXRhcmdldCkge1xuICAgICAgcmV0dXJuIG9iajtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBQcm94eTxhbnk+KG9iaiwge1xuICAgICAgZ2V0KHRhcmdldCwgcHJvcCkge1xuICAgICAgICBpZiAocHJvcCA9PT0gUU9qZWN0T3JpZ2luYWxQcm94eSkge1xuICAgICAgICAgIHJldHVybiB0YXJnZXQ7XG4gICAgICAgIH1cbiAgICAgICAgdGFyZ2V0W1NldFN1YnNjcmliZXJdID0gc3Vic2NyaWJlcjtcbiAgICAgICAgcmV0dXJuIHRhcmdldFtwcm9wXTtcbiAgICAgIH0sXG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIG9iajtcbn1cblxuLyoqXG4gKiBAYWxwaGFcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVud3JhcFN1YnNjcmliZXI8VCBleHRlbmRzIHt9PihvYmo6IFQpIHtcbiAgaWYgKG9iaiAmJiB0eXBlb2Ygb2JqID09PSAnb2JqZWN0Jykge1xuICAgIGNvbnN0IHByb3h5ID0gKG9iaiBhcyBhbnkpW1FPamVjdE9yaWdpbmFsUHJveHldO1xuICAgIGlmIChwcm94eSkge1xuICAgICAgcmV0dXJuIHByb3h5O1xuICAgIH1cbiAgfVxuICByZXR1cm4gb2JqO1xufVxuIl19","import { EMPTY_ARRAY } from '../util/flyweight';\nimport { isQrl, QRLInternal } from './qrl-class';\nimport { assertEqual } from '../assert/assert';\nimport { getDocument } from '../util/dom';\nimport { logError } from '../util/log';\nimport { then } from '../util/promises';\nimport { getPlatform } from '../platform/platform';\nimport { unwrapSubscriber } from '../use/use-subscriber';\nimport { tryGetInvokeContext } from '../use/use-core';\nlet runtimeSymbolId = 0;\nconst RUNTIME_QRL = '/runtimeQRL';\n// https://regexr.com/68v72\nconst EXTRACT_IMPORT_PATH = /\\(\\s*(['\"])([^\\1]+)\\1\\s*\\)/;\n// https://regexr.com/690ds\nconst EXTRACT_SELF_IMPORT = /Promise\\s*\\.\\s*resolve/;\n// https://regexr.com/6a83h\nconst EXTRACT_FILE_NAME = /[\\\\/(]([\\w\\d.\\-_]+\\.(js|ts)x?):/;\nexport function toInternalQRL(qrl) {\n    assertEqual(isQrl(qrl), true);\n    return qrl;\n}\n// <docs markdown=\"https://hackmd.io/m5DzCi5MTa26LuUj5t3HpQ#qrlImport\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fm5DzCi5MTa26LuUj5t3HpQ%3Fboth#qrlImport instead)\n/**\n * Lazy-load a `QRL` symbol and return the lazy-loaded value.\n *\n * See: `QRL`\n *\n * @param element - Location of the URL to resolve against. This is needed to take `q:base` into\n * account.\n * @param qrl - QRL to load.\n * @returns A resolved QRL value as a Promise.\n */\n// </docs>\nexport function qrlImport(element, qrl) {\n    const qrl_ = toInternalQRL(qrl);\n    if (qrl_.symbolRef)\n        return qrl_.symbolRef;\n    if (qrl_.symbolFn) {\n        return (qrl_.symbolRef = qrl_\n            .symbolFn()\n            .then((module) => (qrl_.symbolRef = module[qrl_.symbol])));\n    }\n    else {\n        if (!element) {\n            throw new Error(`QRL '${qrl_.chunk}#${qrl_.symbol || 'default'}' does not have an attached container`);\n        }\n        const symbol = getPlatform(getDocument(element)).importSymbol(element, qrl_.chunk, qrl_.symbol);\n        return (qrl_.symbolRef = then(symbol, (ref) => {\n            return (qrl_.symbolRef = ref);\n        }));\n    }\n}\n// <docs markdown=\"https://hackmd.io/m5DzCi5MTa26LuUj5t3HpQ#qrl\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fm5DzCi5MTa26LuUj5t3HpQ%3Fboth#qrl instead)\n/**\n * Used by Qwik Optimizer to point to lazy-loaded resources.\n *\n * This function should be used by the Qwik Optimizer only. The function should not be directly\n * referred to in the source code of the application.\n *\n * See: `QRL`, `$(...)`\n *\n * @param chunkOrFn - Chunk name (or function which is stringified to extract chunk name)\n * @param symbol - Symbol to lazy load\n * @param lexicalScopeCapture - a set of lexically scoped variables to capture.\n * @public\n */\n// </docs>\nexport function qrl(chunkOrFn, symbol, lexicalScopeCapture = EMPTY_ARRAY) {\n    let chunk;\n    let symbolFn = null;\n    if (typeof chunkOrFn === 'string') {\n        chunk = chunkOrFn;\n    }\n    else if (typeof chunkOrFn === 'function') {\n        symbolFn = chunkOrFn;\n        let match;\n        const srcCode = String(chunkOrFn);\n        if ((match = srcCode.match(EXTRACT_IMPORT_PATH)) && match[2]) {\n            chunk = match[2];\n        }\n        else if ((match = srcCode.match(EXTRACT_SELF_IMPORT))) {\n            const ref = 'QWIK-SELF';\n            const frames = new Error(ref).stack.split('\\n');\n            const start = frames.findIndex((f) => f.includes(ref));\n            const frame = frames[start + 2];\n            match = frame.match(EXTRACT_FILE_NAME);\n            if (!match) {\n                chunk = 'main';\n            }\n            else {\n                chunk = match[1];\n            }\n        }\n        else {\n            throw new Error('Q-ERROR: Dynamic import not found: ' + srcCode);\n        }\n    }\n    else {\n        throw new Error('Q-ERROR: Unknown type argument: ' + chunkOrFn);\n    }\n    // Unwrap subscribers\n    if (Array.isArray(lexicalScopeCapture)) {\n        for (let i = 0; i < lexicalScopeCapture.length; i++) {\n            lexicalScopeCapture[i] = unwrapSubscriber(lexicalScopeCapture[i]);\n        }\n    }\n    const qrl = new QRLInternal(chunk, symbol, null, symbolFn, null, lexicalScopeCapture);\n    const ctx = tryGetInvokeContext();\n    if (ctx && ctx.element) {\n        qrl.setContainer(ctx.element);\n    }\n    return qrl;\n}\nexport function runtimeQrl(symbol, lexicalScopeCapture = EMPTY_ARRAY) {\n    return new QRLInternal(RUNTIME_QRL, 's' + runtimeSymbolId++, symbol, null, null, lexicalScopeCapture);\n}\nexport function stringifyQRL(qrl, opts = {}) {\n    const qrl_ = toInternalQRL(qrl);\n    const symbol = qrl_.symbol;\n    const platform = opts.platform;\n    const element = opts.element;\n    const chunk = platform ? platform.chunkForSymbol(symbol) ?? qrl_.chunk : qrl_.chunk;\n    const parts = [chunk];\n    if (symbol && symbol !== 'default') {\n        parts.push('#', symbol);\n    }\n    const capture = qrl_.capture;\n    const captureRef = qrl_.captureRef;\n    if (opts.getObjId) {\n        if (captureRef && captureRef.length) {\n            const capture = captureRef.map(opts.getObjId);\n            parts.push(`[${capture.join(' ')}]`);\n        }\n    }\n    else if (capture && capture.length > 0) {\n        parts.push(`[${capture.join(' ')}]`);\n    }\n    const qrlString = parts.join('');\n    if (qrl_.chunk === RUNTIME_QRL && element) {\n        const qrls = element.__qrls__ || (element.__qrls__ = new Set());\n        qrls.add(qrl);\n    }\n    return qrlString;\n}\nexport function qrlToUrl(element, qrl) {\n    return new URL(stringifyQRL(qrl), getDocument(element).baseURI);\n}\n/**\n * `./chunk#symbol|symbol.propA.propB|[captures]\n */\nexport function parseQRL(qrl, el) {\n    const endIdx = qrl.length;\n    const hashIdx = indexOf(qrl, 0, '#');\n    const captureIdx = indexOf(qrl, hashIdx, '[');\n    const chunkEndIdx = Math.min(hashIdx, captureIdx);\n    const chunk = qrl.substring(0, chunkEndIdx);\n    const symbolStartIdx = hashIdx == endIdx ? hashIdx : hashIdx + 1;\n    const symbolEndIdx = captureIdx;\n    const symbol = symbolStartIdx == symbolEndIdx ? 'default' : qrl.substring(symbolStartIdx, symbolEndIdx);\n    const captureStartIdx = captureIdx;\n    const captureEndIdx = endIdx;\n    const capture = captureStartIdx === captureEndIdx\n        ? EMPTY_ARRAY\n        : qrl.substring(captureStartIdx + 1, captureEndIdx - 1).split(' ');\n    if (chunk === RUNTIME_QRL) {\n        logError(`Q-ERROR: '${qrl}' is runtime but no instance found on element.`);\n    }\n    const iQrl = new QRLInternal(chunk, symbol, null, null, capture, null);\n    if (el) {\n        iQrl.setContainer(el);\n    }\n    return iQrl;\n}\nfunction indexOf(text, startIdx, char) {\n    const endIdx = text.length;\n    const charIdx = text.indexOf(char, startIdx == endIdx ? 0 : startIdx);\n    return charIdx == -1 ? endIdx : charIdx;\n}\nexport function toQrlOrError(symbolOrQrl) {\n    if (!isQrl(symbolOrQrl)) {\n        if (typeof symbolOrQrl == 'function' || typeof symbolOrQrl == 'string') {\n            symbolOrQrl = runtimeQrl(symbolOrQrl);\n        }\n        else {\n            // TODO(misko): centralize\n            throw new Error(`Q-ERROR Only 'function's and 'string's are supported.`);\n        }\n    }\n    return symbolOrQrl;\n}\n//# sourceMappingURL=data:application/json;base64,","import { toQrlOrError } from '../import/qrl';\nimport { $, implicit$FirstArg } from '../import/qrl.public';\nimport { qPropWriteQRL } from '../props/props-on';\nimport { useWaitOn } from '../use/use-core';\nimport { useHostElement } from '../use/use-host-element.public';\nimport { ComponentScopedStyles, OnRenderProp } from '../util/markers';\nimport { styleKey } from './qrl-styles';\nimport { getContext } from '../props/props';\nimport { jsx } from '../render/jsx/jsx-runtime';\nimport { useSequentialScope } from '../use/use-store.public';\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onUnmount\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onUnmount instead)\n/**\n * A lazy-loadable reference to a component's destroy hook.\n *\n * Invoked when the component is destroyed (removed from render tree).\n *\n * @public\n */\n// </docs>\nexport function onUnmountQrl(unmountFn) {\n    throw new Error('IMPLEMENT: onUnmount' + unmountFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onUnmount\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onUnmount instead)\n/**\n * A lazy-loadable reference to a component's destroy hook.\n *\n * Invoked when the component is destroyed (removed from render tree).\n *\n * @public\n */\n// </docs>\nexport const onUnmount$ = implicit$FirstArg(onUnmountQrl);\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onResume\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onResume instead)\n/**\n * A lazy-loadable reference to a component's on resume hook.\n *\n * The hook is eagerly invoked when the application resumes on the client. Because it is called\n * eagerly, this allows the component to resume even if no user interaction has taken place.\n *\n * @public\n */\n// </docs>\nexport function onResumeQrl(resumeFn) {\n    onWindow('load', resumeFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onHydrate\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onHydrate instead)\n/**\n * A lazy-loadable reference to a component's on resume hook.\n *\n * Invoked when the component's state is re-resumed from serialization. This allows the\n * component to do any work to re-activate itself.\n *\n * @public\n */\n// </docs>\nexport const onResume$ = implicit$FirstArg(onResumeQrl);\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#OnPause\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#OnPause instead)\n/**\n * A lazy-loadable reference to a component's on dehydrate hook.\n *\n * Invoked when the component's state is being serialized (dehydrated) into the DOM. This allows\n * the component to do last-minute clean-up before its state is serialized.\n *\n * Typically used with transient state.\n *\n * @public\n */\n// </docs>\nexport function onPauseQrl(dehydrateFn) {\n    throw new Error('IMPLEMENT: onPause' + dehydrateFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#OnPause\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#OnPause instead)\n/**\n * A lazy-loadable reference to a component's on dehydrate hook.\n *\n * Invoked when the component's state is being serialized (dehydrated) into the DOM. This allows\n * the component to do last-minute clean-up before its state is serialized.\n *\n * Typically used with transient state.\n *\n * @public\n */\n// </docs>\nexport const onPause$ = implicit$FirstArg(onPauseQrl);\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#on\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#on instead)\n/**\n * Register a listener on the current component's host element.\n *\n * Used to programmatically add event listeners. Useful from custom `use*` methods, which do not\n * have access to the JSX.\n *\n * See: `on`, `onWindow`, `onDocument`.\n *\n * @public\n */\n// </docs>\nexport function on(event, eventFn) {\n    const el = useHostElement();\n    const ctx = getContext(el);\n    qPropWriteQRL(undefined, ctx, `on:${event}`, eventFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onDocument\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onDocument instead)\n/**\n * Register a listener on `document`.\n *\n * Used to programmatically add event listeners. Useful from custom `use*` methods, which do not\n * have access to the JSX.\n *\n * See: `on`, `onWindow`, `onDocument`.\n *\n * @public\n */\n// </docs>\nexport function onDocument(event, eventFn) {\n    const el = useHostElement();\n    const ctx = getContext(el);\n    qPropWriteQRL(undefined, ctx, `on-document:${event}`, eventFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onWindow\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onWindow instead)\n/**\n * Register a listener on `window`.\n *\n * Used to programmatically add event listeners. Useful from custom `use*` methods, which do not\n * have access to the JSX.\n *\n * See: `on`, `onWindow`, `onDocument`.\n *\n * @public\n */\n// </docs>\nexport function onWindow(event, eventFn) {\n    const el = useHostElement();\n    const ctx = getContext(el);\n    qPropWriteQRL(undefined, ctx, `on-window:${event}`, eventFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#useStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#useStyles instead)\n/**\n * Refer to component styles.\n *\n * @alpha\n */\n// </docs>\nexport function useStylesQrl(styles) {\n    _useStyles(styles, false);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#useStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#useStyles instead)\n/**\n * Refer to component styles.\n *\n * @alpha\n */\n// </docs>\nexport const useStyles$ = implicit$FirstArg(useStylesQrl);\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#useScopedStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#useScopedStyles instead)\n/**\n * @alpha\n */\n// </docs>\nexport function useScopedStylesQrl(styles) {\n    _useStyles(styles, true);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#useScopedStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#useScopedStyles instead)\n/**\n * @alpha\n */\n// </docs>\nexport const useScopedStyles$ = implicit$FirstArg(useScopedStylesQrl);\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#component\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#component instead)\n/**\n * Declare a Qwik component that can be used to create UI.\n *\n * Use `component` (and `component$`) to declare a Qwik component. A Qwik component is a special\n * kind of component that allows the Qwik framework to lazy load and execute the component\n * independently of other Qwik components as well as lazy load the component's life-cycle hooks\n * and event handlers.\n *\n * Side note: You can also declare regular (standard JSX) components that will have standard\n * synchronous behavior.\n *\n * Qwik component is a facade that describes how the component should be used without forcing the\n * implementation of the component to be eagerly loaded. A minimum Qwik definition consists of:\n *\n * - Component `onMount` method, which needs to return an\n * - `onRender` closure which constructs the component's JSX.\n *\n * ### Example:\n *\n * An example showing how to create a counter component:\n *\n * ```typescript\n * export const Counter = component$((props: { value?: number; step?: number }) => {\n *   const state = useStore({ count: props.value || 0 });\n *   return $(() => (\n *     <div>\n *       <span>{state.count}</span>\n *       <button onClick$={() => (state.count += props.step || 1)}>+</button>\n *     </div>\n *   ));\n * });\n * ```\n *\n * - `component$` is how a component gets declared.\n * - `{ value?: number; step?: number }` declares the public (props) interface of the component.\n * - `{ count: number }` declares the private (state) interface of the component.\n * - `onMount` closure: is used to create the data store (see: `useStore`);\n * - `$`: mark which parts of the component will be lazy-loaded. (see `$` for details.)\n *\n * The above can then be used like so:\n *\n * ```typescript\n * export const OtherComponent = component$(() => {\n *   return $(() => <Counter value={100} />);\n * });\n * ```\n *\n * See also: `component`, `onUnmount`, `onHydrate`, `OnPause`, `onHalt`, `onResume`, `on`,\n * `onDocument`, `onWindow`, `useStyles`, `useScopedStyles`\n *\n * @param onMount - Initialization closure used when the component is first created.\n * @param tagName - Optional components options. It can be used to set a custom tag-name to be\n * used for the component's host element.\n *\n * @public\n */\n// </docs>\nexport function componentQrl(onRenderQrl, options = {}) {\n    const tagName = options.tagName ?? 'div';\n    // Return a QComponent Factory function.\n    return function QSimpleComponent(props, key) {\n        return jsx(tagName, { [OnRenderProp]: onRenderQrl, ...props }, key);\n    };\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#component\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#component instead)\n/**\n * Declare a Qwik component that can be used to create UI.\n *\n * Use `component` (and `component$`) to declare a Qwik component. A Qwik component is a special\n * kind of component that allows the Qwik framework to lazy load and execute the component\n * independently of other Qwik components as well as lazy load the component's life-cycle hooks\n * and event handlers.\n *\n * Side note: You can also declare regular (standard JSX) components that will have standard\n * synchronous behavior.\n *\n * Qwik component is a facade that describes how the component should be used without forcing the\n * implementation of the component to be eagerly loaded. A minimum Qwik definition consists of:\n *\n * - Component `onMount` method, which needs to return an\n * - `onRender` closure which constructs the component's JSX.\n *\n * ### Example:\n *\n * An example showing how to create a counter component:\n *\n * ```typescript\n * export const Counter = component$((props: { value?: number; step?: number }) => {\n *   const state = useStore({ count: props.value || 0 });\n *   return $(() => (\n *     <div>\n *       <span>{state.count}</span>\n *       <button onClick$={() => (state.count += props.step || 1)}>+</button>\n *     </div>\n *   ));\n * });\n * ```\n *\n * - `component$` is how a component gets declared.\n * - `{ value?: number; step?: number }` declares the public (props) interface of the component.\n * - `{ count: number }` declares the private (state) interface of the component.\n * - `onMount` closure: is used to create the data store (see: `useStore`);\n * - `$`: mark which parts of the component will be lazy-loaded. (see `$` for details.)\n *\n * The above can then be used like so:\n *\n * ```typescript\n * export const OtherComponent = component$(() => {\n *   return $(() => <Counter value={100} />);\n * });\n * ```\n *\n * See also: `component`, `onUnmount`, `onHydrate`, `OnPause`, `onHalt`, `onResume`, `on`,\n * `onDocument`, `onWindow`, `useStyles`, `useScopedStyles`\n *\n * @param onMount - Initialization closure used when the component is first created.\n * @param tagName - Optional components options. It can be used to set a custom tag-name to be\n * used for the component's host element.\n *\n * @public\n */\n// </docs>\nexport function component$(onMount, options) {\n    return componentQrl($(onMount), options);\n}\nfunction _useStyles(styles, scoped) {\n    const [style, setStyle] = useSequentialScope();\n    if (style === true) {\n        return;\n    }\n    setStyle(true);\n    const styleQrl = toQrlOrError(styles);\n    const styleId = styleKey(styleQrl);\n    const hostElement = useHostElement();\n    if (scoped) {\n        hostElement.setAttribute(ComponentScopedStyles, styleId);\n    }\n    useWaitOn(styleQrl.resolve(hostElement).then((styleText) => {\n        const task = {\n            type: 'style',\n            styleId,\n            content: scoped ? styleText.replace(/�/g, styleId) : styleText,\n        };\n        return task;\n    }));\n}\n//# sourceMappingURL=data:application/json;base64,","import { getDocument } from '../util/dom';\nimport { isDocument } from '../util/element';\nimport { QContainerAttr } from '../util/markers';\nimport { qDev } from '../util/qdev';\nimport { snapshotState } from './store';\n/**\n * Serialize the current state of the application into DOM\n *\n * @public\n */\nexport function pauseContainer(elmOrDoc) {\n    const doc = getDocument(elmOrDoc);\n    const containerEl = isDocument(elmOrDoc) ? elmOrDoc.documentElement : elmOrDoc;\n    const parentJSON = isDocument(elmOrDoc) ? elmOrDoc.body : containerEl;\n    const data = snapshotState(containerEl);\n    const script = doc.createElement('script');\n    script.setAttribute('type', 'qwik/json');\n    script.textContent = JSON.stringify(data, undefined, qDev ? '  ' : undefined);\n    parentJSON.appendChild(script);\n    containerEl.setAttribute(QContainerAttr, 'paused');\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmUucHVibGljLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9vYmplY3Qvc3RvcmUucHVibGljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDMUMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ3BDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFeEM7Ozs7R0FJRztBQUNILE1BQU0sVUFBVSxjQUFjLENBQUMsUUFBNEI7SUFDekQsTUFBTSxHQUFHLEdBQUcsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xDLE1BQU0sV0FBVyxHQUFHLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDO0lBQy9FLE1BQU0sVUFBVSxHQUFHLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDO0lBQ3RFLE1BQU0sSUFBSSxHQUFHLGFBQWEsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN4QyxNQUFNLE1BQU0sR0FBRyxHQUFHLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzNDLE1BQU0sQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ3pDLE1BQU0sQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM5RSxVQUFVLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQy9CLFdBQVcsQ0FBQyxZQUFZLENBQUMsY0FBYyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0FBQ3JELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXREb2N1bWVudCB9IGZyb20gJy4uL3V0aWwvZG9tJztcbmltcG9ydCB7IGlzRG9jdW1lbnQgfSBmcm9tICcuLi91dGlsL2VsZW1lbnQnO1xuaW1wb3J0IHsgUUNvbnRhaW5lckF0dHIgfSBmcm9tICcuLi91dGlsL21hcmtlcnMnO1xuaW1wb3J0IHsgcURldiB9IGZyb20gJy4uL3V0aWwvcWRldic7XG5pbXBvcnQgeyBzbmFwc2hvdFN0YXRlIH0gZnJvbSAnLi9zdG9yZSc7XG5cbi8qKlxuICogU2VyaWFsaXplIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBhcHBsaWNhdGlvbiBpbnRvIERPTVxuICpcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhdXNlQ29udGFpbmVyKGVsbU9yRG9jOiBFbGVtZW50IHwgRG9jdW1lbnQpIHtcbiAgY29uc3QgZG9jID0gZ2V0RG9jdW1lbnQoZWxtT3JEb2MpO1xuICBjb25zdCBjb250YWluZXJFbCA9IGlzRG9jdW1lbnQoZWxtT3JEb2MpID8gZWxtT3JEb2MuZG9jdW1lbnRFbGVtZW50IDogZWxtT3JEb2M7XG4gIGNvbnN0IHBhcmVudEpTT04gPSBpc0RvY3VtZW50KGVsbU9yRG9jKSA/IGVsbU9yRG9jLmJvZHkgOiBjb250YWluZXJFbDtcbiAgY29uc3QgZGF0YSA9IHNuYXBzaG90U3RhdGUoY29udGFpbmVyRWwpO1xuICBjb25zdCBzY3JpcHQgPSBkb2MuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG4gIHNjcmlwdC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAncXdpay9qc29uJyk7XG4gIHNjcmlwdC50ZXh0Q29udGVudCA9IEpTT04uc3RyaW5naWZ5KGRhdGEsIHVuZGVmaW5lZCwgcURldiA/ICcgICcgOiB1bmRlZmluZWQpO1xuICBwYXJlbnRKU09OLmFwcGVuZENoaWxkKHNjcmlwdCk7XG4gIGNvbnRhaW5lckVsLnNldEF0dHJpYnV0ZShRQ29udGFpbmVyQXR0ciwgJ3BhdXNlZCcpO1xufVxuIl19","/**\n * Use to render asynchronous (`Promise`) values.\n *\n * A `Promise` does not allow a synchronous examination of its state. For this reason\n * `<Async>` provides a mechanism to render pending, resolved and error state of a `Promise`.\n * `<Async>` provides that mechanism by registering a `then` method with the `Promise` and\n * providing callbacks hooks for `pending`, `resolved` and `rejected` state of the promise.\n *\n * Additionally, `<Async>` automatically re-renders the portion of the view when the status\n * of the `Promise` changes.\n *\n * `<Async>` provides three callbacks:\n * - `onPending`: invoked initially to provide a way for the template to provide output while\n *   waiting for the `promise` to resolve.\n * - `onResolved`: invoked when the `promise` is `resolved` allowing the template to generate\n *   output using the `resolved` value.\n * - `onError`: invoked when the `promise` is `rejected` allowing the template to generate\n *   error output describing the problem.\n *\n * The `<Async>` can be used in two ways, which are semantically equivalent and are provided\n * based on the developer needs/preferences.\n *\n * ### Using multiple callbacks\n *\n * ```typescript\n * <Async\n *   resolve={Promise.resolve('some value')}\n *   onPending={() => <span>loading...</span>}\n *   onResolved={(value) => <span>{value}</span>}\n *   onError={(rejection) => <pre>{rejection}</pre>}\n * />\n * ```\n *\n * ### Using single callbacks\n *\n * ```typescript\n * <Async resolve={Promise.resolve('some value')}>\n *   {(response) => {\n *     if (response.isPending) return <span>loading...</span>;\n *     if (response.isResolved) return <span>{response.value}</span>;\n *     if (response.isRejected) return <pre>{response.rejection}</pre>;\n *   }}\n * </Async>\n * ```\n *\n * @param onPending - invoked initially to provide a way for the template to provide output while\n *   waiting for the `promise` to resolve.\n * @param onResolved - invoked when the `promise` is `resolved` allowing the template to generate\n *   output using the `resolved` value.\n * @param onError - invoked when the `promise` is `rejected` allowing the template to generate\n *   error output describing the problem.\n * @param children -  a single callback function for `onPending`, `onResolved` and `onError`.\n *   (Use either `children` or `onPending`, `onResolved` and `onError`, but not both.)\n *   See \"Using multiple callbacks\" vs \"Using single callbacks\" above.\n *\n * @public\n */\nexport function Async(props) {\n    // TODO(misko): implement onPending/onResolved/onError\n    if (!('children' in props)) {\n        throw new Error('IMPLEMENT');\n    }\n    const children = [props.children].flat()[0];\n    const renderFn = typeof children == 'function' ? children : null;\n    const promiseValue = {\n        isPending: true,\n        isResolved: false,\n        value: undefined,\n        isRejected: false,\n        rejection: undefined,\n    };\n    let pending;\n    const jsxPromise = new Promise((resolve, reject) => {\n        pending = renderFn && renderFn(promiseValue);\n        Promise.resolve(props.resolve).then((value) => {\n            promiseValue.isPending = false;\n            promiseValue.isResolved = true;\n            promiseValue.value = value;\n            return resolve(renderFn && renderFn(promiseValue));\n        }, (error) => {\n            promiseValue.isPending = false;\n            promiseValue.isRejected = true;\n            promiseValue.rejection = error;\n            return reject(renderFn && renderFn(promiseValue));\n        });\n    });\n    jsxPromise.whilePending = pending;\n    return jsxPromise;\n}\n//# sourceMappingURL=data:application/json;base64,","/* eslint-disable */\nimport { flattenArray } from '../../util/array';\nimport { EMPTY_ARRAY } from '../../util/flyweight';\nimport { JSXNodeImpl } from './jsx-runtime';\n/**\n * @public\n */\nexport function h(type, props, ...children) {\n    // Using legacy h() jsx transform and morphing it\n    // so it can use the modern vdom structure\n    // https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html\n    // https://www.typescriptlang.org/tsconfig#jsxImportSource\n    const normalizedProps = {\n        children: arguments.length > 2 ? flattenArray(children) : EMPTY_ARRAY,\n    };\n    let key;\n    let i;\n    for (i in props) {\n        if (i == 'key')\n            key = props[i];\n        else\n            normalizedProps[i] = props[i];\n    }\n    return new JSXNodeImpl(type, normalizedProps, key);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvcmVuZGVyL2pzeC9mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFJNUM7O0dBRUc7QUFDSCxNQUFNLFVBQVUsQ0FBQyxDQUNmLElBQXVDLEVBQ3ZDLEtBQW1CLEVBQ25CLEdBQUcsUUFBZTtJQUVsQixpREFBaUQ7SUFDakQsMENBQTBDO0lBQzFDLDZFQUE2RTtJQUM3RSwwREFBMEQ7SUFFMUQsTUFBTSxlQUFlLEdBQVE7UUFDM0IsUUFBUSxFQUFFLFNBQVMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVc7S0FDdEUsQ0FBQztJQUVGLElBQUksR0FBUSxDQUFDO0lBQ2IsSUFBSSxDQUFNLENBQUM7SUFFWCxLQUFLLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFDZixJQUFJLENBQUMsSUFBSSxLQUFLO1lBQUUsR0FBRyxHQUFJLEtBQTZCLENBQUMsQ0FBQyxDQUFDLENBQUM7O1lBQ25ELGVBQWUsQ0FBQyxDQUFDLENBQUMsR0FBSSxLQUE2QixDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQzdEO0lBRUQsT0FBTyxJQUFJLFdBQVcsQ0FBQyxJQUFJLEVBQUUsZUFBZSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQ3JELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSAqL1xuaW1wb3J0IHsgZmxhdHRlbkFycmF5IH0gZnJvbSAnLi4vLi4vdXRpbC9hcnJheSc7XG5pbXBvcnQgeyBFTVBUWV9BUlJBWSB9IGZyb20gJy4uLy4uL3V0aWwvZmx5d2VpZ2h0JztcbmltcG9ydCB7IEpTWE5vZGVJbXBsIH0gZnJvbSAnLi9qc3gtcnVudGltZSc7XG5pbXBvcnQgdHlwZSB7IFF3aWtKU1ggfSBmcm9tICcuL3R5cGVzL2pzeC1xd2lrJztcbmltcG9ydCB0eXBlIHsgRnVuY3Rpb25Db21wb25lbnQsIEpTWE5vZGUgfSBmcm9tICcuL3R5cGVzL2pzeC1ub2RlJztcblxuLyoqXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBoPFBST1BTIGV4dGVuZHMge30gPSB7fT4oXG4gIHR5cGU6IHN0cmluZyB8IEZ1bmN0aW9uQ29tcG9uZW50PFBST1BTPixcbiAgcHJvcHM6IFBST1BTIHwgbnVsbCxcbiAgLi4uY2hpbGRyZW46IGFueVtdXG4pOiBKU1hOb2RlIHtcbiAgLy8gVXNpbmcgbGVnYWN5IGgoKSBqc3ggdHJhbnNmb3JtIGFuZCBtb3JwaGluZyBpdFxuICAvLyBzbyBpdCBjYW4gdXNlIHRoZSBtb2Rlcm4gdmRvbSBzdHJ1Y3R1cmVcbiAgLy8gaHR0cHM6Ly9yZWFjdGpzLm9yZy9ibG9nLzIwMjAvMDkvMjIvaW50cm9kdWNpbmctdGhlLW5ldy1qc3gtdHJhbnNmb3JtLmh0bWxcbiAgLy8gaHR0cHM6Ly93d3cudHlwZXNjcmlwdGxhbmcub3JnL3RzY29uZmlnI2pzeEltcG9ydFNvdXJjZVxuXG4gIGNvbnN0IG5vcm1hbGl6ZWRQcm9wczogYW55ID0ge1xuICAgIGNoaWxkcmVuOiBhcmd1bWVudHMubGVuZ3RoID4gMiA/IGZsYXR0ZW5BcnJheShjaGlsZHJlbikgOiBFTVBUWV9BUlJBWSxcbiAgfTtcblxuICBsZXQga2V5OiBhbnk7XG4gIGxldCBpOiBhbnk7XG5cbiAgZm9yIChpIGluIHByb3BzKSB7XG4gICAgaWYgKGkgPT0gJ2tleScpIGtleSA9IChwcm9wcyBhcyBSZWNvcmQ8c3RyaW5nLCBhbnk+KVtpXTtcbiAgICBlbHNlIG5vcm1hbGl6ZWRQcm9wc1tpXSA9IChwcm9wcyBhcyBSZWNvcmQ8c3RyaW5nLCBhbnk+KVtpXTtcbiAgfVxuXG4gIHJldHVybiBuZXcgSlNYTm9kZUltcGwodHlwZSwgbm9ybWFsaXplZFByb3BzLCBrZXkpO1xufVxuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGRlY2xhcmUgbmFtZXNwYWNlIGgge1xuICBleHBvcnQgZnVuY3Rpb24gaCh0eXBlOiBhbnkpOiBKU1hOb2RlPGFueT47XG4gIGV4cG9ydCBmdW5jdGlvbiBoKHR5cGU6IE5vZGUsIGRhdGE6IGFueSk6IEpTWE5vZGU8YW55PjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGgodHlwZTogYW55LCB0ZXh0OiBzdHJpbmcpOiBKU1hOb2RlPGFueT47XG4gIGV4cG9ydCBmdW5jdGlvbiBoKHR5cGU6IGFueSwgY2hpbGRyZW46IEFycmF5PGFueT4pOiBKU1hOb2RlPGFueT47XG4gIGV4cG9ydCBmdW5jdGlvbiBoKHR5cGU6IGFueSwgZGF0YTogYW55LCB0ZXh0OiBzdHJpbmcpOiBKU1hOb2RlPGFueT47XG4gIGV4cG9ydCBmdW5jdGlvbiBoKFxuICAgIHR5cGU6IGFueSxcbiAgICBkYXRhOiBhbnksXG4gICAgY2hpbGRyZW46IEFycmF5PEpTWE5vZGU8YW55PiB8IHVuZGVmaW5lZCB8IG51bGw+XG4gICk6IEpTWE5vZGU8YW55PjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGgoc2VsOiBhbnksIGRhdGE6IGFueSB8IG51bGwsIGNoaWxkcmVuOiBKU1hOb2RlPGFueT4pOiBKU1hOb2RlPGFueT47XG5cbiAgZXhwb3J0IG5hbWVzcGFjZSBKU1gge1xuICAgIGV4cG9ydCBpbnRlcmZhY2UgRWxlbWVudCBleHRlbmRzIFF3aWtKU1guRWxlbWVudCB7fVxuICAgIGV4cG9ydCBpbnRlcmZhY2UgSW50cmluc2ljQXR0cmlidXRlcyBleHRlbmRzIFF3aWtKU1guSW50cmluc2ljQXR0cmlidXRlcyB7fVxuICAgIGV4cG9ydCBpbnRlcmZhY2UgSW50cmluc2ljRWxlbWVudHMgZXh0ZW5kcyBRd2lrSlNYLkludHJpbnNpY0VsZW1lbnRzIHt9XG4gICAgZXhwb3J0IGludGVyZmFjZSBFbGVtZW50Q2hpbGRyZW5BdHRyaWJ1dGUge1xuICAgICAgY2hpbGRyZW4/OiBhbnk7XG4gICAgfVxuICB9XG59XG4iXX0=","import { jsx } from './jsx-runtime';\n/**\n * @public\n */\nexport const Slot = (props) => {\n    const hasChildren = props.children || (Array.isArray(props.children) && props.children.length > 0);\n    const newChildrem = !hasChildren\n        ? []\n        : jsx('q:fallback', {\n            children: props.children,\n        });\n    return jsx('q:slot', {\n        name: props.name,\n        children: newChildrem,\n    }, props.name);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xvdC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3JlbmRlci9qc3gvc2xvdC5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUdwQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLElBQUksR0FHWixDQUFDLEtBQUssRUFBRSxFQUFFO0lBQ2IsTUFBTSxXQUFXLEdBQ2YsS0FBSyxDQUFDLFFBQVEsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEtBQUssQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2pGLE1BQU0sV0FBVyxHQUFHLENBQUMsV0FBVztRQUM5QixDQUFDLENBQUMsRUFBRTtRQUNKLENBQUMsQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFO1lBQ2hCLFFBQVEsRUFBRSxLQUFLLENBQUMsUUFBUTtTQUN6QixDQUFDLENBQUM7SUFFUCxPQUFPLEdBQUcsQ0FDUixRQUFRLEVBQ1I7UUFDRSxJQUFJLEVBQUUsS0FBSyxDQUFDLElBQUk7UUFDaEIsUUFBUSxFQUFFLFdBQVc7S0FDdEIsRUFDRCxLQUFLLENBQUMsSUFBSSxDQUNYLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBqc3ggfSBmcm9tICcuL2pzeC1ydW50aW1lJztcbmltcG9ydCB0eXBlIHsgRnVuY3Rpb25Db21wb25lbnQgfSBmcm9tICcuL3R5cGVzL2pzeC1ub2RlJztcblxuLyoqXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBjb25zdCBTbG90OiBGdW5jdGlvbkNvbXBvbmVudDx7XG4gIG5hbWU/OiBzdHJpbmc7XG4gIGNoaWxkcmVuPzogYW55O1xufT4gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgaGFzQ2hpbGRyZW4gPVxuICAgIHByb3BzLmNoaWxkcmVuIHx8IChBcnJheS5pc0FycmF5KHByb3BzLmNoaWxkcmVuKSAmJiBwcm9wcy5jaGlsZHJlbi5sZW5ndGggPiAwKTtcbiAgY29uc3QgbmV3Q2hpbGRyZW0gPSAhaGFzQ2hpbGRyZW5cbiAgICA/IFtdXG4gICAgOiBqc3goJ3E6ZmFsbGJhY2snLCB7XG4gICAgICAgIGNoaWxkcmVuOiBwcm9wcy5jaGlsZHJlbixcbiAgICAgIH0pO1xuXG4gIHJldHVybiBqc3goXG4gICAgJ3E6c2xvdCcsXG4gICAge1xuICAgICAgbmFtZTogcHJvcHMubmFtZSxcbiAgICAgIGNoaWxkcmVuOiBuZXdDaGlsZHJlbSxcbiAgICB9LFxuICAgIHByb3BzLm5hbWVcbiAgKTtcbn07XG4iXX0=","/**\n * @alpha\n */\nexport const version = globalThis.QWIK_VERSION;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVyc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdmVyc2lvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLE9BQU8sR0FBSSxVQUFrQixDQUFDLFlBQXNCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBhbHBoYVxuICovXG5leHBvcnQgY29uc3QgdmVyc2lvbiA9IChnbG9iYWxUaGlzIGFzIGFueSkuUVdJS19WRVJTSU9OIGFzIHN0cmluZztcbiJdfQ==","import { isDocument } from '../util/element';\nimport { executeContext, printRenderStats } from './cursor';\nimport { isJSXNode, jsx, processNode } from './jsx/jsx-runtime';\nimport { visitJsxNode } from './render';\nimport { getRenderingState } from './notify-render';\nimport { getDocument } from '../util/dom';\nimport { qDev, qTest } from '../util/qdev';\nimport { version } from '../version';\nimport { QContainerAttr } from '../util/markers';\nimport { logError } from '../util/log';\nimport { isWatchDescriptor, runWatch } from '../watch/watch.public';\nimport { getContext } from '../props/props';\n/**\n * Render JSX.\n *\n * Use this method to render JSX. This function does reconciling which means\n * it always tries to reuse what is already in the DOM (rather then destroy and\n * recrate content.)\n *\n * @param parent - Element which will act as a parent to `jsxNode`. When\n *     possible the rendering will try to reuse existing nodes.\n * @param jsxNode - JSX to render\n * @public\n */\nexport async function render(parent, jsxNode) {\n    // If input is not JSX, convert it\n    if (!isJSXNode(jsxNode)) {\n        jsxNode = jsx(jsxNode, null);\n    }\n    const doc = getDocument(parent);\n    const containerEl = getElement(parent);\n    if (qDev && containerEl.hasAttribute('q:container')) {\n        logError('You can render over a existing q:container. Skipping render().');\n        return;\n    }\n    injectQContainer(containerEl);\n    const ctx = {\n        doc,\n        globalState: getRenderingState(containerEl),\n        hostElements: new Set(),\n        operations: [],\n        roots: [parent],\n        component: undefined,\n        containerEl,\n        perf: {\n            visited: 0,\n            timing: [],\n        },\n    };\n    await visitJsxNode(ctx, parent, processNode(jsxNode), false);\n    executeContext(ctx);\n    if (!qTest) {\n        injectQwikSlotCSS(parent);\n    }\n    if (qDev) {\n        if (typeof window !== 'undefined' && window.document != null) {\n            printRenderStats(ctx);\n        }\n    }\n    const promises = [];\n    ctx.hostElements.forEach((host) => {\n        const elCtx = getContext(host);\n        elCtx.refMap.array.filter(isWatchDescriptor).forEach((watch) => {\n            if (watch.dirty) {\n                promises.push(runWatch(watch));\n            }\n        });\n    });\n    await Promise.all(promises);\n    return ctx;\n}\nexport function injectQwikSlotCSS(docOrElm) {\n    const doc = getDocument(docOrElm);\n    const element = isDocument(docOrElm) ? docOrElm.head : docOrElm;\n    const style = doc.createElement('style');\n    style.setAttribute('id', 'qwik/base-styles');\n    style.textContent = `q\\\\:slot{display:contents}q\\\\:fallback{display:none}q\\\\:fallback:last-child{display:contents}`;\n    element.insertBefore(style, element.firstChild);\n}\nexport function getElement(docOrElm) {\n    return isDocument(docOrElm) ? docOrElm.documentElement : docOrElm;\n}\nexport function injectQContainer(containerEl) {\n    containerEl.setAttribute('q:version', version || '');\n    containerEl.setAttribute(QContainerAttr, 'resumed');\n}\n//# sourceMappingURL=data:application/json;base64,","import { getInvokeContext } from './use-core';\nexport function useURL() {\n    const url = getInvokeContext().url;\n    if (!url) {\n        // TODO(misko): centralize\n        throw new Error('Q-ERROR: no URL is associated with the execution context');\n    }\n    return url;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLXVybC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3VzZS91c2UtdXJsLnB1YmxpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFOUMsTUFBTSxVQUFVLE1BQU07SUFDcEIsTUFBTSxHQUFHLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQyxHQUFHLENBQUM7SUFDbkMsSUFBSSxDQUFDLEdBQUcsRUFBRTtRQUNSLDBCQUEwQjtRQUMxQixNQUFNLElBQUksS0FBSyxDQUFDLDBEQUEwRCxDQUFDLENBQUM7S0FDN0U7SUFDRCxPQUFPLEdBQUksQ0FBQztBQUNkLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRJbnZva2VDb250ZXh0IH0gZnJvbSAnLi91c2UtY29yZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VVUkwoKTogVVJMIHtcbiAgY29uc3QgdXJsID0gZ2V0SW52b2tlQ29udGV4dCgpLnVybDtcbiAgaWYgKCF1cmwpIHtcbiAgICAvLyBUT0RPKG1pc2tvKTogY2VudHJhbGl6ZVxuICAgIHRocm93IG5ldyBFcnJvcignUS1FUlJPUjogbm8gVVJMIGlzIGFzc29jaWF0ZWQgd2l0aCB0aGUgZXhlY3V0aW9uIGNvbnRleHQnKTtcbiAgfVxuICByZXR1cm4gdXJsITtcbn1cbiJdfQ==","import { wrapSubscriber } from './use-subscriber';\nimport { assertDefined } from '../assert/assert';\nimport { parseQRL } from '../import/qrl';\nimport { qInflate } from '../json/q-json';\nimport { getContext, resumeIfNeeded } from '../props/props';\nimport { getContainer, getInvokeContext } from './use-core';\nimport { useURL } from './use-url.public';\n// <docs markdown=\"https://hackmd.io/lQ8v7fyhR-WD3b-2aRUpyw#useLexicalScope\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2FlQ8v7fyhR-WD3b-2aRUpyw%3Fboth#useLexicalScope instead)\n/**\n * Used by the Qwik Optimizer to restore the lexical scoped variables.\n *\n * This method should not be present in the application source code.\n *\n * NOTE: `useLexicalScope` method can only be used in the synchronous portion of the callback\n * (before any `await` statements.)\n *\n * @public\n */\n// </docs>\nexport function useLexicalScope() {\n    const context = getInvokeContext();\n    const hostElement = context.hostElement;\n    const qrl = (context.qrl ??\n        parseQRL(decodeURIComponent(String(useURL())), hostElement));\n    if (qrl.captureRef == null) {\n        const el = context.element;\n        assertDefined(el);\n        resumeIfNeeded(getContainer(el));\n        const ctx = getContext(el);\n        qrl.captureRef = qrl.capture.map((idx) => qInflate(idx, ctx));\n    }\n    const subscriber = context.subscriber;\n    if (subscriber) {\n        return qrl.captureRef.map((obj) => wrapSubscriber(obj, subscriber));\n    }\n    return qrl.captureRef;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWxleGljYWwtc2NvcGUucHVibGljLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS91c2UvdXNlLWxleGljYWwtc2NvcGUucHVibGljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDakQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDMUMsT0FBTyxFQUFFLFVBQVUsRUFBRSxjQUFjLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsWUFBWSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQzVELE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUcxQyw2RUFBNkU7QUFDN0UseUNBQXlDO0FBQ3pDLHlHQUF5RztBQUN6Rzs7Ozs7Ozs7O0dBU0c7QUFDSCxVQUFVO0FBQ1YsTUFBTSxVQUFVLGVBQWU7SUFDN0IsTUFBTSxPQUFPLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQztJQUNuQyxNQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDO0lBQ3hDLE1BQU0sR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUc7UUFDdEIsUUFBUSxDQUFDLGtCQUFrQixDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLEVBQUUsV0FBVyxDQUFDLENBQWdCLENBQUM7SUFDOUUsSUFBSSxHQUFHLENBQUMsVUFBVSxJQUFJLElBQUksRUFBRTtRQUMxQixNQUFNLEVBQUUsR0FBRyxPQUFPLENBQUMsT0FBUSxDQUFDO1FBQzVCLGFBQWEsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNsQixjQUFjLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBRSxDQUFDLENBQUM7UUFDbEMsTUFBTSxHQUFHLEdBQUcsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQzNCLEdBQUcsQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFDLE9BQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztLQUNoRTtJQUNELE1BQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUM7SUFDdEMsSUFBSSxVQUFVLEVBQUU7UUFDZCxPQUFPLEdBQUcsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLFVBQVUsQ0FBQyxDQUFTLENBQUM7S0FDN0U7SUFDRCxPQUFPLEdBQUcsQ0FBQyxVQUFrQixDQUFDO0FBQ2hDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3cmFwU3Vic2NyaWJlciB9IGZyb20gJy4vdXNlLXN1YnNjcmliZXInO1xuaW1wb3J0IHsgYXNzZXJ0RGVmaW5lZCB9IGZyb20gJy4uL2Fzc2VydC9hc3NlcnQnO1xuaW1wb3J0IHsgcGFyc2VRUkwgfSBmcm9tICcuLi9pbXBvcnQvcXJsJztcbmltcG9ydCB7IHFJbmZsYXRlIH0gZnJvbSAnLi4vanNvbi9xLWpzb24nO1xuaW1wb3J0IHsgZ2V0Q29udGV4dCwgcmVzdW1lSWZOZWVkZWQgfSBmcm9tICcuLi9wcm9wcy9wcm9wcyc7XG5pbXBvcnQgeyBnZXRDb250YWluZXIsIGdldEludm9rZUNvbnRleHQgfSBmcm9tICcuL3VzZS1jb3JlJztcbmltcG9ydCB7IHVzZVVSTCB9IGZyb20gJy4vdXNlLXVybC5wdWJsaWMnO1xuaW1wb3J0IHR5cGUgeyBRUkxJbnRlcm5hbCB9IGZyb20gJy4uL2ltcG9ydC9xcmwtY2xhc3MnO1xuXG4vLyA8ZG9jcyBtYXJrZG93bj1cImh0dHBzOi8vaGFja21kLmlvL2xROHY3ZnloUi1XRDNiLTJhUlVweXcjdXNlTGV4aWNhbFNjb3BlXCI+XG4vLyAhIURPIE5PVCBFRElUIFRISVMgQ09NTUVOVCBESVJFQ1RMWSEhIVxuLy8gKGVkaXQgaHR0cHM6Ly9oYWNrbWQuaW8vQHF3aWstZG9jcy9Ca3hwU3o4MFkvJTJGbFE4djdmeWhSLVdEM2ItMmFSVXB5dyUzRmJvdGgjdXNlTGV4aWNhbFNjb3BlIGluc3RlYWQpXG4vKipcbiAqIFVzZWQgYnkgdGhlIFF3aWsgT3B0aW1pemVyIHRvIHJlc3RvcmUgdGhlIGxleGljYWwgc2NvcGVkIHZhcmlhYmxlcy5cbiAqXG4gKiBUaGlzIG1ldGhvZCBzaG91bGQgbm90IGJlIHByZXNlbnQgaW4gdGhlIGFwcGxpY2F0aW9uIHNvdXJjZSBjb2RlLlxuICpcbiAqIE5PVEU6IGB1c2VMZXhpY2FsU2NvcGVgIG1ldGhvZCBjYW4gb25seSBiZSB1c2VkIGluIHRoZSBzeW5jaHJvbm91cyBwb3J0aW9uIG9mIHRoZSBjYWxsYmFja1xuICogKGJlZm9yZSBhbnkgYGF3YWl0YCBzdGF0ZW1lbnRzLilcbiAqXG4gKiBAcHVibGljXG4gKi9cbi8vIDwvZG9jcz5cbmV4cG9ydCBmdW5jdGlvbiB1c2VMZXhpY2FsU2NvcGU8VkFSUyBleHRlbmRzIGFueVtdPigpOiBWQVJTIHtcbiAgY29uc3QgY29udGV4dCA9IGdldEludm9rZUNvbnRleHQoKTtcbiAgY29uc3QgaG9zdEVsZW1lbnQgPSBjb250ZXh0Lmhvc3RFbGVtZW50O1xuICBjb25zdCBxcmwgPSAoY29udGV4dC5xcmwgPz9cbiAgICBwYXJzZVFSTChkZWNvZGVVUklDb21wb25lbnQoU3RyaW5nKHVzZVVSTCgpKSksIGhvc3RFbGVtZW50KSkgYXMgUVJMSW50ZXJuYWw7XG4gIGlmIChxcmwuY2FwdHVyZVJlZiA9PSBudWxsKSB7XG4gICAgY29uc3QgZWwgPSBjb250ZXh0LmVsZW1lbnQhO1xuICAgIGFzc2VydERlZmluZWQoZWwpO1xuICAgIHJlc3VtZUlmTmVlZGVkKGdldENvbnRhaW5lcihlbCkhKTtcbiAgICBjb25zdCBjdHggPSBnZXRDb250ZXh0KGVsKTtcbiAgICBxcmwuY2FwdHVyZVJlZiA9IHFybC5jYXB0dXJlIS5tYXAoKGlkeCkgPT4gcUluZmxhdGUoaWR4LCBjdHgpKTtcbiAgfVxuICBjb25zdCBzdWJzY3JpYmVyID0gY29udGV4dC5zdWJzY3JpYmVyO1xuICBpZiAoc3Vic2NyaWJlcikge1xuICAgIHJldHVybiBxcmwuY2FwdHVyZVJlZi5tYXAoKG9iaikgPT4gd3JhcFN1YnNjcmliZXIob2JqLCBzdWJzY3JpYmVyKSkgYXMgVkFSUztcbiAgfVxuICByZXR1cm4gcXJsLmNhcHR1cmVSZWYgYXMgVkFSUztcbn1cbiJdfQ=="],"names":["isNode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA;AACA;AACO,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,KAAK,KAAK,CAAC;AACvC,MAAM,KAAK,GAAG,UAAU,CAAC,QAAQ,KAAK,SAAS;;ACf/C,MAAM,WAAW,GAAG,EAAE,CAAC;AACvB,MAAM,SAAS,GAAG,EAAE,CAAC;AAC5B,IAAI,IAAI,EAAE;AACV,IAAI,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;AAC/B,IAAI,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAC7B;;ACLA,MAAM,KAAK,GAAG,IAAI;AAClB,MAAM,CAAC,0FAA0F,CAAC;AAClG,MAAM,EAAE,CAAC;AACF,MAAM,QAAQ,GAAG,CAAC,OAAO,EAAE,GAAG,cAAc,KAAK;AACxD;AACA,IAAI,OAAO,CAAC,KAAK,CAAC,cAAc,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,cAAc,CAAC,CAAC;AACrE,CAAC,CAAC;AACK,MAAM,OAAO,GAAG,CAAC,OAAO,EAAE,GAAG,cAAc,KAAK;AACvD;AACA,IAAI,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,cAAc,CAAC,CAAC;AACnE,CAAC,CAAC;AACK,MAAM,QAAQ,GAAG,CAAC,OAAO,EAAE,GAAG,cAAc,KAAK;AACxD,IAAI,IAAI,IAAI,EAAE;AACd;AACA,QAAQ,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,cAAc,CAAC,CAAC;AACnE,KAAK;AACL,CAAC;;ACfM,SAAS,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE;AAC3C,IAAI,IAAI,IAAI,EAAE;AACd,QAAQ,IAAI,KAAK,IAAI,IAAI;AACzB,YAAY,OAAO;AACnB,QAAQ,MAAM,QAAQ,CAAC,IAAI,IAAI,yBAAyB,CAAC,CAAC;AAC1D,KAAK;AACL,CAAC;AAmCM,SAAS,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE;AAClD,IAAI,IAAI,IAAI,EAAE;AACd,QAAQ,IAAI,MAAM,KAAK,MAAM;AAC7B,YAAY,OAAO;AACnB,QAAQ,MAAM,QAAQ,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AACxE,KAAK;AACL,CAAC;AAwCD,SAAS,QAAQ,CAAC,IAAI,EAAE;AACxB,IAAI,SAAS;AACb,IAAI,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;AAClC,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC;AACpB,IAAI,OAAO,KAAK,CAAC;AACjB;;AC9FA;AACA;AACA;AAEA;AACA;AACA;AACO,MAAM,SAAS,GAAG,QAAQ,CAAC;AAC3B,MAAM,YAAY,GAAG,YAAY,CAAC;AAazC;AACA;AACA;AACO,MAAM,qBAAqB,GAAG,UAAU,CAAC;AAKhD;AACA;AACA;AACO,MAAM,yBAAyB,GAAG,IAAI,CAAC;AAC9C;AACA;AACA;AACO,MAAM,4BAA4B,GAAG,IAAI,CAAC;AAcjD;AACA;AACA;AACO,MAAM,SAAS,GAAG,QAAQ,CAAC;AAC3B,MAAM,QAAQ,GAAG,OAAO,CAAC;AACzB,MAAM,QAAQ,GAAG,OAAO,CAAC;AACzB,MAAM,cAAc,GAAG,aAAa,CAAC;AAErC,MAAM,kBAAkB,GAAG,iBAAiB,CAAC;AAC7C,MAAM,WAAW,GAAG,SAAS,CAAC;AAM9B,MAAM,UAAU,GAAG,MAAM,CAAC;AAE1B,MAAM,iBAAiB,GAAG,GAAG;;AClE7B,SAAS,WAAW,CAAC,IAAI,EAAE;AAClC,IAAI,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;AACzC,QAAQ,OAAO,QAAQ,CAAC;AACxB,KAAK;AACL,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;AAC7B,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC;AACjC,IAAI,OAAO,GAAG,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,EAAE;AACtC,QAAQ,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC;AAC7B,KAAK;AACL,IAAI,aAAa,CAAC,GAAG,CAAC,CAAC;AACvB,IAAI,OAAO,GAAG,CAAC;AACf;;ACXO,MAAM,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;AACtC,SAAS,WAAW,CAAC,GAAG,EAAE;AACjC,IAAI,OAAO,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,CAAC,IAAI,KAAK,OAAO,CAAC;AAClE,CAAC;AACD,IAAI,QAAQ,CAAC;AACN,SAAS,mBAAmB,GAAG;AACtC,IAAI,IAAI,CAAC,QAAQ,EAAE;AACnB,QAAQ,MAAM,OAAO,GAAG,OAAO,QAAQ,KAAK,WAAW,IAAI,QAAQ,IAAI,QAAQ,CAAC,aAAa,CAAC;AAC9F,QAAQ,IAAI,CAAC,OAAO,EAAE;AACtB,YAAY,OAAO,SAAS,CAAC;AAC7B,SAAS;AACT,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AACpC,YAAY,MAAM,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AACvC,YAAY,MAAM,WAAW,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC;AACxD,YAAY,aAAa,CAAC,OAAO,CAAC,CAAC;AACnC,YAAY,QAAQ,QAAQ,CAAC,aAAa,GAAG,gBAAgB,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;AACnI,SAAS;AACT,QAAQ,OAAO,OAAO,CAAC;AACvB,KAAK;AACL,IAAI,OAAO,QAAQ,CAAC;AACpB,CAAC;AACM,SAAS,gBAAgB,GAAG;AACnC,IAAI,MAAM,GAAG,GAAG,mBAAmB,EAAE,CAAC;AACtC,IAAI,IAAI,CAAC,GAAG,EAAE;AACd,QAAQ,MAAM,IAAI,KAAK,CAAC,kEAAkE,CAAC,CAAC;AAC5F,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf,CAAC;AACM,SAAS,SAAS,CAAC,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,EAAE;AAChD,IAAI,MAAM,eAAe,GAAG,QAAQ,CAAC;AACrC,IAAI,IAAI,WAAW,CAAC;AACpB,IAAI,IAAI;AACR,QAAQ,QAAQ,GAAG,OAAO,CAAC;AAC3B,QAAQ,WAAW,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC3C,KAAK;AACL,YAAY;AACZ,QAAQ,MAAM,UAAU,GAAG,QAAQ,CAAC;AACpC,QAAQ,QAAQ,GAAG,eAAe,CAAC;AACnC,QAAQ,IAAI,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;AAC/D;AACA,YAAY,OAAO,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,WAAW,CAAC,CAAC;AAC1E,SAAS;AACT,KAAK;AACL,IAAI,OAAO,WAAW,CAAC;AACvB,CAAC;AACM,SAAS,gBAAgB,CAAC,GAAG,EAAE,WAAW,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE;AACxE,IAAI,OAAO;AACX,QAAQ,GAAG,EAAE,CAAC;AACd,QAAQ,GAAG;AACX,QAAQ,WAAW;AACnB,QAAQ,OAAO;AACf,QAAQ,KAAK,EAAE,KAAK;AACpB,QAAQ,GAAG,EAAE,GAAG,IAAI,IAAI;AACxB,QAAQ,GAAG,EAAE,SAAS;AACtB,KAAK,CAAC;AACN,CAAC;AACD;AACA;AACA;AACO,SAAS,SAAS,CAAC,OAAO,EAAE;AACnC,IAAI,MAAM,GAAG,GAAG,gBAAgB,EAAE,CAAC;AACnC,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AACpD,CAAC;AACM,SAAS,cAAc,CAAC,EAAE,EAAE;AACnC,IAAI,IAAI,SAAS,GAAG,KAAK,CAAC;AAC1B,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC;AAClB,IAAI,OAAO,IAAI,EAAE;AACjB,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;AACpD,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,KAAK,QAAQ,CAAC;AACjD,QAAQ,IAAI,MAAM,EAAE;AACpB,YAAY,IAAI,CAAC,SAAS,EAAE;AAC5B,gBAAgB,MAAM;AACtB,aAAa;AACb,iBAAiB;AACjB,gBAAgB,SAAS,GAAG,KAAK,CAAC;AAClC,aAAa;AACb,SAAS;AACT,QAAQ,IAAI,MAAM,EAAE;AACpB,YAAY,SAAS,GAAG,IAAI,CAAC;AAC7B,SAAS;AACT,QAAQ,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC;AAClC,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,CAAC;AACM,SAAS,YAAY,CAAC,EAAE,EAAE;AACjC,IAAI,IAAI,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC;AAClC,IAAI,IAAI,CAAC,SAAS,EAAE;AACpB,QAAQ,SAAS,GAAG,EAAE,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACnD,QAAQ,EAAE,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC;AAClC,KAAK;AACL,IAAI,OAAO,SAAS,CAAC;AACrB;;AC9FO,SAAS,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE;AACzC;AACA,IAAI,IAAI,CAAC,GAAG;AACZ,QAAQ,GAAG,GAAG,EAAE,CAAC;AACjB,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;AAC9B,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACjC,YAAY,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACpC,SAAS;AACT,aAAa;AACb,YAAY,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3B,SAAS;AACT,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf;;ACKO,SAAS,SAAS,CAAC,KAAK,EAAE;AACjC,IAAI,OAAO,KAAK,YAAY,OAAO,CAAC;AACpC,CAAC;AACM,MAAM,IAAI,GAAG,CAAC,OAAO,EAAE,MAAM,KAAK;AACzC,IAAI,OAAO,SAAS,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;AACvE,CAAC,CAAC;AACK,MAAM,UAAU,GAAG,CAAC,QAAQ,KAAK;AACxC,IAAI,MAAM,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAChD,IAAI,IAAI,UAAU,EAAE;AACpB,QAAQ,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACrC,KAAK;AACL,IAAI,OAAO,QAAQ,CAAC;AACpB,CAAC;;AC3BM,SAAS,KAAK,CAAC,KAAK,EAAE;AAC7B,IAAI,OAAO,KAAK,YAAY,WAAW,CAAC;AACxC,CAAC;AACD,MAAM,GAAG,CAAC;AACV,IAAI,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE;AACzE,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AACnC,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACjC,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC/B,QAAQ,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AACrC,QAAQ,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;AAC1D,KAAK;AACL,IAAI,YAAY,CAAC,EAAE,EAAE;AACrB,QAAQ,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;AACtB,YAAY,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;AACzB,SAAS;AACT,KAAK;AACL,IAAI,MAAM,OAAO,CAAC,EAAE,EAAE;AACtB,QAAQ,IAAI,EAAE,EAAE;AAChB,YAAY,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;AAClC,SAAS;AACT,QAAQ,OAAO,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;AACxC,KAAK;AACL,IAAI,QAAQ,CAAC,EAAE,EAAE,UAAU,EAAE;AAC7B,QAAQ,QAAQ,CAAC,GAAG,IAAI,KAAK;AAC7B,YAAY,MAAM,EAAE,IAAI,OAAO,IAAI,CAAC,SAAS,KAAK,UAAU,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;AAClG,YAAY,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK;AACpC,gBAAgB,IAAI,OAAO,EAAE,KAAK,UAAU,EAAE;AAC9C,oBAAoB,MAAM,WAAW,GAAG,UAAU,IAAI,gBAAgB,EAAE,CAAC;AACzE,oBAAoB,MAAM,OAAO,GAAG;AACpC,wBAAwB,GAAG,WAAW;AACtC,wBAAwB,GAAG,EAAE,IAAI;AACjC,qBAAqB,CAAC;AACtB,oBAAoB,OAAO,SAAS,CAAC,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC;AAC3D,iBAAiB;AACjB,gBAAgB,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;AACzD,aAAa,CAAC,CAAC;AACf,SAAS,EAAE;AACX,KAAK;AACL,IAAI,IAAI,GAAG;AACX,QAAQ,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAC9G,KAAK;AACL,IAAI,MAAM,CAAC,GAAG,IAAI,EAAE;AACpB,QAAQ,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;AACnC,QAAQ,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;AAC3B,KAAK;AACL,IAAI,SAAS,CAAC,OAAO,EAAE;AACvB,QAAQ,OAAO,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAC3C,KAAK;AACL,CAAC;AACM,MAAM,WAAW,GAAG,GAAG,CAAC;AAC/B;AACA,MAAM,QAAQ,GAAG,YAAY;;ACtDtB,MAAM,cAAc,GAAG,CAAC,GAAG,KAAK;AACvC,IAAI,MAAM,WAAW,GAAG,IAAI,GAAG,EAAE,CAAC;AAClC,IAAI,OAAO;AACX,QAAQ,YAAY,CAAC,OAAO,EAAE,GAAG,EAAE,UAAU,EAAE;AAC/C,YAAY,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC/D,YAAY,MAAM,OAAO,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC;AAC5C,YAAY,OAAO,CAAC,IAAI,GAAG,EAAE,CAAC;AAC9B,YAAY,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;AAChC,YAAY,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC;AAC3C,YAAY,MAAM,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACnD,YAAY,IAAI,GAAG,EAAE;AACrB,gBAAgB,OAAO,GAAG,CAAC,UAAU,CAAC,CAAC;AACvC,aAAa;AACb,YAAY,OAAO,sHAAO,mBAAmB,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK;AACtE,gBAAgB,WAAW,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;AAChD,gBAAgB,OAAO,GAAG,CAAC,UAAU,CAAC,CAAC;AACvC,aAAa,CAAC,CAAC;AACf,SAAS;AACT,QAAQ,GAAG,EAAE,CAAC,EAAE,KAAK;AACrB,YAAY,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK;AAC5C,gBAAgB,qBAAqB,CAAC,MAAM;AAC5C,oBAAoB,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;AAClC,iBAAiB,CAAC,CAAC;AACnB,aAAa,CAAC,CAAC;AACf,SAAS;AACT,QAAQ,QAAQ,EAAE,CAAC,EAAE,KAAK;AAC1B,YAAY,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK;AAC5C,gBAAgB,UAAU,CAAC,MAAM;AACjC,oBAAoB,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;AAClC,iBAAiB,CAAC,CAAC;AACnB,aAAa,CAAC,CAAC;AACf,SAAS;AACT,QAAQ,cAAc,GAAG;AACzB,YAAY,OAAO,SAAS,CAAC;AAC7B,SAAS;AACT,KAAK,CAAC;AACN,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;AACzC,IAAI,MAAM,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;AAC9C,IAAI,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,WAAW,EAAE,YAAY,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;AAC1F,IAAI,OAAO,IAAI,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AAC9B,CAAC;AACD;AACA;AACA;AACY,MAAC,WAAW,GAAG,CAAC,GAAG,EAAE,GAAG,MAAM,GAAG,CAAC,gBAAgB,CAAC,GAAG,GAAG,EAAE;AACvE;AACA;AACA;AACY,MAAC,WAAW,GAAG,CAAC,SAAS,KAAK;AAC1C,IAAI,MAAM,GAAG,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC;AACvC,IAAI,OAAO,GAAG,CAAC,gBAAgB,CAAC,KAAK,GAAG,CAAC,gBAAgB,CAAC,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;AAClF,EAAE;AACF,MAAM,gBAAgB,iBAAiB,MAAM,EAAE;;ACtC/C;AACA;AACA;AACO,SAAS,aAAa,CAAC,IAAI,EAAE;AACpC,IAAI,OAAO,IAAI,GAAG,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;AAClE,CAAC;AACD;AACA;AACA;AACO,IAAI,QAAQ,CAAC;AACpB,CAAC,UAAU,QAAQ,EAAE;AACrB,IAAI,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,GAAG,cAAc,CAAC;AAC5D,IAAI,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,GAAG,gBAAgB,CAAC;AAChE,IAAI,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC;AACtD,IAAI,QAAQ,CAAC,QAAQ,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,GAAG,oBAAoB,CAAC;AACxE,IAAI,QAAQ,CAAC,QAAQ,CAAC,6BAA6B,CAAC,GAAG,CAAC,CAAC,GAAG,6BAA6B,CAAC;AAC1F;AACA,IAAI,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,GAAG,cAAc,CAAC;AAC5D,IAAI,QAAQ,CAAC,QAAQ,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,GAAG,eAAe,CAAC;AAC9D,IAAI,QAAQ,CAAC,QAAQ,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC,GAAG,oBAAoB,CAAC;AACzE,IAAI,QAAQ,CAAC,QAAQ,CAAC,wBAAwB,CAAC,GAAG,EAAE,CAAC,GAAG,wBAAwB,CAAC;AACjF,CAAC,EAAE,QAAQ,KAAK,QAAQ,GAAG,EAAE,CAAC,CAAC;;AChDxB,SAAS,cAAc,CAAC,KAAK,EAAE;AACtC,IAAI,IAAI,KAAK,IAAI,IAAI;AACrB,QAAQ,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;AAC7B,IAAI,IAAI,OAAO,KAAK,KAAK,UAAU;AACnC,QAAQ,OAAO,KAAK,CAAC,IAAI,CAAC;AAC1B,IAAI,IAAI,aAAa,CAAC,KAAK,CAAC;AAC5B,QAAQ,OAAO,gBAAgB,CAAC,KAAK,CAAC,CAAC;AACvC,IAAI,IAAI,KAAK,YAAY,GAAG;AAC5B,QAAQ,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;AAC7B,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ;AACjC,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,UAAU,GAAG,EAAE,KAAK,EAAE;AAC3D,YAAY,IAAI,aAAa,CAAC,KAAK,CAAC;AACpC,gBAAgB,OAAO,gBAAgB,CAAC,KAAK,CAAC,CAAC;AAC/C,YAAY,OAAO,KAAK,CAAC;AACzB,SAAS,CAAC,CAAC;AACX,IAAI,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;AACzB,CAAC;AACM,SAAS,gBAAgB,CAAC,OAAO,EAAE;AAC1C,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC;AACvC,IAAI,MAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;AAC1C,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC;AACrB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChD,QAAQ,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACvC,KAAK;AACL,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC;AACjB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC9B,QAAQ,IAAI,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AAC/C,QAAQ,IAAI,KAAK,EAAE,UAAU,CAAC,QAAQ,CAAC,EAAE;AACzC,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,sBAAsB,EAAE,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,KAAK,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC;AAC5G,SAAS;AACT,QAAQ,IAAI;AACZ,YAAY,GAAG,GAAG,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC;AACzG,KAAK;AACL,IAAI,OAAO,IAAI,GAAG,GAAG,CAAC;AACtB;;AClCO,IAAI,MAAM,CAAC;AAClB,CAAC,UAAU,MAAM,EAAE;AACnB;AACA,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;AACxC,IAAI,MAAM,CAAC,MAAM,CAAC,2BAA2B,CAAC,GAAG,CAAC,CAAC,GAAG,2BAA2B,CAAC;AAClF,IAAI,MAAM,CAAC,MAAM,CAAC,8BAA8B,CAAC,GAAG,CAAC,CAAC,GAAG,8BAA8B,CAAC;AACxF,IAAI,MAAM,CAAC,MAAM,CAAC,+BAA+B,CAAC,GAAG,CAAC,CAAC,GAAG,+BAA+B,CAAC;AAC1F,IAAI,MAAM,CAAC,MAAM,CAAC,qCAAqC,CAAC,GAAG,CAAC,CAAC,GAAG,qCAAqC,CAAC;AACtG,IAAI,MAAM,CAAC,MAAM,CAAC,iCAAiC,CAAC,GAAG,CAAC,CAAC,GAAG,iCAAiC,CAAC;AAC9F,IAAI,MAAM,CAAC,MAAM,CAAC,mCAAmC,CAAC,GAAG,CAAC,CAAC,GAAG,mCAAmC,CAAC;AAClG;AACA,IAAI,MAAM,CAAC,MAAM,CAAC,+BAA+B,CAAC,GAAG,GAAG,CAAC,GAAG,+BAA+B,CAAC;AAC5F;AACA,IAAI,MAAM,CAAC,MAAM,CAAC,yBAAyB,CAAC,GAAG,GAAG,CAAC,GAAG,yBAAyB,CAAC;AAChF,IAAI,MAAM,CAAC,MAAM,CAAC,mDAAmD,CAAC,GAAG,GAAG,CAAC,GAAG,mDAAmD,CAAC;AACpI,IAAI,MAAM,CAAC,MAAM,CAAC,yBAAyB,CAAC,GAAG,GAAG,CAAC,GAAG,yBAAyB,CAAC;AAChF,IAAI,MAAM,CAAC,MAAM,CAAC,0CAA0C,CAAC,GAAG,GAAG,CAAC,GAAG,0CAA0C,CAAC;AAClH,IAAI,MAAM,CAAC,MAAM,CAAC,mDAAmD,CAAC,GAAG,GAAG,CAAC,GAAG,mDAAmD,CAAC;AACpI,IAAI,MAAM,CAAC,MAAM,CAAC,2BAA2B,CAAC,GAAG,GAAG,CAAC,GAAG,2BAA2B,CAAC;AACpF,IAAI,MAAM,CAAC,MAAM,CAAC,uCAAuC,CAAC,GAAG,GAAG,CAAC,GAAG,uCAAuC,CAAC;AAC5G;AACA,IAAI,MAAM,CAAC,MAAM,CAAC,wBAAwB,CAAC,GAAG,GAAG,CAAC,GAAG,wBAAwB,CAAC;AAC9E,IAAI,MAAM,CAAC,MAAM,CAAC,6BAA6B,CAAC,GAAG,GAAG,CAAC,GAAG,6BAA6B,CAAC;AACxF,IAAI,MAAM,CAAC,MAAM,CAAC,8BAA8B,CAAC,GAAG,GAAG,CAAC,GAAG,8BAA8B,CAAC;AAC1F,IAAI,MAAM,CAAC,MAAM,CAAC,uCAAuC,CAAC,GAAG,GAAG,CAAC,GAAG,uCAAuC,CAAC;AAC5G,IAAI,MAAM,CAAC,MAAM,CAAC,8CAA8C,CAAC,GAAG,GAAG,CAAC,GAAG,8CAA8C,CAAC;AAC1H,IAAI,MAAM,CAAC,MAAM,CAAC,6BAA6B,CAAC,GAAG,GAAG,CAAC,GAAG,6BAA6B,CAAC;AACxF,IAAI,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC,GAAG,GAAG,CAAC,GAAG,qBAAqB,CAAC;AACxE,IAAI,MAAM,CAAC,MAAM,CAAC,oCAAoC,CAAC,GAAG,GAAG,CAAC,GAAG,oCAAoC,CAAC;AACtG,IAAI,MAAM,CAAC,MAAM,CAAC,gCAAgC,CAAC,GAAG,GAAG,CAAC,GAAG,gCAAgC,CAAC;AAC9F,IAAI,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,GAAG,GAAG,CAAC,GAAG,uBAAuB,CAAC;AAC5E,IAAI,MAAM,CAAC,MAAM,CAAC,2BAA2B,CAAC,GAAG,GAAG,CAAC,GAAG,2BAA2B,CAAC;AACpF,IAAI,MAAM,CAAC,MAAM,CAAC,sBAAsB,CAAC,GAAG,GAAG,CAAC,GAAG,sBAAsB,CAAC;AAC1E,IAAI,MAAM,CAAC,MAAM,CAAC,kDAAkD,CAAC,GAAG,GAAG,CAAC,GAAG,kDAAkD,CAAC;AAClI,IAAI,MAAM,CAAC,MAAM,CAAC,yCAAyC,CAAC,GAAG,GAAG,CAAC,GAAG,yCAAyC,CAAC;AAChH,IAAI,MAAM,CAAC,MAAM,CAAC,6CAA6C,CAAC,GAAG,GAAG,CAAC,GAAG,6CAA6C,CAAC;AACxH,IAAI,MAAM,CAAC,MAAM,CAAC,8BAA8B,CAAC,GAAG,GAAG,CAAC,GAAG,8BAA8B,CAAC;AAC1F;AACA,IAAI,MAAM,CAAC,MAAM,CAAC,wBAAwB,CAAC,GAAG,GAAG,CAAC,GAAG,wBAAwB,CAAC;AAC9E,IAAI,MAAM,CAAC,MAAM,CAAC,0BAA0B,CAAC,GAAG,GAAG,CAAC,GAAG,0BAA0B,CAAC;AAClF,IAAI,MAAM,CAAC,MAAM,CAAC,sBAAsB,CAAC,GAAG,GAAG,CAAC,GAAG,sBAAsB,CAAC;AAC1E,IAAI,MAAM,CAAC,MAAM,CAAC,6CAA6C,CAAC,GAAG,GAAG,CAAC,GAAG,6CAA6C,CAAC;AACxH,IAAI,MAAM,CAAC,MAAM,CAAC,0CAA0C,CAAC,GAAG,GAAG,CAAC,GAAG,0CAA0C,CAAC;AAClH,IAAI,MAAM,CAAC,MAAM,CAAC,8BAA8B,CAAC,GAAG,GAAG,CAAC,GAAG,8BAA8B,CAAC;AAC1F,IAAI,MAAM,CAAC,MAAM,CAAC,yCAAyC,CAAC,GAAG,GAAG,CAAC,GAAG,yCAAyC,CAAC;AAChH,IAAI,MAAM,CAAC,MAAM,CAAC,mCAAmC,CAAC,GAAG,GAAG,CAAC,GAAG,mCAAmC,CAAC;AACpG;AACA,IAAI,MAAM,CAAC,MAAM,CAAC,mCAAmC,CAAC,GAAG,GAAG,CAAC,GAAG,mCAAmC,CAAC;AACpG;AACA,IAAI,MAAM,CAAC,MAAM,CAAC,mCAAmC,CAAC,GAAG,GAAG,CAAC,GAAG,mCAAmC,CAAC;AACpG,IAAI,MAAM,CAAC,MAAM,CAAC,mCAAmC,CAAC,GAAG,GAAG,CAAC,GAAG,mCAAmC,CAAC;AACpG,IAAI,MAAM,CAAC,MAAM,CAAC,+BAA+B,CAAC,GAAG,GAAG,CAAC,GAAG,+BAA+B,CAAC;AAC5F,IAAI,MAAM,CAAC,MAAM,CAAC,iCAAiC,CAAC,GAAG,GAAG,CAAC,GAAG,iCAAiC,CAAC;AAChG,IAAI,MAAM,CAAC,MAAM,CAAC,uCAAuC,CAAC,GAAG,GAAG,CAAC,GAAG,uCAAuC,CAAC;AAC5G,IAAI,MAAM,CAAC,MAAM,CAAC,0BAA0B,CAAC,GAAG,GAAG,CAAC,GAAG,0BAA0B,CAAC;AAClF;AACA,IAAI,MAAM,CAAC,MAAM,CAAC,iCAAiC,CAAC,GAAG,GAAG,CAAC,GAAG,iCAAiC,CAAC;AAChG,IAAI,MAAM,CAAC,MAAM,CAAC,mDAAmD,CAAC,GAAG,GAAG,CAAC,GAAG,mDAAmD,CAAC;AACpI,CAAC,EAAE,MAAM,KAAK,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC;AACrB,SAAS,MAAM,CAAC,IAAI,EAAE,GAAG,IAAI,EAAE;AACtC,IAAI,IAAI,IAAI,EAAE;AACd,QAAQ,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AACtC,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACvC,QAAQ,MAAM,KAAK,GAAG,KAAK;AAC3B,aAAa,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,KAAK;AACnC,YAAY,OAAO,KAAK,IAAI,KAAK,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC3F,SAAS,CAAC;AACV,aAAa,IAAI,CAAC,EAAE,CAAC,CAAC;AACtB,QAAQ,SAAS;AACjB,QAAQ,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;AAChC,KAAK;AACL,SAAS;AACT,QAAQ,OAAO,IAAI,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;AAC3C,KAAK;AACL,CAAC;AACD,SAAS,UAAU,CAAC,IAAI,EAAE;AAC1B,IAAI,MAAM,IAAI,GAAG;AACjB,QAAQ,CAAC,EAAE,OAAO;AAClB,QAAQ,CAAC,EAAE,WAAW;AACtB,QAAQ,CAAC,EAAE,gBAAgB;AAC3B,QAAQ,CAAC,EAAE,eAAe;AAC1B,QAAQ,CAAC,EAAE,iBAAiB;AAC5B,QAAQ,CAAC,EAAE,gBAAgB;AAC3B,QAAQ,CAAC,EAAE,cAAc;AACzB,QAAQ,CAAC,EAAE,aAAa;AACxB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;AAC9B,IAAI,MAAM,IAAI,GAAG;AACjB,QAAQ,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI;AAC3B,QAAQ,CAAC,MAAM,CAAC,yBAAyB,GAAG,iCAAiC;AAC7E,QAAQ,CAAC,MAAM,CAAC,4BAA4B,GAAG,gCAAgC;AAC/E,QAAQ,CAAC,MAAM,CAAC,6BAA6B,GAAG,kEAAkE;AAClH,QAAQ,CAAC,MAAM,CAAC,mCAAmC,GAAG,6FAA6F;AACnJ,QAAQ,CAAC,MAAM,CAAC,+BAA+B,GAAG,sCAAsC;AACxF,QAAQ,CAAC,MAAM,CAAC,iCAAiC,GAAG,yDAAyD;AAC7G;AACA,QAAQ,CAAC,MAAM,CAAC,6BAA6B,GAAG,+CAA+C;AAC/F;AACA,QAAQ,CAAC,MAAM,CAAC,uBAAuB,GAAG,qCAAqC;AAC/E,QAAQ,CAAC,MAAM,CAAC,iDAAiD,GAAG,0CAA0C;AAC9G,QAAQ,CAAC,MAAM,CAAC,uBAAuB,GAAG,8BAA8B;AACxE,QAAQ,CAAC,MAAM,CAAC,wCAAwC,GAAG,qEAAqE;AAChI,QAAQ,CAAC,MAAM,CAAC,iDAAiD,GAAG,iHAAiH;AACrL,QAAQ,CAAC,MAAM,CAAC,yBAAyB,GAAG,4CAA4C;AACxF,QAAQ,CAAC,MAAM,CAAC,qCAAqC,GAAG,+CAA+C;AACvG;AACA,QAAQ,CAAC,MAAM,CAAC,sBAAsB,GAAG,qCAAqC;AAC9E,YAAY,6EAA6E;AACzF,YAAY,6CAA6C;AACzD,YAAY,iEAAiE;AAC7E,QAAQ,CAAC,MAAM,CAAC,2BAA2B,GAAG,wCAAwC;AACtF,QAAQ,CAAC,MAAM,CAAC,4BAA4B,GAAG,iCAAiC;AAChF,YAAY,oEAAoE;AAChF,QAAQ,CAAC,MAAM,CAAC,qCAAqC,GAAG,8EAA8E;AACtI,QAAQ,CAAC,MAAM,CAAC,4CAA4C,GAAG,2DAA2D;AAC1H,QAAQ,CAAC,MAAM,CAAC,2BAA2B,GAAG,mIAAmI;AACjL,QAAQ,CAAC,MAAM,CAAC,mBAAmB,GAAG,sCAAsC;AAC5E,QAAQ,CAAC,MAAM,CAAC,kCAAkC,GAAG,0EAA0E;AAC/H,QAAQ,CAAC,MAAM,CAAC,yBAAyB,GAAG,0CAA0C;AACtF,QAAQ,CAAC,MAAM,CAAC,qBAAqB,GAAG,gFAAgF;AACxH,QAAQ,CAAC,MAAM,CAAC,oBAAoB,GAAG,0FAA0F;AACjI,QAAQ,CAAC,MAAM,CAAC,gDAAgD,GAAG,qFAAqF;AACxJ,QAAQ,CAAC,MAAM,CAAC,8BAA8B,GAAG,8DAA8D;AAC/G,QAAQ,CAAC,MAAM,CAAC,uCAAuC,GAAG,+FAA+F;AACzJ,QAAQ,CAAC,MAAM,CAAC,2CAA2C,GAAG,iFAAiF;AAC/I,QAAQ,CAAC,MAAM,CAAC,4BAA4B,GAAG,6EAA6E;AAC5H;AACA,QAAQ,CAAC,MAAM,CAAC,sBAAsB,GAAG,mEAAmE;AAC5G,QAAQ,CAAC,MAAM,CAAC,wBAAwB,GAAG,8EAA8E;AACzH,QAAQ,CAAC,MAAM,CAAC,oBAAoB,GAAG,mCAAmC;AAC1E,QAAQ,CAAC,MAAM,CAAC,2CAA2C,GAAG,8FAA8F;AAC5J,QAAQ,CAAC,MAAM,CAAC,wCAAwC,GAAG,oDAAoD;AAC/G,QAAQ,CAAC,MAAM,CAAC,4BAA4B,GAAG,gCAAgC;AAC/E,QAAQ,CAAC,MAAM,CAAC,uCAAuC,GAAG,iFAAiF;AAC3I,QAAQ,CAAC,MAAM,CAAC,iCAAiC,GAAG,yIAAyI;AAC7L;AACA,QAAQ,CAAC,MAAM,CAAC,iCAAiC,GAAG,sCAAsC;AAC1F;AACA,QAAQ,CAAC,MAAM,CAAC,iCAAiC,GAAG,8BAA8B;AAClF,QAAQ,CAAC,MAAM,CAAC,iCAAiC,GAAG,kDAAkD;AACtG,QAAQ,CAAC,MAAM,CAAC,6BAA6B,GAAG,oCAAoC;AACpF,QAAQ,CAAC,MAAM,CAAC,+BAA+B,GAAG,wCAAwC;AAC1F,QAAQ,CAAC,MAAM,CAAC,qCAAqC,GAAG,yCAAyC;AACjG,QAAQ,CAAC,MAAM,CAAC,wBAAwB,GAAG,uCAAuC;AAClF;AACA,QAAQ,CAAC,MAAM,CAAC,+BAA+B,GAAG,4CAA4C;AAC9F,QAAQ,CAAC,MAAM,CAAC,iDAAiD,GAAG,6EAA6E;AACjJ,KAAK,CAAC,IAAI,CAAC,CAAC;AACZ,IAAI,IAAI,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC;AAChC,IAAI,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,IAAI,OAAO,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;AAC7C;;ACvJO,SAASA,QAAM,CAAC,KAAK,EAAE;AAC9B,IAAI,OAAO,KAAK,IAAI,OAAO,KAAK,CAAC,QAAQ,IAAI,QAAQ,CAAC;AACtD,CAAC;AACM,SAAS,UAAU,CAAC,KAAK,EAAE;AAClC,IAAI,OAAO,KAAK,IAAI,KAAK,CAAC,QAAQ,IAAI,QAAQ,CAAC,aAAa,CAAC;AAC7D,CAAC;AACM,SAAS,SAAS,CAAC,KAAK,EAAE;AACjC,IAAI,OAAOA,QAAM,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,QAAQ,IAAI,QAAQ,CAAC,YAAY,CAAC;AACpE;;ACEO,MAAM,gBAAgB,GAAG,QAAQ,CAAC;AAClC,MAAM,UAAU,GAAG,QAAQ,CAAC;AAC5B,SAAS,eAAe,CAAC,WAAW,EAAE;AAC7C,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE;AACnC,QAAQ,OAAO,CAAC,8DAA8D,CAAC,CAAC;AAChF,QAAQ,OAAO;AACf,KAAK;AACL,IAAI,MAAM,GAAG,GAAG,WAAW,CAAC,WAAW,CAAC,CAAC;AACzC,IAAI,MAAM,YAAY,GAAG,WAAW,KAAK,GAAG,CAAC,eAAe,CAAC;AAC7D,IAAI,MAAM,UAAU,GAAG,YAAY,GAAG,GAAG,CAAC,IAAI,GAAG,WAAW,CAAC;AAC7D,IAAI,MAAM,MAAM,GAAG,WAAW,CAAC,UAAU,CAAC,CAAC;AAC3C,IAAI,IAAI,CAAC,MAAM,EAAE;AACjB,QAAQ,OAAO,CAAC,sDAAsD,CAAC,CAAC;AACxE,QAAQ,OAAO;AACf,KAAK;AACL,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC;AACpB,IAAI,MAAM,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;AACjC,IAAI,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC;AACxD;AACA,IAAI,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;AAC/B,IAAI,eAAe,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK;AACzD,QAAQ,MAAM,EAAE,GAAG,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;AAC/C,QAAQ,QAAQ,CAAC,GAAG,CAAC,iBAAiB,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;AACjD,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,SAAS,GAAG,CAAC,EAAE,KAAK;AAC9B,QAAQ,OAAO,aAAa,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AAC3D,KAAK,CAAC;AACN;AACA,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC;AACnE;AACA,IAAI,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE;AACjC,QAAQ,mBAAmB,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;AAC5C,KAAK;AACL;AACA,IAAI,eAAe,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK;AAC1D,QAAQ,MAAM,IAAI,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;AAC/C,QAAQ,MAAM,GAAG,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;AAC9C,QAAQ,MAAM,IAAI,GAAG,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;AAChD,QAAQ,MAAM,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;AACnC;AACA,QAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;AAC1C,YAAY,IAAI,IAAI,KAAK,EAAE,EAAE;AAC7B,gBAAgB,MAAM,GAAG,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AAC5C,gBAAgB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACpC,aAAa;AACb,iBAAiB,IAAI,IAAI,EAAE;AAC3B,gBAAgB,QAAQ,CAAC,yBAAyB,CAAC,CAAC;AACpD,aAAa;AACb,SAAS,CAAC,CAAC;AACX;AACA,QAAQ,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/D,QAAQ,IAAI,IAAI,EAAE;AAClB,YAAY,MAAM,CAAC,KAAK,EAAE,SAAS,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACrE,YAAY,aAAa,CAAC,KAAK,CAAC,CAAC;AACjC,YAAY,aAAa,CAAC,SAAS,CAAC,CAAC;AACrC,YAAY,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC9C,YAAY,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACtD,SAAS;AACT,KAAK,CAAC,CAAC;AACP,IAAI,WAAW,CAAC,YAAY,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;AACxD,IAAI,QAAQ,CAAC,mBAAmB,CAAC,CAAC;AAClC,CAAC;AACM,SAAS,aAAa,CAAC,WAAW,EAAE;AAC3C,IAAI,MAAM,GAAG,GAAG,WAAW,CAAC,WAAW,CAAC,CAAC;AACzC,IAAI,MAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;AACtC,IAAI,MAAM,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC;AAC7B,IAAI,MAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;AACtC,IAAI,MAAM,cAAc,GAAG,IAAI,GAAG,EAAE,CAAC;AACrC;AACA,IAAI,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;AAC3D,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;AAC/B,QAAQ,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AACvC,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;AAClC,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK;AAClC,YAAY,YAAY,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AACpC,SAAS,CAAC,CAAC;AACX,KAAK,CAAC,CAAC;AACP;AACA,IAAI,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACpC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;AACxB,QAAQ,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACjD,QAAQ,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACjD,QAAQ,OAAO,QAAQ,GAAG,QAAQ,CAAC;AACnC,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;AAC9B,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC;AAClB,IAAI,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;AAC5B,QAAQ,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAChC,QAAQ,KAAK,EAAE,CAAC;AAChB,KAAK;AACL,IAAI,SAAS,YAAY,CAAC,EAAE,EAAE;AAC9B,QAAQ,IAAI,EAAE,GAAG,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AACxC,QAAQ,IAAI,EAAE,KAAK,SAAS,EAAE;AAC9B,YAAY,IAAI,EAAE,CAAC,WAAW,EAAE;AAChC,gBAAgB,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;AACnD,gBAAgB,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;AAChD,gBAAgB,EAAE,GAAG,iBAAiB,GAAG,EAAE,CAAC;AAC5C,aAAa;AACb,iBAAiB;AACjB,gBAAgB,EAAE,GAAG,IAAI,CAAC;AAC1B,aAAa;AACb,YAAY,cAAc,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACvC,SAAS;AACT,QAAQ,OAAO,EAAE,CAAC;AAClB,KAAK;AACL,IAAI,SAAS,QAAQ,CAAC,GAAG,EAAE;AAC3B,QAAQ,IAAI,GAAG,KAAK,IAAI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACrD,YAAY,MAAM,MAAM,GAAG,GAAG,CAAC,kBAAkB,CAAC,CAAC;AACnD,YAAY,MAAM,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;AAChE,YAAY,IAAI,EAAE,KAAK,SAAS,EAAE;AAClC,gBAAgB,MAAM,WAAW,GAAG,MAAM,GAAG,GAAG,GAAG,EAAE,CAAC;AACtD,gBAAgB,OAAO,QAAQ,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC;AAClD,aAAa;AACb,YAAY,IAAI,CAAC,MAAM,IAAI,SAAS,CAAC,GAAG,CAAC,EAAE;AAC3C,gBAAgB,OAAO,YAAY,CAAC,GAAG,CAAC,CAAC;AACzC,aAAa;AACb,SAAS;AACT,aAAa;AACb,YAAY,MAAM,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;AACtD,YAAY,IAAI,EAAE,KAAK,SAAS,EAAE;AAClC,gBAAgB,OAAO,QAAQ,CAAC,EAAE,CAAC,CAAC;AACpC,aAAa;AACb,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IAAI,MAAM,IAAI,GAAG,IAAI;AACrB,SAAS,GAAG,CAAC,CAAC,GAAG,KAAK;AACtB,QAAQ,MAAM,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,gBAAgB,CAAC,CAAC;AAC3D,QAAQ,IAAI,IAAI,EAAE;AAClB,YAAY,OAAO,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,KAAK;AACrF,gBAAgB,MAAM,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;AACzC,gBAAgB,IAAI,EAAE,KAAK,IAAI,EAAE;AACjC,oBAAoB,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AACjD,iBAAiB;AACjB,qBAAqB;AACrB,oBAAoB,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;AAClD,iBAAiB;AACjB,aAAa,CAAC,CAAC,CAAC;AAChB,SAAS;AACT,aAAa;AACb,YAAY,OAAO,IAAI,CAAC;AACxB,SAAS;AACT,KAAK,CAAC;AACN,SAAS,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,IAAI,MAAM,SAAS,GAAG,CAAC,KAAK,KAAK;AACjC,QAAQ,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC;AACxC,KAAK,CAAC;AACN,IAAI,MAAM,mBAAmB,GAAG;AAChC,QAAQ,QAAQ;AAChB,QAAQ,QAAQ;AAChB,KAAK,CAAC;AACN,IAAI,MAAM,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK;AAC5C,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AAChC,YAAY,OAAO,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACtC,SAAS;AACT,aAAa,IAAI,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACjD,YAAY,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE;AAC5B,gBAAgB,OAAO,UAAU,GAAG,YAAY,CAAC,GAAG,EAAE,mBAAmB,CAAC,CAAC;AAC3E,aAAa;AACb,YAAY,MAAM,MAAM,GAAG,EAAE,CAAC;AAC9B,YAAY,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK;AAC1D,gBAAgB,MAAM,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;AAC/C,aAAa,CAAC,CAAC;AACf,YAAY,OAAO,MAAM,CAAC;AAC1B,SAAS;AACT,QAAQ,OAAO,GAAG,CAAC;AACnB,KAAK,CAAC,CAAC;AACP;AACA,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;AAC/B,QAAQ,MAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AACrC,QAAQ,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;AAChC,QAAQ,MAAM,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;AACxC,QAAQ,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK;AAC1C,aAAa,GAAG,CAAC,CAAC,GAAG,KAAK;AAC1B,YAAY,MAAM,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;AACrC,YAAY,aAAa,CAAC,EAAE,CAAC,CAAC;AAC9B,YAAY,OAAO,EAAE,CAAC;AACtB,SAAS,CAAC;AACV,aAAa,IAAI,CAAC,GAAG,CAAC,CAAC;AACvB,QAAQ,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;AAC/C,QAAQ,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACtE,QAAQ,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;AACzC,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC;AACjC,YAAY,IAAI,SAAS,EAAE;AAC3B,gBAAgB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACrC,aAAa;AACb,YAAY,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/F,SAAS;AACT,KAAK,CAAC,CAAC;AACP;AACA,IAAI,IAAI,IAAI,EAAE;AACd,QAAQ,cAAc,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK;AAC9C,YAAY,IAAI,WAAW,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE;AACzC,gBAAgB,OAAO,CAAC,iCAAiC,EAAE,KAAK,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC;AAC9E,aAAa;AACb,YAAY,IAAI,CAAC,KAAK,EAAE;AACxB,gBAAgB,OAAO,CAAC,qBAAqB,EAAE,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACjE,aAAa;AACb,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IAAI,OAAO;AACX,QAAQ,IAAI,EAAE,aAAa;AAC3B,QAAQ,IAAI;AACZ,KAAK,CAAC;AACN,CAAC;AACM,SAAS,WAAW,CAAC,SAAS,EAAE;AACvC,IAAI,IAAI,KAAK,GAAG,SAAS,CAAC,gBAAgB,CAAC;AAC3C,IAAI,OAAO,KAAK,EAAE;AAClB,QAAQ,IAAI,KAAK,CAAC,OAAO,KAAK,QAAQ,IAAI,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,WAAW,EAAE;AACtF,YAAY,OAAO,KAAK,CAAC;AACzB,SAAS;AACT,QAAQ,KAAK,GAAG,KAAK,CAAC,sBAAsB,CAAC;AAC7C,KAAK;AACL,IAAI,OAAO,SAAS,CAAC;AACrB,CAAC;AACM,SAAS,eAAe,CAAC,MAAM,EAAE,SAAS,EAAE;AACnD,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC;AACrB,IAAI,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;AACxC,IAAI,OAAO,KAAK,CAAC;AACjB,CAAC;AACM,SAAS,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE;AACpD,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,iBAAiB,CAAC;AACzC,IAAI,OAAO,KAAK,EAAE;AAClB,QAAQ,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;AACjC,YAAY,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;AAClC,gBAAgB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClC,aAAa;AACb,YAAY,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;AAC/C,SAAS;AACT,QAAQ,KAAK,GAAG,KAAK,CAAC,kBAAkB,CAAC;AACzC,KAAK;AACL,CAAC;AACD,SAAS,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,WAAW,EAAE;AAC/D,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9B,QAAQ,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AACvC,YAAY,IAAI,KAAK,KAAK,gBAAgB,EAAE;AAC5C,gBAAgB,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;AACpC,aAAa;AACb,iBAAiB,IAAI,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;AACnD,gBAAgB,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;AAChE,aAAa;AACb,SAAS;AACT,aAAa;AACb,YAAY,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAChC,YAAY,IAAI,GAAG,EAAE;AACrB,gBAAgB,MAAM,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;AAC5C,gBAAgB,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK;AACvD,oBAAoB,MAAM,EAAE,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,oBAAoB,IAAI,CAAC,EAAE,EAAE;AAC7B,wBAAwB,OAAO,CAAC,iEAAiE,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AACjH,wBAAwB,OAAO;AAC/B,qBAAqB;AACrB,oBAAoB,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,oBAAoB,SAAS,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;AAC3C,iBAAiB,CAAC,CAAC;AACnB,gBAAgB,eAAe,CAAC,KAAK,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;AACvD,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC;AACD,SAAS,mBAAmB,CAAC,GAAG,EAAE,SAAS,EAAE;AAC7C,IAAI,IAAI,GAAG,IAAI,OAAO,GAAG,IAAI,QAAQ,EAAE;AACvC,QAAQ,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE;AACxB,YAAY,IAAI,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AACvD,gBAAgB,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC5D,gBAAgB,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;AACnC,aAAa;AACb,YAAY,OAAO;AACnB,SAAS;AACT,aAAa,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AACrC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjD,gBAAgB,MAAM,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACrC,gBAAgB,IAAI,OAAO,KAAK,IAAI,QAAQ,EAAE;AAC9C,oBAAoB,GAAG,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;AAC9C,iBAAiB;AACjB,qBAAqB;AACrB,oBAAoB,mBAAmB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;AAC1D,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,aAAa,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,SAAS,EAAE;AAClE,YAAY,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;AACnC,gBAAgB,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;AACpE,oBAAoB,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;AAC3C,oBAAoB,IAAI,OAAO,KAAK,IAAI,QAAQ,EAAE;AAClD,wBAAwB,GAAG,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;AACpD,qBAAqB;AACrB,yBAAyB;AACzB,wBAAwB,mBAAmB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;AAC9D,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC;AACD,SAAS,aAAa,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE;AAChD,IAAI,IAAI,EAAE,CAAC,UAAU,CAAC,iBAAiB,CAAC,EAAE;AAC1C,QAAQ,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AAC5C,QAAQ,OAAO,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAChC,KAAK;AACL,IAAI,MAAM,KAAK,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC/B,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,EAAE,IAAI,CAAC,CAAC;AAC3C,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5B,IAAI,MAAM,UAAU,GAAG,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACxC,IAAI,IAAI,UAAU,EAAE;AACpB,QAAQ,MAAM,QAAQ,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACtC,QAAQ,aAAa,CAAC,QAAQ,CAAC,CAAC;AAChC,QAAQ,OAAO,QAAQ,CAAC;AACxB,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf,CAAC;AACD,SAAS,YAAY,CAAC,GAAG,EAAE;AAC3B,IAAI,IAAI,GAAG,KAAK,SAAS,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,EAAE;AACpD,QAAQ,OAAO,gBAAgB,CAAC;AAChC,KAAK;AACL,IAAI,IAAI,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACxC,QAAQ,MAAM,KAAK,GAAG,GAAG,CAAC,kBAAkB,CAAC,IAAI,GAAG,CAAC;AACrD,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf,CAAC;AACD,SAAS,YAAY,CAAC,GAAG,EAAE,IAAI,EAAE;AACjC,IAAI,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AAC/B,IAAI,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;AAChC,CAAC;AACD,SAAS,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE;AAC/B,IAAI,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;AAChC,IAAI,IAAI,GAAG,CAAC,UAAU,EAAE;AACxB,QAAQ,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;AACjE,KAAK;AACL,CAAC;AACD,SAAS,eAAe,CAAC,GAAG,EAAE,IAAI,EAAE;AACpC,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE;AACrB,QAAQ,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACrC,YAAY,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,SAAS,CAAC,GAAG,CAAC,EAAE;AAC5D,gBAAgB,OAAO;AACvB,aAAa;AACb,YAAY,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE;AAC5B,gBAAgB,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACtC,gBAAgB,OAAO;AACvB,aAAa;AACb,YAAY,GAAG,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;AACpC,SAAS;AACT,QAAQ,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACrC,YAAY,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;AAC7B,gBAAgB,OAAO;AACvB,YAAY,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC1B,YAAY,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AACpC,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrD,oBAAoB,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AAClD,iBAAiB;AACjB,aAAa;AACb,iBAAiB;AACjB,gBAAgB,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;AACvC,oBAAoB,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;AACxE,wBAAwB,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;AACxD,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,QAAQ,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACrC,YAAY,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC1B,SAAS;AACT,KAAK;AACL,CAAC;AAIM,SAAS,WAAW,CAAC,EAAE,EAAE;AAChC,IAAI,OAAO,EAAE,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;AAC3C,CAAC;AACD,SAAS,OAAO,CAAC,EAAE,EAAE;AACrB,IAAI,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;AACrC,CAAC;AACD,SAAS,MAAM,CAAC,EAAE,EAAE;AACpB,IAAI,OAAO,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;AACvC,CAAC;AACM,MAAM,QAAQ,GAAG,CAAC,EAAE,KAAK;AAChC,IAAI,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC3B,CAAC,CAAC;AACK,MAAM,QAAQ,GAAG,CAAC,EAAE,KAAK;AAChC,IAAI,OAAO,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAC5B,CAAC;;AC1YM,SAAS,aAAa,CAAC,OAAO,EAAE;AACvC,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC;AACrB,IAAI,IAAI,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;AAC/C,IAAI,OAAO;AACX,QAAQ,KAAK;AACb,QAAQ,GAAG,CAAC,KAAK,EAAE;AACnB,YAAY,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC;AAChC,SAAS;AACT,QAAQ,OAAO,CAAC,GAAG,EAAE;AACrB,YAAY,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAC7C,YAAY,OAAO,KAAK,KAAK,CAAC,CAAC,GAAG,SAAS,GAAG,KAAK,CAAC;AACpD,SAAS;AACT,QAAQ,GAAG,CAAC,MAAM,EAAE;AACpB,YAAY,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAChD,YAAY,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;AAC9B,gBAAgB,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACnC,gBAAgB,IAAI,CAAC,KAAK,EAAE;AAC5B,oBAAoB,OAAO,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;AACvD,oBAAoB,KAAK,GAAG,IAAI,CAAC;AACjC,iBAAiB;AACjB,gBAAgB,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AACxC,aAAa;AACb,YAAY,OAAO,KAAK,CAAC;AACzB,SAAS;AACT,KAAK,CAAC;AACN;;AC1BA;AAEO,SAAS,QAAQ,CAAC,GAAG,EAAE,OAAO,EAAE;AACvC,IAAI,OAAO,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3C,CAAC;AACM,SAAS,QAAQ,CAAC,GAAG,EAAE,OAAO,EAAE;AACvC,IAAI,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;AAClC,IAAI,MAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACxC,IAAI,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;AACzD,IAAI,OAAO,GAAG,CAAC;AACf;;ACVO,SAAS,oBAAoB,CAAC,IAAI,EAAE;AAC3C,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;AAClE;;ACCO,SAAS,cAAc,CAAC,KAAK,EAAE;AACtC,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,OAAO,KAAK,IAAI,QAAQ,EAAE;AACnD,QAAQ,OAAO,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;AAChF,KAAK;AACL,IAAI,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;AACzB,CAAC;AACD,SAAS,iBAAiB,CAAC,KAAK,EAAE;AAClC,IAAI,IAAI;AACR,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACjD,KAAK;AACL,IAAI,OAAO,CAAC,EAAE;AACd,QAAQ,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;AACzB,KAAK;AACL;;ACHA,MAAM,aAAa,GAAG,qBAAqB,CAAC;AAC5C,MAAM,cAAc,GAAG,oBAAoB,CAAC;AACrC,SAAS,QAAQ,CAAC,IAAI,EAAE;AAC/B,IAAI,OAAO,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpC,CAAC;AACM,SAAS,SAAS,CAAC,IAAI,EAAE;AAChC,IAAI,OAAO,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,CAAC;AAoBM,SAAS,aAAa,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE;AACtD,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,QAAQ,OAAO;AACf,KAAK;AACL,IAAI,IAAI,OAAO,KAAK,IAAI,QAAQ,EAAE;AAClC,QAAQ,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;AAC7C,KAAK;AACL,IAAI,MAAM,YAAY,GAAG,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACpD,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AAC9B,QAAQ,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK,aAAa,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;AACxE,KAAK;AACL,SAAS,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;AAC3B,QAAQ,MAAM,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;AAChC,QAAQ,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACrC,QAAQ,MAAM,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC;AACnC,QAAQ,IAAI,OAAO,IAAI,IAAI,EAAE;AAC7B;AACA,YAAY,MAAM,UAAU,GAAG,EAAE,CAAC,UAAU,CAAC;AAC7C,YAAY,EAAE,CAAC,OAAO;AACtB,gBAAgB,UAAU,IAAI,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC;AAC5G,SAAS;AACT;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACtD,YAAY,MAAM,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AACxC,YAAY,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,cAAc,KAAK,EAAE,CAAC,cAAc,IAAI,GAAG,CAAC,MAAM,KAAK,EAAE,CAAC,MAAM,EAAE;AACzG,gBAAgB,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1C,gBAAgB,CAAC,EAAE,CAAC;AACpB,aAAa;AACb,SAAS;AACT,QAAQ,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC9B,KAAK;AACL,SAAS,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;AAC/B,QAAQ,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK;AACjD,YAAY,YAAY,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;AACvE,YAAY,aAAa,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;AAChD,YAAY,OAAO,GAAG,CAAC;AACvB,SAAS,CAAC,CAAC;AACX,QAAQ,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACxC,KAAK;AACL,SAAS;AACT;AACA,QAAQ,MAAM,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,uBAAuB,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC,CAAC;AACrF,KAAK;AACL,IAAI,MAAM,SAAS,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC;AACjD,IAAI,MAAM,QAAQ,GAAG,aAAa,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;AACtD,IAAI,IAAI,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,QAAQ,EAAE;AAC1D,QAAQ,IAAI,IAAI,EAAE;AAClB,YAAY,YAAY,CAAC,IAAI,EAAE,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;AACjE,SAAS;AACT,aAAa;AACb,YAAY,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AAC1D,SAAS;AACT,KAAK;AACL,CAAC;AAKD,SAAS,eAAe,CAAC,GAAG,EAAE,IAAI,EAAE;AACpC,IAAI,MAAM,GAAG,GAAG,QAAQ,GAAG,IAAI,CAAC;AAChC,IAAI,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACnC,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,QAAQ,MAAM,QAAQ,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC;AACpD,QAAQ,KAAK,GAAG,EAAE,CAAC;AACnB,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK;AAChF,YAAY,IAAI,GAAG,EAAE;AACrB,gBAAgB,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;AACvD,aAAa;AACb,SAAS,CAAC,CAAC;AACX,QAAQ,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAClC,KAAK;AACL,IAAI,OAAO,KAAK,CAAC;AACjB,CAAC;AACD,SAAS,aAAa,CAAC,YAAY,EAAE,GAAG,EAAE;AAC1C,IAAI,MAAM,QAAQ,GAAG,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;AAC3D,IAAI,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;AAChC,IAAI,MAAM,IAAI,GAAG;AACjB,QAAQ,QAAQ;AAChB,QAAQ,OAAO;AACf,KAAK,CAAC;AACN,IAAI,OAAO,YAAY;AACvB,SAAS,GAAG,CAAC,CAAC,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;AACtE,SAAS,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC3B,SAAS,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB;;ACrHA,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC;AAC7B,MAAM,KAAK,GAAG,SAAS,CAAC;AACjB,SAAS,cAAc,CAAC,WAAW,EAAE;AAC5C,IAAI,MAAM,SAAS,GAAG,WAAW,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;AAC/D,IAAI,IAAI,SAAS,KAAK,QAAQ,EAAE;AAChC,QAAQ,eAAe,CAAC,WAAW,CAAC,CAAC;AACrC,KAAK;AACL,CAAC;AACM,SAAS,UAAU,CAAC,OAAO,EAAE;AACpC,IAAI,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;AAC7B,IAAI,IAAI,CAAC,GAAG,EAAE;AACd,QAAQ,MAAM,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;AAChC,QAAQ,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG;AAC/B,YAAY,OAAO;AACnB,YAAY,KAAK;AACjB,YAAY,MAAM,EAAE,aAAa,CAAC,OAAO,CAAC;AAC1C,YAAY,KAAK,EAAE,KAAK;AACxB,YAAY,GAAG,EAAE,EAAE;AACnB,YAAY,KAAK,EAAE,SAAS;AAC5B,YAAY,SAAS,EAAE,SAAS;AAChC,YAAY,SAAS,EAAE,SAAS;AAChC,SAAS,CAAC;AACV,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf,CAAC;AACD,MAAM,QAAQ,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;AACzC,SAAS,eAAe,CAAC,IAAI,EAAE;AACtC,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC;AACrB,IAAI,KAAK,MAAM,MAAM,IAAI,QAAQ,EAAE;AACnC,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;AACrC,YAAY,KAAK,GAAG,MAAM,CAAC;AAC3B,YAAY,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC7C,SAAS;AACT,KAAK;AACL,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AAC9B,QAAQ,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC7B,KAAK;AACL,SAAS;AACT,QAAQ,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AAClC,KAAK;AACL,IAAI,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AAC9B,CAAC;AACM,SAAS,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE;AACjD,IAAI,aAAa,CAAC,IAAI,EAAE,GAAG,EAAE,eAAe,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;AAC3D,CAAC;AAIM,SAAS,QAAQ,CAAC,GAAG,EAAE;AAC9B,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE;AACpB,QAAQ,GAAG,CAAC,KAAK,GAAG,cAAc,CAAC,EAAE,EAAE,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC9E,QAAQ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAClC,KAAK;AACL,IAAI,OAAO,GAAG,CAAC,KAAK,CAAC;AACrB;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,IAAI,GAAG,EAAE,SAAS,EAAE,MAAM,GAAG;AAC1C;AACA;AACA;AACY,MAAC,YAAY,GAAG,EAAE,SAAS,EAAE,MAAM;;AClB/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,CAAC,CAAC,UAAU,EAAE;AAC9B,IAAI,OAAO,UAAU,CAAC,UAAU,CAAC,CAAC;AAClC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,iBAAiB,CAAC,EAAE,EAAE;AACtC,IAAI,OAAO,UAAU,KAAK,EAAE,GAAG,IAAI,EAAE;AACrC,QAAQ,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;AAChD,KAAK,CAAC;AACN;;AC1HO,SAAS,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE;AACvD,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;AAC/B,QAAQ,OAAO,mBAAmB,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AAChE,KAAK;AACL,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AAChC,QAAQ,OAAO,mBAAmB,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AAC5E,KAAK;AACL,SAAS,IAAI,OAAO,CAAC,IAAI,KAAK,IAAI,EAAE;AACpC,QAAQ,gBAAgB,CAAC,GAAG,EAAE,UAAU,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACrE,QAAQ,OAAO,mBAAmB,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,QAAQ,IAAI,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AACpF,KAAK;AACL,SAAS;AACT,QAAQ,OAAO,mBAAmB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AACvE,KAAK;AACL;;ACjBO,SAAS,QAAQ,CAAC,IAAI,EAAE,IAAI,GAAG,CAAC,EAAE;AACzC,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;AACzB,QAAQ,OAAO,IAAI,CAAC;AACpB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,GAAG,CAAC;AACxC,QAAQ,IAAI,IAAI,CAAC,CAAC;AAClB,KAAK;AACL,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC/C;;ACPO,SAAS,QAAQ,CAAC,OAAO,EAAE;AAClC,IAAI,OAAO,OAAO,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AACvD,CAAC;AACM,SAAS,SAAS,CAAC,OAAO,EAAE;AACnC,IAAI,OAAO,OAAO,IAAI,yBAAyB,GAAG,OAAO,CAAC;AAC1D,CAAC;AACM,SAAS,YAAY,CAAC,OAAO,EAAE;AACtC,IAAI,OAAO,OAAO,IAAI,4BAA4B,GAAG,OAAO,CAAC;AAC7D;;ACNA;AACA;AACA;AACO,SAAS,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE;AACtC,IAAI,OAAO,IAAI,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;AAC7C,CAAC;AACM,MAAM,WAAW,CAAC;AACzB,IAAI,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,GAAG,IAAI,EAAE;AACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,QAAQ,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;AACpC,QAAQ,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;AAC9B,QAAQ,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;AACxB,QAAQ,IAAI,GAAG,IAAI,IAAI,EAAE;AACzB,YAAY,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AACnC,SAAS;AACT,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,MAAM,QAAQ,GAAG,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AACzD,YAAY,IAAI,QAAQ,KAAK,SAAS,EAAE;AACxC,gBAAgB,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;AAC7C,oBAAoB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC7C,iBAAiB;AACjB,qBAAqB;AACrB,oBAAoB,IAAI,CAAC,QAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC;AAC/C,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC;AACM,SAAS,WAAW,CAAC,IAAI,EAAE;AAClC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,OAAO,IAAI,KAAK,SAAS,EAAE;AACnD,QAAQ,OAAO,SAAS,CAAC;AACzB,KAAK;AACL,IAAI,IAAI,SAAS,CAAC,IAAI,CAAC,EAAE;AACzB,QAAQ,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,YAAY,EAAE;AAC9D,YAAY,OAAO,IAAI,CAAC;AACxB,SAAS;AACT,aAAa,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;AAClD,YAAY,OAAO,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAChG,SAAS;AACT,aAAa;AACb,YAAY,OAAO,IAAI,CAAC;AACxB,SAAS;AACT,KAAK;AACL,SAAS,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AAClC,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC;AAClE,KAAK;AACL,SAAS,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,OAAO,IAAI,KAAK,SAAS,EAAE;AAChG,QAAQ,MAAM,OAAO,GAAG,IAAI,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAC7D,QAAQ,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AACpC,QAAQ,OAAO,OAAO,CAAC;AACvB,KAAK;AACL,SAAS;AACT,QAAQ,OAAO,CAAC,wBAAwB,CAAC,CAAC;AAC1C,QAAQ,OAAO,SAAS,CAAC;AACzB,KAAK;AACL,CAAC;AACM,MAAM,SAAS,GAAG,CAAC,CAAC,KAAK;AAChC,IAAI,IAAI,IAAI,EAAE;AACd,QAAQ,IAAI,CAAC,YAAY,WAAW,EAAE;AACtC,YAAY,OAAO,IAAI,CAAC;AACxB,SAAS;AACT,QAAQ,IAAI,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,WAAW,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI,EAAE;AACnF,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,gDAAgD,CAAC,CAAC,CAAC;AAChF,SAAS;AACT,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,SAAS;AACT,QAAQ,OAAO,CAAC,YAAY,WAAW,CAAC;AACxC,KAAK;AACL,CAAC,CAAC;AACF;AACA;AACA;AACY,MAAC,QAAQ,GAAG,CAAC,KAAK,KAAK,KAAK,CAAC;;AClElC,MAAM,oBAAoB,GAAG,CAAC,IAAI,EAAE,GAAG,KAAK;AACnD,IAAI,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;AAC5C,IAAI,OAAO,eAAe,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACtC,CAAC,CAAC;AACK,MAAM,eAAe,GAAG,CAAC,IAAI,EAAE,GAAG,KAAK;AAC9C,IAAI,MAAM,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC;AACpC,IAAI,MAAM,WAAW,GAAG,GAAG,CAAC,SAAS,CAAC;AACtC,IAAI,aAAa,CAAC,WAAW,CAAC,CAAC;AAC/B;AACA,IAAI,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC;AACtB,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;AACtD;AACA,IAAI,MAAM,gBAAgB,GAAG,gBAAgB,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;AAC/F,IAAI,gBAAgB,CAAC,UAAU,GAAG,WAAW,CAAC;AAC9C,IAAI,MAAM,MAAM,IAAI,gBAAgB,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC;AAClD;AACA,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK;AACtC,QAAQ,SAAS,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;AACpC,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,UAAU,GAAG,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;AAChF;AACA,IAAI,MAAM,aAAa,GAAG,UAAU,CAAC,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC;AACjF;AACA,IAAI,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC,OAAO,KAAK;AAC5C,QAAQ,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAC3C,QAAQ,MAAM,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;AACjD,QAAQ,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC,cAAc,KAAK;AACvD,YAAY,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;AAC7C,gBAAgB,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE;AACvC,oBAAoB,WAAW,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;AACzD,iBAAiB;AACjB,aAAa,CAAC,CAAC;AACf,YAAY,IAAI,GAAG,CAAC,KAAK,EAAE;AAC3B,gBAAgB,QAAQ,CAAC,+CAA+C,CAAC,CAAC;AAC1E,gBAAgB,OAAO,eAAe,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AAClD,aAAa;AACb,YAAY,IAAI,YAAY,GAAG,GAAG,CAAC,SAAS,CAAC;AAC7C,YAAY,IAAI,CAAC,YAAY,EAAE;AAC/B,gBAAgB,YAAY,GAAG,GAAG,CAAC,SAAS,GAAG;AAC/C,oBAAoB,WAAW;AAC/B,oBAAoB,KAAK,EAAE,EAAE;AAC7B,oBAAoB,cAAc,EAAE,SAAS;AAC7C,oBAAoB,UAAU,EAAE,SAAS;AACzC,oBAAoB,OAAO,EAAE,SAAS;AACtC,iBAAiB,CAAC;AAClB,gBAAgB,MAAM,aAAa,GAAG,WAAW,CAAC,YAAY,CAAC,qBAAqB,CAAC,IAAI,SAAS,CAAC;AACnG,gBAAgB,IAAI,aAAa,EAAE;AACnC,oBAAoB,YAAY,CAAC,OAAO,GAAG,aAAa,CAAC;AACzD,oBAAoB,YAAY,CAAC,cAAc,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC;AAC3E,oBAAoB,YAAY,CAAC,UAAU,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC;AAC1E,oBAAoB,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;AAC3E,iBAAiB;AACjB,aAAa;AACb,YAAY,YAAY,CAAC,KAAK,GAAG,EAAE,CAAC;AACpC,YAAY,MAAM,MAAM,GAAG;AAC3B,gBAAgB,GAAG,IAAI;AACvB,gBAAgB,SAAS,EAAE,YAAY;AACvC,aAAa,CAAC;AACd,YAAY,OAAO,YAAY,CAAC,MAAM,EAAE,WAAW,EAAE,WAAW,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;AAClF,SAAS,CAAC,CAAC;AACX,KAAK,CAAC,CAAC;AACP,CAAC;;ACxDM,MAAM,MAAM,GAAG,4BAA4B,CAAC;AAC5C,SAAS,mBAAmB,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;AAC/D,IAAI,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,YAAY,EAAE;AACxD,QAAQ,IAAI,GAAG,CAAC,UAAU,KAAK,IAAI,EAAE;AACrC,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;AAC5B,KAAK;AACL,IAAI,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AACzC,IAAI,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;AAC3C,QAAQ,OAAO,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;AAC1D,KAAK;AACL,SAAS,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;AAC5B,QAAQ,OAAO,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;AAC3E,KAAK;AACL,SAAS,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AAC/B,QAAQ,OAAO,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAClE,KAAK;AACL,CAAC;AACM,SAAS,cAAc,CAAC,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;AACpE,IAAI,IAAI,WAAW,GAAG,CAAC,CAAC;AACxB,IAAI,IAAI,WAAW,GAAG,CAAC,CAAC;AACxB,IAAI,IAAI,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AACrC,IAAI,IAAI,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACjC,IAAI,IAAI,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;AACvC,IAAI,IAAI,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AACrC,IAAI,IAAI,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACjC,IAAI,IAAI,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;AACvC,IAAI,IAAI,WAAW,CAAC;AACpB,IAAI,IAAI,QAAQ,CAAC;AACjB,IAAI,IAAI,SAAS,CAAC;AAClB,IAAI,MAAM,OAAO,GAAG,EAAE,CAAC;AACvB,IAAI,OAAO,WAAW,IAAI,SAAS,IAAI,WAAW,IAAI,SAAS,EAAE;AACjE,QAAQ,IAAI,aAAa,IAAI,IAAI,EAAE;AACnC,YAAY,aAAa,GAAG,KAAK,CAAC,EAAE,WAAW,CAAC,CAAC;AACjD,SAAS;AACT,aAAa,IAAI,WAAW,IAAI,IAAI,EAAE;AACtC,YAAY,WAAW,GAAG,KAAK,CAAC,EAAE,SAAS,CAAC,CAAC;AAC7C,SAAS;AACT,aAAa,IAAI,aAAa,IAAI,IAAI,EAAE;AACxC,YAAY,aAAa,GAAG,KAAK,CAAC,EAAE,WAAW,CAAC,CAAC;AACjD,SAAS;AACT,aAAa,IAAI,WAAW,IAAI,IAAI,EAAE;AACtC,YAAY,WAAW,GAAG,KAAK,CAAC,EAAE,SAAS,CAAC,CAAC;AAC7C,SAAS;AACT,aAAa,IAAI,SAAS,CAAC,aAAa,EAAE,aAAa,CAAC,EAAE;AAC1D,YAAY,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,aAAa,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/E,YAAY,aAAa,GAAG,KAAK,CAAC,EAAE,WAAW,CAAC,CAAC;AACjD,YAAY,aAAa,GAAG,KAAK,CAAC,EAAE,WAAW,CAAC,CAAC;AACjD,SAAS;AACT,aAAa,IAAI,SAAS,CAAC,WAAW,EAAE,WAAW,CAAC,EAAE;AACtD,YAAY,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,WAAW,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAC3E,YAAY,WAAW,GAAG,KAAK,CAAC,EAAE,SAAS,CAAC,CAAC;AAC7C,YAAY,WAAW,GAAG,KAAK,CAAC,EAAE,SAAS,CAAC,CAAC;AAC7C,SAAS;AACT,aAAa,IAAI,SAAS,CAAC,aAAa,EAAE,WAAW,CAAC,EAAE;AACxD;AACA,YAAY,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,aAAa,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7E,YAAY,YAAY,CAAC,GAAG,EAAE,SAAS,EAAE,aAAa,EAAE,WAAW,CAAC,WAAW,CAAC,CAAC;AACjF,YAAY,aAAa,GAAG,KAAK,CAAC,EAAE,WAAW,CAAC,CAAC;AACjD,YAAY,WAAW,GAAG,KAAK,CAAC,EAAE,SAAS,CAAC,CAAC;AAC7C,SAAS;AACT,aAAa,IAAI,SAAS,CAAC,WAAW,EAAE,aAAa,CAAC,EAAE;AACxD;AACA,YAAY,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,WAAW,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7E,YAAY,YAAY,CAAC,GAAG,EAAE,SAAS,EAAE,WAAW,EAAE,aAAa,CAAC,CAAC;AACrE,YAAY,WAAW,GAAG,KAAK,CAAC,EAAE,SAAS,CAAC,CAAC;AAC7C,YAAY,aAAa,GAAG,KAAK,CAAC,EAAE,WAAW,CAAC,CAAC;AACjD,SAAS;AACT,aAAa;AACb,YAAY,IAAI,WAAW,KAAK,SAAS,EAAE;AAC3C,gBAAgB,WAAW,GAAG,iBAAiB,CAAC,KAAK,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;AAC/E,aAAa;AACb,YAAY,QAAQ,GAAG,WAAW,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AACtD,YAAY,IAAI,QAAQ,KAAK,SAAS,EAAE;AACxC;AACA,gBAAgB,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AACpE,gBAAgB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,MAAM,KAAK;AACtD,oBAAoB,YAAY,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;AACxE,iBAAiB,CAAC,CAAC,CAAC;AACpB,aAAa;AACb,iBAAiB;AACjB,gBAAgB,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC5C,gBAAgB,IAAI,SAAS,CAAC,QAAQ,KAAK,aAAa,CAAC,IAAI,EAAE;AAC/D,oBAAoB,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AACxE,oBAAoB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,MAAM,KAAK;AAC1D,wBAAwB,YAAY,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;AAC5E,qBAAqB,CAAC,CAAC,CAAC;AACxB,iBAAiB;AACjB,qBAAqB;AACrB,oBAAoB,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC;AACnF,oBAAoB,KAAK,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC;AAChD,oBAAoB,YAAY,CAAC,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE,aAAa,CAAC,CAAC;AAC3E,iBAAiB;AACjB,aAAa;AACb,YAAY,aAAa,GAAG,KAAK,CAAC,EAAE,WAAW,CAAC,CAAC;AACjD,SAAS;AACT,KAAK;AACL,IAAI,IAAI,WAAW,IAAI,SAAS,EAAE;AAClC,QAAQ,MAAM,MAAM,GAAG,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,IAAI,IAAI,GAAG,SAAS,GAAG,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;AAC3F,QAAQ,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9F,KAAK;AACL,IAAI,IAAI,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC;AACnC,IAAI,IAAI,WAAW,IAAI,SAAS,EAAE;AAClC,QAAQ,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,MAAM;AAChC,YAAY,YAAY,CAAC,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;AACxE,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,CAAC;AACD,SAAS,eAAe,CAAC,IAAI,EAAE;AAC/B,IAAI,OAAO,IAAI,CAAC,KAAK,IAAI,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC;AACpD,CAAC;AACD,SAAS,KAAK,CAAC,GAAG,EAAE;AACpB,IAAI,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACrD,CAAC;AACM,SAAS,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE;AACvC,IAAI,QAAQ,IAAI;AAChB,QAAQ,KAAK,SAAS;AACtB,YAAY,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC;AAC9B,QAAQ,KAAK,MAAM;AACnB,YAAY,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;AAClD,QAAQ,KAAK,MAAM;AACnB,YAAY,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;AACvD,QAAQ,KAAK,UAAU;AACvB,YAAY,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AACjD,KAAK;AACL,CAAC;AACM,SAAS,MAAM,CAAC,GAAG,EAAE;AAC5B,IAAI,OAAO,GAAG,CAAC,QAAQ,KAAK,CAAC,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,CAAC;AACpD,CAAC;AACD,SAAS,UAAU,CAAC,IAAI,EAAE;AAC1B,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,YAAY,CAAC;AAC1C,CAAC;AACD,SAAS,WAAW,CAAC,IAAI,EAAE;AAC3B,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,YAAY,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC;AACpE,CAAC;AACD,SAAS,cAAc,CAAC,IAAI,EAAE;AAC9B,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,UAAU,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;AACxE,CAAC;AACD,SAAS,gBAAgB,CAAC,IAAI,EAAE;AAChC,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,UAAU,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;AACzE,CAAC;AACD,SAAS,OAAO,CAAC,KAAK,EAAE,SAAS,EAAE;AACnC,IAAI,MAAM,MAAM,GAAG,EAAE,CAAC;AACtB,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;AAC9B,QAAQ,MAAM,GAAG,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AACpC,QAAQ,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;AACxD,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzB,KAAK;AACL,IAAI,OAAO,MAAM,CAAC;AAClB,CAAC;AACM,SAAS,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;AACpD,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;AACxB,IAAI,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;AACpB,IAAI,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC;AAC3B,IAAI,IAAI,GAAG,KAAK,OAAO,EAAE;AACzB,QAAQ,IAAI,GAAG,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,EAAE;AACrC,YAAY,WAAW,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;AACvD,SAAS;AACT,QAAQ,OAAO;AACf,KAAK;AACL,IAAI,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,YAAY,EAAE;AAC9C,QAAQ,OAAO;AACf,KAAK;AACL,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,QAAQ,KAAK,GAAG,GAAG,KAAK,KAAK,CAAC;AAC9B,KAAK;AACL,IAAI,IAAI,OAAO,CAAC;AAChB,IAAI,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AAC9B,IAAI,MAAM,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;AAChC,IAAI,MAAM,KAAK,GAAG,gBAAgB,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAC5D,IAAI,MAAM,MAAM,GAAG,GAAG,KAAK,QAAQ,CAAC;AACpC,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,eAAe,EAAE;AACjD,QAAQ,KAAK,GAAG,KAAK,CAAC;AACtB,KAAK;AACL,SAAS,IAAI,MAAM,EAAE;AACrB,QAAQ,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzC,KAAK;AACL,IAAI,MAAM,WAAW,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC;AAC/C,IAAI,IAAI,KAAK,EAAE;AACf,QAAQ,OAAO,GAAG,eAAe,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AAC7C,KAAK;AACL,IAAI,MAAM,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC;AAC9B,IAAI,IAAI,WAAW,EAAE;AACrB,QAAQ,OAAO,IAAI,CAAC,OAAO,EAAE,MAAM;AACnC,YAAY,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;AAC1D,YAAY,MAAM,eAAe,GAAG,OAAO,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;AAC7D,YAAY,MAAM,QAAQ,GAAG,EAAE,CAAC;AAChC;AACA,YAAY,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK;AACtE,gBAAgB,IAAI,MAAM,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,EAAE;AACrD,oBAAoB,MAAM,KAAK,GAAG,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9D,oBAAoB,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AAC1C,wBAAwB,YAAY,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC/E,qBAAqB;AACrB,iBAAiB;AACjB,aAAa,CAAC,CAAC;AACf;AACA,YAAY,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,KAAK;AACnE,gBAAgB,MAAM,OAAO,GAAG,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACzE,gBAAgB,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;AACrF,aAAa,CAAC,CAAC;AACf,YAAY,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,MAAM;AACpD,gBAAgB,eAAe,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AAChD,aAAa,CAAC,CAAC;AACf,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IAAI,MAAM,aAAa,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;AAChD,IAAI,IAAI,aAAa,EAAE;AACvB,QAAQ,IAAI,IAAI,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;AACnC,YAAY,OAAO,CAAC,kDAAkD,CAAC,CAAC;AACxE,SAAS;AACT,QAAQ,OAAO;AACf,KAAK;AACL,IAAI,OAAO,IAAI,CAAC,OAAO,EAAE,MAAM;AAC/B,QAAQ,MAAM,IAAI,GAAG,MAAM,GAAG,UAAU,GAAG,SAAS,CAAC;AACrD,QAAQ,OAAO,mBAAmB,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AAC/D,KAAK,CAAC,CAAC;AACP,CAAC;AACD,SAAS,SAAS,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE;AAC5E,IAAI,MAAM,QAAQ,GAAG,EAAE,CAAC;AACxB,IAAI,OAAO,QAAQ,IAAI,MAAM,EAAE,EAAE,QAAQ,EAAE;AAC3C,QAAQ,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AACpC,QAAQ,aAAa,CAAC,EAAE,CAAC,CAAC;AAC1B,QAAQ,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;AACjD,KAAK;AACL,IAAI,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,KAAK;AACpD,QAAQ,KAAK,MAAM,KAAK,IAAI,QAAQ,EAAE;AACtC,YAAY,YAAY,CAAC,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;AACxD,SAAS;AACT,KAAK,CAAC,CAAC;AACP,CAAC;AACD,SAAS,YAAY,CAAC,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE;AAC/D,IAAI,OAAO,QAAQ,IAAI,MAAM,EAAE,EAAE,QAAQ,EAAE;AAC3C,QAAQ,MAAM,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;AACnC,QAAQ,aAAa,CAAC,EAAE,CAAC,CAAC;AAC1B,QAAQ,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;AAC5B,KAAK;AACL,CAAC;AACD,IAAI,QAAQ,GAAG,CAAC,CAAC;AACjB,MAAM,SAAS,GAAG,MAAM,EAAE,CAAC;AAC3B,SAAS,UAAU,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE;AAC1C,IAAI,IAAI,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;AACnE,IAAI,IAAI,GAAG,KAAK,IAAI,EAAE;AACtB,QAAQ,GAAG,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;AACnC,QAAQ,OAAO,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC;AACjC,QAAQ,YAAY,CAAC,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;AAClD,KAAK;AACL,IAAI,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;AACvC,CAAC;AACD,SAAS,cAAc,CAAC,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE;AAC3D,IAAI,MAAM,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC5C,IAAI,IAAI,MAAM,EAAE;AAChB,QAAQ,OAAO,MAAM,CAAC;AACtB,KAAK;AACL,IAAI,MAAM,UAAU,GAAG,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AACpD,IAAI,IAAI,UAAU,EAAE;AACpB,QAAQ,OAAO,UAAU,CAAC,OAAO,CAAC;AAClC,KAAK;AACL,IAAI,MAAM,QAAQ,GAAG,cAAc,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;AACnD,IAAI,OAAO,CAAC,GAAG,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;AACrC,IAAI,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC;AAC5C,IAAI,OAAO,QAAQ,CAAC,OAAO,CAAC;AAC5B,CAAC;AACD,SAAS,cAAc,CAAC,GAAG,EAAE,QAAQ,EAAE;AACvC,IAAI,MAAM,QAAQ,GAAG,aAAa,CAAC,GAAG,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AAC3D,IAAI,QAAQ,CAAC,YAAY,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AAC/C,IAAI,OAAO,QAAQ,CAAC;AACpB,CAAC;AACD,SAAS,eAAe,CAAC,GAAG,EAAE,QAAQ,EAAE;AACxC,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK;AACrD,QAAQ,MAAM,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AACjD,QAAQ,IAAI,QAAQ,IAAI,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;AAC3D,YAAY,UAAU,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;AACtC,YAAY,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;AAChD,SAAS;AACT,KAAK,CAAC,CAAC;AACP,CAAC;AACM,SAAS,qBAAqB,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE;AACnE,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK;AAC5D,QAAQ,IAAI,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;AACzC;AACA;AACA,YAAY,MAAM,QAAQ,GAAG,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACtD,YAAY,MAAM,YAAY,GAAG,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC7D,YAAY,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,YAAY,CAAC,CAAC;AACrD,YAAY,OAAO,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;AAC/D,YAAY,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC;AAChC,gBAAgB,EAAE,EAAE,QAAQ;AAC5B,gBAAgB,SAAS,EAAE,kBAAkB;AAC7C,gBAAgB,IAAI,EAAE,YAAY;AAClC,gBAAgB,EAAE,EAAE,MAAM,GAAG;AAC7B,aAAa,CAAC,CAAC;AACf,SAAS;AACT,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK;AAC3D,QAAQ,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;AAC1C;AACA;AACA,YAAY,MAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AACnD,YAAY,IAAI,QAAQ,EAAE;AAC1B,gBAAgB,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AACrD,gBAAgB,QAAQ,CAAC,MAAM,EAAE,CAAC;AAClC,gBAAgB,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC;AACpC,oBAAoB,EAAE,EAAE,MAAM;AAC9B,oBAAoB,SAAS,EAAE,kBAAkB;AACjD,oBAAoB,IAAI,EAAE,CAAC,QAAQ,CAAC;AACpC,oBAAoB,EAAE,EAAE,MAAM,GAAG;AACjC,iBAAiB,CAAC,CAAC;AACnB,aAAa;AACb,SAAS;AACT,KAAK,CAAC,CAAC;AACP,CAAC;AACD,SAAS,WAAW,CAAC,IAAI,EAAE;AAC3B,IAAI,OAAO,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;AACxC,CAAC;AACD,SAAS,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE;AACvC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;AACxB,IAAI,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC;AAC3B,IAAI,IAAI,GAAG,KAAK,OAAO,EAAE;AACzB,QAAQ,QAAQ,KAAK,CAAC,GAAG,GAAG,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE;AAC9D,KAAK;AACL,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,QAAQ,KAAK,GAAG,GAAG,KAAK,KAAK,CAAC;AAC9B,KAAK;AACL,IAAI,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AAC9B,IAAI,MAAM,GAAG,IAAI,KAAK,CAAC,GAAG,GAAG,aAAa,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9D,IAAI,MAAM,WAAW,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC;AAC/C,IAAI,MAAM,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;AAChC,IAAI,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;AAC3B,IAAI,gBAAgB,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAC9C,IAAI,IAAI,KAAK,IAAI,GAAG,KAAK,eAAe,EAAE;AAC1C,QAAQ,KAAK,GAAG,KAAK,CAAC;AACtB,KAAK;AACL,IAAI,MAAM,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC;AAC5C,IAAI,IAAI,gBAAgB,EAAE;AAC1B,QAAQ,MAAM,QAAQ,GAAG,gBAAgB,CAAC,UAAU,CAAC;AACrD,QAAQ,IAAI,QAAQ,EAAE;AACtB,YAAY,YAAY,CAAC,IAAI,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;AAC9C,SAAS;AACT,QAAQ,IAAI,GAAG,KAAK,QAAQ,EAAE;AAC9B,YAAY,UAAU,CAAC,IAAI,EAAE,gBAAgB,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;AAChE,YAAY,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC7C,SAAS;AACT,KAAK;AACL,IAAI,IAAI,IAAI,CAAC;AACb,IAAI,IAAI,WAAW,EAAE;AACrB;AACA,QAAQ,MAAM,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC;AAC9C,QAAQ,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;AAClC,QAAQ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAClC,QAAQ,IAAI,GAAG,oBAAoB,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AAC/C,KAAK;AACL,SAAS;AACT,QAAQ,MAAM,aAAa,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;AACpD,QAAQ,IAAI,aAAa,EAAE;AAC3B,YAAY,IAAI,IAAI,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AACnD,gBAAgB,OAAO,CAAC,kDAAkD,CAAC,CAAC;AAC5E,aAAa;AACb,YAAY,OAAO,GAAG,CAAC;AACvB,SAAS;AACT,KAAK;AACL,IAAI,OAAO,IAAI,CAAC,IAAI,EAAE,MAAM;AAC5B,QAAQ,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;AACtC,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AACjC,YAAY,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,YAAY,EAAE;AAC5E,gBAAgB,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;AAChD,aAAa;AACb,YAAY,MAAM,OAAO,GAAG,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,GAAG,SAAS,CAAC;AACnF,YAAY,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9E,YAAY,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,MAAM;AACpD,gBAAgB,IAAI,MAAM,GAAG,GAAG,CAAC;AACjC,gBAAgB,KAAK,MAAM,IAAI,IAAI,QAAQ,EAAE;AAC7C,oBAAoB,IAAI,OAAO,EAAE;AACjC,wBAAwB,MAAM,GAAG,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;AACvF,qBAAqB;AACrB,oBAAoB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACjD,iBAAiB;AACjB,gBAAgB,OAAO,GAAG,CAAC;AAC3B,aAAa,CAAC,CAAC;AACf,SAAS;AACT,QAAQ,OAAO,GAAG,CAAC;AACnB,KAAK,CAAC,CAAC;AACP,CAAC;AACD,MAAM,QAAQ,GAAG,CAAC,YAAY,EAAE,OAAO,KAAK;AAC5C,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC;AACrB,IAAI,MAAM,SAAS,GAAG,EAAE,CAAC;AACzB,IAAI,MAAM,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;AACnD,IAAI,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,mBAAmB,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAClG,IAAI,MAAM,QAAQ,GAAG,YAAY,EAAE,KAAK,IAAI,WAAW,CAAC;AACxD,IAAI,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;AACpE;AACA,IAAI,KAAK,MAAM,GAAG,IAAI,aAAa,EAAE;AACrC,QAAQ,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC;AACpD,KAAK;AACL;AACA,IAAI,KAAK,MAAM,KAAK,IAAI,QAAQ,EAAE;AAClC,QAAQ,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,IAAI,EAAE,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC;AACnD,KAAK;AACL;AACA,IAAI,KAAK,MAAM,GAAG,IAAI,CAAC,EAAE;AACzB,QAAQ,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC;AAC1D,KAAK;AACL,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;AAChC,CAAC,CAAC;AACF,MAAM,WAAW,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,QAAQ,KAAK;AAC/C,IAAI,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,qBAAqB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;AAC5E,IAAI,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC;AACF,MAAM,WAAW,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,QAAQ,KAAK;AAC/C,IAAI,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,qBAAqB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC;AAC3E,IAAI,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC;AACF,MAAM,iBAAiB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,KAAK;AACxD,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE;AACrB,QAAQ,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,QAAQ,EAAE;AACpC,YAAY,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AAClD,SAAS;AACT,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC;AACF,MAAM,uBAAuB,GAAG,yBAAyB,CAAC;AAC1D,MAAM,YAAY,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,QAAQ,KAAK;AAChD,IAAI,IAAI,uBAAuB,IAAI,GAAG,EAAE;AACxC,QAAQ,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,uBAAuB,EAAE,QAAQ,CAAC,CAAC;AACjE,KAAK;AACL,SAAS,IAAI,WAAW,IAAI,GAAG,EAAE;AACjC,QAAQ,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC;AACrD,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC;AACF,MAAM,gBAAgB,GAAG;AACzB,IAAI,KAAK,EAAE,WAAW;AACtB,IAAI,KAAK,EAAE,WAAW;AACtB,IAAI,SAAS,EAAE,WAAW;AAC1B,IAAI,KAAK,EAAE,iBAAiB;AAC5B,IAAI,OAAO,EAAE,iBAAiB;AAC9B,IAAI,CAAC,uBAAuB,GAAG,YAAY;AAC3C,CAAC,CAAC;AACF,MAAM,YAAY,GAAG,CAAC,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AACrE,MAAM,WAAW,GAAG,OAAO,CAAC;AACrB,SAAS,gBAAgB,CAAC,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,KAAK,EAAE;AAChE,IAAI,IAAI,CAAC,WAAW,EAAE;AACtB,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC;AAC5B,IAAI,MAAM,SAAS,GAAG,YAAY,IAAI,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;AAC9E,IAAI,KAAK,IAAI,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;AAC9C,QAAQ,IAAI,GAAG,KAAK,UAAU,IAAI,GAAG,KAAK,YAAY,EAAE;AACxD,YAAY,SAAS;AACrB,SAAS;AACT,QAAQ,MAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;AAC1C,QAAQ,IAAI,GAAG,KAAK,KAAK,EAAE;AAC3B,YAAY,QAAQ,CAAC,OAAO,GAAG,GAAG,CAAC;AACnC,YAAY,SAAS;AACrB,SAAS;AACT;AACA,QAAQ,MAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5C,QAAQ,IAAI,QAAQ,KAAK,QAAQ,EAAE;AACnC,YAAY,SAAS;AACrB,SAAS;AACT,QAAQ,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;AACrC;AACA,QAAQ,IAAI,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;AAChE,YAAY,YAAY,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;AACnD,YAAY,SAAS;AACrB,SAAS;AACT,QAAQ,IAAI,SAAS,EAAE;AACvB,YAAY,MAAM,YAAY,GAAG,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AAC5D,YAAY,MAAM,SAAS,GAAG,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;AAC1D,YAAY,IAAI,CAAC,YAAY,IAAI,CAAC,SAAS,EAAE;AAC7C;AACA,gBAAgB,SAAS,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;AAC1C,gBAAgB,SAAS;AACzB,aAAa;AACb,YAAY,IAAI,SAAS,EAAE;AAC3B,gBAAgB,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AACpD,aAAa;AACb,SAAS;AACT,aAAa,IAAI,IAAI,IAAI,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE;AACtD,YAAY,OAAO,CAAC,CAAC,EAAE,WAAW,CAAC,yCAAyC,CAAC,CAAC,CAAC;AAC/E,YAAY,SAAS;AACrB,SAAS;AACT,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;AAC3B,YAAY,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;AAC5D,YAAY,SAAS;AACrB,SAAS;AACT,QAAQ,IAAI,SAAS,CAAC,GAAG,CAAC,EAAE;AAC5B,YAAY,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC/D,YAAY,SAAS;AACrB,SAAS;AACT;AACA,QAAQ,MAAM,SAAS,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC;AAChD,QAAQ,IAAI,SAAS,EAAE;AACvB,YAAY,IAAI,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE;AAC/D,gBAAgB,SAAS;AACzB,aAAa;AACb,SAAS;AACT;AACA,QAAQ,IAAI,CAAC,KAAK,IAAI,GAAG,IAAI,GAAG,EAAE;AAClC,YAAY,WAAW,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;AAClD,YAAY,SAAS;AACrB,SAAS;AACT;AACA,QAAQ,YAAY,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;AAC/C,KAAK;AACL,IAAI,OAAO,GAAG,CAAC,KAAK,CAAC;AACrB,CAAC;AAYM,SAAS,YAAY,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;AACnD,IAAI,MAAM,EAAE,GAAG,MAAM;AACrB,QAAQ,IAAI,KAAK,IAAI,IAAI,EAAE;AAC3B,YAAY,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;AACrC,SAAS;AACT,aAAa;AACb,YAAY,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AACjD,SAAS;AACT,KAAK,CAAC;AACN,IAAI,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC;AACxB,QAAQ,EAAE;AACV,QAAQ,SAAS,EAAE,eAAe;AAClC,QAAQ,IAAI,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC;AAC3B,QAAQ,EAAE;AACV,KAAK,CAAC,CAAC;AACP,CAAC;AACM,SAAS,YAAY,CAAC,GAAG,EAAE,EAAE,EAAE,YAAY,EAAE;AACpD,IAAI,MAAM,EAAE,GAAG,MAAM;AACrB,QAAQ,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AACvC,KAAK,CAAC;AACN,IAAI,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC;AACxB,QAAQ,EAAE;AACV,QAAQ,SAAS,EAAE,eAAe;AAClC,QAAQ,IAAI,EAAE,CAAC,YAAY,CAAC;AAC5B,QAAQ,EAAE;AACV,KAAK,CAAC,CAAC;AACP,CAAC;AACD,SAAS,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE;AAC5C,IAAI,MAAM,EAAE,GAAG,MAAM;AACrB,QAAQ,IAAI;AACZ,YAAY,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAC9B,SAAS;AACT,QAAQ,OAAO,GAAG,EAAE;AACpB,YAAY,QAAQ,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,GAAG,CAAC,CAAC;AAChE,SAAS;AACT,KAAK,CAAC;AACN,IAAI,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC;AACxB,QAAQ,EAAE,EAAE,IAAI;AAChB,QAAQ,SAAS,EAAE,cAAc;AACjC,QAAQ,IAAI,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC;AAC1B,QAAQ,EAAE;AACV,KAAK,CAAC,CAAC;AACP,CAAC;AACD,SAAS,aAAa,CAAC,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE;AAC9C,IAAI,MAAM,EAAE,GAAG,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,eAAe,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AACrG,IAAI,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,WAAW,CAAC;AACpC,IAAI,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC;AACxB,QAAQ,EAAE;AACV,QAAQ,SAAS,EAAE,gBAAgB;AACnC,QAAQ,IAAI,EAAE,CAAC,SAAS,CAAC;AACzB,QAAQ,EAAE,EAAE,MAAM,GAAG;AACrB,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,EAAE,CAAC;AACd,CAAC;AACD,SAAS,YAAY,CAAC,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE;AACvD,IAAI,MAAM,EAAE,GAAG,MAAM;AACrB,QAAQ,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,GAAG,QAAQ,GAAG,IAAI,CAAC,CAAC;AAClE,KAAK,CAAC;AACN,IAAI,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC;AACxB,QAAQ,EAAE,EAAE,MAAM;AAClB,QAAQ,SAAS,EAAE,eAAe;AAClC,QAAQ,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC;AAClC,QAAQ,EAAE;AACV,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,QAAQ,CAAC;AACpB,CAAC;AACM,SAAS,WAAW,CAAC,GAAG,EAAE,WAAW,EAAE,SAAS,EAAE;AACzD,IAAI,MAAM,EAAE,GAAG,MAAM;AACrB,QAAQ,MAAM,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC;AAC5C,QAAQ,MAAM,YAAY,GAAG,GAAG,CAAC,GAAG,CAAC,eAAe,KAAK,WAAW,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,WAAW,GAAG,WAAW,CAAC;AACjH,QAAQ,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,iBAAiB,EAAE,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE;AACpF,YAAY,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AACzD,YAAY,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC;AAC7D,YAAY,KAAK,CAAC,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC;AAClD,YAAY,YAAY,CAAC,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,UAAU,CAAC,CAAC;AACtE,SAAS;AACT,KAAK,CAAC;AACN,IAAI,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC;AACxB,QAAQ,EAAE,EAAE,WAAW;AACvB,QAAQ,SAAS,EAAE,cAAc;AACjC,QAAQ,IAAI,EAAE,CAAC,SAAS,CAAC;AACzB,QAAQ,EAAE;AACV,KAAK,CAAC,CAAC;AACP,CAAC;AACD,SAAS,OAAO,CAAC,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE;AACxC,IAAI,MAAM,EAAE,GAAG,MAAM;AACrB,QAAQ,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;AACzD,KAAK,CAAC;AACN,IAAI,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC;AACxB,QAAQ,EAAE,EAAE,MAAM;AAClB,QAAQ,SAAS,EAAE,SAAS;AAC5B,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC;AACxB,QAAQ,EAAE;AACV,KAAK,CAAC,CAAC;AACP,CAAC;AACD,SAAS,UAAU,CAAC,GAAG,EAAE,EAAE,EAAE;AAC7B,IAAI,MAAM,EAAE,GAAG,MAAM;AACrB,QAAQ,MAAM,MAAM,GAAG,EAAE,CAAC,UAAU,CAAC;AACrC,QAAQ,IAAI,MAAM,EAAE;AACpB,YAAY,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;AACnC,SAAS;AACT,aAAa,IAAI,IAAI,EAAE;AACvB,YAAY,OAAO,CAAC,4CAA4C,EAAE,EAAE,CAAC,CAAC;AACtE,SAAS;AACT,KAAK,CAAC;AACN,IAAI,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC;AACxB,QAAQ,EAAE,EAAE,EAAE;AACd,QAAQ,SAAS,EAAE,QAAQ;AAC3B,QAAQ,IAAI,EAAE,EAAE;AAChB,QAAQ,EAAE;AACV,KAAK,CAAC,CAAC;AACP,CAAC;AACD,SAAS,cAAc,CAAC,GAAG,EAAE,IAAI,EAAE;AACnC,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;AACxC,CAAC;AACM,SAAS,uBAAuB,CAAC,GAAG,EAAE;AAC7C,IAAI,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,QAAQ,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;AACpE,IAAI,cAAc,CAAC,GAAG,CAAC,CAAC;AACxB,IAAI,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,QAAQ,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;AACnE,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;AAC7C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC5C,QAAQ,qBAAqB,CAAC,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,KAAK;AACL,CAAC;AACM,SAAS,cAAc,CAAC,GAAG,EAAE;AACpC,IAAI,KAAK,MAAM,EAAE,IAAI,GAAG,CAAC,UAAU,EAAE;AACrC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC;AAChB,KAAK;AACL,CAAC;AACM,SAAS,gBAAgB,CAAC,GAAG,EAAE;AACtC,IAAI,MAAM,IAAI,GAAG,EAAE,CAAC;AACpB,IAAI,KAAK,MAAM,EAAE,IAAI,GAAG,CAAC,UAAU,EAAE;AACrC,QAAQ,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3D,KAAK;AACL,IAAI,MAAM,gBAAgB,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAClF,IAAI,MAAM,KAAK,GAAG;AAClB,QAAQ,IAAI;AACZ,QAAQ,KAAK,EAAE,GAAG,CAAC,KAAK;AACxB,QAAQ,YAAY,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC;AAClD,QAAQ,gBAAgB;AACxB,QAAQ,YAAY,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO;AACtC,QAAQ,UAAU,EAAE,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;AAC7E,KAAK,CAAC;AACN,IAAI,QAAQ,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;AACpC,IAAI,OAAO,KAAK,CAAC;AACjB,CAAC;AACD,SAAS,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE;AACvD,IAAI,MAAM,GAAG,GAAG,EAAE,CAAC;AACnB,IAAI,KAAK,IAAI,CAAC,GAAG,QAAQ,EAAE,CAAC,IAAI,MAAM,EAAE,EAAE,CAAC,EAAE;AAC7C,QAAQ,MAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAClC,QAAQ,IAAI,KAAK,CAAC,QAAQ,IAAI,QAAQ,CAAC,YAAY,EAAE;AACrD,YAAY,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AACtC,YAAY,IAAI,GAAG,KAAK,SAAS,EAAE;AACnC,gBAAgB,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC7B,aAAa;AACb,SAAS;AACT,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf,CAAC;AACD,MAAM,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;AACvC,SAAS,MAAM,CAAC,EAAE,EAAE;AACpB,IAAI,IAAI,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC;AAC7B,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;AAC3B,QAAQ,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AACxD,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf,CAAC;AACD,SAAS,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE;AACzB,IAAI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACjC,QAAQ,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;AACtC,KAAK;AACL,IAAI,EAAE,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;AACzB,CAAC;AACD,SAAS,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE;AACnC,IAAI,MAAM,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,MAAM,CAAC,IAAI,CAAC;AACpE,IAAI,MAAM,SAAS,GAAG,MAAM,CAAC,QAAQ,KAAK,QAAQ,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC;AACvG,IAAI,OAAO,SAAS,IAAI,SAAS,CAAC;AAClC,CAAC;AACD,SAAS,cAAc,CAAC,KAAK,EAAE;AAC/B,IAAI,OAAO,KAAK,KAAK,WAAW,IAAI,KAAK,IAAI,uBAAuB,IAAI,KAAK,CAAC,CAAC;AAC/E,CAAC;AACM,SAAS,qBAAqB,CAAC,GAAG,EAAE,OAAO,EAAE;AACpD,IAAI,IAAI,GAAG,IAAI,IAAI;AACnB,QAAQ,OAAO,EAAE,CAAC;AAClB,IAAI,IAAI,OAAO,GAAG,IAAI,QAAQ,EAAE;AAChC,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC;AACtB,QAAQ,IAAI,GAAG,GAAG,EAAE,CAAC;AACrB,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AAChC,YAAY,IAAI,CAAC,OAAO,EAAE;AAC1B,gBAAgB,MAAM,MAAM,CAAC,MAAM,CAAC,iCAAiC,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;AACrF,aAAa;AACb,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjD,gBAAgB,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACrC,gBAAgB,GAAG,GAAG,GAAG,CAAC;AAC1B,aAAa;AACb,SAAS;AACT,aAAa;AACb,YAAY,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;AACnC,gBAAgB,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;AACpE,oBAAoB,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;AAC3C,oBAAoB,IAAI,KAAK,EAAE;AAC/B,wBAAwB,IAAI,IAAI,OAAO;AACvC,8BAA8B,KAAK;AACnC,kCAAkC,GAAG,GAAG,GAAG;AAC3C,kCAAkC,EAAE;AACpC,8BAA8B,GAAG,GAAG,oBAAoB,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC;AAC5E,wBAAwB,GAAG,GAAG,OAAO,GAAG,GAAG,GAAG,GAAG,CAAC;AAClD,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;AACvB;;AC7uBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,cAAc,GAAG;AACjC,IAAI,MAAM,OAAO,GAAG,gBAAgB,EAAE,CAAC,WAAW,CAAC;AACnD,IAAI,aAAa,CAAC,OAAO,CAAC,CAAC;AAC3B,IAAI,OAAO,OAAO,CAAC;AACnB;;ACjBA;AACA;AACA;AACO,SAAS,WAAW,GAAG;AAC9B,IAAI,MAAM,GAAG,GAAG,gBAAgB,EAAE,CAAC,GAAG,CAAC;AACvC,IAAI,IAAI,CAAC,GAAG,EAAE;AACd,QAAQ,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;AACrE,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,QAAQ,CAAC,YAAY,EAAE;AACvC,IAAI,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,kBAAkB,EAAE,CAAC;AACnD,IAAI,MAAM,WAAW,GAAG,cAAc,EAAE,CAAC;AACzC,IAAI,IAAI,KAAK,IAAI,IAAI,EAAE;AACvB,QAAQ,OAAO,cAAc,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAClD,KAAK;AACL,IAAI,MAAM,QAAQ,GAAG,OAAO,CAAC,YAAY,EAAE,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;AACvE,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC;AACvB,IAAI,OAAO,cAAc,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;AACjD,CAAC;AACD;AACA;AACA;AACO,SAAS,MAAM,CAAC,OAAO,EAAE;AAChC,IAAI,OAAO,QAAQ,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;AACjC,CAAC;AACM,SAAS,kBAAkB,GAAG;AACrC,IAAI,MAAM,GAAG,GAAG,gBAAgB,EAAE,CAAC;AACnC,IAAI,WAAW,CAAC,GAAG,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AACxC,IAAI,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC;AAC1B,IAAI,MAAM,WAAW,GAAG,cAAc,EAAE,CAAC;AACzC,IAAI,MAAM,UAAU,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC;AAC/C,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC;AACd,IAAI,MAAM,QAAQ,GAAG,CAAC,KAAK,KAAK;AAChC,QAAQ,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC7D,KAAK,CAAC;AACN,IAAI,MAAM,QAAQ,GAAG,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC3C,IAAI,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;AACtC,QAAQ,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC;AAC3D,KAAK;AACL,IAAI,OAAO,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AACjC;;ACpDO,IAAI,SAAS,CAAC;AACrB,CAAC,UAAU,SAAS,EAAE;AACtB,IAAI,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC;AAChD,IAAI,SAAS,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,GAAG,cAAc,CAAC;AAC9D,IAAI,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;AAClD,CAAC,EAAE,SAAS,KAAK,SAAS,GAAG,EAAE,CAAC,CAAC,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,WAAW,CAAC,QAAQ,EAAE;AACtC,IAAI,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,kBAAkB,EAAE,CAAC;AACnD,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,QAAQ,MAAM,WAAW,GAAG,cAAc,EAAE,CAAC;AAC7C,QAAQ,MAAM,KAAK,GAAG;AACtB,YAAY,QAAQ,EAAE,QAAQ;AAC9B,YAAY,WAAW;AACvB,YAAY,IAAI,EAAE,SAAS,CAAC,KAAK;AACjC,YAAY,WAAW,EAAE,IAAI;AAC7B,YAAY,KAAK,EAAE,IAAI;AACvB,SAAS,CAAC;AACV,QAAQ,QAAQ,CAAC,KAAK,CAAC,CAAC;AACxB,QAAQ,UAAU,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAClD,QAAQ,SAAS,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,MAAM,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACjE,KAAK;AACL,CAAC;AACM,MAAM,iBAAiB,GAAG,CAAC,GAAG,KAAK;AAC1C,IAAI,OAAO,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,UAAU,IAAI,GAAG,CAAC;AAC/D,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,SAAS,GAAG,iBAAiB,CAAC,WAAW,EAAE;AACxD;AACA;AACA;AACO,SAAS,YAAY,CAAC,QAAQ,EAAE;AACvC,IAAI,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,kBAAkB,EAAE,CAAC;AACnD,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,QAAQ,MAAM,WAAW,GAAG,cAAc,EAAE,CAAC;AAC7C,QAAQ,MAAM,KAAK,GAAG;AACtB,YAAY,QAAQ,EAAE,QAAQ;AAC9B,YAAY,WAAW;AACvB,YAAY,IAAI,EAAE,SAAS,CAAC,MAAM;AAClC,YAAY,WAAW,EAAE,IAAI;AAC7B,YAAY,KAAK,EAAE,IAAI;AACvB,SAAS,CAAC;AACV,QAAQ,QAAQ,CAAC,KAAK,CAAC,CAAC;AACxB,QAAQ,UAAU,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAClD,KAAK;AACL,CAAC;AACD;AACA;AACA;AACY,MAAC,UAAU,GAAG,iBAAiB,CAAC,YAAY,EAAE;AACnD,SAAS,QAAQ,CAAC,KAAK,EAAE;AAChC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;AACtB,QAAQ,QAAQ,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;AAC5D,QAAQ,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACtC,KAAK;AACL,IAAI,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;AACxB,IAAI,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK;AAC7C,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM;AAClC,YAAY,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;AAC1C,YAAY,IAAI,OAAO,EAAE;AACzB,gBAAgB,KAAK,CAAC,OAAO,GAAG,SAAS,CAAC;AAC1C,gBAAgB,IAAI;AACpB,oBAAoB,OAAO,EAAE,CAAC;AAC9B,iBAAiB;AACjB,gBAAgB,OAAO,GAAG,EAAE;AAC5B,oBAAoB,QAAQ,CAAC,GAAG,CAAC,CAAC;AAClC,iBAAiB;AACjB,aAAa;AACb,YAAY,MAAM,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;AAClD,YAAY,MAAM,iBAAiB,GAAG,gBAAgB,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,WAAW,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;AACzH,YAAY,iBAAiB,CAAC,KAAK,GAAG,KAAK,CAAC;AAC5C,YAAY,iBAAiB,CAAC,UAAU,GAAG,KAAK,CAAC;AACjD,YAAY,MAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC;AACpF,YAAY,MAAM,GAAG,GAAG,CAAC,GAAG,KAAK,cAAc,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAC5D,YAAY,MAAM,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC;AACzD,YAAY,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AAC3C,gBAAgB,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK;AAC5C,oBAAoB,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAC1C,iBAAiB,CAAC,CAAC;AACnB,aAAa;AACb,YAAY,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,WAAW,KAAK;AACvD,gBAAgB,IAAI,OAAO,WAAW,KAAK,UAAU,EAAE;AACvD,oBAAoB,KAAK,CAAC,OAAO,GAAG,WAAW,CAAC,WAAW,CAAC,CAAC;AAC7D,iBAAiB;AACjB,gBAAgB,OAAO,CAAC,KAAK,CAAC,CAAC;AAC/B,aAAa,CAAC,CAAC;AACf,SAAS,CAAC,CAAC;AACX,KAAK,CAAC,CAAC;AACP,IAAI,KAAK,CAAC,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;AACzC,IAAI,OAAO,OAAO,CAAC;AACnB;;AChLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,YAAY,CAAC,WAAW,EAAE;AAC1C,IAAI,aAAa,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;AACvD,IAAI,MAAM,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC,CAAC;AAClD,IAAI,aAAa,CAAC,WAAW,CAAC,CAAC;AAC/B,IAAI,cAAc,CAAC,WAAW,CAAC,CAAC;AAChC,IAAI,MAAM,GAAG,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC;AACxC,IAAI,MAAM,KAAK,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;AACjD,IAAI,IAAI,GAAG,CAAC,KAAK,EAAE;AACnB;AACA,QAAQ,OAAO,KAAK,CAAC,aAAa,CAAC;AACnC,KAAK;AACL,IAAI,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC;AACrB,IAAI,MAAM,eAAe,GAAG,KAAK,CAAC,cAAc,KAAK,SAAS,CAAC;AAC/D,IAAI,IAAI,eAAe,EAAE;AACzB,QAAQ,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAC5C,QAAQ,OAAO,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK;AACjD,YAAY,IAAI,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE;AAClD;AACA,gBAAgB,OAAO,KAAK,CAAC,aAAa,CAAC;AAC3C,aAAa;AACb,iBAAiB;AACjB,gBAAgB,OAAO,GAAG,CAAC;AAC3B,aAAa;AACb,SAAS,CAAC,CAAC;AACX,KAAK;AACL,SAAS;AACT,QAAQ,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AACzC,QAAQ,OAAO,aAAa,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;AACjD,KAAK;AACL,CAAC;AACM,SAAS,aAAa,CAAC,WAAW,EAAE,KAAK,EAAE;AAClD,IAAI,IAAI,KAAK,CAAC,aAAa,KAAK,SAAS,EAAE;AAC3C,QAAQ,KAAK,CAAC,aAAa,GAAG,WAAW,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,MAAM,YAAY,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;AACxG,KAAK;AACL,IAAI,OAAO,KAAK,CAAC,aAAa,CAAC;AAC/B,CAAC;AACD,MAAM,QAAQ,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;AACjC,SAAS,iBAAiB,CAAC,WAAW,EAAE;AAC/C,IAAI,IAAI,GAAG,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC;AACpC,IAAI,IAAI,CAAC,GAAG,EAAE;AACd,QAAQ,WAAW,CAAC,QAAQ,CAAC,GAAG,GAAG,GAAG;AACtC,YAAY,SAAS,EAAE,IAAI,GAAG,EAAE;AAChC,YAAY,aAAa,EAAE,IAAI,GAAG,EAAE;AACpC,YAAY,YAAY,EAAE,IAAI,GAAG,EAAE;AACnC,YAAY,SAAS,EAAE,IAAI,GAAG,EAAE;AAChC,YAAY,YAAY,EAAE,IAAI,GAAG,EAAE;AACnC,YAAY,aAAa,EAAE,SAAS;AACpC,YAAY,cAAc,EAAE,SAAS;AACrC,SAAS,CAAC;AACV,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf,CAAC;AACM,eAAe,YAAY,CAAC,WAAW,EAAE,KAAK,EAAE;AACvD,IAAI,MAAM,cAAc,CAAC,KAAK,CAAC,CAAC;AAChC,IAAI,KAAK,CAAC,cAAc,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AACpD,IAAI,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;AAC5B,IAAI,MAAM,GAAG,GAAG,WAAW,CAAC,WAAW,CAAC,CAAC;AACzC,IAAI,MAAM,QAAQ,GAAG,WAAW,CAAC,WAAW,CAAC,CAAC;AAC9C,IAAI,MAAM,cAAc,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;AAC5D,IAAI,SAAS,CAAC,cAAc,CAAC,CAAC;AAC9B,IAAI,MAAM,GAAG,GAAG;AAChB,QAAQ,GAAG;AACX,QAAQ,WAAW,EAAE,KAAK;AAC1B,QAAQ,YAAY,EAAE,IAAI,GAAG,EAAE;AAC/B,QAAQ,UAAU,EAAE,EAAE;AACtB,QAAQ,KAAK,EAAE,EAAE;AACjB,QAAQ,WAAW;AACnB,QAAQ,SAAS,EAAE,SAAS;AAC5B,QAAQ,IAAI,EAAE;AACd,YAAY,OAAO,EAAE,CAAC;AACtB,YAAY,MAAM,EAAE,EAAE;AACtB,SAAS;AACT,KAAK,CAAC;AACN,IAAI,KAAK,MAAM,EAAE,IAAI,cAAc,EAAE;AACrC,QAAQ,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;AACvC,YAAY,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC/B,YAAY,MAAM,eAAe,CAAC,GAAG,EAAE,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;AACvD,SAAS;AACT,KAAK;AACL;AACA,IAAI,IAAI,GAAG,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;AACrC,QAAQ,IAAI,IAAI,EAAE;AAClB,YAAY,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,QAAQ,IAAI,IAAI,EAAE;AAC1E,gBAAgB,QAAQ,CAAC,gCAAgC,CAAC,CAAC;AAC3D,gBAAgB,gBAAgB,CAAC,GAAG,CAAC,CAAC;AACtC,aAAa;AACb,SAAS;AACT,QAAQ,aAAa,CAAC,WAAW,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;AAC/C,QAAQ,OAAO,GAAG,CAAC;AACnB,KAAK;AACL,IAAI,OAAO,QAAQ,CAAC,GAAG,CAAC,MAAM;AAC9B,QAAQ,uBAAuB,CAAC,GAAG,CAAC,CAAC;AACrC,QAAQ,IAAI,IAAI,EAAE;AAClB,YAAY,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,QAAQ,IAAI,IAAI,EAAE;AAC1E,gBAAgB,gBAAgB,CAAC,GAAG,CAAC,CAAC;AACtC,aAAa;AACb,SAAS;AACT,QAAQ,aAAa,CAAC,WAAW,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;AAC/C,QAAQ,OAAO,GAAG,CAAC;AACnB,KAAK,CAAC,CAAC;AACP,CAAC;AACD,eAAe,aAAa,CAAC,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE;AACtD;AACA,IAAI,MAAM,QAAQ,GAAG,EAAE,CAAC;AACxB,IAAI,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK;AACvC,QAAQ,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AACvC,KAAK,CAAC,CAAC;AACP,IAAI,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;AAC5B,IAAI,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK;AAC3C,QAAQ,IAAI,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE;AACrD,YAAY,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3C,SAAS;AACT,aAAa;AACb,YAAY,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACvC,SAAS;AACT,KAAK,CAAC,CAAC;AACP;AACA,IAAI,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAChC;AACA,IAAI,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK;AACvC,QAAQ,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAChC,KAAK,CAAC,CAAC;AACP;AACA,IAAI,KAAK,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;AAC/B,IAAI,KAAK,CAAC,cAAc,GAAG,SAAS,CAAC;AACrC,IAAI,KAAK,CAAC,aAAa,GAAG,SAAS,CAAC;AACpC,IAAI,IAAI,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE;AACzD,QAAQ,aAAa,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;AAC1C,KAAK;AACL,CAAC;AACD,SAAS,SAAS,CAAC,QAAQ,EAAE;AAC7B,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE;;ACpJA,MAAM,cAAc,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;AACzC,SAAS,WAAW,CAAC,GAAG,EAAE;AACjC,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,cAAc,CAAC,CAAC;AAClC,IAAI,IAAI,CAAC,GAAG,EAAE;AACd,QAAQ,GAAG,GAAG,GAAG,CAAC,cAAc,CAAC,GAAG,IAAI,OAAO,EAAE,CAAC;AAClD,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf,CAAC;AACM,SAAS,OAAO,CAAC,GAAG,EAAE,QAAQ,EAAE;AACvC,IAAI,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,mCAAmC,CAAC,CAAC;AAC5E,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAChD;AACA,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,uDAAuD,CAAC,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;AACzG,KAAK;AACL,IAAI,IAAI,GAAG,CAAC,WAAW,KAAK,MAAM,EAAE;AACpC,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,gEAAgE,CAAC,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;AAClH,KAAK;AACL,IAAI,OAAO,cAAc,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;AACzC,CAAC;AACM,SAAS,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;AAChD,IAAI,OAAO,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AAC1C,CAAC;AACD;AACA;AACA;AACO,SAAS,cAAc,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;AACvD,IAAI,IAAI,CAAC,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ;AAC7C,QAAQ,OAAO,MAAM,CAAC;AACtB,IAAI,IAAI,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACrC,IAAI,IAAI,KAAK;AACb,QAAQ,OAAO,KAAK,CAAC;AACrB,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,EAAE,IAAI,qBAAqB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC;AACzE,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAChC,IAAI,OAAO,KAAK,CAAC;AACjB,CAAC;AACM,MAAM,kBAAkB,GAAG,UAAU,CAAC;AACtC,MAAM,gBAAgB,GAAG,QAAQ,CAAC;AAClC,MAAM,mBAAmB,GAAG,SAAS,CAAC;AACtC,MAAM,aAAa,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;AAC9C,SAAS,WAAW,CAAC,KAAK,EAAE;AACnC,IAAI,IAAI,KAAK,IAAI,OAAO,KAAK,IAAI,QAAQ,EAAE;AAC3C,QAAQ,MAAM,KAAK,GAAG,KAAK,CAAC,kBAAkB,CAAC,CAAC;AAChD,QAAQ,IAAI,KAAK;AACjB,YAAY,OAAO,KAAK,CAAC;AACzB,KAAK;AACL,IAAI,OAAO,KAAK,CAAC;AACjB,CAAC;AACM,SAAS,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE;AACtC,IAAI,IAAI,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AAC5C,QAAQ,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;AAC1B,YAAY,OAAO,KAAK,CAAC;AACzB,SAAS;AACT,QAAQ,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;AAC9B,YAAY,OAAO,KAAK,CAAC;AACzB,SAAS;AACT,QAAQ,MAAM,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;AAC9C,QAAQ,IAAI,UAAU,KAAK,KAAK,EAAE;AAClC;AACA,YAAY,OAAO,KAAK,CAAC;AACzB,SAAS;AACT,QAAQ,IAAI,IAAI,EAAE;AAClB,YAAY,kBAAkB,CAAC,KAAK,CAAC,CAAC;AACtC,SAAS;AACT,QAAQ,MAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC1C,QAAQ,OAAO,KAAK,GAAG,KAAK,GAAG,cAAc,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AAC/D,KAAK;AACL,SAAS;AACT,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,CAAC;AACD,MAAM,qBAAqB,CAAC;AAC5B,IAAI,WAAW,CAAC,QAAQ,EAAE,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE;AAC5C,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACjC,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,KAAK;AACL,IAAI,MAAM,CAAC,EAAE,EAAE;AACf,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AACpC,QAAQ,IAAI,CAAC,GAAG,EAAE;AAClB,YAAY,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,EAAE,CAAC;AACjD,SAAS;AACT,QAAQ,OAAO,GAAG,CAAC;AACnB,KAAK;AACL,IAAI,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE;AACtB,QAAQ,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AACzC,QAAQ,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;AACpC,QAAQ,IAAI,IAAI,KAAK,kBAAkB;AACvC,YAAY,OAAO,MAAM,CAAC;AAC1B,QAAQ,IAAI,IAAI,KAAK,gBAAgB;AACrC,YAAY,OAAO,IAAI,CAAC,IAAI,CAAC;AAC7B,QAAQ,IAAI,IAAI,KAAK,mBAAmB;AACxC,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC7C,QAAQ,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AACnC,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AACtC,YAAY,OAAO,KAAK,CAAC;AACzB,SAAS;AACT,QAAQ,MAAM,SAAS,GAAG,mBAAmB,EAAE,CAAC;AAChD,QAAQ,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,KAAK,EAAE;AAC1C,YAAY,OAAO,CAAC,CAAC,yDAAyD,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC;AACrG,SAAS;AACT,QAAQ,IAAI,SAAS,EAAE;AACvB,YAAY,IAAI,SAAS,CAAC,UAAU,KAAK,IAAI,EAAE;AAC/C,gBAAgB,UAAU,GAAG,SAAS,CAAC;AACvC,aAAa;AACb,iBAAiB,IAAI,CAAC,UAAU,EAAE;AAClC,gBAAgB,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC;AAClD,aAAa;AACb,SAAS;AACT,aAAa,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,UAAU,EAAE;AAChD,YAAY,OAAO,CAAC,CAAC,yDAAyD,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC;AACrG,SAAS;AACT,QAAQ,IAAI,UAAU,EAAE;AACxB,YAAY,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAClD,YAAY,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AAChD,YAAY,IAAI,CAAC,OAAO,EAAE;AAC1B,gBAAgB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAC9B,aAAa;AACb,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1C,KAAK;AACL,IAAI,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE;AAChC,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AACtC,YAAY,IAAI,IAAI,KAAK,aAAa,EAAE;AACxC,gBAAgB,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;AAC3C,aAAa;AACb,iBAAiB;AACjB,gBAAgB,MAAM,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;AACxC,aAAa;AACb,YAAY,OAAO,IAAI,CAAC;AACxB,SAAS;AACT,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AAC/B,QAAQ,MAAM,iBAAiB,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC;AACxD,QAAQ,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;AAC9C,QAAQ,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAC9C,QAAQ,IAAI,OAAO,EAAE;AACrB,YAAY,MAAM,CAAC,IAAI,CAAC,GAAG,iBAAiB,CAAC;AAC7C,YAAY,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK;AACrC,gBAAgB,IAAI,GAAG,CAAC,WAAW,EAAE;AACrC,oBAAoB,YAAY,CAAC,GAAG,CAAC,CAAC;AACtC,iBAAiB;AACjB,qBAAqB;AACrB,oBAAoB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACrC,iBAAiB;AACjB,aAAa,CAAC,CAAC;AACf,YAAY,OAAO,IAAI,CAAC;AACxB,SAAS;AACT,QAAQ,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AACtC,QAAQ,IAAI,QAAQ,KAAK,iBAAiB,EAAE;AAC5C,YAAY,MAAM,CAAC,IAAI,CAAC,GAAG,iBAAiB,CAAC;AAC7C,YAAY,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,GAAG,KAAK;AAC5C,gBAAgB,IAAI,GAAG,CAAC,WAAW,EAAE;AACrC,oBAAoB,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;AAC5C,wBAAwB,YAAY,CAAC,GAAG,CAAC,CAAC;AAC1C,qBAAqB;AACrB,iBAAiB;AACjB,qBAAqB;AACrB,oBAAoB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACrC,iBAAiB;AACjB,aAAa,CAAC,CAAC;AACf,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,IAAI,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE;AAC1B,QAAQ,IAAI,QAAQ,KAAK,kBAAkB;AAC3C,YAAY,OAAO,IAAI,CAAC;AACxB,QAAQ,IAAI,QAAQ,KAAK,gBAAgB;AACzC,YAAY,OAAO,IAAI,CAAC;AACxB,QAAQ,OAAO,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AACtE,KAAK;AACL,IAAI,OAAO,CAAC,MAAM,EAAE;AACpB,QAAQ,OAAO,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;AAClD,KAAK;AACL,CAAC;AACM,SAAS,SAAS,CAAC,GAAG,EAAE,UAAU,EAAE;AAC3C,IAAI,IAAI,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACxC,QAAQ,MAAM,IAAI,GAAG,GAAG,CAAC,gBAAgB,CAAC,CAAC;AAC3C,QAAQ,IAAI,IAAI,EAAE;AAClB,YAAY,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AACpC,SAAS;AACT,KAAK;AACL,CAAC;AACM,SAAS,YAAY,CAAC,UAAU,EAAE;AACzC,IAAI,IAAI,SAAS,CAAC,UAAU,CAAC,EAAE;AAC/B,QAAQ,YAAY,CAAC,UAAU,CAAC,CAAC;AACjC,KAAK;AACL,SAAS;AACT,QAAQ,WAAW,CAAC,UAAU,CAAC,CAAC;AAChC,KAAK;AACL,CAAC;AACM,SAAS,WAAW,CAAC,KAAK,EAAE;AACnC,IAAI,MAAM,WAAW,GAAG,YAAY,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;AACxD,IAAI,MAAM,KAAK,GAAG,iBAAiB,CAAC,WAAW,CAAC,CAAC;AACjD,IAAI,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;AACvB,IAAI,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,CAAC,KAAK,EAAE;AACxC,QAAQ,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;AACxC,QAAQ,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACxC,QAAQ,OAAO,CAAC,IAAI,CAAC,MAAM;AAC3B,YAAY,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAC/C,SAAS,CAAC,CAAC;AACX,KAAK;AACL,SAAS;AACT,QAAQ,MAAM,eAAe,GAAG,KAAK,CAAC,cAAc,KAAK,SAAS,CAAC;AACnE,QAAQ,IAAI,eAAe,EAAE;AAC7B,YAAY,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC3C,SAAS;AACT,aAAa;AACb,YAAY,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACvC,YAAY,aAAa,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;AAC9C,SAAS;AACT,KAAK;AACL,CAAC;AACM,eAAe,cAAc,CAAC,KAAK,EAAE;AAC5C,IAAI,OAAO,KAAK,CAAC,YAAY,CAAC,IAAI,GAAG,CAAC,EAAE;AACxC,QAAQ,MAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC9C,KAAK;AACL,CAAC;AACD,SAAS,kBAAkB,CAAC,KAAK,EAAE;AACnC,IAAI,IAAI,eAAe,CAAC,KAAK,CAAC,IAAI,OAAO,KAAK,IAAI,QAAQ,IAAI,KAAK,KAAK,IAAI,EAAE;AAC9E,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;AAChC,YAAY,OAAO;AACnB,QAAQ,IAAI,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,MAAM,CAAC,SAAS,EAAE;AAC/D,YAAY,IAAI,KAAK,CAAC,KAAK,CAAC;AAC5B,gBAAgB,OAAO;AACvB,YAAY,IAAI,SAAS,CAAC,KAAK,CAAC;AAChC,gBAAgB,OAAO;AACvB,YAAY,MAAM,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,uDAAuD,CAAC,CAAC;AAC/F,SAAS;AACT,KAAK;AACL,CAAC;AACD,MAAM,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;AACnC,SAAS,eAAe,CAAC,GAAG,EAAE;AACrC,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,OAAO,GAAG,IAAI,QAAQ,IAAI,OAAO,GAAG,KAAK,UAAU,CAAC,EAAE;AAC/E,QAAQ,MAAM,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC,KAAK,IAAI,CAAC;AACtD,QAAQ,OAAO,CAAC,WAAW,CAAC;AAC5B,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,CAAC;AACD;AACA;AACA;AACO,SAAS,WAAW,CAAC,KAAK,EAAE;AACnC,IAAI,KAAK,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;AAC9B,IAAI,OAAO,KAAK,CAAC;AACjB;;ACxPA;AACA;AACA;AACO,SAAS,aAAa,CAAC,GAAG,EAAE;AACnC,IAAI,MAAM,GAAG,GAAG,gBAAgB,EAAE,CAAC;AACnC,IAAI,IAAI,UAAU,GAAG,GAAG,CAAC,KAAK,CAAC;AAC/B,IAAI,IAAI,CAAC,UAAU,EAAE;AACrB,QAAQ,WAAW,CAAC,GAAG,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAC5C,QAAQ,UAAU,GAAG,GAAG,CAAC,WAAW,CAAC;AACrC,KAAK;AACL,IAAI,aAAa,CAAC,UAAU,CAAC,CAAC;AAC9B,IAAI,OAAO,cAAc,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;AAC3C,CAAC;AACD;AACA;AACA;AACO,SAAS,cAAc,CAAC,GAAG,EAAE,UAAU,EAAE;AAChD,IAAI,IAAI,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACxC,QAAQ,MAAM,MAAM,GAAG,GAAG,CAAC,kBAAkB,CAAC,CAAC;AAC/C,QAAQ,IAAI,CAAC,MAAM,EAAE;AACrB,YAAY,OAAO,GAAG,CAAC;AACvB,SAAS;AACT,QAAQ,OAAO,IAAI,KAAK,CAAC,GAAG,EAAE;AAC9B,YAAY,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE;AAC9B,gBAAgB,IAAI,IAAI,KAAK,mBAAmB,EAAE;AAClD,oBAAoB,OAAO,MAAM,CAAC;AAClC,iBAAiB;AACjB,gBAAgB,MAAM,CAAC,aAAa,CAAC,GAAG,UAAU,CAAC;AACnD,gBAAgB,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;AACpC,aAAa;AACb,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf,CAAC;AACD;AACA;AACA;AACO,SAAS,gBAAgB,CAAC,GAAG,EAAE;AACtC,IAAI,IAAI,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACxC,QAAQ,MAAM,KAAK,GAAG,GAAG,CAAC,mBAAmB,CAAC,CAAC;AAC/C,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,OAAO,KAAK,CAAC;AACzB,SAAS;AACT,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf;;ACxCA,IAAI,eAAe,GAAG,CAAC,CAAC;AACxB,MAAM,WAAW,GAAG,aAAa,CAAC;AAClC;AACA,MAAM,mBAAmB,GAAG,4BAA4B,CAAC;AACzD;AACA,MAAM,mBAAmB,GAAG,wBAAwB,CAAC;AACrD;AACA,MAAM,iBAAiB,GAAG,iCAAiC,CAAC;AACrD,SAAS,aAAa,CAAC,GAAG,EAAE;AACnC,IAAI,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;AAClC,IAAI,OAAO,GAAG,CAAC;AACf,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,SAAS,CAAC,OAAO,EAAE,GAAG,EAAE;AACxC,IAAI,MAAM,IAAI,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;AACpC,IAAI,IAAI,IAAI,CAAC,SAAS;AACtB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC;AAC9B,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;AACvB,QAAQ,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI;AACrC,aAAa,QAAQ,EAAE;AACvB,aAAa,IAAI,CAAC,CAAC,MAAM,MAAM,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;AACvE,KAAK;AACL,SAAS;AACT,QAAQ,IAAI,CAAC,OAAO,EAAE;AACtB,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,IAAI,SAAS,CAAC,qCAAqC,CAAC,CAAC,CAAC;AACnH,SAAS;AACT,QAAQ,MAAM,MAAM,GAAG,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACxG,QAAQ,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,KAAK;AACvD,YAAY,QAAQ,IAAI,CAAC,SAAS,GAAG,GAAG,EAAE;AAC1C,SAAS,CAAC,EAAE;AACZ,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,GAAG,CAAC,SAAS,EAAE,MAAM,EAAE,mBAAmB,GAAG,WAAW,EAAE;AAC1E,IAAI,IAAI,KAAK,CAAC;AACd,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC;AACxB,IAAI,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;AACvC,QAAQ,KAAK,GAAG,SAAS,CAAC;AAC1B,KAAK;AACL,SAAS,IAAI,OAAO,SAAS,KAAK,UAAU,EAAE;AAC9C,QAAQ,QAAQ,GAAG,SAAS,CAAC;AAC7B,QAAQ,IAAI,KAAK,CAAC;AAClB,QAAQ,MAAM,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AAC1C,QAAQ,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,mBAAmB,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE;AACtE,YAAY,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC7B,SAAS;AACT,aAAa,KAAK,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,mBAAmB,CAAC,GAAG;AAC/D,YAAY,MAAM,GAAG,GAAG,WAAW,CAAC;AACpC,YAAY,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC5D,YAAY,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;AACnE,YAAY,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AAC5C,YAAY,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;AACnD,YAAY,IAAI,CAAC,KAAK,EAAE;AACxB,gBAAgB,KAAK,GAAG,MAAM,CAAC;AAC/B,aAAa;AACb,iBAAiB;AACjB,gBAAgB,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACjC,aAAa;AACb,SAAS;AACT,aAAa;AACb,YAAY,MAAM,IAAI,KAAK,CAAC,qCAAqC,GAAG,OAAO,CAAC,CAAC;AAC7E,SAAS;AACT,KAAK;AACL,SAAS;AACT,QAAQ,MAAM,IAAI,KAAK,CAAC,kCAAkC,GAAG,SAAS,CAAC,CAAC;AACxE,KAAK;AACL;AACA,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,mBAAmB,CAAC,EAAE;AAC5C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7D,YAAY,mBAAmB,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9E,SAAS;AACT,KAAK;AACL,IAAI,MAAM,GAAG,GAAG,IAAI,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,mBAAmB,CAAC,CAAC;AAC1F,IAAI,MAAM,GAAG,GAAG,mBAAmB,EAAE,CAAC;AACtC,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,OAAO,EAAE;AAC5B,QAAQ,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACtC,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf,CAAC;AACM,SAAS,UAAU,CAAC,MAAM,EAAE,mBAAmB,GAAG,WAAW,EAAE;AACtE,IAAI,OAAO,IAAI,WAAW,CAAC,WAAW,EAAE,GAAG,GAAG,eAAe,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,mBAAmB,CAAC,CAAC;AAC1G,CAAC;AACM,SAAS,YAAY,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE;AAC7C,IAAI,MAAM,IAAI,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;AACpC,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC/B,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AACnC,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACjC,IAAI,MAAM,KAAK,GAAG,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACxF,IAAI,MAAM,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;AAC1B,IAAI,IAAI,MAAM,IAAI,MAAM,KAAK,SAAS,EAAE;AACxC,QAAQ,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AAChC,KAAK;AACL,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACjC,IAAI,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AACvC,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;AACvB,QAAQ,IAAI,UAAU,IAAI,UAAU,CAAC,MAAM,EAAE;AAC7C,YAAY,MAAM,OAAO,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1D,YAAY,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,SAAS;AACT,KAAK;AACL,SAAS,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AAC5C,QAAQ,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,KAAK;AACL,IAAI,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,WAAW,IAAI,OAAO,EAAE;AAC/C,QAAQ,MAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;AACxE,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACtB,KAAK;AACL,IAAI,OAAO,SAAS,CAAC;AACrB,CAAC;AAID;AACA;AACA;AACO,SAAS,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE;AAClC,IAAI,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AAC9B,IAAI,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;AACzC,IAAI,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;AAClD,IAAI,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;AACtD,IAAI,MAAM,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;AAChD,IAAI,MAAM,cAAc,GAAG,OAAO,IAAI,MAAM,GAAG,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC;AACrE,IAAI,MAAM,YAAY,GAAG,UAAU,CAAC;AACpC,IAAI,MAAM,MAAM,GAAG,cAAc,IAAI,YAAY,GAAG,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AAC5G,IAAI,MAAM,eAAe,GAAG,UAAU,CAAC;AACvC,IAAI,MAAM,aAAa,GAAG,MAAM,CAAC;AACjC,IAAI,MAAM,OAAO,GAAG,eAAe,KAAK,aAAa;AACrD,UAAU,WAAW;AACrB,UAAU,GAAG,CAAC,SAAS,CAAC,eAAe,GAAG,CAAC,EAAE,aAAa,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC3E,IAAI,IAAI,KAAK,KAAK,WAAW,EAAE;AAC/B,QAAQ,QAAQ,CAAC,CAAC,UAAU,EAAE,GAAG,CAAC,8CAA8C,CAAC,CAAC,CAAC;AACnF,KAAK;AACL,IAAI,MAAM,IAAI,GAAG,IAAI,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AAC3E,IAAI,IAAI,EAAE,EAAE;AACZ,QAAQ,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;AAC9B,KAAK;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,CAAC;AACD,SAAS,OAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE;AACvC,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC/B,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,IAAI,MAAM,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC;AAC1E,IAAI,OAAO,OAAO,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,OAAO,CAAC;AAC5C,CAAC;AACM,SAAS,YAAY,CAAC,WAAW,EAAE;AAC1C,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE;AAC7B,QAAQ,IAAI,OAAO,WAAW,IAAI,UAAU,IAAI,OAAO,WAAW,IAAI,QAAQ,EAAE;AAChF,YAAY,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC;AAClD,SAAS;AACT,aAAa;AACb;AACA,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,qDAAqD,CAAC,CAAC,CAAC;AACrF,SAAS;AACT,KAAK;AACL,IAAI,OAAO,WAAW,CAAC;AACvB;;ACvLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,YAAY,CAAC,SAAS,EAAE;AACxC,IAAI,MAAM,IAAI,KAAK,CAAC,sBAAsB,GAAG,SAAS,CAAC,CAAC;AACxD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,UAAU,GAAG,iBAAiB,CAAC,YAAY,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,WAAW,CAAC,QAAQ,EAAE;AACtC,IAAI,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAC/B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,SAAS,GAAG,iBAAiB,CAAC,WAAW,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,UAAU,CAAC,WAAW,EAAE;AACxC,IAAI,MAAM,IAAI,KAAK,CAAC,oBAAoB,GAAG,WAAW,CAAC,CAAC;AACxD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,QAAQ,GAAG,iBAAiB,CAAC,UAAU,EAAE;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE;AACnC,IAAI,MAAM,EAAE,GAAG,cAAc,EAAE,CAAC;AAChC,IAAI,MAAM,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;AAC/B,IAAI,aAAa,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;AAC1D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,UAAU,CAAC,KAAK,EAAE,OAAO,EAAE;AAC3C,IAAI,MAAM,EAAE,GAAG,cAAc,EAAE,CAAC;AAChC,IAAI,MAAM,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;AAC/B,IAAI,aAAa,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;AACnE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE;AACzC,IAAI,MAAM,EAAE,GAAG,cAAc,EAAE,CAAC;AAChC,IAAI,MAAM,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;AAC/B,IAAI,aAAa,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;AACjE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,YAAY,CAAC,MAAM,EAAE;AACrC,IAAI,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC9B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,UAAU,GAAG,iBAAiB,CAAC,YAAY,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,kBAAkB,CAAC,MAAM,EAAE;AAC3C,IAAI,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC7B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,gBAAgB,GAAG,iBAAiB,CAAC,kBAAkB,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,YAAY,CAAC,WAAW,EAAE,OAAO,GAAG,EAAE,EAAE;AACxD,IAAI,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,KAAK,CAAC;AAC7C;AACA,IAAI,OAAO,SAAS,gBAAgB,CAAC,KAAK,EAAE,GAAG,EAAE;AACjD,QAAQ,OAAO,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,GAAG,WAAW,EAAE,GAAG,KAAK,EAAE,EAAE,GAAG,CAAC,CAAC;AAC5E,KAAK,CAAC;AACN,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE;AAC7C,IAAI,OAAO,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,EAA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"}