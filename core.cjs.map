{"version":3,"file":"core.cjs","sources":["../tsc-out/src/core/util/qdev.js","../tsc-out/src/core/util/flyweight.js","../tsc-out/src/core/import/qrl-class.js","../tsc-out/src/core/assert/assert.js","../tsc-out/src/core/import/qrl.js","../tsc-out/src/core/util/markers.js","../tsc-out/src/core/util/types.js","../tsc-out/src/core/util/element.js","../tsc-out/src/core/platform/platform.js","../tsc-out/src/core/import/qrl.public.js","../tsc-out/src/core/util/array.js","../tsc-out/src/core/render/jsx/jsx-runtime.js","../tsc-out/src/core/render/jsx/factory.js","../tsc-out/src/core/use/use-core.js","../tsc-out/src/core/use/use-host-element.public.js","../tsc-out/src/core/util/hash_code.js","../tsc-out/src/core/component/qrl-styles.js","../tsc-out/src/core/error/stringify.js","../tsc-out/src/core/error/error.js","../tsc-out/src/core/util/array_map.js","../tsc-out/src/core/render/slots.js","../tsc-out/src/core/json/q-json.js","../tsc-out/src/core/util/case.js","../tsc-out/src/core/util/promises.js","../tsc-out/src/core/util/stringify.js","../tsc-out/src/core/watch/observer.js","../tsc-out/src/core/watch/watch.js","../tsc-out/src/core/props/props-on.js","../tsc-out/src/core/render/cursor.js","../tsc-out/src/core/render/jsx/host.public.js","../tsc-out/src/core/render/jsx/slot.public.js","../tsc-out/src/core/render/render.js","../tsc-out/src/core/component/component-ctx.js","../tsc-out/src/core/render/notify-render.js","../tsc-out/src/core/object/q-object.js","../tsc-out/src/core/object/store.js","../tsc-out/src/core/props/props-obj-map.js","../tsc-out/src/core/props/props.js","../tsc-out/src/core/component/component.public.js","../tsc-out/src/core/event/bubble.js","../tsc-out/src/core/event/bubble.public.js","../tsc-out/src/core/object/store.public.js","../tsc-out/src/core/use/use-props.public.js","../tsc-out/src/core/watch/watch.public.js","../tsc-out/src/core/render/jsx/async.public.js","../tsc-out/src/core/render/render.public.js","../tsc-out/src/core/use/use-event.public.js","../tsc-out/src/core/use/use-url.public.js","../tsc-out/src/core/use/use-lexical-scope.public.js","../tsc-out/src/core/use/use-store.public.js","../tsc-out/src/core/use/use-transient.public.js","../tsc-out/src/core/index.js"],"sourcesContent":["/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\n/*@__PURE__*/ ((gbl) => {\n    // ensures unit tests have globalThis on Node10\n    // this will be removed from production builds\n    if (typeof globalThis === 'undefined') {\n        gbl.globalThis = gbl;\n    }\n})(typeof global !== 'undefined'\n    ? global\n    : typeof window !== 'undefined'\n        ? window\n        : typeof self !== 'undefined'\n            ? self\n            : {});\n// minification can replace the `globalThis.qDev` with `false`\n// which will remove all dev code within from the build\nexport const qDev = globalThis.qDev !== false;\nexport const qTest = globalThis.describe !== undefined;\nexport const qGlobal = globalThis;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicWRldi5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXRpbC9xZGV2LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVILGFBQWEsQ0FBQyxDQUFDLENBQUMsR0FBUSxFQUFFLEVBQUU7SUFDMUIsK0NBQStDO0lBQy9DLDhDQUE4QztJQUM5QyxJQUFJLE9BQU8sVUFBVSxLQUFLLFdBQVcsRUFBRTtRQUNyQyxHQUFHLENBQUMsVUFBVSxHQUFHLEdBQUcsQ0FBQztLQUN0QjtBQUNILENBQUMsQ0FBQyxDQUNBLE9BQU8sTUFBTSxLQUFLLFdBQVc7SUFDM0IsQ0FBQyxDQUFDLE1BQU07SUFDUixDQUFDLENBQUMsT0FBTyxNQUFNLEtBQUssV0FBVztRQUMvQixDQUFDLENBQUMsTUFBTTtRQUNSLENBQUMsQ0FBQyxPQUFPLElBQUksS0FBSyxXQUFXO1lBQzdCLENBQUMsQ0FBQyxJQUFJO1lBQ04sQ0FBQyxDQUFDLEVBQUUsQ0FDUCxDQUFDO0FBRUYsOERBQThEO0FBQzlELHVEQUF1RDtBQUN2RCxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUksVUFBa0IsQ0FBQyxJQUFJLEtBQUssS0FBSyxDQUFDO0FBQ3ZELE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBSSxVQUFrQixDQUFDLFFBQVEsS0FBSyxTQUFTLENBQUM7QUFDaEUsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLFVBQWlCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQnVpbGRlci5pbywgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9CdWlsZGVySU8vcXdpay9ibG9iL21haW4vTElDRU5TRVxuICovXG5cbi8qQF9fUFVSRV9fKi8gKChnYmw6IGFueSkgPT4ge1xuICAvLyBlbnN1cmVzIHVuaXQgdGVzdHMgaGF2ZSBnbG9iYWxUaGlzIG9uIE5vZGUxMFxuICAvLyB0aGlzIHdpbGwgYmUgcmVtb3ZlZCBmcm9tIHByb2R1Y3Rpb24gYnVpbGRzXG4gIGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBnYmwuZ2xvYmFsVGhpcyA9IGdibDtcbiAgfVxufSkoXG4gIHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnXG4gICAgPyBnbG9iYWxcbiAgICA6IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnXG4gICAgPyB3aW5kb3dcbiAgICA6IHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJ1xuICAgID8gc2VsZlxuICAgIDoge31cbik7XG5cbi8vIG1pbmlmaWNhdGlvbiBjYW4gcmVwbGFjZSB0aGUgYGdsb2JhbFRoaXMucURldmAgd2l0aCBgZmFsc2VgXG4vLyB3aGljaCB3aWxsIHJlbW92ZSBhbGwgZGV2IGNvZGUgd2l0aGluIGZyb20gdGhlIGJ1aWxkXG5leHBvcnQgY29uc3QgcURldiA9IChnbG9iYWxUaGlzIGFzIGFueSkucURldiAhPT0gZmFsc2U7XG5leHBvcnQgY29uc3QgcVRlc3QgPSAoZ2xvYmFsVGhpcyBhcyBhbnkpLmRlc2NyaWJlICE9PSB1bmRlZmluZWQ7XG5leHBvcnQgY29uc3QgcUdsb2JhbCA9IGdsb2JhbFRoaXMgYXMgYW55O1xuIl19","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { qDev } from './qdev';\nexport const EMPTY_ARRAY = [];\nexport const EMPTY_OBJ = {};\nif (qDev) {\n    Object.freeze(EMPTY_ARRAY);\n    Object.freeze(EMPTY_OBJ);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmx5d2VpZ2h0LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS91dGlsL2ZseXdlaWdodC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFFSCxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBRTlCLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxFQUFFLENBQUM7QUFDOUIsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLEVBQUUsQ0FBQztBQUU1QixJQUFJLElBQUksRUFBRTtJQUNSLE1BQU0sQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDM0IsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztDQUMxQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBCdWlsZGVyLmlvLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL0J1aWxkZXJJTy9xd2lrL2Jsb2IvbWFpbi9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgcURldiB9IGZyb20gJy4vcWRldic7XG5cbmV4cG9ydCBjb25zdCBFTVBUWV9BUlJBWSA9IFtdO1xuZXhwb3J0IGNvbnN0IEVNUFRZX09CSiA9IHt9O1xuXG5pZiAocURldikge1xuICBPYmplY3QuZnJlZXplKEVNUFRZX0FSUkFZKTtcbiAgT2JqZWN0LmZyZWV6ZShFTVBUWV9PQkopO1xufVxuIl19","export function isQrl(value) {\n    return value instanceof QRLInternal;\n}\nclass QRL {\n    constructor(chunk, symbol, symbolRef, symbolFn, capture, captureRef, guard) {\n        this.chunk = chunk;\n        this.symbol = symbol;\n        this.symbolRef = symbolRef;\n        this.symbolFn = symbolFn;\n        this.capture = capture;\n        this.captureRef = captureRef;\n        this.guard = guard;\n        this.canonicalChunk = chunk.replace(FIND_EXT, '');\n    }\n}\nexport const QRLInternal = QRL;\n// https://regexr.com/6enjv\nconst FIND_EXT = /\\.[\\w?=&]+$/;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXJsLWNsYXNzLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9pbXBvcnQvcXJsLWNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE1BQU0sVUFBVSxLQUFLLENBQUMsS0FBVTtJQUM5QixPQUFPLEtBQUssWUFBWSxXQUFXLENBQUM7QUFDdEMsQ0FBQztBQUVELE1BQU0sR0FBRztJQUdQLFlBQ1MsS0FBYSxFQUNiLE1BQWMsRUFDZCxTQUFzQyxFQUN0QyxRQUFxRCxFQUNyRCxPQUF3QixFQUN4QixVQUF3QixFQUN4QixLQUFtQztRQU5uQyxVQUFLLEdBQUwsS0FBSyxDQUFRO1FBQ2IsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUNkLGNBQVMsR0FBVCxTQUFTLENBQTZCO1FBQ3RDLGFBQVEsR0FBUixRQUFRLENBQTZDO1FBQ3JELFlBQU8sR0FBUCxPQUFPLENBQWlCO1FBQ3hCLGVBQVUsR0FBVixVQUFVLENBQWM7UUFDeEIsVUFBSyxHQUFMLEtBQUssQ0FBOEI7UUFFMUMsSUFBSSxDQUFDLGNBQWMsR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNwRCxDQUFDO0NBQ0Y7QUFHRCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQWUsR0FBRyxDQUFDO0FBRTNDLDJCQUEyQjtBQUMzQixNQUFNLFFBQVEsR0FBRyxhQUFhLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFZhbHVlT3JQcm9taXNlIH0gZnJvbSAnLi4vdXRpbC90eXBlcyc7XG5pbXBvcnQgdHlwZSB7IFFSTCBhcyBJUVJMIH0gZnJvbSAnLi9xcmwucHVibGljJztcblxuZXhwb3J0IGZ1bmN0aW9uIGlzUXJsKHZhbHVlOiBhbnkpOiB2YWx1ZSBpcyBRUkxJbnRlcm5hbCB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFFSTEludGVybmFsO1xufVxuXG5jbGFzcyBRUkw8VFlQRSA9IGFueT4gaW1wbGVtZW50cyBJUVJMPFRZUEU+IHtcbiAgX19icmFuZF9fUVJMX18hOiBUWVBFO1xuICBjYW5vbmljYWxDaHVuazogc3RyaW5nO1xuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgY2h1bms6IHN0cmluZyxcbiAgICBwdWJsaWMgc3ltYm9sOiBzdHJpbmcsXG4gICAgcHVibGljIHN5bWJvbFJlZjogbnVsbCB8IFZhbHVlT3JQcm9taXNlPFRZUEU+LFxuICAgIHB1YmxpYyBzeW1ib2xGbjogbnVsbCB8ICgoKSA9PiBQcm9taXNlPFJlY29yZDxzdHJpbmcsIGFueT4+KSxcbiAgICBwdWJsaWMgY2FwdHVyZTogbnVsbCB8IG51bWJlcltdLFxuICAgIHB1YmxpYyBjYXB0dXJlUmVmOiBudWxsIHwgYW55W10sXG4gICAgcHVibGljIGd1YXJkOiBudWxsIHwgTWFwPHN0cmluZywgc3RyaW5nW10+XG4gICkge1xuICAgIHRoaXMuY2Fub25pY2FsQ2h1bmsgPSBjaHVuay5yZXBsYWNlKEZJTkRfRVhULCAnJyk7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgUVJMSW50ZXJuYWw8VCA9IGFueT4gPSBRUkw8VD47XG5leHBvcnQgY29uc3QgUVJMSW50ZXJuYWw6IHR5cGVvZiBRUkwgPSBRUkw7XG5cbi8vIGh0dHBzOi8vcmVnZXhyLmNvbS82ZW5qdlxuY29uc3QgRklORF9FWFQgPSAvXFwuW1xcdz89Jl0rJC87XG4iXX0=","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { qDev } from '../util/qdev';\nexport function assertDefined(value, text) {\n    if (qDev) {\n        if (value != null)\n            return;\n        throw newError(text || 'Expected defined value.');\n    }\n}\nexport function assertNotPromise(value, text) {\n    if (qDev) {\n        if (!(value instanceof Promise))\n            return;\n        throw newError(text || 'Expected defined value.');\n    }\n}\nexport function assertDefinedAndNotPromise(value, text) {\n    if (qDev) {\n        assertDefined(value, text);\n        assertNotPromise(value, text);\n    }\n}\nexport function assertInstanceOf(value, type, text) {\n    if (qDev) {\n        if (value instanceof type)\n            return;\n        throw newError(text || `Expected value '${value}' to be instance of '${type}' but was '${typeOf(value)}'.`);\n    }\n}\nexport function assertString(value, text) {\n    if (qDev) {\n        if (typeof value === 'string')\n            return;\n        throw newError(text || `Expected value '${value}' to be 'string' but was '${typeOf(value)}'.`);\n    }\n}\nexport function assertNotEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 !== value2)\n            return;\n        throw newError(text || `Expected '${value1}' !== '${value2}'.`);\n    }\n}\nexport function assertEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 === value2)\n            return;\n        throw newError(text || `Expected '${value1}' === '${value2}'.`);\n    }\n}\nexport function assertLessOrEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 <= value2)\n            return;\n        throw newError(text || `Expected '${value1}' <= '${value2}'.`);\n    }\n}\nexport function assertLess(value1, value2, text) {\n    if (qDev) {\n        if (value1 < value2)\n            return;\n        throw newError(text || `Expected '${value1}' < '${value2}'.`);\n    }\n}\nexport function assertGreaterOrEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 >= value2)\n            return;\n        throw newError(text || `Expected '${value1}' >= '${value2}'.`);\n    }\n}\nexport function assertGreater(value1, value2, text) {\n    if (qDev) {\n        if (value1 > value2)\n            return;\n        throw newError(text || `Expected '${value1}' > '${value2}'.`);\n    }\n}\nfunction typeOf(value) {\n    var _a;\n    if (value === null)\n        return 'null';\n    const type = typeof value;\n    if (type === 'object') {\n        return ((_a = value === null || value === void 0 ? void 0 : value.constructor) === null || _a === void 0 ? void 0 : _a.name) || '<unknown>';\n    }\n    else {\n        return type;\n    }\n}\nfunction newError(text) {\n    debugger; // eslint-disable-line no-debugger\n    const error = new Error(text);\n    console.error(error); // eslint-disable-line no-console\n    return error;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXJ0LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9hc3NlcnQvYXNzZXJ0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUNILE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFFcEMsTUFBTSxVQUFVLGFBQWEsQ0FBQyxLQUFVLEVBQUUsSUFBYTtJQUNyRCxJQUFJLElBQUksRUFBRTtRQUNSLElBQUksS0FBSyxJQUFJLElBQUk7WUFBRSxPQUFPO1FBQzFCLE1BQU0sUUFBUSxDQUFDLElBQUksSUFBSSx5QkFBeUIsQ0FBQyxDQUFDO0tBQ25EO0FBQ0gsQ0FBQztBQUVELE1BQU0sVUFBVSxnQkFBZ0IsQ0FBQyxLQUFVLEVBQUUsSUFBYTtJQUN4RCxJQUFJLElBQUksRUFBRTtRQUNSLElBQUksQ0FBQyxDQUFDLEtBQUssWUFBWSxPQUFPLENBQUM7WUFBRSxPQUFPO1FBQ3hDLE1BQU0sUUFBUSxDQUFDLElBQUksSUFBSSx5QkFBeUIsQ0FBQyxDQUFDO0tBQ25EO0FBQ0gsQ0FBQztBQUVELE1BQU0sVUFBVSwwQkFBMEIsQ0FBQyxLQUFVLEVBQUUsSUFBYTtJQUNsRSxJQUFJLElBQUksRUFBRTtRQUNSLGFBQWEsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDM0IsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO0tBQy9CO0FBQ0gsQ0FBQztBQUVELE1BQU0sVUFBVSxnQkFBZ0IsQ0FBQyxLQUFVLEVBQUUsSUFBUyxFQUFFLElBQWE7SUFDbkUsSUFBSSxJQUFJLEVBQUU7UUFDUixJQUFJLEtBQUssWUFBWSxJQUFJO1lBQUUsT0FBTztRQUNsQyxNQUFNLFFBQVEsQ0FDWixJQUFJLElBQUksbUJBQW1CLEtBQUssd0JBQXdCLElBQUksY0FBYyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FDNUYsQ0FBQztLQUNIO0FBQ0gsQ0FBQztBQUVELE1BQU0sVUFB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XG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEJ1aWxkZXIuaW8sIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vQnVpbGRlcklPL3F3aWsvYmxvYi9tYWluL0xJQ0VOU0VcbiAqL1xuaW1wb3J0IHsgcURldiB9IGZyb20gJy4uL3V0aWwvcWRldic7XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnREZWZpbmVkKHZhbHVlOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAodmFsdWUgIT0gbnVsbCkgcmV0dXJuO1xuICAgIHRocm93IG5ld0Vycm9yKHRleHQgfHwgJ0V4cGVjdGVkIGRlZmluZWQgdmFsdWUuJyk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydE5vdFByb21pc2UodmFsdWU6IGFueSwgdGV4dD86IHN0cmluZykge1xuICBpZiAocURldikge1xuICAgIGlmICghKHZhbHVlIGluc3RhbmNlb2YgUHJvbWlzZSkpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8ICdFeHBlY3RlZCBkZWZpbmVkIHZhbHVlLicpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnREZWZpbmVkQW5kTm90UHJvbWlzZSh2YWx1ZTogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgYXNzZXJ0RGVmaW5lZCh2YWx1ZSwgdGV4dCk7XG4gICAgYXNzZXJ0Tm90UHJvbWlzZSh2YWx1ZSwgdGV4dCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydEluc3RhbmNlT2YodmFsdWU6IGFueSwgdHlwZTogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgdHlwZSkgcmV0dXJuO1xuICAgIHRocm93IG5ld0Vycm9yKFxuICAgICAgdGV4dCB8fCBgRXhwZWN0ZWQgdmFsdWUgJyR7dmFsdWV9JyB0byBiZSBpbnN0YW5jZSBvZiAnJHt0eXBlfScgYnV0IHdhcyAnJHt0eXBlT2YodmFsdWUpfScuYFxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydFN0cmluZyh2YWx1ZTogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8IGBFeHBlY3RlZCB2YWx1ZSAnJHt2YWx1ZX0nIHRvIGJlICdzdHJpbmcnIGJ1dCB3YXMgJyR7dHlwZU9mKHZhbHVlKX0nLmApO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnROb3RFcXVhbCh2YWx1ZTE6IGFueSwgdmFsdWUyOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAodmFsdWUxICE9PSB2YWx1ZTIpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8IGBFeHBlY3RlZCAnJHt2YWx1ZTF9JyAhPT0gJyR7dmFsdWUyfScuYCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydEVxdWFsKHZhbHVlMTogYW55LCB2YWx1ZTI6IGFueSwgdGV4dD86IHN0cmluZykge1xuICBpZiAocURldikge1xuICAgIGlmICh2YWx1ZTEgPT09IHZhbHVlMikgcmV0dXJuO1xuICAgIHRocm93IG5ld0Vycm9yKHRleHQgfHwgYEV4cGVjdGVkICcke3ZhbHVlMX0nID09PSAnJHt2YWx1ZTJ9Jy5gKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0TGVzc09yRXF1YWwodmFsdWUxOiBhbnksIHZhbHVlMjogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKHZhbHVlMSA8PSB2YWx1ZTIpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8IGBFeHBlY3RlZCAnJHt2YWx1ZTF9JyA8PSAnJHt2YWx1ZTJ9Jy5gKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0TGVzcyh2YWx1ZTE6IGFueSwgdmFsdWUyOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAodmFsdWUxIDwgdmFsdWUyKSByZXR1cm47XG4gICAgdGhyb3cgbmV3RXJyb3IodGV4dCB8fCBgRXhwZWN0ZWQgJyR7dmFsdWUxfScgPCAnJHt2YWx1ZTJ9Jy5gKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0R3JlYXRlck9yRXF1YWwodmFsdWUxOiBhbnksIHZhbHVlMjogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKHZhbHVlMSA+PSB2YWx1ZTIpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8IGBFeHBlY3RlZCAnJHt2YWx1ZTF9JyA+PSAnJHt2YWx1ZTJ9Jy5gKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0R3JlYXRlcih2YWx1ZTE6IGFueSwgdmFsdWUyOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAodmFsdWUxID4gdmFsdWUyKSByZXR1cm47XG4gICAgdGhyb3cgbmV3RXJyb3IodGV4dCB8fCBgRXhwZWN0ZWQgJyR7dmFsdWUxfScgPiAnJHt2YWx1ZTJ9Jy5gKTtcbiAgfVxufVxuXG5mdW5jdGlvbiB0eXBlT2YodmFsdWU6IGFueSkge1xuICBpZiAodmFsdWUgPT09IG51bGwpIHJldHVybiAnbnVsbCc7XG4gIGNvbnN0IHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gIGlmICh0eXBlID09PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiB2YWx1ZT8uY29uc3RydWN0b3I/Lm5hbWUgfHwgJzx1bmtub3duPic7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHR5cGU7XG4gIH1cbn1cblxuZnVuY3Rpb24gbmV3RXJyb3IodGV4dDogc3RyaW5nKSB7XG4gIGRlYnVnZ2VyOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWRlYnVnZ2VyXG4gIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKHRleHQpO1xuICBjb25zb2xlLmVycm9yKGVycm9yKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlXG4gIHJldHVybiBlcnJvcjtcbn1cbiJdfQ==","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { EMPTY_ARRAY } from '../util/flyweight';\nimport { isQrl, QRLInternal } from './qrl-class';\nimport { assertEqual } from '../assert/assert';\nlet runtimeSymbolId = 0;\nconst RUNTIME_QRL = '/runtimeQRL';\n// https://regexr.com/68v72\nconst EXTRACT_IMPORT_PATH = /\\(\\s*(['\"])([^\\1]+)\\1\\s*\\)/;\n// https://regexr.com/690ds\nconst EXTRACT_SELF_IMPORT = /Promise\\s*\\.\\s*resolve/;\n// https://regexr.com/6a83h\nconst EXTRACT_FILE_NAME = /[\\\\/(]([\\w\\d.\\-_]+\\.(js|ts)x?):/;\nexport function toInternalQRL(qrl) {\n    assertEqual(isQrl(qrl), true);\n    return qrl;\n}\nexport function staticQrl(chunkOrFn, symbol, lexicalScopeCapture = EMPTY_ARRAY) {\n    let chunk;\n    let symbolFn = null;\n    if (typeof chunkOrFn === 'string') {\n        chunk = chunkOrFn;\n    }\n    else if (typeof chunkOrFn === 'function') {\n        symbolFn = chunkOrFn;\n        let match;\n        const srcCode = String(chunkOrFn);\n        if ((match = srcCode.match(EXTRACT_IMPORT_PATH)) && match[2]) {\n            chunk = match[2];\n        }\n        else if ((match = srcCode.match(EXTRACT_SELF_IMPORT))) {\n            const ref = 'QWIK-SELF';\n            const frames = new Error(ref).stack.split('\\n');\n            const start = frames.findIndex((f) => f.includes(ref));\n            const frame = frames[start + 2];\n            match = frame.match(EXTRACT_FILE_NAME);\n            if (!match) {\n                chunk = 'main';\n            }\n            else {\n                chunk = match[1];\n            }\n        }\n        else {\n            throw new Error('Q-ERROR: Dynamic import not found: ' + srcCode);\n        }\n    }\n    else {\n        throw new Error('Q-ERROR: Unknown type argument: ' + chunkOrFn);\n    }\n    return new QRLInternal(chunk, symbol, null, symbolFn, null, lexicalScopeCapture, null);\n}\nexport function runtimeQrl(symbol, lexicalScopeCapture = EMPTY_ARRAY) {\n    return new QRLInternal(RUNTIME_QRL, 's' + runtimeSymbolId++, symbol, null, null, lexicalScopeCapture, null);\n}\nexport function stringifyQRL(qrl, element, platform) {\n    var _a;\n    const qrl_ = toInternalQRL(qrl);\n    const symbol = qrl_.symbol;\n    const chunk = platform ? (_a = platform.chunkForSymbol(symbol)) !== null && _a !== void 0 ? _a : qrl_.chunk : qrl_.chunk;\n    const parts = [chunk];\n    if (symbol && symbol !== 'default') {\n        parts.push('#', symbol);\n    }\n    const guard = qrl_.guard;\n    guard === null || guard === void 0 ? void 0 : guard.forEach((value, key) => parts.push('|', key, value && value.length ? '.' + value.join('.') : ''));\n    const capture = qrl_.capture;\n    if (capture && capture.length > 0) {\n        parts.push(JSON.stringify(capture));\n    }\n    const qrlString = parts.join('');\n    if (qrl_.chunk === RUNTIME_QRL && element) {\n        const qrls = element.__qrls__ || (element.__qrls__ = new Set());\n        qrls.add(qrl);\n    }\n    return qrlString;\n}\nexport function qrlToUrl(element, qrl) {\n    return new URL(stringifyQRL(qrl), element.ownerDocument.baseURI);\n}\n/**\n * `./chunk#symbol|symbol.propA.propB|[captures]\n */\nexport function parseQRL(qrl, element) {\n    if (element) {\n        const qrls = element.__qrls__;\n        if (qrls) {\n            for (const runtimeQrl of qrls) {\n                if (stringifyQRL(runtimeQrl) == qrl) {\n                    return runtimeQrl;\n                }\n            }\n        }\n    }\n    const endIdx = qrl.length;\n    const hashIdx = indexOf(qrl, 0, '#');\n    const guardIdx = indexOf(qrl, hashIdx, '|');\n    const captureIdx = indexOf(qrl, guardIdx, '[');\n    const chunkEndIdx = Math.min(hashIdx, guardIdx, captureIdx);\n    const chunk = qrl.substring(0, chunkEndIdx);\n    const symbolStartIdx = hashIdx == endIdx ? hashIdx : hashIdx + 1;\n    const symbolEndIdx = Math.min(guardIdx, captureIdx);\n    const symbol = symbolStartIdx == symbolEndIdx ? 'default' : qrl.substring(symbolStartIdx, symbolEndIdx);\n    const guardStartIdx = guardIdx;\n    const guardEndIdx = captureIdx;\n    const guard = guardStartIdx < guardEndIdx ? parseGuard(qrl.substring(guardStartIdx, guardEndIdx)) : null;\n    const captureStartIdx = captureIdx;\n    const captureEndIdx = endIdx;\n    const capture = captureStartIdx === captureEndIdx\n        ? EMPTY_ARRAY\n        : JSONparse(qrl.substring(captureStartIdx, captureEndIdx));\n    if (chunk === RUNTIME_QRL) {\n        console.error(`Q-ERROR: '${qrl}' is runtime but no instance found on element.`);\n    }\n    return new QRLInternal(chunk, symbol, null, null, capture, null, guard);\n}\nfunction JSONparse(json) {\n    try {\n        return JSON.parse(json);\n    }\n    catch (e) {\n        console.error('JSON:', json);\n        throw e;\n    }\n}\nfunction parseGuard(text) {\n    let map = null;\n    if (text) {\n        text.split('|').forEach((obj) => {\n            if (obj) {\n                const parts = obj.split('.');\n                const id = parts.shift();\n                if (!map)\n                    map = new Map();\n                map.set(id, parts);\n            }\n        });\n    }\n    return map;\n}\nfunction indexOf(text, startIdx, char) {\n    const endIdx = text.length;\n    const charIdx = text.indexOf(char, startIdx == endIdx ? 0 : startIdx);\n    return charIdx == -1 ? endIdx : charIdx;\n}\nexport function toQrlOrError(symbolOrQrl) {\n    if (!isQrl(symbolOrQrl)) {\n        if (typeof symbolOrQrl == 'function' || typeof symbolOrQrl == 'string') {\n            symbolOrQrl = runtimeQrl(symbolOrQrl);\n        }\n        else {\n            // TODO(misko): centralize\n            throw new Error(`Q-ERROR Only 'function's and 'string's are supported.`);\n        }\n    }\n    return symbolOrQrl;\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright Builder.io; Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\n/**\n * State factory of the component.\n */\nexport const OnMount = 'on:q-mount';\n/**\n * State factory of the component.\n */\nexport const QHostAttr = 'q:host';\nexport const OnRenderProp = 'on:qRender';\n/**\n * State factory of the component.\n */\nexport const OnRenderSelector = '[q\\\\:host]';\n/**\n * State factory of the component.\n */\nexport const OnUnmount = 'on:q-unmount';\n/**\n * State factory of the component.\n */\nexport const OnHydrate = 'on:q-hydrate';\n/**\n * State factory of the component.\n */\nexport const OnDehydrate = 'on:q-dehydrate';\n/**\n * Component Styles.\n */\nexport const ComponentScopedStyles = 'q:sstyle';\n/**\n * Unscoped Component Styles.\n */\nexport const ComponentUnscopedStyles = 'q:ustyle';\n/**\n * Component style host prefix\n */\nexport const ComponentStylesPrefixHost = '📦';\n/**\n * Component style content prefix\n */\nexport const ComponentStylesPrefixContent = '🏷️';\n/**\n * Prefix used to identify on listeners.\n */\nexport const EventPrefix = 'on:';\n/**\n * Attribute used to mark that an event listener is attached.\n */\nexport const EventAny = 'on:.';\n/**\n * Tag name used for projection.\n */\nexport const QSlot = 'Q:SLOT';\nexport const QSlotSelector = 'Q\\\\:SLOT';\n/**\n * `<some-element q:slot=\"...\">`\n */\nexport const QSlotAttr = 'q:slot';\nexport const QObjAttr = 'q:obj';\nexport const QObjSelector = '[q\\\\:obj]';\n/**\n * `<q:slot name=\"...\">`\n */\nexport const QSlotName = 'name';\nexport const QSlotInertName = '\\u0000';\nexport const ELEMENT_ID = 'q:id';\nexport const ELEMENT_ID_SELECTOR = '[q\\\\:id]';\nexport const ELEMENT_ID_PREFIX = '#';\nexport const ELEMENT_ID_Q_PROPS_PREFIX = '&';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFya2Vycy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXRpbC9tYXJrZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVIOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLFlBQVksQ0FBQztBQUVwQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxRQUFRLENBQUM7QUFDbEMsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLFlBQVksQ0FBQztBQUV6Qzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLFlBQVksQ0FBQztBQUU3Qzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxjQUFjLENBQUM7QUFFeEM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsY0FBYyxDQUFDO0FBRXhDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLGdCQUFnQixDQUFDO0FBRTVDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUcsVUFBVSxDQUFDO0FBRWhEOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQUcsVUFBVSxDQUFDO0FBRWxEOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDO0FBRTlDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQUcsS0FBSyxDQUFDO0FBRWxEOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLEtBQUssQ0FBQztBQUVqQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUM7QUFFL0I7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxLQUFLLEdBQUcsUUFBUSxDQUFDO0FBQzlCLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxVQUFVLENBQUM7QUFFeEM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDO0FBRWxDLE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxPQUFPLENBQUM7QUFFaEMsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLFdBQVcsQ0FBQztBQUV4Qzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxNQUFNLENBQUM7QUFDaEMsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLFFBQVEsQ0FBQztBQUV2QyxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsTUFBTSxDQUFDO0FBQ2pDLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLFVBQVUsQ0FBQztBQUM5QyxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxHQUFHLENBQUM7QUFDckMsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQUcsR0FBRyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEJ1aWxkZXIuaW87IEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vQnVpbGRlcklPL3F3aWsvYmxvYi9tYWluL0xJQ0VOU0VcbiAqL1xuXG4vKipcbiAqIFN0YXRlIGZhY3Rvcnkgb2YgdGhlIGNvbXBvbmVudC5cbiAqL1xuZXhwb3J0IGNvbnN0IE9uTW91bnQgPSAnb246cS1tb3VudCc7XG5cbi8qKlxuICogU3RhdGUgZmFjdG9yeSBvZiB0aGUgY29tcG9uZW50LlxuICovXG5leHBvcnQgY29uc3QgUUhvc3RBdHRyID0gJ3E6aG9zdCc7XG5leHBvcnQgY29uc3QgT25SZW5kZXJQcm9wID0gJ29uOnFSZW5kZXInO1xuXG4vKipcbiAqIFN0YXRlIGZhY3Rvcnkgb2YgdGhlIGNvbXBvbmVudC5cbiAqL1xuZXhwb3J0IGNvbnN0IE9uUmVuZGVyU2VsZWN0b3IgPSAnW3FcXFxcOmhvc3RdJztcblxuLyoqXG4gKiBTdGF0ZSBmYWN0b3J5IG9mIHRoZSBjb21wb25lbnQuXG4gKi9cbmV4cG9ydCBjb25zdCBPblVubW91bnQgPSAnb246cS11bm1vdW50JztcblxuLyoqXG4gKiBTdGF0ZSBmYWN0b3J5IG9mIHRoZSBjb21wb25lbnQuXG4gKi9cbmV4cG9ydCBjb25zdCBPbkh5ZHJhdGUgPSAnb246cS1oeWRyYXRlJztcblxuLyoqXG4gKiBTdGF0ZSBmYWN0b3J5IG9mIHRoZSBjb21wb25lbnQuXG4gKi9cbmV4cG9ydCBjb25zdCBPbkRlaHlkcmF0ZSA9ICdvbjpxLWRlaHlkcmF0ZSc7XG5cbi8qKlxuICogQ29tcG9uZW50IFN0eWxlcy5cbiAqL1xuZXhwb3J0IGNvbnN0IENvbXBvbmVudFNjb3BlZFN0eWxlcyA9ICdxOnNzdHlsZSc7XG5cbi8qKlxuICogVW5zY29wZWQgQ29tcG9uZW50IFN0eWxlcy5cbiAqL1xuZXhwb3J0IGNvbnN0IENvbXBvbmVudFVuc2NvcGVkU3R5bGVzID0gJ3E6dXN0eWxlJztcblxuLyoqXG4gKiBDb21wb25lbnQgc3R5bGUgaG9zdCBwcmVmaXhcbiAqL1xuZXhwb3J0IGNvbnN0IENvbXBvbmVudFN0eWxlc1ByZWZpeEhvc3QgPSAn8J+Tpic7XG5cbi8qKlxuICogQ29tcG9uZW50IHN0eWxlIGNvbnRlbnQgcHJlZml4XG4gKi9cbmV4cG9ydCBjb25zdCBDb21wb25lbnRTdHlsZXNQcmVmaXhDb250ZW50ID0gJ/Cfj7fvuI8nO1xuXG4vKipcbiAqIFByZWZpeCB1c2VkIHRvIGlkZW50aWZ5IG9uIGxpc3RlbmVycy5cbiAqL1xuZXhwb3J0IGNvbnN0IEV2ZW50UHJlZml4ID0gJ29uOic7XG5cbi8qKlxuICogQXR0cmlidXRlIHVzZWQgdG8gbWFyayB0aGF0IGFuIGV2ZW50IGxpc3RlbmVyIGlzIGF0dGFjaGVkLlxuICovXG5leHBvcnQgY29uc3QgRXZlbnRBbnkgPSAnb246Lic7XG5cbi8qKlxuICogVGFnIG5hbWUgdXNlZCBmb3IgcHJvamVjdGlvbi5cbiAqL1xuZXhwb3J0IGNvbnN0IFFTbG90ID0gJ1E6U0xPVCc7XG5leHBvcnQgY29uc3QgUVNsb3RTZWxlY3RvciA9ICdRXFxcXDpTTE9UJztcblxuLyoqXG4gKiBgPHNvbWUtZWxlbWVudCBxOnNsb3Q9XCIuLi5cIj5gXG4gKi9cbmV4cG9ydCBjb25zdCBRU2xvdEF0dHIgPSAncTpzbG90JztcblxuZXhwb3J0IGNvbnN0IFFPYmpBdHRyID0gJ3E6b2JqJztcblxuZXhwb3J0IGNvbnN0IFFPYmpTZWxlY3RvciA9ICdbcVxcXFw6b2JqXSc7XG5cbi8qKlxuICogYDxxOnNsb3QgbmFtZT1cIi4uLlwiPmBcbiAqL1xuZXhwb3J0IGNvbnN0IFFTbG90TmFtZSA9ICduYW1lJztcbmV4cG9ydCBjb25zdCBRU2xvdEluZXJ0TmFtZSA9ICdcXHUwMDAwJztcblxuZXhwb3J0IGNvbnN0IEVMRU1FTlRfSUQgPSAncTppZCc7XG5leHBvcnQgY29uc3QgRUxFTUVOVF9JRF9TRUxFQ1RPUiA9ICdbcVxcXFw6aWRdJztcbmV4cG9ydCBjb25zdCBFTEVNRU5UX0lEX1BSRUZJWCA9ICcjJztcbmV4cG9ydCBjb25zdCBFTEVNRU5UX0lEX1FfUFJPUFNfUFJFRklYID0gJyYnO1xuIl19","import { QHostAttr, QSlotAttr } from './markers';\n/**\n * Returns true if the `node` is `Element` and of the right `tagName`.\n *\n * @param node\n * @private\n */\nexport function isDomElementWithTagName(node, tagName) {\n    return isHtmlElement(node) && node.tagName.toUpperCase() == tagName.toUpperCase();\n}\n/**\n * @private\n */\nexport function isTemplateElement(node) {\n    return isDomElementWithTagName(node, 'template');\n}\n/**\n * @private\n */\nexport function isQSLotTemplateElement(node) {\n    return isTemplateElement(node) && node.hasAttribute(QSlotAttr);\n}\n/**\n * @private\n */\nexport function isComponentElement(node) {\n    return isHtmlElement(node) && node.hasAttribute(QHostAttr);\n}\n/**\n * @private\n */\nexport function isHtmlElement(node) {\n    return node ? node.nodeType === NodeType.ELEMENT_NODE : false;\n}\n/**\n * @private\n */\nexport function isTextNode(node) {\n    return node ? node.nodeType === NodeType.TEXT_NODE : false;\n}\n/**\n * `Node.type` enumeration\n */\nexport var NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"ELEMENT_NODE\"] = 1] = \"ELEMENT_NODE\";\n    NodeType[NodeType[\"ATTRIBUTE_NODE\"] = 2] = \"ATTRIBUTE_NODE\";\n    NodeType[NodeType[\"TEXT_NODE\"] = 3] = \"TEXT_NODE\";\n    NodeType[NodeType[\"CDATA_SECTION_NODE\"] = 4] = \"CDATA_SECTION_NODE\";\n    NodeType[NodeType[\"PROCESSING_INSTRUCTION_NODE\"] = 7] = \"PROCESSING_INSTRUCTION_NODE\";\n    // document, such as <?xml-stylesheet … ?>.\n    NodeType[NodeType[\"COMMENT_NODE\"] = 8] = \"COMMENT_NODE\";\n    NodeType[NodeType[\"DOCUMENT_NODE\"] = 9] = \"DOCUMENT_NODE\";\n    NodeType[NodeType[\"DOCUMENT_TYPE_NODE\"] = 10] = \"DOCUMENT_TYPE_NODE\";\n    NodeType[NodeType[\"DOCUMENT_FRAGMENT_NODE\"] = 11] = \"DOCUMENT_FRAGMENT_NODE\";\n})(NodeType || (NodeType = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3V0aWwvdHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFFakQ7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsdUJBQXVCLENBQ3JDLElBQTZCLEVBQzdCLE9BQWU7SUFFZixPQUFPLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxJQUFJLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQztBQUNwRixDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQUMsSUFBNkI7SUFDN0QsT0FBTyx1QkFBdUIsQ0FBQyxJQUFJLEVBQUUsVUFBVSxDQUFDLENBQUM7QUFDbkQsQ0FBQztBQUVEOztHQUVHO0FBQ0gsTUFBTSxVQUFVLHNCQUFzQixDQUFDLElBQTZCO0lBQ2xFLE9BQU8saUJBQWlCLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUNqRSxDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsa0JBQWtCLENBQUMsSUFBNkI7SUFDOUQsT0FBTyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUM3RCxDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsYUFBYSxDQUFDLElBQVM7SUFDckMsT0FBTyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLEtBQUssUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0FBQ2hFLENBQUM7QUFFRDs7R0FFRztBQUNILE1BQU0sVUFBVSxVQUFVLENBQUMsSUFBNkI7SUFDdEQsT0FBTyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLEtBQUssUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0FBQzdELENBQUM7QUFRRDs7R0FFRztBQUNILE1BQU0sQ0FBTixJQUFrQixRQVdqQjtBQVhELFdBQWtCLFFBQVE7SUFDeEIsdURBQWdCLENBQUE7SUFDaEIsMkRBQWtCLENBQUE7SUFDbEIsaURBQWEsQ0FBQTtJQUNiLG1FQUFzQixDQUFBO0lBQ3RCLHFGQUErQixDQUFBO0lBQy9CLDJDQUEyQztJQUMzQyx1REFBZ0IsQ0FBQTtJQUNoQix5REFBaUIsQ0FBQTtJQUNqQixvRUFBdUIsQ0FBQTtJQUN2Qiw0RUFBMkIsQ0FBQTtBQUM3QixDQUFDLEVBWGlCLFFBQVEsS0FBUixRQUFRLFFBV3pCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUUhvc3RBdHRyLCBRU2xvdEF0dHIgfSBmcm9tICcuL21hcmtlcnMnO1xuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgYG5vZGVgIGlzIGBFbGVtZW50YCBhbmQgb2YgdGhlIHJpZ2h0IGB0YWdOYW1lYC5cbiAqXG4gKiBAcGFyYW0gbm9kZVxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzRG9tRWxlbWVudFdpdGhUYWdOYW1lKFxuICBub2RlOiBOb2RlIHwgbnVsbCB8IHVuZGVmaW5lZCxcbiAgdGFnTmFtZTogc3RyaW5nXG4pOiBub2RlIGlzIEVsZW1lbnQge1xuICByZXR1cm4gaXNIdG1sRWxlbWVudChub2RlKSAmJiBub2RlLnRhZ05hbWUudG9VcHBlckNhc2UoKSA9PSB0YWdOYW1lLnRvVXBwZXJDYXNlKCk7XG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVGVtcGxhdGVFbGVtZW50KG5vZGU6IE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkKTogbm9kZSBpcyBIVE1MVGVtcGxhdGVFbGVtZW50IHtcbiAgcmV0dXJuIGlzRG9tRWxlbWVudFdpdGhUYWdOYW1lKG5vZGUsICd0ZW1wbGF0ZScpO1xufVxuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1FTTG90VGVtcGxhdGVFbGVtZW50KG5vZGU6IE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkKTogbm9kZSBpcyBIVE1MVGVtcGxhdGVFbGVtZW50IHtcbiAgcmV0dXJuIGlzVGVtcGxhdGVFbGVtZW50KG5vZGUpICYmIG5vZGUuaGFzQXR0cmlidXRlKFFTbG90QXR0cik7XG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzQ29tcG9uZW50RWxlbWVudChub2RlOiBOb2RlIHwgbnVsbCB8IHVuZGVmaW5lZCk6IG5vZGUgaXMgSFRNTEVsZW1lbnQge1xuICByZXR1cm4gaXNIdG1sRWxlbWVudChub2RlKSAmJiBub2RlLmhhc0F0dHJpYnV0ZShRSG9zdEF0dHIpO1xufVxuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0h0bWxFbGVtZW50KG5vZGU6IGFueSk6IG5vZGUgaXMgRWxlbWVudCB7XG4gIHJldHVybiBub2RlID8gbm9kZS5ub2RlVHlwZSA9PT0gTm9kZVR5cGUuRUxFTUVOVF9OT0RFIDogZmFsc2U7XG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVGV4dE5vZGUobm9kZTogTm9kZSB8IG51bGwgfCB1bmRlZmluZWQpOiBub2RlIGlzIFRleHQge1xuICByZXR1cm4gbm9kZSA/IG5vZGUubm9kZVR5cGUgPT09IE5vZGVUeXBlLlRFWFRfTk9ERSA6IGZhbHNlO1xufVxuXG4vKipcbiAqIFR5cGUgcmVwcmVzZW50aW5nIGEgdmFsdWUgd2hpY2ggaXMgZWl0aGVyIHJlc29sdmUgb3IgYSBwcm9taXNlLlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgdHlwZSBWYWx1ZU9yUHJvbWlzZTxUPiA9IFQgfCBQcm9taXNlPFQ+O1xuXG4vKipcbiAqIGBOb2RlLnR5cGVgIGVudW1lcmF0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCBlbnVtIE5vZGVUeXBlIHtcbiAgRUxFTUVOVF9OT0RFID0gMSwgLy8gQW4gRWxlbWVudCBub2RlIGxpa2UgPHA+IG9yIDxkaXY+LlxuICBBVFRSSUJVVEVfTk9ERSA9IDIsIC8vIEFuIEF0dHJpYnV0ZSBvZiBhbiBFbGVtZW50LlxuICBURVhUX05PREUgPSAzLCAvLyBUaGUgYWN0dWFsIFRleHQgaW5zaWRlIGFuIEVsZW1lbnQgb3IgQXR0ci5cbiAgQ0RBVEFfU0VDVElPTl9OT0RFID0gNCwgLy8gQSBDREFUQVNlY3Rpb24sIHN1Y2ggYXMgPCFDREFUQVtbIOKApiBdXT4uXG4gIFBST0NFU1NJTkdfSU5TVFJVQ1RJT05fTk9ERSA9IDcsIC8vIEEgUHJvY2Vzc2luZ0luc3RydWN0aW9uIG9mIGFuIFhNTFxuICAvLyBkb2N1bWVudCwgc3VjaCBhcyA8P3htbC1zdHlsZXNoZWV0IOKApiA/Pi5cbiAgQ09NTUVOVF9OT0RFID0gOCwgLy8gQSBDb21tZW50IG5vZGUsIHN1Y2ggYXMgPCEtLSDigKYgLS0+LlxuICBET0NVTUVOVF9OT0RFID0gOSwgLy8gQSBEb2N1bWVudCBub2RlLlxuICBET0NVTUVOVF9UWVBFX05PREUgPSAxMCwgLy8gQSBEb2N1bWVudFR5cGUgbm9kZSwgc3VjaCBhcyA8IURPQ1RZUEUgaHRtbD4uXG4gIERPQ1VNRU5UX0ZSQUdNRU5UX05PREUgPSAxMSwgLy8gQSBEb2N1bWVudEZyYWdtZW50IG5vZGUuXG59XG4iXX0=","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { NodeType } from './types';\nexport function isNode(value) {\n    return value && typeof value.nodeType == 'number';\n}\nexport function isDocument(value) {\n    return value && value.nodeType == NodeType.DOCUMENT_NODE;\n}\nexport function isElement(value) {\n    return isNode(value) && value.nodeType == NodeType.ELEMENT_NODE;\n}\nexport function isText(value) {\n    return isNode(value) && value.nodeType == NodeType.TEXT_NODE;\n}\nexport function isComment(value) {\n    return isNode(value) && value.nodeType == NodeType.COMMENT_NODE;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWxlbWVudC5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXRpbC9lbGVtZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVILE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFbkMsTUFBTSxVQUFVLE1BQU0sQ0FBQyxLQUFVO0lBQy9CLE9BQU8sS0FBSyxJQUFJLE9BQU8sS0FBSyxDQUFDLFFBQVEsSUFBSSxRQUFRLENBQUM7QUFDcEQsQ0FBQztBQUNELE1BQU0sVUFBVSxVQUFVLENBQUMsS0FBVTtJQUNuQyxPQUFPLEtBQUssSUFBSSxLQUFLLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxhQUFhLENBQUM7QUFDM0QsQ0FBQztBQUNELE1BQU0sVUFBVSxTQUFTLENBQUMsS0FBVTtJQUNsQyxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxZQUFZLENBQUM7QUFDbEUsQ0FBQztBQUNELE1BQU0sVUFBVSxNQUFNLENBQUMsS0FBVTtJQUMvQixPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxTQUFTLENBQUM7QUFDL0QsQ0FBQztBQUNELE1BQU0sVUFBVSxTQUFTLENBQUMsS0FBVTtJQUNsQyxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxZQUFZLENBQUM7QUFDbEUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBCdWlsZGVyLmlvLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL0J1aWxkZXJJTy9xd2lrL2Jsb2IvbWFpbi9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgTm9kZVR5cGUgfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGlzTm9kZSh2YWx1ZTogYW55KTogdmFsdWUgaXMgTm9kZSB7XG4gIHJldHVybiB2YWx1ZSAmJiB0eXBlb2YgdmFsdWUubm9kZVR5cGUgPT0gJ251bWJlcic7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNEb2N1bWVudCh2YWx1ZTogYW55KTogdmFsdWUgaXMgRG9jdW1lbnQge1xuICByZXR1cm4gdmFsdWUgJiYgdmFsdWUubm9kZVR5cGUgPT0gTm9kZVR5cGUuRE9DVU1FTlRfTk9ERTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0VsZW1lbnQodmFsdWU6IGFueSk6IHZhbHVlIGlzIEhUTUxFbGVtZW50IHtcbiAgcmV0dXJuIGlzTm9kZSh2YWx1ZSkgJiYgdmFsdWUubm9kZVR5cGUgPT0gTm9kZVR5cGUuRUxFTUVOVF9OT0RFO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzVGV4dCh2YWx1ZTogYW55KTogdmFsdWUgaXMgVGV4dCB7XG4gIHJldHVybiBpc05vZGUodmFsdWUpICYmIHZhbHVlLm5vZGVUeXBlID09IE5vZGVUeXBlLlRFWFRfTk9ERTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0NvbW1lbnQodmFsdWU6IGFueSk6IHZhbHVlIGlzIENvbW1lbnQge1xuICByZXR1cm4gaXNOb2RlKHZhbHVlKSAmJiB2YWx1ZS5ub2RlVHlwZSA9PSBOb2RlVHlwZS5DT01NRU5UX05PREU7XG59XG4iXX0=","import { isDocument } from '../util/element';\nexport const createPlatform = (doc) => {\n    let queuePromise;\n    let storePromise;\n    const moduleCache = new Map();\n    return {\n        importSymbol(element, url, symbolName) {\n            const urlDoc = toUrl(element.ownerDocument, element, url).toString();\n            const urlCopy = new URL(urlDoc);\n            urlCopy.hash = '';\n            urlCopy.search = '';\n            const importURL = urlCopy.href;\n            const mod = moduleCache.get(importURL);\n            if (mod) {\n                return mod[symbolName];\n            }\n            return import(/* @vite-ignore */ importURL).then((mod) => {\n                moduleCache.set(importURL, mod);\n                return mod[symbolName];\n            });\n        },\n        queueRender: (renderMarked) => {\n            if (!queuePromise) {\n                queuePromise = new Promise((resolve, reject) => doc.defaultView.requestAnimationFrame(() => {\n                    queuePromise = null;\n                    renderMarked(doc).then(resolve, reject);\n                }));\n            }\n            return queuePromise;\n        },\n        queueStoreFlush: (flushStore) => {\n            if (!storePromise) {\n                storePromise = new Promise((resolve, reject) => doc.defaultView.requestAnimationFrame(() => {\n                    storePromise = null;\n                    flushStore(doc).then(resolve, reject);\n                }));\n            }\n            return storePromise;\n        },\n        chunkForSymbol() {\n            return undefined;\n        },\n    };\n};\n/**\n * Convert relative base URI and relative URL into a fully qualified URL.\n *\n * @param base -`QRL`s are relative, and therefore they need a base for resolution.\n *    - `Element` use `base.ownerDocument.baseURI`\n *    - `Document` use `base.baseURI`\n *    - `string` use `base` as is\n *    - `QConfig` use `base.baseURI`\n * @param url - relative URL\n * @returns fully qualified URL.\n */\nexport function toUrl(doc, element, url) {\n    let _url;\n    let _base = undefined;\n    if (url === undefined) {\n        //  recursive call\n        if (element) {\n            _url = element.getAttribute('q:base');\n            _base = toUrl(doc, element.parentNode && element.parentNode.closest('[q\\\\:base]'));\n        }\n        else {\n            _url = doc.baseURI;\n        }\n    }\n    else if (url) {\n        (_url = url), (_base = toUrl(doc, element.closest('[q\\\\:base]')));\n    }\n    else {\n        throw new Error('INTERNAL ERROR');\n    }\n    return new URL(String(_url), _base);\n}\n/**\n * @public\n */\nexport const setPlatform = (doc, plt) => (doc[DocumentPlatform] = plt);\n/**\n * @public\n */\nexport const getPlatform = (docOrNode) => {\n    const doc = (isDocument(docOrNode) ? docOrNode : docOrNode.ownerDocument);\n    return doc[DocumentPlatform] || (doc[DocumentPlatform] = createPlatform(doc));\n};\nconst DocumentPlatform = /*@__PURE__*/ Symbol();\n//# sourceMappingURL=data:application/json;base64,","import { runtimeQrl, staticQrl, toInternalQRL } from './qrl';\nimport { getPlatform } from '../platform/platform';\n// <docs markdown=\"https://hackmd.io/m5DzCi5MTa26LuUj5t3HpQ#qrlImport\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fm5DzCi5MTa26LuUj5t3HpQ%3Fboth#qrlImport instead)\n/**\n * Lazy-load a `QRL` symbol and return the lazy-loaded value.\n *\n * See: `QRL`\n *\n * @param element - Location of the URL to resolve against. This is needed to take `q:base` into\n * account.\n * @param qrl - QRL to load.\n * @returns A resolved QRL value as a Promise.\n * @public\n */\n// </docs>\nexport async function qrlImport(element, qrl) {\n    const qrl_ = toInternalQRL(qrl);\n    if (qrl_.symbolRef)\n        return qrl_.symbolRef;\n    const doc = element.ownerDocument;\n    if (qrl_.symbolFn) {\n        return (qrl_.symbolRef = qrl_.symbolFn().then((module) => module[qrl_.symbol]));\n    }\n    else {\n        return (qrl_.symbolRef = await getPlatform(doc).importSymbol(element, qrl_.chunk, qrl_.symbol));\n    }\n}\n// <docs markdown=\"https://hackmd.io/m5DzCi5MTa26LuUj5t3HpQ#$\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fm5DzCi5MTa26LuUj5t3HpQ%3Fboth#$ instead)\n/**\n * Qwik Optimizer marker function.\n *\n * Use `$(...)` to tell Qwik Optimizer to extract the expression in `$(...)` into a lazy-loadable\n * resource referenced by `QRL`.\n *\n * See: `implicit$FirstArg` for additional `____$(...)` rules.\n *\n * In this example `$(...)` is used to capture the callback function of `onmousemove` into\n * lazy-loadable reference. This allows the code to refer to the function without actually\n * loading the function. In this example, the callback function does not get loaded until\n * `mousemove` event fires.\n *\n * ```typescript\n * onDocument(\n *   'mousemove',\n *   $(() => console.log('mousemove'))\n * );\n * ```\n *\n * In this code the Qwik Optimizer detects `$(...)` and transforms the code into:\n *\n * ```typescript\n * // FILE: <current file>\n * onDocument('mousemove', qrl('./chunk-abc.js', 'onMousemove'));\n *\n * // FILE: chunk-abc.js\n * export const onMousemove = () => console.log('mousemove');\n * ```\n *\n * ## Special Rules\n *\n * The Qwik Optimizer places special rules on functions that can be lazy-loaded.\n *\n * 1. The expression of the `$(expression)` function must be importable by the system.\n * (expression shows up in `import` or has `export`)\n * 2. If inlined function then all lexically captured values must be:\n *    - importable (vars shows up in `import` or has `export`)\n *    - const (The capturing process differs from JS capturing in that writing to captured\n * variables does not update them, and therefore writes are forbidden. The best practice is that\n * all captured variables are constants.)\n *    - Must be runtime serializable.\n *\n * ```typescript\n * import { importedFn } from './example';\n *\n * export const greet = () => console.log('greet');\n * function topLevelFn() {}\n *\n * function myCode() {\n *   const store = createStore({});\n *   function localFn() {}\n *   // Valid Examples\n *   $(greet); // greet is importable\n *   $(importedFn); // importedFn is importable\n *   $(() => greet()); // greet is importable;\n *   $(() => importedFn()); // importedFn is importable\n *   $(() => console.log(store)); // store is serializable.\n *\n *   // Compile time errors\n *   $(topLevelFn); // ERROR: `topLevelFn` not importable\n *   $(() => topLevelFn()); // ERROR: `topLevelFn` not importable\n *\n *   // Runtime errors\n *   $(localFn); // ERROR: `localFn` fails serialization\n *   $(() => localFn()); // ERROR: `localFn` fails serialization\n * }\n *\n * ```\n *\n * @param expression - Expression which should be lazy loaded\n * @public\n */\n// </docs>\nexport function $(expression) {\n    return runtimeQrl(expression);\n}\n// <docs markdown=\"https://hackmd.io/m5DzCi5MTa26LuUj5t3HpQ#implicit$FirstArg\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fm5DzCi5MTa26LuUj5t3HpQ%3Fboth#implicit$FirstArg instead)\n/**\n * Create a `____$(...)` convenience method from `___(...)`.\n *\n * It is very common for functions to take a lazy-loadable resource as a first argument. For this\n * reason, the Qwik Optimizer automatically extracts the first argument from any function which\n * ends in `$`.\n *\n * This means that `foo$(arg0)` and `foo($(arg0))` are equivalent with respect to Qwik Optimizer.\n * The former is just a shorthand for the latter.\n *\n * For example these function call are equivalent:\n *\n * - `component$(() => {...})` is same as `onRender($(() => {...}))`\n *\n * ```typescript\n * export function myApi(callback: QRL<() => void>): void {\n *   // ...\n * }\n *\n * export const myApi$ = implicit$FirstArg(myApi);\n * // type of myApi$: (callback: () => void): void\n *\n * // can be used as:\n * myApi$(() => console.log('callback'));\n *\n * // will be transpiled to:\n * // FILE: <current file>\n * myApi(qrl('./chunk-abc.js', 'callback'));\n *\n * // FILE: chunk-abc.js\n * export const callback = () => console.log('callback');\n * ```\n *\n * @param fn - function that should have its first argument automatically `$`.\n * @public\n */\n// </docs>\nexport function implicit$FirstArg(fn) {\n    return function (first, ...rest) {\n        return fn.call(null, $(first), ...rest);\n    };\n}\n// <docs markdown=\"https://hackmd.io/m5DzCi5MTa26LuUj5t3HpQ#qrl\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fm5DzCi5MTa26LuUj5t3HpQ%3Fboth#qrl instead)\n/**\n * Used by Qwik Optimizer to point to lazy-loaded resources.\n *\n * This function should be used by the Qwik Optimizer only. The function should not be directly\n * referred to in the source code of the application.\n *\n * See: `QRL`, `$(...)`\n *\n * @param chunkOrFn - Chunk name (or function which is stringified to extract chunk name)\n * @param symbol - Symbol to lazy load\n * @param lexicalScopeCapture - a set of lexically scoped variables to capture.\n * @public\n */\n// </docs>\nexport const qrl = staticQrl;\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nexport function flattenArray(array, dst) {\n    // Yes this function is just Array.flat, but we need to run on old versions of Node.\n    if (!dst)\n        dst = [];\n    for (const item of array) {\n        if (Array.isArray(item)) {\n            flattenArray(item, dst);\n        }\n        else {\n            dst.push(item);\n        }\n    }\n    return dst;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJyYXkuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3V0aWwvYXJyYXkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUgsTUFBTSxVQUFVLFlBQVksQ0FBSSxLQUFrQixFQUFFLEdBQVM7SUFDM0Qsb0ZBQW9GO0lBQ3BGLElBQUksQ0FBQyxHQUFHO1FBQUUsR0FBRyxHQUFHLEVBQUUsQ0FBQztJQUNuQixLQUFLLE1BQU0sSUFBSSxJQUFJLEtBQUssRUFBRTtRQUN4QixJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDdkIsWUFBWSxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQztTQUN6QjthQUFNO1lBQ0wsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNoQjtLQUNGO0lBQ0QsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEJ1aWxkZXIuaW8sIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vQnVpbGRlcklPL3F3aWsvYmxvYi9tYWluL0xJQ0VOU0VcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gZmxhdHRlbkFycmF5PFQ+KGFycmF5OiAoVCB8IFRbXSlbXSwgZHN0PzogVFtdKTogVFtdIHtcbiAgLy8gWWVzIHRoaXMgZnVuY3Rpb24gaXMganVzdCBBcnJheS5mbGF0LCBidXQgd2UgbmVlZCB0byBydW4gb24gb2xkIHZlcnNpb25zIG9mIE5vZGUuXG4gIGlmICghZHN0KSBkc3QgPSBbXTtcbiAgZm9yIChjb25zdCBpdGVtIG9mIGFycmF5KSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoaXRlbSkpIHtcbiAgICAgIGZsYXR0ZW5BcnJheShpdGVtLCBkc3QpO1xuICAgIH0gZWxzZSB7XG4gICAgICBkc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGRzdDtcbn1cbiJdfQ==","import { EMPTY_ARRAY } from '../../util/flyweight';\nimport { qDev } from '../../util/qdev';\n/**\n * @public\n */\nexport function jsx(type, props, key) {\n    return new JSXNodeImpl(type, props, key);\n}\nexport class JSXNodeImpl {\n    constructor(type, props, key) {\n        this.type = type;\n        this.props = props;\n        this.key = key;\n        if (props) {\n            if (props.children !== undefined) {\n                if (Array.isArray(props.children)) {\n                    this.children = props.children;\n                }\n                else {\n                    this.children = [props.children];\n                }\n            }\n            else {\n                this.children = EMPTY_ARRAY;\n            }\n        }\n    }\n}\nexport const isJSXNode = (n) => {\n    if (qDev) {\n        if (n instanceof JSXNodeImpl) {\n            return true;\n        }\n        if (n && typeof n === 'object' && n.constructor.name === JSXNodeImpl.name) {\n            throw new Error(`Duplicate implementations of \"JSXNodeImpl\" found`);\n        }\n        return false;\n    }\n    else {\n        return n instanceof JSXNodeImpl;\n    }\n};\n/**\n * @public\n */\nexport const Fragment = {};\nexport { jsx as jsxs, jsx as jsxDEV };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianN4LXJ1bnRpbWUuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3JlbmRlci9qc3gvanN4LXJ1bnRpbWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBR25ELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUV2Qzs7R0FFRztBQUNILE1BQU0sVUFBVSxHQUFHLENBQ2pCLElBQU8sRUFDUCxLQUFZLEVBQ1osR0FBWTtJQUVaLE9BQU8sSUFBSSxXQUFXLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQztBQUMzQyxDQUFDO0FBRUQsTUFBTSxPQUFPLFdBQVc7SUFHdEIsWUFBbUIsSUFBTyxFQUFTLEtBQVUsRUFBUyxHQUFRO1FBQTNDLFNBQUksR0FBSixJQUFJLENBQUc7UUFBUyxVQUFLLEdBQUwsS0FBSyxDQUFLO1FBQVMsUUFBRyxHQUFILEdBQUcsQ0FBSztRQUM1RCxJQUFJLEtBQUssRUFBRTtZQUNULElBQUksS0FBSyxDQUFDLFFBQVEsS0FBSyxTQUFTLEVBQUU7Z0JBQ2hDLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLEVBQUU7b0JBQ2pDLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQztpQkFDaEM7cUJBQU07b0JBQ0wsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztpQkFDbEM7YUFDRjtpQkFBTTtnQkFDTCxJQUFJLENBQUMsUUFBUSxHQUFHLFdBQVcsQ0FBQzthQUM3QjtTQUNGO0lBQ0gsQ0FBQztDQUNGO0FBRUQsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLENBQUMsQ0FBTSxFQUF5QixFQUFFO0lBQ3pELElBQUksSUFBSSxFQUFFO1FBQ1IsSUFBSSxDQUFDLFlBQVksV0FBVyxFQUFFO1lBQzVCLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFDRCxJQUFJLENBQUMsSUFBSSxPQUFPLENBQUMsS0FBSyxRQUFRLElBQUksQ0FBQyxDQUFDLFdBQVcsQ0FBQyxJQUFJLEtBQUssV0FBVyxDQUFDLElBQUksRUFBRTtZQUN6RSxNQUFNLElBQUksS0FBSyxDQUFDLGtEQUFrRCxDQUFDLENBQUM7U0FDckU7UUFDRCxPQUFPLEtBQUssQ0FBQztLQUNkO1NBQU07UUFDTCxPQUFPLENBQUMsWUFBWSxXQUFXLENBQUM7S0FDakM7QUFDSCxDQUFDLENBQUM7QUFFRjs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxFQUFTLENBQUM7QUFJbEMsT0FBTyxFQUFFLEdBQUcsSUFBSSxJQUFJLEVBQUUsR0FBRyxJQUFJLE1BQU0sRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRU1QVFlfQVJSQVkgfSBmcm9tICcuLi8uLi91dGlsL2ZseXdlaWdodCc7XG5pbXBvcnQgdHlwZSB7IEZ1bmN0aW9uQ29tcG9uZW50LCBKU1hOb2RlIH0gZnJvbSAnLi90eXBlcy9qc3gtbm9kZSc7XG5pbXBvcnQgdHlwZSB7IFF3aWtKU1ggfSBmcm9tICcuL3R5cGVzL2pzeC1xd2lrJztcbmltcG9ydCB7IHFEZXYgfSBmcm9tICcuLi8uLi91dGlsL3FkZXYnO1xuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGpzeDxUIGV4dGVuZHMgc3RyaW5nIHwgRnVuY3Rpb25Db21wb25lbnQ8UFJPUFM+LCBQUk9QUz4oXG4gIHR5cGU6IFQsXG4gIHByb3BzOiBQUk9QUyxcbiAga2V5Pzogc3RyaW5nXG4pOiBKU1hOb2RlPFQ+IHtcbiAgcmV0dXJuIG5ldyBKU1hOb2RlSW1wbCh0eXBlLCBwcm9wcywga2V5KTtcbn1cblxuZXhwb3J0IGNsYXNzIEpTWE5vZGVJbXBsPFQ+IGltcGxlbWVudHMgSlNYTm9kZTxUPiB7XG4gIGNoaWxkcmVuOiBhbnk7XG5cbiAgY29uc3RydWN0b3IocHVibGljIHR5cGU6IFQsIHB1YmxpYyBwcm9wczogYW55LCBwdWJsaWMga2V5OiBhbnkpIHtcbiAgICBpZiAocHJvcHMpIHtcbiAgICAgIGlmIChwcm9wcy5jaGlsZHJlbiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHByb3BzLmNoaWxkcmVuKSkge1xuICAgICAgICAgIHRoaXMuY2hpbGRyZW4gPSBwcm9wcy5jaGlsZHJlbjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmNoaWxkcmVuID0gW3Byb3BzLmNoaWxkcmVuXTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5jaGlsZHJlbiA9IEVNUFRZX0FSUkFZO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgY29uc3QgaXNKU1hOb2RlID0gKG46IGFueSk6IG4gaXMgSlNYTm9kZTx1bmtub3duPiA9PiB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKG4gaW5zdGFuY2VvZiBKU1hOb2RlSW1wbCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmIChuICYmIHR5cGVvZiBuID09PSAnb2JqZWN0JyAmJiBuLmNvbnN0cnVjdG9yLm5hbWUgPT09IEpTWE5vZGVJbXBsLm5hbWUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRHVwbGljYXRlIGltcGxlbWVudGF0aW9ucyBvZiBcIkpTWE5vZGVJbXBsXCIgZm91bmRgKTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBuIGluc3RhbmNlb2YgSlNYTm9kZUltcGw7XG4gIH1cbn07XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgY29uc3QgRnJhZ21lbnQgPSB7fSBhcyBhbnk7XG5cbmV4cG9ydCB0eXBlIHsgUXdpa0pTWCBhcyBKU1ggfTtcblxuZXhwb3J0IHsganN4IGFzIGpzeHMsIGpzeCBhcyBqc3hERVYgfTtcbiJdfQ==","/* eslint-disable */\n/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { flattenArray } from '../../util/array';\nimport { EMPTY_ARRAY } from '../../util/flyweight';\nimport { JSXNodeImpl } from './jsx-runtime';\n/**\n * @public\n */\nexport function h(type, props, ...children) {\n    // Using legacy h() jsx transform and morphing it\n    // so it can use the modern vdom structure\n    // https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html\n    // https://www.typescriptlang.org/tsconfig#jsxImportSource\n    const normalizedProps = {\n        children: arguments.length > 2 ? flattenArray(children) : EMPTY_ARRAY,\n    };\n    let key;\n    let i;\n    for (i in props) {\n        if (i == 'key')\n            key = props[i];\n        else\n            normalizedProps[i] = props[i];\n    }\n    return new JSXNodeImpl(type, normalizedProps, key);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvcmVuZGVyL2pzeC9mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQjs7Ozs7O0dBTUc7QUFFSCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFJNUM7O0dBRUc7QUFDSCxNQUFNLFVBQVUsQ0FBQyxDQUNmLElBQXVDLEVBQ3ZDLEtBQW1CLEVBQ25CLEdBQUcsUUFBZTtJQUVsQixpREFBaUQ7SUFDakQsMENBQTBDO0lBQzFDLDZFQUE2RTtJQUM3RSwwREFBMEQ7SUFFMUQsTUFBTSxlQUFlLEdBQVE7UUFDM0IsUUFBUSxFQUFFLFNBQVMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVc7S0FDdEUsQ0FBQztJQUVGLElBQUksR0FBUSxDQUFDO0lBQ2IsSUFBSSxDQUFNLENBQUM7SUFFWCxLQUFLLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFDZixJQUFJLENBQUMsSUFBSSxLQUFLO1lBQUUsR0FBRyxHQUFJLEtBQTZCLENBQUMsQ0FBQyxDQUFDLENBQUM7O1lBQ25ELGVBQWUsQ0FBQyxDQUFDLENBQUMsR0FBSSxLQUE2QixDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQzdEO0lBRUQsT0FBTyxJQUFJLFdBQVcsQ0FBQyxJQUFJLEVBQUUsZUFBZSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQ3JELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEJ1aWxkZXIuaW8sIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vQnVpbGRlcklPL3F3aWsvYmxvYi9tYWluL0xJQ0VOU0VcbiAqL1xuXG5pbXBvcnQgeyBmbGF0dGVuQXJyYXkgfSBmcm9tICcuLi8uLi91dGlsL2FycmF5JztcbmltcG9ydCB7IEVNUFRZX0FSUkFZIH0gZnJvbSAnLi4vLi4vdXRpbC9mbHl3ZWlnaHQnO1xuaW1wb3J0IHsgSlNYTm9kZUltcGwgfSBmcm9tICcuL2pzeC1ydW50aW1lJztcbmltcG9ydCB0eXBlIHsgUXdpa0pTWCB9IGZyb20gJy4vdHlwZXMvanN4LXF3aWsnO1xuaW1wb3J0IHR5cGUgeyBGdW5jdGlvbkNvbXBvbmVudCwgSlNYTm9kZSB9IGZyb20gJy4vdHlwZXMvanN4LW5vZGUnO1xuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGg8UFJPUFMgZXh0ZW5kcyB7fSA9IHt9PihcbiAgdHlwZTogc3RyaW5nIHwgRnVuY3Rpb25Db21wb25lbnQ8UFJPUFM+LFxuICBwcm9wczogUFJPUFMgfCBudWxsLFxuICAuLi5jaGlsZHJlbjogYW55W11cbik6IEpTWE5vZGUge1xuICAvLyBVc2luZyBsZWdhY3kgaCgpIGpzeCB0cmFuc2Zvcm0gYW5kIG1vcnBoaW5nIGl0XG4gIC8vIHNvIGl0IGNhbiB1c2UgdGhlIG1vZGVybiB2ZG9tIHN0cnVjdHVyZVxuICAvLyBodHRwczovL3JlYWN0anMub3JnL2Jsb2cvMjAyMC8wOS8yMi9pbnRyb2R1Y2luZy10aGUtbmV3LWpzeC10cmFuc2Zvcm0uaHRtbFxuICAvLyBodHRwczovL3d3dy50eXBlc2NyaXB0bGFuZy5vcmcvdHNjb25maWcjanN4SW1wb3J0U291cmNlXG5cbiAgY29uc3Qgbm9ybWFsaXplZFByb3BzOiBhbnkgPSB7XG4gICAgY2hpbGRyZW46IGFyZ3VtZW50cy5sZW5ndGggPiAyID8gZmxhdHRlbkFycmF5KGNoaWxkcmVuKSA6IEVNUFRZX0FSUkFZLFxuICB9O1xuXG4gIGxldCBrZXk6IGFueTtcbiAgbGV0IGk6IGFueTtcblxuICBmb3IgKGkgaW4gcHJvcHMpIHtcbiAgICBpZiAoaSA9PSAna2V5Jykga2V5ID0gKHByb3BzIGFzIFJlY29yZDxzdHJpbmcsIGFueT4pW2ldO1xuICAgIGVsc2Ugbm9ybWFsaXplZFByb3BzW2ldID0gKHByb3BzIGFzIFJlY29yZDxzdHJpbmcsIGFueT4pW2ldO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBKU1hOb2RlSW1wbCh0eXBlLCBub3JtYWxpemVkUHJvcHMsIGtleSk7XG59XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgZGVjbGFyZSBuYW1lc3BhY2UgaCB7XG4gIGV4cG9ydCBmdW5jdGlvbiBoKHR5cGU6IGFueSk6IEpTWE5vZGU8YW55PjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGgodHlwZTogTm9kZSwgZGF0YTogYW55KTogSlNYTm9kZTxhbnk+O1xuICBleHBvcnQgZnVuY3Rpb24gaCh0eXBlOiBhbnksIHRleHQ6IHN0cmluZyk6IEpTWE5vZGU8YW55PjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGgodHlwZTogYW55LCBjaGlsZHJlbjogQXJyYXk8YW55Pik6IEpTWE5vZGU8YW55PjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGgodHlwZTogYW55LCBkYXRhOiBhbnksIHRleHQ6IHN0cmluZyk6IEpTWE5vZGU8YW55PjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGgoXG4gICAgdHlwZTogYW55LFxuICAgIGRhdGE6IGFueSxcbiAgICBjaGlsZHJlbjogQXJyYXk8SlNYTm9kZTxhbnk+IHwgdW5kZWZpbmVkIHwgbnVsbD5cbiAgKTogSlNYTm9kZTxhbnk+O1xuICBleHBvcnQgZnVuY3Rpb24gaChzZWw6IGFueSwgZGF0YTogYW55IHwgbnVsbCwgY2hpbGRyZW46IEpTWE5vZGU8YW55Pik6IEpTWE5vZGU8YW55PjtcblxuICBleHBvcnQgbmFtZXNwYWNlIEpTWCB7XG4gICAgZXhwb3J0IGludGVyZmFjZSBFbGVtZW50IGV4dGVuZHMgUXdpa0pTWC5FbGVtZW50IHt9XG4gICAgZXhwb3J0IGludGVyZmFjZSBJbnRyaW5zaWNBdHRyaWJ1dGVzIGV4dGVuZHMgUXdpa0pTWC5JbnRyaW5zaWNBdHRyaWJ1dGVzIHt9XG4gICAgZXhwb3J0IGludGVyZmFjZSBJbnRyaW5zaWNFbGVtZW50cyBleHRlbmRzIFF3aWtKU1guSW50cmluc2ljRWxlbWVudHMge31cbiAgICBleHBvcnQgaW50ZXJmYWNlIEVsZW1lbnRDaGlsZHJlbkF0dHJpYnV0ZSB7XG4gICAgICBjaGlsZHJlbj86IGFueTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==","import { assertDefined } from '../assert/assert';\nimport { OnRenderSelector } from '../util/markers';\nlet _context;\nexport function tryGetInvokeContext() {\n    return _context;\n}\nexport function getInvokeContext() {\n    if (!_context) {\n        const context = typeof document !== 'undefined' && document && document.__q_context__;\n        if (!context) {\n            // TODO(misko): centralize\n            throw new Error(\"Q-ERROR: invoking 'use*()' method outside of invocation context.\");\n        }\n        if (Array.isArray(context)) {\n            const element = context[0];\n            const hostElement = element.closest(OnRenderSelector);\n            assertDefined(element);\n            return (document.__q_context__ = newInvokeContext(hostElement, element, context[1], context[2]));\n        }\n        return context;\n    }\n    return _context;\n}\nexport function useInvoke(context, fn, ...args) {\n    const previousContext = _context;\n    let returnValue;\n    try {\n        _context = context;\n        returnValue = fn.apply(null, args);\n    }\n    finally {\n        const currentCtx = _context;\n        _context = previousContext;\n        if (currentCtx.waitOn && currentCtx.waitOn.length > 0) {\n            // eslint-disable-next-line no-unsafe-finally\n            return Promise.all(currentCtx.waitOn).then(() => returnValue);\n        }\n    }\n    return returnValue;\n}\nexport function newInvokeContext(hostElement, element, event, url) {\n    return {\n        hostElement,\n        element,\n        event: event,\n        url: url || null,\n        qrl: undefined,\n        subscriptions: event === 'qRender',\n    };\n}\n/**\n * @private\n */\nexport function useWaitOn(promise) {\n    const ctx = getInvokeContext();\n    (ctx.waitOn || (ctx.waitOn = [])).push(promise);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWNvcmUuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3VzZS91c2UtY29yZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFHakQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFnQm5ELElBQUksUUFBbUMsQ0FBQztBQUV4QyxNQUFNLFVBQVUsbUJBQW1CO0lBQ2pDLE9BQU8sUUFBUSxDQUFDO0FBQ2xCLENBQUM7QUFFRCxNQUFNLFVBQVUsZ0JBQWdCO0lBQzlCLElBQUksQ0FBQyxRQUFRLEVBQUU7UUFDYixNQUFNLE9BQU8sR0FBRyxPQUFPLFFBQVEsS0FBSyxXQUFXLElBQUksUUFBUSxJQUFJLFFBQVEsQ0FBQyxhQUFhLENBQUM7UUFDdEYsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNaLDBCQUEwQjtZQUMxQixNQUFNLElBQUksS0FBSyxDQUFDLGtFQUFrRSxDQUFDLENBQUM7U0FDckY7UUFDRCxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDMUIsTUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzNCLE1BQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUUsQ0FBQztZQUN2RCxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDdkIsT0FBTyxDQUFDLFFBQVEsQ0FBQyxhQUFhLEdBQUcsZ0JBQWdCLENBQy9DLFdBQVcsRUFDWCxPQUFPLEVBQ1AsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUNWLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FDWCxDQUFDLENBQUM7U0FDSjtRQUNELE9BQU8sT0FBd0IsQ0FBQztLQUNqQztJQUNELE9BQU8sUUFBUSxDQUFDO0FBQ2xCLENBQUM7QUFFRCxNQUFNLFVBQVUsU0FBUyxDQUN2QixPQUFzQixFQUN0QixFQUEwQixFQUMxQixHQUFHLElBQVU7SUFFYixNQUFNLGVBQWUsR0FBRyxRQUFRLENBQUM7SUFDakMsSUFBSSxXQUFnQixDQUFDO0lBQ3JCLElBQUk7UUFDRixRQUFRLEdBQUcsT0FBTyxDQUFDO1FBQ25CLFdBQVcsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztLQUNwQztZQUFTO1FBQ1IsTUFBTSxVQUFVLEdBQUcsUUFBUyxDQUFDO1FBQzdCLFFBQVEsR0FBRyxlQUFlLENBQUM7UUFDM0IsSUFBSSxVQUFVLENBQUMsTUFBTSxJQUFJLFVBQVUsQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNyRCw2Q0FBNkM7WUFDN0MsT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLENBQUM7U0FDL0Q7S0FDRjtJQUNELE9BQU8sV0FBVyxDQUFDO0FBQ3JCLENBQUM7QUFDRCxNQUFNLFVBQVUsZ0JBQWdCLENBQzlCLFdBQW9CLEVBQ3BCLE9BQWdCLEVBQ2hCLEtBQVcsRUFDWCxHQUFTO0lBRVQsT0FBTztRQUNMLFdBQVc7UUFDWCxPQUFPO1FBQ1AsS0FBSyxFQUFFLEtBQUs7UUFDWixHQUFHLEVBQUUsR0FBRyxJQUFJLElBQUk7UUFDaEIsR0FBRyxFQUFFLFNBQVM7UUFDZCxhQUFhLEVBQUUsS0FBSyxLQUFLLFNBQVM7S0FDbkMsQ0FBQztBQUNKLENBQUM7QUFFRDs7R0FFRztBQUNILE1BQU0sVUFBVSxTQUFTLENBQUMsT0FBcUI7SUFDN0MsTUFBTSxHQUFHLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQztJQUMvQixDQUFDLEdBQUcsQ0FBQyxNQUFNLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ2xELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFByb3BzLCBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJy4uL2luZGV4JztcbmltcG9ydCB7IGFzc2VydERlZmluZWQgfSBmcm9tICcuLi9hc3NlcnQvYXNzZXJ0JztcbmltcG9ydCB0eXBlIHsgUXdpa0RvY3VtZW50IH0gZnJvbSAnLi4vZG9jdW1lbnQnO1xuaW1wb3J0IHR5cGUgeyBRUkxJbnRlcm5hbCB9IGZyb20gJy4uL2ltcG9ydC9xcmwtY2xhc3MnO1xuaW1wb3J0IHsgT25SZW5kZXJTZWxlY3RvciB9IGZyb20gJy4uL3V0aWwvbWFya2Vycyc7XG5cbmRlY2xhcmUgY29uc3QgZG9jdW1lbnQ6IFF3aWtEb2N1bWVudDtcblxuaW50ZXJmYWNlIEludm9rZUNvbnRleHQge1xuICBob3N0RWxlbWVudDogRWxlbWVudDtcbiAgZWxlbWVudDogRWxlbWVudDtcbiAgZXZlbnQ6IGFueTtcbiAgdXJsOiBVUkwgfCBudWxsO1xuICBxcmw/OiBRUkxJbnRlcm5hbDtcbiAgc3Vic2NyaXB0aW9uczogYm9vbGVhbjtcbiAgd2FpdE9uPzogUHJvbWlzZTxhbnk+W107XG4gIHByb3BzPzogUHJvcHM7XG4gIHFybEd1YXJkPzogKHFybDogUVJMSW50ZXJuYWwpID0+IGJvb2xlYW47XG59XG5cbmxldCBfY29udGV4dDogSW52b2tlQ29udGV4dCB8IHVuZGVmaW5lZDtcblxuZXhwb3J0IGZ1bmN0aW9uIHRyeUdldEludm9rZUNvbnRleHQoKTogSW52b2tlQ29udGV4dCB8IHVuZGVmaW5lZCB7XG4gIHJldHVybiBfY29udGV4dDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEludm9rZUNvbnRleHQoKTogSW52b2tlQ29udGV4dCB7XG4gIGlmICghX2NvbnRleHQpIHtcbiAgICBjb25zdCBjb250ZXh0ID0gdHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5fX3FfY29udGV4dF9fO1xuICAgIGlmICghY29udGV4dCkge1xuICAgICAgLy8gVE9ETyhtaXNrbyk6IGNlbnRyYWxpemVcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlEtRVJST1I6IGludm9raW5nICd1c2UqKCknIG1ldGhvZCBvdXRzaWRlIG9mIGludm9jYXRpb24gY29udGV4dC5cIik7XG4gICAgfVxuICAgIGlmIChBcnJheS5pc0FycmF5KGNvbnRleHQpKSB7XG4gICAgICBjb25zdCBlbGVtZW50ID0gY29udGV4dFswXTtcbiAgICAgIGNvbnN0IGhvc3RFbGVtZW50ID0gZWxlbWVudC5jbG9zZXN0KE9uUmVuZGVyU2VsZWN0b3IpITtcbiAgICAgIGFzc2VydERlZmluZWQoZWxlbWVudCk7XG4gICAgICByZXR1cm4gKGRvY3VtZW50Ll9fcV9jb250ZXh0X18gPSBuZXdJbnZva2VDb250ZXh0KFxuICAgICAgICBob3N0RWxlbWVudCxcbiAgICAgICAgZWxlbWVudCxcbiAgICAgICAgY29udGV4dFsxXSxcbiAgICAgICAgY29udGV4dFsyXVxuICAgICAgKSk7XG4gICAgfVxuICAgIHJldHVybiBjb250ZXh0IGFzIEludm9rZUNvbnRleHQ7XG4gIH1cbiAgcmV0dXJuIF9jb250ZXh0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlSW52b2tlPEFSR1MgZXh0ZW5kcyBhbnlbXSA9IGFueVtdLCBSRVQgPSBhbnk+KFxuICBjb250ZXh0OiBJbnZva2VDb250ZXh0LFxuICBmbjogKC4uLmFyZ3M6IEFSR1MpID0+IFJFVCxcbiAgLi4uYXJnczogQVJHU1xuKTogVmFsdWVPclByb21pc2U8UkVUPiB7XG4gIGNvbnN0IHByZXZpb3VzQ29udGV4dCA9IF9jb250ZXh0O1xuICBsZXQgcmV0dXJuVmFsdWU6IFJFVDtcbiAgdHJ5IHtcbiAgICBfY29udGV4dCA9IGNvbnRleHQ7XG4gICAgcmV0dXJuVmFsdWUgPSBmbi5hcHBseShudWxsLCBhcmdzKTtcbiAgfSBmaW5hbGx5IHtcbiAgICBjb25zdCBjdXJyZW50Q3R4ID0gX2NvbnRleHQhO1xuICAgIF9jb250ZXh0ID0gcHJldmlvdXNDb250ZXh0O1xuICAgIGlmIChjdXJyZW50Q3R4LndhaXRPbiAmJiBjdXJyZW50Q3R4LndhaXRPbi5sZW5ndGggPiAwKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5zYWZlLWZpbmFsbHlcbiAgICAgIHJldHVybiBQcm9taXNlLmFsbChjdXJyZW50Q3R4LndhaXRPbikudGhlbigoKSA9PiByZXR1cm5WYWx1ZSk7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXR1cm5WYWx1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBuZXdJbnZva2VDb250ZXh0KFxuICBob3N0RWxlbWVudDogRWxlbWVudCxcbiAgZWxlbWVudDogRWxlbWVudCxcbiAgZXZlbnQ/OiBhbnksXG4gIHVybD86IFVSTFxuKTogSW52b2tlQ29udGV4dCB7XG4gIHJldHVybiB7XG4gICAgaG9zdEVsZW1lbnQsXG4gICAgZWxlbWVudCxcbiAgICBldmVudDogZXZlbnQsXG4gICAgdXJsOiB1cmwgfHwgbnVsbCxcbiAgICBxcmw6IHVuZGVmaW5lZCxcbiAgICBzdWJzY3JpcHRpb25zOiBldmVudCA9PT0gJ3FSZW5kZXInLFxuICB9O1xufVxuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VXYWl0T24ocHJvbWlzZTogUHJvbWlzZTxhbnk+KTogdm9pZCB7XG4gIGNvbnN0IGN0eCA9IGdldEludm9rZUNvbnRleHQoKTtcbiAgKGN0eC53YWl0T24gfHwgKGN0eC53YWl0T24gPSBbXSkpLnB1c2gocHJvbWlzZSk7XG59XG4iXX0=","import { assertDefined } from '../assert/assert';\nimport { getInvokeContext } from './use-core';\n// <docs markdown=\"https://hackmd.io/lQ8v7fyhR-WD3b-2aRUpyw#useHostElement\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2FlQ8v7fyhR-WD3b-2aRUpyw%3Fboth#useHostElement instead)\n/**\n * Retrieves the Host Element of the current component.\n *\n * NOTE: `useHostElement` method can only be used in the synchronous portion of the callback\n * (before any `await` statements.)\n *\n * @public\n */\n// </docs>\nexport function useHostElement() {\n    const element = getInvokeContext().hostElement;\n    assertDefined(element);\n    return element;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWhvc3QtZWxlbWVudC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3VzZS91c2UtaG9zdC1lbGVtZW50LnB1YmxpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDakQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRTlDLDRFQUE0RTtBQUM1RSx5Q0FBeUM7QUFDekMsd0dBQXdHO0FBQ3hHOzs7Ozs7O0dBT0c7QUFDSCxVQUFVO0FBQ1YsTUFBTSxVQUFVLGNBQWM7SUFDNUIsTUFBTSxPQUFPLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQyxXQUFZLENBQUM7SUFDaEQsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3ZCLE9BQU8sT0FBTyxDQUFDO0FBQ2pCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnREZWZpbmVkIH0gZnJvbSAnLi4vYXNzZXJ0L2Fzc2VydCc7XG5pbXBvcnQgeyBnZXRJbnZva2VDb250ZXh0IH0gZnJvbSAnLi91c2UtY29yZSc7XG5cbi8vIDxkb2NzIG1hcmtkb3duPVwiaHR0cHM6Ly9oYWNrbWQuaW8vbFE4djdmeWhSLVdEM2ItMmFSVXB5dyN1c2VIb3N0RWxlbWVudFwiPlxuLy8gISFETyBOT1QgRURJVCBUSElTIENPTU1FTlQgRElSRUNUTFkhISFcbi8vIChlZGl0IGh0dHBzOi8vaGFja21kLmlvL0Bxd2lrLWRvY3MvQmt4cFN6ODBZLyUyRmxROHY3ZnloUi1XRDNiLTJhUlVweXclM0Zib3RoI3VzZUhvc3RFbGVtZW50IGluc3RlYWQpXG4vKipcbiAqIFJldHJpZXZlcyB0aGUgSG9zdCBFbGVtZW50IG9mIHRoZSBjdXJyZW50IGNvbXBvbmVudC5cbiAqXG4gKiBOT1RFOiBgdXNlSG9zdEVsZW1lbnRgIG1ldGhvZCBjYW4gb25seSBiZSB1c2VkIGluIHRoZSBzeW5jaHJvbm91cyBwb3J0aW9uIG9mIHRoZSBjYWxsYmFja1xuICogKGJlZm9yZSBhbnkgYGF3YWl0YCBzdGF0ZW1lbnRzLilcbiAqXG4gKiBAcHVibGljXG4gKi9cbi8vIDwvZG9jcz5cbmV4cG9ydCBmdW5jdGlvbiB1c2VIb3N0RWxlbWVudCgpOiBFbGVtZW50IHtcbiAgY29uc3QgZWxlbWVudCA9IGdldEludm9rZUNvbnRleHQoKS5ob3N0RWxlbWVudCE7XG4gIGFzc2VydERlZmluZWQoZWxlbWVudCk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuIl19","export function hashCode(text, hash = 0) {\n    if (text.length === 0)\n        return hash;\n    for (let i = 0; i < text.length; i++) {\n        const chr = text.charCodeAt(i);\n        hash = (hash << 5) - hash + chr;\n        hash |= 0; // Convert to 32bit integer\n    }\n    return Number(Math.abs(hash)).toString(36);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFzaF9jb2RlLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS91dGlsL2hhc2hfY29kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLFVBQVUsUUFBUSxDQUFDLElBQVksRUFBRSxPQUFlLENBQUM7SUFDckQsSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLENBQUM7UUFBRSxPQUFPLElBQUksQ0FBQztJQUNuQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNwQyxNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQy9CLElBQUksR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLEdBQUcsR0FBRyxDQUFDO1FBQ2hDLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQywyQkFBMkI7S0FDdkM7SUFDRCxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQzdDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaGFzaENvZGUodGV4dDogc3RyaW5nLCBoYXNoOiBudW1iZXIgPSAwKSB7XG4gIGlmICh0ZXh0Lmxlbmd0aCA9PT0gMCkgcmV0dXJuIGhhc2g7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdGV4dC5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGNociA9IHRleHQuY2hhckNvZGVBdChpKTtcbiAgICBoYXNoID0gKGhhc2ggPDwgNSkgLSBoYXNoICsgY2hyO1xuICAgIGhhc2ggfD0gMDsgLy8gQ29udmVydCB0byAzMmJpdCBpbnRlZ2VyXG4gIH1cbiAgcmV0dXJuIE51bWJlcihNYXRoLmFicyhoYXNoKSkudG9TdHJpbmcoMzYpO1xufVxuIl19","import { ComponentStylesPrefixContent, ComponentStylesPrefixHost } from '../util/markers';\nimport { hashCode } from '../util/hash_code';\nexport function styleKey(qStyles) {\n    return qStyles && String(hashCode(qStyles.symbol));\n}\nexport function styleHost(styleId) {\n    return styleId && ComponentStylesPrefixHost + styleId;\n}\nexport function styleContent(styleId) {\n    return styleId && ComponentStylesPrefixContent + styleId;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXJsLXN0eWxlcy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvY29tcG9uZW50L3FybC1zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLDRCQUE0QixFQUFFLHlCQUF5QixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDMUYsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBTzdDLE1BQU0sVUFBVSxRQUFRLENBQUMsT0FBbUM7SUFDMUQsT0FBTyxPQUFPLElBQUksTUFBTSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztBQUNyRCxDQUFDO0FBT0QsTUFBTSxVQUFVLFNBQVMsQ0FBQyxPQUEyQjtJQUNuRCxPQUFPLE9BQU8sSUFBSSx5QkFBeUIsR0FBRyxPQUFPLENBQUM7QUFDeEQsQ0FBQztBQU9ELE1BQU0sVUFBVSxZQUFZLENBQUMsT0FBMkI7SUFDdEQsT0FBTyxPQUFPLElBQUksNEJBQTRCLEdBQUcsT0FBTyxDQUFDO0FBQzNELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFFSTEludGVybmFsIH0gZnJvbSAnLi4vaW1wb3J0L3FybC1jbGFzcyc7XG5pbXBvcnQgeyBDb21wb25lbnRTdHlsZXNQcmVmaXhDb250ZW50LCBDb21wb25lbnRTdHlsZXNQcmVmaXhIb3N0IH0gZnJvbSAnLi4vdXRpbC9tYXJrZXJzJztcbmltcG9ydCB7IGhhc2hDb2RlIH0gZnJvbSAnLi4vdXRpbC9oYXNoX2NvZGUnO1xuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlS2V5KHFTdHlsZXM6IFFSTEludGVybmFsPHN0cmluZz4pOiBzdHJpbmc7XG5leHBvcnQgZnVuY3Rpb24gc3R5bGVLZXkocVN0eWxlczogUVJMSW50ZXJuYWw8c3RyaW5nPiB8IG51bGwpOiBzdHJpbmcgfCBudWxsO1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlS2V5KHFTdHlsZXM6IFFSTEludGVybmFsPHN0cmluZz4gfCBudWxsKTogc3RyaW5nIHwgbnVsbCB7XG4gIHJldHVybiBxU3R5bGVzICYmIFN0cmluZyhoYXNoQ29kZShxU3R5bGVzLnN5bWJvbCkpO1xufVxuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlSG9zdChzdHlsZUlkOiBzdHJpbmcpOiBzdHJpbmc7XG5leHBvcnQgZnVuY3Rpb24gc3R5bGVIb3N0KHN0eWxlSWQ6IHN0cmluZyB8IHVuZGVmaW5lZCk6IHN0cmluZyB8IHVuZGVmaW5lZDtcbmV4cG9ydCBmdW5jdGlvbiBzdHlsZUhvc3Qoc3R5bGVJZDogc3RyaW5nIHwgdW5kZWZpbmVkKTogc3RyaW5nIHwgdW5kZWZpbmVkIHtcbiAgcmV0dXJuIHN0eWxlSWQgJiYgQ29tcG9uZW50U3R5bGVzUHJlZml4SG9zdCArIHN0eWxlSWQ7XG59XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgZnVuY3Rpb24gc3R5bGVDb250ZW50KHN0eWxlSWQ6IHN0cmluZyk6IHN0cmluZztcbmV4cG9ydCBmdW5jdGlvbiBzdHlsZUNvbnRlbnQoc3R5bGVJZDogc3RyaW5nIHwgdW5kZWZpbmVkKTogc3RyaW5nIHwgdW5kZWZpbmVkO1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlQ29udGVudChzdHlsZUlkOiBzdHJpbmcgfCB1bmRlZmluZWQpOiBzdHJpbmcgfCB1bmRlZmluZWQge1xuICByZXR1cm4gc3R5bGVJZCAmJiBDb21wb25lbnRTdHlsZXNQcmVmaXhDb250ZW50ICsgc3R5bGVJZDtcbn1cbiJdfQ==","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { isHtmlElement } from '../util/types';\nexport function stringifyDebug(value) {\n    if (value == null)\n        return String(value);\n    if (typeof value === 'function')\n        return value.name;\n    if (isHtmlElement(value))\n        return stringifyElement(value);\n    if (value instanceof URL)\n        return String(value);\n    if (typeof value === 'object')\n        return JSON.stringify(value, function (key, value) {\n            if (isHtmlElement(value))\n                return stringifyElement(value);\n            return value;\n        });\n    return String(value);\n}\nexport function stringifyElement(element) {\n    let html = '<' + element.localName;\n    const attributes = element.attributes;\n    const names = [];\n    for (let i = 0; i < attributes.length; i++) {\n        names.push(attributes[i].name);\n    }\n    names.sort();\n    for (let i = 0; i < names.length; i++) {\n        const name = names[i];\n        let value = element.getAttribute(name);\n        if (value === null || value === void 0 ? void 0 : value.startsWith('file:/')) {\n            value = value.replace(/(file:\\/\\/).*(\\/.*)$/, (all, protocol, file) => protocol + '...' + file);\n        }\n        html +=\n            ' ' + name + (value == null || value == '' ? '' : \"='\" + value.replace(\"'\", '&apos;') + \"'\");\n    }\n    return html + '>';\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaW5naWZ5LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9lcnJvci9zdHJpbmdpZnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUgsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU5QyxNQUFNLFVBQVUsY0FBYyxDQUFDLEtBQVU7SUFDdkMsSUFBSSxLQUFLLElBQUksSUFBSTtRQUFFLE9BQU8sTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLElBQUksT0FBTyxLQUFLLEtBQUssVUFBVTtRQUFFLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQztJQUNuRCxJQUFJLGFBQWEsQ0FBQyxLQUFLLENBQUM7UUFBRSxPQUFPLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3pELElBQUksS0FBSyxZQUFZLEdBQUc7UUFBRSxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMvQyxJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVE7UUFDM0IsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxVQUFxQixHQUFXLEVBQUUsS0FBVTtZQUN2RSxJQUFJLGFBQWEsQ0FBQyxLQUFLLENBQUM7Z0JBQUUsT0FBTyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN6RCxPQUFPLEtBQUssQ0FBQztRQUNmLENBQUMsQ0FBQyxDQUFDO0lBQ0wsT0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDdkIsQ0FBQztBQUVELE1BQU0sVUFBVSxnQkFBZ0IsQ0FBQyxPQUFnQjtJQUMvQyxJQUFJLElBQUksR0FBRyxHQUFHLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQztJQUNuQyxNQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDO0lBQ3RDLE1BQU0sS0FBSyxHQUFHLEVBQUUsQ0FBQztJQUNqQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsVUFBVSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUMxQyxLQUFLLENBQUMsSUFBSSxDQUFFLFVBQVUsQ0FBQyxDQUFDLENBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUMxQztJQUNELEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNiLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ3JDLE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QixJQUFJLEtBQUssR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZDLElBQUksS0FBSyxhQUFMLEtBQUssdUJBQUwsS0FBSyxDQUFFLFVBQVUsQ0FBQyxRQUFRLENBQUMsRUFBRTtZQUMvQixLQUFLLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FDbkIsc0JBQXNCLEVBQ3RCLENBQUMsR0FBRyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLFFBQVEsR0FBRyxLQUFLLEdBQUcsSUFBSSxDQUNqRCxDQUFDO1NBQ0g7UUFDRCxJQUFJO1lBQ0YsR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEtBQUssSUFBSSxJQUFJLElBQUksS0FBSyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7S0FDaEc7SUFDRCxPQUFPLElBQUksR0FBRyxHQUFHLENBQUM7QUFDcEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBCdWlsZGVyLmlvLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL0J1aWxkZXJJTy9xd2lrL2Jsb2IvbWFpbi9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgaXNIdG1sRWxlbWVudCB9IGZyb20gJy4uL3V0aWwvdHlwZXMnO1xuXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5naWZ5RGVidWcodmFsdWU6IGFueSk6IHN0cmluZyB8IG51bGwge1xuICBpZiAodmFsdWUgPT0gbnVsbCkgcmV0dXJuIFN0cmluZyh2YWx1ZSk7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdmdW5jdGlvbicpIHJldHVybiB2YWx1ZS5uYW1lO1xuICBpZiAoaXNIdG1sRWxlbWVudCh2YWx1ZSkpIHJldHVybiBzdHJpbmdpZnlFbGVtZW50KHZhbHVlKTtcbiAgaWYgKHZhbHVlIGluc3RhbmNlb2YgVVJMKSByZXR1cm4gU3RyaW5nKHZhbHVlKTtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpXG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHZhbHVlLCBmdW5jdGlvbiAodGhpczogYW55LCBrZXk6IHN0cmluZywgdmFsdWU6IGFueSkge1xuICAgICAgaWYgKGlzSHRtbEVsZW1lbnQodmFsdWUpKSByZXR1cm4gc3RyaW5naWZ5RWxlbWVudCh2YWx1ZSk7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSk7XG4gIHJldHVybiBTdHJpbmcodmFsdWUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5naWZ5RWxlbWVudChlbGVtZW50OiBFbGVtZW50KTogc3RyaW5nIHtcbiAgbGV0IGh0bWwgPSAnPCcgKyBlbGVtZW50LmxvY2FsTmFtZTtcbiAgY29uc3QgYXR0cmlidXRlcyA9IGVsZW1lbnQuYXR0cmlidXRlcztcbiAgY29uc3QgbmFtZXMgPSBbXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBhdHRyaWJ1dGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgbmFtZXMucHVzaCgoYXR0cmlidXRlc1tpXSBhcyBBdHRyKS5uYW1lKTtcbiAgfVxuICBuYW1lcy5zb3J0KCk7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbmFtZXMubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBuYW1lID0gbmFtZXNbaV07XG4gICAgbGV0IHZhbHVlID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUobmFtZSk7XG4gICAgaWYgKHZhbHVlPy5zdGFydHNXaXRoKCdmaWxlOi8nKSkge1xuICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKFxuICAgICAgICAvKGZpbGU6XFwvXFwvKS4qKFxcLy4qKSQvLFxuICAgICAgICAoYWxsLCBwcm90b2NvbCwgZmlsZSkgPT4gcHJvdG9jb2wgKyAnLi4uJyArIGZpbGVcbiAgICAgICk7XG4gICAgfVxuICAgIGh0bWwgKz1cbiAgICAgICcgJyArIG5hbWUgKyAodmFsdWUgPT0gbnVsbCB8fCB2YWx1ZSA9PSAnJyA/ICcnIDogXCI9J1wiICsgdmFsdWUucmVwbGFjZShcIidcIiwgJyZhcG9zOycpICsgXCInXCIpO1xuICB9XG4gIHJldHVybiBodG1sICsgJz4nO1xufVxuIl19","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { stringifyDebug } from './stringify';\nimport { qDev } from '../util/qdev';\nexport var QError;\n(function (QError) {\n    // core 000-099\n    QError[QError[\"TODO\"] = 0] = \"TODO\";\n    QError[QError[\"Core_qConfigNotFound_path\"] = 1] = \"Core_qConfigNotFound_path\";\n    QError[QError[\"Core_unrecognizedStack_frame\"] = 2] = \"Core_unrecognizedStack_frame\";\n    QError[QError[\"Core_noAttribute_atr1_element\"] = 3] = \"Core_noAttribute_atr1_element\";\n    QError[QError[\"Core_noAttribute_atr1_attr2_element\"] = 4] = \"Core_noAttribute_atr1_attr2_element\";\n    QError[QError[\"Core_missingProperty_name_props\"] = 5] = \"Core_missingProperty_name_props\";\n    QError[QError[\"Core_missingExport_name_url_props\"] = 6] = \"Core_missingExport_name_url_props\";\n    // QRL 100-199\n    QError[QError[\"QRL_expectFunction_url_actual\"] = 100] = \"QRL_expectFunction_url_actual\";\n    // Injection 200-299\n    QError[QError[\"Injector_noHost_element\"] = 200] = \"Injector_noHost_element\";\n    QError[QError[\"Injector_expectedSpecificInjector_expected_actual\"] = 201] = \"Injector_expectedSpecificInjector_expected_actual\";\n    QError[QError[\"Injector_notElement_arg\"] = 202] = \"Injector_notElement_arg\";\n    QError[QError[\"Injector_wrongMethodThis_expected_actual\"] = 203] = \"Injector_wrongMethodThis_expected_actual\";\n    QError[QError[\"Injector_missingSerializedState_entityKey_element\"] = 204] = \"Injector_missingSerializedState_entityKey_element\";\n    QError[QError[\"Injector_notFound_element\"] = 206] = \"Injector_notFound_element\";\n    QError[QError[\"Injector_eventInjectorNotSerializable\"] = 207] = \"Injector_eventInjectorNotSerializable\";\n    // Entities 300-399\n    QError[QError[\"Entity_notValidKey_key\"] = 300] = \"Entity_notValidKey_key\";\n    QError[QError[\"Entity_keyAlreadyExists_key\"] = 301] = \"Entity_keyAlreadyExists_key\";\n    QError[QError[\"Entity_invalidAttribute_name\"] = 303] = \"Entity_invalidAttribute_name\";\n    QError[QError[\"Entity_missingExpandoOrState_attrName\"] = 304] = \"Entity_missingExpandoOrState_attrName\";\n    QError[QError[\"Entity_elementMissingEntityAttr_element_attr\"] = 305] = \"Entity_elementMissingEntityAttr_element_attr\";\n    QError[QError[\"Entity_noState_entity_props\"] = 306] = \"Entity_noState_entity_props\";\n    QError[QError[\"Entity_expected_obj\"] = 307] = \"Entity_expected_obj\";\n    QError[QError[\"Entity_overridesConstructor_entity\"] = 308] = \"Entity_overridesConstructor_entity\";\n    QError[QError[\"Entity_keyMissingParts_key_key\"] = 309] = \"Entity_keyMissingParts_key_key\";\n    QError[QError[\"Entity_no$type_entity\"] = 310] = \"Entity_no$type_entity\";\n    QError[QError[\"Entity_no$keyProps_entity\"] = 311] = \"Entity_no$keyProps_entity\";\n    QError[QError[\"Entity_no$qrl_entity\"] = 312] = \"Entity_no$qrl_entity\";\n    QError[QError[\"Entity_nameCollision_name_currentQrl_expectedQrl\"] = 313] = \"Entity_nameCollision_name_currentQrl_expectedQrl\";\n    QError[QError[\"Entity_keyTooManyParts_entity_parts_key\"] = 314] = \"Entity_keyTooManyParts_entity_parts_key\";\n    QError[QError[\"Entity_keyNameMismatch_key_name_entity_name\"] = 315] = \"Entity_keyNameMismatch_key_name_entity_name\";\n    QError[QError[\"Entity_stateMissingKey_state\"] = 316] = \"Entity_stateMissingKey_state\";\n    // Component 400-499\n    QError[QError[\"Component_bindNeedsKey\"] = 400] = \"Component_bindNeedsKey\";\n    QError[QError[\"Component_bindNeedsValue\"] = 401] = \"Component_bindNeedsValue\";\n    QError[QError[\"Component_needsState\"] = 402] = \"Component_needsState\";\n    QError[QError[\"Component_needsInjectionContext_constructor\"] = 403] = \"Component_needsInjectionContext_constructor\";\n    QError[QError[\"Component_noProperty_propName_props_host\"] = 404] = \"Component_noProperty_propName_props_host\";\n    QError[QError[\"Component_notFound_component\"] = 405] = \"Component_notFound_component\";\n    QError[QError[\"Component_doesNotMatch_component_actual\"] = 406] = \"Component_doesNotMatch_component_actual\";\n    QError[QError[\"Component_noState_component_props\"] = 408] = \"Component_noState_component_props\";\n    // Provider 500-599\n    QError[QError[\"Provider_unrecognizedFormat_value\"] = 500] = \"Provider_unrecognizedFormat_value\";\n    // Render 600-699\n    QError[QError[\"Render_unexpectedJSXNodeType_type\"] = 600] = \"Render_unexpectedJSXNodeType_type\";\n    QError[QError[\"Render_unsupportedFormat_obj_attr\"] = 601] = \"Render_unsupportedFormat_obj_attr\";\n    QError[QError[\"Render_expectingEntity_entity\"] = 602] = \"Render_expectingEntity_entity\";\n    QError[QError[\"Render_expectingEntityArray_obj\"] = 603] = \"Render_expectingEntityArray_obj\";\n    QError[QError[\"Render_expectingEntityOrComponent_obj\"] = 604] = \"Render_expectingEntityOrComponent_obj\";\n    QError[QError[\"Render_stateMachineStuck\"] = 699] = \"Render_stateMachineStuck\";\n    // Event\n    QError[QError[\"Event_emitEventRequiresName_url\"] = 700] = \"Event_emitEventRequiresName_url\";\n    QError[QError[\"Event_emitEventCouldNotFindListener_event_element\"] = 701] = \"Event_emitEventCouldNotFindListener_event_element\";\n})(QError || (QError = {}));\nexport function qError(code, ...args) {\n    if (qDev) {\n        const text = codeToText(code);\n        const parts = text.split('{}');\n        const error = parts\n            .map((value, index) => {\n            return value + (index === parts.length - 1 ? '' : stringifyDebug(args[index]));\n        })\n            .join('');\n        debugger; // eslint-disable-line no-debugger\n        return new Error(error);\n    }\n    else {\n        return new Error(`QError ` + code);\n    }\n}\nfunction codeToText(code) {\n    const area = {\n        0: 'ERROR',\n        1: 'QRL-ERROR',\n        2: 'INJECTOR-ERROR',\n        3: 'SERVICE-ERROR',\n        4: 'COMPONENT-ERROR',\n        5: 'PROVIDER-ERROR',\n        6: 'RENDER-ERROR',\n        7: 'EVENT-ERROR',\n    }[Math.floor(code / 100)];\n    const text = {\n        [QError.TODO]: '{}',\n        [QError.Core_qConfigNotFound_path]: \"QConfig not found in path '{}'.\",\n        [QError.Core_unrecognizedStack_frame]: \"Unrecognized stack format '{}'\",\n        [QError.Core_noAttribute_atr1_element]: \"Could not find entity state '{}' at '{}' or any of it's parents.\",\n        [QError.Core_noAttribute_atr1_attr2_element]: \"Could not find entity state '{}' ( or entity provider '{}') at '{}' or any of it's parents.\",\n        [QError.Core_missingProperty_name_props]: \"Missing property '{}' in props '{}'.\",\n        [QError.Core_missingExport_name_url_props]: \"Missing export '{}' from '{}'. Exported symbols are: {}\",\n        //////////////\n        [QError.QRL_expectFunction_url_actual]: \"QRL '${}' should point to function, was '{}'.\",\n        //////////////\n        [QError.Injector_noHost_element]: \"Can't find host element above '{}'.\",\n        [QError.Injector_expectedSpecificInjector_expected_actual]: \"Provider is expecting '{}' but got '{}'.\",\n        [QError.Injector_notElement_arg]: \"Expected 'Element' was '{}'.\",\n        [QError.Injector_wrongMethodThis_expected_actual]: \"Expected injection 'this' to be of type '{}', but was of type '{}'.\",\n        [QError.Injector_missingSerializedState_entityKey_element]: \"Entity key '{}' is found on '{}' but does not contain state. Was 'serializeState()' not run during dehydration?\",\n        [QError.Injector_notFound_element]: \"No injector can be found starting at '{}'.\",\n        [QError.Injector_eventInjectorNotSerializable]: 'EventInjector does not support serialization.',\n        //////////////\n        [QError.Entity_notValidKey_key]: \"Data key '{}' is not a valid key.\\n\" +\n            '  - Data key can only contain characters (preferably lowercase) or number\\n' +\n            '  - Data key is prefixed with entity name\\n' +\n            \"  - Data key is made up from parts that are separated with ':'.\",\n        [QError.Entity_keyAlreadyExists_key]: \"A entity with key '{}' already exists.\",\n        [QError.Entity_invalidAttribute_name]: \"'{}' is not a valid attribute. \" +\n            \"Attributes can only contain 'a-z' (lowercase), '0-9', '-' and '_'.\",\n        [QError.Entity_missingExpandoOrState_attrName]: \"Found '{}' but expando did not have entity and attribute did not have state.\",\n        [QError.Entity_elementMissingEntityAttr_element_attr]: \"Element '{}' is missing entity attribute definition '{}'.\",\n        [QError.Entity_noState_entity_props]: \"Unable to create state for entity '{}' with props '{}' because no state found and '$newState()' method was not defined on entity.\",\n        [QError.Entity_expected_obj]: \"'{}' is not an instance of 'Entity'.\",\n        [QError.Entity_overridesConstructor_entity]: \"'{}' overrides 'constructor' property preventing 'EntityType' retrieval.\",\n        [QError.Entity_no$keyProps_entity]: \"Entity '{}' does not define '$keyProps'.\",\n        [QError.Entity_no$type_entity]: \"Entity '{}' must have static '$type' property defining the name of the entity.\",\n        [QError.Entity_no$qrl_entity]: \"Entity '{}' must have static '$qrl' property defining the import location of the entity.\",\n        [QError.Entity_nameCollision_name_currentQrl_expectedQrl]: \"Name collision. Already have entity named '{}' with QRL '{}' but expected QRL '{}'.\",\n        [QError.Entity_keyMissingParts_key_key]: \"Entity key '{}' is missing values. Expecting '{}:someValue'.\",\n        [QError.Entity_keyTooManyParts_entity_parts_key]: \"Entity '{}' defines '$keyProps' as  '{}'. Actual key '{}' has more parts than entity defines.\",\n        [QError.Entity_keyNameMismatch_key_name_entity_name]: \"Key '{}' belongs to entity named '{}', but expected entity '{}' with name '{}'.\",\n        [QError.Entity_stateMissingKey_state]: \"Entity state is missing '$key'. Are you sure you passed in state? Got '{}'.\",\n        //////////////\n        [QError.Component_bindNeedsKey]: \"'bind:' must have an key. (Example: 'bind:key=\\\"propertyName\\\"').\",\n        [QError.Component_bindNeedsValue]: \"'bind:id' must have a property name. (Example: 'bind:key=\\\"propertyName\\\"').\",\n        [QError.Component_needsState]: \"Can't find state on host element.\",\n        [QError.Component_needsInjectionContext_constructor]: \"Components must be instantiated inside an injection context. Use '{}.new(...)' for creation.\",\n        [QError.Component_noProperty_propName_props_host]: \"Property '{}' not found in '{}' on component '{}'.\",\n        [QError.Component_notFound_component]: \"Unable to find '{}' component.\",\n        [QError.Component_doesNotMatch_component_actual]: \"Requesting component type '{}' does not match existing component instance '{}'.\",\n        [QError.Component_noState_component_props]: \"Unable to create state for component '{}' with props '{}' because no state found and '$newState()' method was not defined on component.\",\n        //////////////\n        [QError.Provider_unrecognizedFormat_value]: \"Unrecognized expression format '{}'.\",\n        //////////////\n        [QError.Render_unexpectedJSXNodeType_type]: 'Unexpected JSXNode<{}> type.',\n        [QError.Render_unsupportedFormat_obj_attr]: \"Value '{}' can't be written into '{}' attribute.\",\n        [QError.Render_expectingEntity_entity]: \"Expecting entity object, got '{}'.\",\n        [QError.Render_expectingEntityArray_obj]: \"Expecting array of entities, got '{}'.\",\n        [QError.Render_expectingEntityOrComponent_obj]: \"Expecting Entity or Component got '{}'.\",\n        [QError.Render_stateMachineStuck]: 'Render state machine did not advance.',\n        //////////////\n        [QError.Event_emitEventRequiresName_url]: \"Missing '$type' attribute in the '{}' url.\",\n        [QError.Event_emitEventCouldNotFindListener_event_element]: \"Re-emitting event '{}' but no listener found at '{}' or any of its parents.\",\n    }[code];\n    let textCode = '000' + code;\n    textCode = textCode.substr(textCode.length - 3);\n    return `${area}(Q-${textCode}): ${text}`;\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * Remove item from array (Same as `Array.splice()` but faster.)\n *\n * `Array.splice()` is not as fast because it has to allocate an array for the elements which were\n * removed. This causes memory pressure and slows down code when most of the time we don't\n * care about the deleted items array.\n *\n * https://jsperf.com/fast-array-splice (About 20x faster)\n *\n * @param array Array to splice\n * @param index Index of element in array to remove.\n * @param count Number of items to remove.\n */\nexport function arraySplice(array, index, count) {\n    const length = array.length - count;\n    while (index < length) {\n        array[index] = array[index + count];\n        index++;\n    }\n    while (count--) {\n        array.pop(); // shrink the array\n    }\n}\n/**\n * Same as `Array.splice(index, 0, value)` but faster.\n *\n * `Array.splice()` is not fast because it has to allocate an array for the elements which were\n * removed. This causes memory pressure and slows down code when most of the time we don't\n * care about the deleted items array.\n *\n * @param array Array to splice.\n * @param index Index in array where the `value` should be added.\n * @param value Value to add to array.\n */\nexport function arrayInsert(array, index, value) {\n    let end = array.length;\n    while (end > index) {\n        const previousEnd = end - 1;\n        array[end] = array[previousEnd];\n        end = previousEnd;\n    }\n    array[index] = value;\n}\n/**\n * Same as `Array.splice2(index, 0, value1, value2)` but faster.\n *\n * `Array.splice()` is not fast because it has to allocate an array for the elements which were\n * removed. This causes memory pressure and slows down code when most of the time we don't\n * care about the deleted items array.\n *\n * @param array Array to splice.\n * @param index Index in array where the `value` should be added.\n * @param value1 Value to add to array.\n * @param value2 Value to add to array.\n */\nexport function arrayInsert2(array, index, value1, value2) {\n    let end = array.length;\n    if (end == index) {\n        // inserting at the end.\n        array.push(value1, value2);\n    }\n    else if (end === 1) {\n        // corner case when we have less items in array than we have items to insert.\n        array.push(value2, array[0]);\n        array[0] = value1;\n    }\n    else {\n        end--;\n        array.push(array[end - 1], array[end]);\n        while (end > index) {\n            const previousEnd = end - 2;\n            array[end] = array[previousEnd];\n            end--;\n        }\n        array[index] = value1;\n        array[index + 1] = value2;\n    }\n}\n/**\n * Insert a `value` into an `array` so that the array remains sorted.\n *\n * NOTE:\n * - Duplicates are not allowed, and are ignored.\n * - This uses binary search algorithm for fast inserts.\n *\n * @param array A sorted array to insert into.\n * @param value The value to insert.\n * @returns index of the inserted value.\n */\nexport function arrayInsertSorted(array, value) {\n    let index = arrayIndexOfSorted(array, value);\n    if (index < 0) {\n        // if we did not find it insert it.\n        index = ~index;\n        arrayInsert(array, index, value);\n    }\n    return index;\n}\n/**\n * Remove `value` from a sorted `array`.\n *\n * NOTE:\n * - This uses binary search algorithm for fast removals.\n *\n * @param array A sorted array to remove from.\n * @param value The value to remove.\n * @returns index of the removed value.\n *   - positive index if value found and removed.\n *   - negative index if value not found. (`~index` to get the value where it should have been\n *     inserted)\n */\nexport function arrayRemoveSorted(array, value) {\n    const index = arrayIndexOfSorted(array, value);\n    if (index >= 0) {\n        arraySplice(array, index, 1);\n    }\n    return index;\n}\n/**\n * Get an index of an `value` in a sorted `array`.\n *\n * NOTE:\n * - This uses binary search algorithm for fast removals.\n *\n * @param array A sorted array to binary search.\n * @param value The value to look for.\n * @returns index of the value.\n *   - positive index if value found.\n *   - negative index if value not found. (`~index` to get the value where it should have been\n *     located)\n */\nexport function arrayIndexOfSorted(array, value) {\n    return _arrayIndexOfSorted(array, value, 0);\n}\n/**\n * Set a `value` for a `key`.\n *\n * @param keyValueArray to modify.\n * @param key The key to locate or create.\n * @param value The value to set for a `key`.\n * @returns index (always even) of where the value vas set.\n */\nexport function keyValueArraySet(keyValueArray, key, value) {\n    let index = keyValueArrayIndexOf(keyValueArray, key);\n    if (index >= 0) {\n        // if we found it set it.\n        keyValueArray[index | 1] = value;\n    }\n    else {\n        index = ~index;\n        arrayInsert2(keyValueArray, index, key, value);\n    }\n    return index;\n}\nexport function keyValueArrayGet(keyValueArray, key, notFoundFactory) {\n    const index = keyValueArrayIndexOf(keyValueArray, key);\n    if (index >= 0) {\n        // if we found it retrieve it.\n        return keyValueArray[index | 1];\n    }\n    if (notFoundFactory) {\n        const value = notFoundFactory();\n        arrayInsert2(keyValueArray, ~index, key, value);\n        return value;\n    }\n    return undefined;\n}\n/**\n * Retrieve a `key` index value in the array or `-1` if not found.\n *\n * @param keyValueArray to search.\n * @param key The key to locate.\n * @returns index of where the key is (or should have been.)\n *   - positive (even) index if key found.\n *   - negative index if key not found. (`~index` (even) to get the index where it should have\n *     been inserted.)\n */\nexport function keyValueArrayIndexOf(keyValueArray, key) {\n    return _arrayIndexOfSorted(keyValueArray, key, 1);\n}\n/**\n * Delete a `key` (and `value`) from the `KeyValueArray`.\n *\n * @param keyValueArray to modify.\n * @param key The key to locate or delete (if exist).\n * @returns index of where the key was (or should have been.)\n *   - positive (even) index if key found and deleted.\n *   - negative index if key not found. (`~index` (even) to get the index where it should have\n *     been.)\n */\nexport function keyValueArrayDelete(keyValueArray, key) {\n    const index = keyValueArrayIndexOf(keyValueArray, key);\n    if (index >= 0) {\n        // if we found it remove it.\n        arraySplice(keyValueArray, index, 2);\n    }\n    return index;\n}\n/**\n * INTERNAL: Get an index of an `value` in a sorted `array` by grouping search by `shift`.\n *\n * NOTE:\n * - This uses binary search algorithm for fast removals.\n *\n * @param array A sorted array to binary search.\n * @param value The value to look for.\n * @param shift grouping shift.\n *   - `0` means look at every location\n *   - `1` means only look at every other (even) location (the odd locations are to be ignored as\n *         they are values.)\n * @returns index of the value.\n *   - positive index if value found.\n *   - negative index if value not found. (`~index` to get the value where it should have been\n * inserted)\n */\nfunction _arrayIndexOfSorted(array, value, shift) {\n    let start = 0;\n    let end = array.length >> shift;\n    while (end !== start) {\n        const middle = start + ((end - start) >> 1); // find the middle.\n        const current = array[middle << shift];\n        if (value === current) {\n            return middle << shift;\n        }\n        else if (current > value) {\n            end = middle;\n        }\n        else {\n            start = middle + 1; // We already searched middle so make it non-inclusive by adding 1\n        }\n    }\n    return ~(end << shift);\n}\n//# sourceMappingURL=data:application/json;base64,","import { keyValueArrayGet } from '../util/array_map';\nimport { QSlotAttr, QSlotSelector } from '../util/markers';\nimport { isDomElementWithTagName, isHtmlElement } from '../util/types';\nexport var NamedSlotEnum;\n(function (NamedSlotEnum) {\n    NamedSlotEnum[NamedSlotEnum[\"index\"] = 0] = \"index\";\n    NamedSlotEnum[NamedSlotEnum[\"parent\"] = 1] = \"parent\";\n    NamedSlotEnum[NamedSlotEnum[\"firstNode\"] = 2] = \"firstNode\";\n})(NamedSlotEnum || (NamedSlotEnum = {}));\nexport function isSlotMap(value) {\n    return Array.isArray(value);\n}\n/**\n * Retrieves the current `SlotMap` from `QComponent`\n *\n *\n * This method collects the content `Node`s for a given component.\n *\n * @param component\n * @returns\n */\nexport function getSlotMap(component) {\n    const slots = [];\n    const host = component.hostElement;\n    const firstChild = host.firstElementChild;\n    if (isQSlotTemplate(firstChild)) {\n        slotMapAddChildren(slots, firstChild.content, null);\n    }\n    const previousSlots = [];\n    host.querySelectorAll(QSlotSelector).forEach((qSlot) => {\n        for (const parent of previousSlots) {\n            if (parent.contains(qSlot)) {\n                // When we do `querySelectorAll` it is possible that we get `<q:slot>`\n                // which are children of existing `<q:slot>`. This check is here\n                // to make sure that we don't get `<q:lsot>` recursively.\n                // <component>\n                //   <q:slot include-me>\n                //     <q:slot dont-include-me></q:slot>\n                //   </q:slot>\n                // </component>\n                return;\n            }\n        }\n        previousSlots.push(qSlot);\n        const name = qSlot.getAttribute('name') || '';\n        slotMapAddChildren(slots, qSlot, name);\n    });\n    return slots;\n}\n/**\n * Determines if the `node` is `<template q:slot>` used for storing un-projected items.\n */\nfunction isQSlotTemplate(node) {\n    return isDomElementWithTagName(node, 'template') && node.hasAttribute(QSlotAttr);\n}\n/**\n * Add projected nodes into `SlotMap`.\n *\n * See `SlotMap` for the layout.\n *\n * @param slots\n * @param parent Parent whoes children should be added to the `slots`.\n */\nfunction slotMapAddChildren(slots, parent, name) {\n    _slotParent = parent;\n    let child = parent.firstChild;\n    if (name !== null) {\n        keyValueArrayGet(slots, name, emptyArrayFactory);\n    }\n    while (child) {\n        const slotName = name !== null ? name : (isHtmlElement(child) && child.getAttribute(QSlotAttr)) || '';\n        keyValueArrayGet(slots, slotName, emptyArrayFactory).push(child);\n        child = child.nextSibling;\n    }\n    _slotParent = undefined;\n}\nlet _slotParent;\nfunction emptyArrayFactory() {\n    return [-1, _slotParent];\n}\n//# sourceMappingURL=data:application/json;base64,","// TODO(misko): need full object parsing /serializing\nimport { assertDefined } from '../assert/assert';\nexport function qDeflate(obj, hostCtx) {\n    return hostCtx.refMap.add(obj);\n}\nexport function qInflate(ref, hostCtx) {\n    const obj = hostCtx.refMap.get(ref);\n    assertDefined(obj);\n    return obj;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicS1qc29uLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9qc29uL3EtanNvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxREFBcUQ7QUFDckQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBR2pELE1BQU0sVUFBVSxRQUFRLENBQUMsR0FBUSxFQUFFLE9BQWlCO0lBQ2xELE9BQU8sT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDakMsQ0FBQztBQUVELE1BQU0sVUFBVSxRQUFRLENBQUMsR0FBVyxFQUFFLE9BQWlCO0lBQ3JELE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3BDLGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNuQixPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUT0RPKG1pc2tvKTogbmVlZCBmdWxsIG9iamVjdCBwYXJzaW5nIC9zZXJpYWxpemluZ1xuaW1wb3J0IHsgYXNzZXJ0RGVmaW5lZCB9IGZyb20gJy4uL2Fzc2VydC9hc3NlcnQnO1xuaW1wb3J0IHR5cGUgeyBRQ29udGV4dCB9IGZyb20gJy4uL3Byb3BzL3Byb3BzJztcblxuZXhwb3J0IGZ1bmN0aW9uIHFEZWZsYXRlKG9iajogYW55LCBob3N0Q3R4OiBRQ29udGV4dCk6IG51bWJlciB7XG4gIHJldHVybiBob3N0Q3R4LnJlZk1hcC5hZGQob2JqKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHFJbmZsYXRlKHJlZjogbnVtYmVyLCBob3N0Q3R4OiBRQ29udGV4dCk6IGFueSB7XG4gIGNvbnN0IG9iaiA9IGhvc3RDdHgucmVmTWFwLmdldChyZWYpO1xuICBhc3NlcnREZWZpbmVkKG9iaik7XG4gIHJldHVybiBvYmo7XG59XG4iXX0=","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nexport function fromCamelToKebabCase(text) {\n    return text.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\nexport function fromKebabToCamelCase(text) {\n    return text.replace(/-./g, (x) => x[1].toUpperCase());\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FzZS5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXRpbC9jYXNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVILE1BQU0sVUFBVSxvQkFBb0IsQ0FBQyxJQUFZO0lBQy9DLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsRUFBRSxPQUFPLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztBQUNoRSxDQUFDO0FBRUQsTUFBTSxVQUFVLG9CQUFvQixDQUFDLElBQVk7SUFDL0MsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7QUFDeEQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBCdWlsZGVyLmlvLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL0J1aWxkZXJJTy9xd2lrL2Jsb2IvbWFpbi9MSUNFTlNFXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGZyb21DYW1lbFRvS2ViYWJDYXNlKHRleHQ6IHN0cmluZyk6IHN0cmluZyB7XG4gIHJldHVybiB0ZXh0LnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csICckMS0kMicpLnRvTG93ZXJDYXNlKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmcm9tS2ViYWJUb0NhbWVsQ2FzZSh0ZXh0OiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gdGV4dC5yZXBsYWNlKC8tLi9nLCAoeCkgPT4geFsxXS50b1VwcGVyQ2FzZSgpKTtcbn1cbiJdfQ==","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { flattenArray } from './array';\n/**\n * Converts a tree of Promises into a flat array of resolved promise values.\n *\n * @param tree - array of arrays of values or promises of values.\n * @returns a `Promise` of array of values.\n */\nexport function flattenPromiseTree(tree) {\n    return Promise.all(tree).then((values) => {\n        const flatArray = flattenArray(values);\n        for (let i = 0; i < flatArray.length; i++) {\n            if (isPromise(flatArray[i])) {\n                return flattenPromiseTree(flatArray);\n            }\n        }\n        return flatArray;\n    });\n}\nexport function isPromise(value) {\n    return value instanceof Promise;\n}\nexport const then = (promise, thenFn) => {\n    return isPromise(promise) ? promise.then(thenFn) : thenFn(promise);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvbWlzZXMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3V0aWwvcHJvbWlzZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBR0gsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUl2Qzs7Ozs7R0FLRztBQUNILE1BQU0sVUFBVSxrQkFBa0IsQ0FBSSxJQUFvQjtJQUN4RCxPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBVyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBYSxFQUFFLEVBQUU7UUFDckQsTUFBTSxTQUFTLEdBQUcsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3pDLElBQUksU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO2dCQUMzQixPQUFPLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxDQUFDO2FBQ3RDO1NBQ0Y7UUFDRCxPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUM7QUFFRCxNQUFNLFVBQVUsU0FBUyxDQUFDLEtBQVU7SUFDbEMsT0FBTyxLQUFLLFlBQVksT0FBTyxDQUFDO0FBQ2xDLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUcsQ0FDbEIsT0FBMEIsRUFDMUIsTUFBcUMsRUFDbEIsRUFBRTtJQUNyQixPQUFPLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ3JFLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBCdWlsZGVyLmlvLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL0J1aWxkZXJJTy9xd2lrL2Jsb2IvbWFpbi9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHR5cGUgeyBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJy4uJztcbmltcG9ydCB7IGZsYXR0ZW5BcnJheSB9IGZyb20gJy4vYXJyYXknO1xuXG5leHBvcnQgdHlwZSBQcm9taXNlVHJlZTxUPiA9IFQgfCBQcm9taXNlPFQ+IHwgUHJvbWlzZTxUW10+IHwgQXJyYXk8UHJvbWlzZVRyZWU8VD4+O1xuXG4vKipcbiAqIENvbnZlcnRzIGEgdHJlZSBvZiBQcm9taXNlcyBpbnRvIGEgZmxhdCBhcnJheSBvZiByZXNvbHZlZCBwcm9taXNlIHZhbHVlcy5cbiAqXG4gKiBAcGFyYW0gdHJlZSAtIGFycmF5IG9mIGFycmF5cyBvZiB2YWx1ZXMgb3IgcHJvbWlzZXMgb2YgdmFsdWVzLlxuICogQHJldHVybnMgYSBgUHJvbWlzZWAgb2YgYXJyYXkgb2YgdmFsdWVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZmxhdHRlblByb21pc2VUcmVlPFQ+KHRyZWU6IFByb21pc2VUcmVlPFQ+KTogUHJvbWlzZTxUW10+IHtcbiAgcmV0dXJuIFByb21pc2UuYWxsKHRyZWUgYXMgVFtdKS50aGVuKCh2YWx1ZXM6IGFueVtdKSA9PiB7XG4gICAgY29uc3QgZmxhdEFycmF5ID0gZmxhdHRlbkFycmF5KHZhbHVlcyk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBmbGF0QXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChpc1Byb21pc2UoZmxhdEFycmF5W2ldKSkge1xuICAgICAgICByZXR1cm4gZmxhdHRlblByb21pc2VUcmVlKGZsYXRBcnJheSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmbGF0QXJyYXk7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNQcm9taXNlKHZhbHVlOiBhbnkpOiB2YWx1ZSBpcyBQcm9taXNlPGFueT4ge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQcm9taXNlO1xufVxuXG5leHBvcnQgY29uc3QgdGhlbiA9IDxULCBCPihcbiAgcHJvbWlzZTogVmFsdWVPclByb21pc2U8VD4sXG4gIHRoZW5GbjogKGFyZzogVCkgPT4gVmFsdWVPclByb21pc2U8Qj5cbik6IFZhbHVlT3JQcm9taXNlPEI+ID0+IHtcbiAgcmV0dXJuIGlzUHJvbWlzZShwcm9taXNlKSA/IHByb21pc2UudGhlbih0aGVuRm4pIDogdGhlbkZuKHByb21pc2UpO1xufTtcbiJdfQ==","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nexport function stringify(value) {\n    return value == null ? null : String(value);\n}\nexport function debugStringify(value) {\n    if (value != null && typeof value == 'object') {\n        return String(value.constructor.name) + '\\n' + safeJSONStringify(value);\n    }\n    return String(value);\n}\nfunction safeJSONStringify(value) {\n    try {\n        return JSON.stringify(value, null, '  ');\n    }\n    catch (e) {\n        return String(e);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaW5naWZ5LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS91dGlsL3N0cmluZ2lmeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFFSCxNQUFNLFVBQVUsU0FBUyxDQUFDLEtBQVU7SUFDbEMsT0FBTyxLQUFLLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUM5QyxDQUFDO0FBRUQsTUFBTSxVQUFVLGNBQWMsQ0FBQyxLQUFVO0lBQ3ZDLElBQUksS0FBSyxJQUFJLElBQUksSUFBSSxPQUFPLEtBQUssSUFBSSxRQUFRLEVBQUU7UUFDN0MsT0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLEdBQUcsaUJBQWlCLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDekU7SUFDRCxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUN2QixDQUFDO0FBRUQsU0FBUyxpQkFBaUIsQ0FBQyxLQUFVO0lBQ25DLElBQUk7UUFDRixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztLQUMxQztJQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ1YsT0FBTyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDbEI7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEJ1aWxkZXIuaW8sIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vQnVpbGRlcklPL3F3aWsvYmxvYi9tYWluL0xJQ0VOU0VcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5naWZ5KHZhbHVlOiBhbnkpOiBzdHJpbmcgfCBudWxsIHtcbiAgcmV0dXJuIHZhbHVlID09IG51bGwgPyBudWxsIDogU3RyaW5nKHZhbHVlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRlYnVnU3RyaW5naWZ5KHZhbHVlOiBhbnkpOiBzdHJpbmcge1xuICBpZiAodmFsdWUgIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gU3RyaW5nKHZhbHVlLmNvbnN0cnVjdG9yLm5hbWUpICsgJ1xcbicgKyBzYWZlSlNPTlN0cmluZ2lmeSh2YWx1ZSk7XG4gIH1cbiAgcmV0dXJuIFN0cmluZyh2YWx1ZSk7XG59XG5cbmZ1bmN0aW9uIHNhZmVKU09OU3RyaW5naWZ5KHZhbHVlOiBhbnkpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkodmFsdWUsIG51bGwsICcgICcpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIFN0cmluZyhlKTtcbiAgfVxufVxuIl19","export function createWatchFnObserver(doc) {\n    const subscriptions = new Map();\n    function wrap(obj) {\n        const id = `${doc}`;\n        if (!id) {\n            throw new Error('Q-ERROR: only object stores can be observed.');\n        }\n        const obs = subscriptions.get(obj);\n        if (obs) {\n            return obs.value;\n        }\n        const proxy = new SubscribeProxy(obj, subscriptions, wrap);\n        const value = new Proxy(obj, proxy);\n        subscriptions.set(obj, { value, proxy });\n        return value;\n    }\n    wrap.getGuard = function () {\n        const map = new Map();\n        subscriptions.forEach(() => {\n            return '';\n        });\n        return map;\n    };\n    return wrap;\n}\nexport class SubscribeProxy {\n    constructor(obj, subscriptions, wrap) {\n        this.obj = obj;\n        this.subscriptions = subscriptions;\n        this.wrap = wrap;\n        this.properties = null;\n    }\n    get(target, prop) {\n        let value = target[prop];\n        const props = this.properties || (this.properties = new Set());\n        props.add(prop);\n        if (typeof value == 'object' && value != null) {\n            value = this.wrap(value);\n        }\n        return value;\n    }\n    set(_, prop, newValue) {\n        throw new Error('Writing to observables is not allowed! Property: ' + prop + ' ' + newValue);\n        // return true;\n    }\n    has(target, property) {\n        return Object.prototype.hasOwnProperty.call(target, property);\n    }\n    ownKeys(target) {\n        return Object.getOwnPropertyNames(target);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2JzZXJ2ZXIuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3dhdGNoL29ic2VydmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBLE1BQU0sVUFBVSxxQkFBcUIsQ0FDbkMsR0FBYTtJQUViLE1BQU0sYUFBYSxHQUFrQixJQUFJLEdBQUcsRUFBRSxDQUFDO0lBQy9DLFNBQVMsSUFBSSxDQUFJLEdBQU07UUFDckIsTUFBTSxFQUFFLEdBQUcsR0FBRyxHQUFHLEVBQUUsQ0FBQztRQUNwQixJQUFJLENBQUMsRUFBRSxFQUFFO1lBQ1AsTUFBTSxJQUFJLEtBQUssQ0FBQyw4Q0FBOEMsQ0FBQyxDQUFDO1NBQ2pFO1FBQ0QsTUFBTSxHQUFHLEdBQUcsYUFBYSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNuQyxJQUFJLEdBQUcsRUFBRTtZQUNQLE9BQU8sR0FBRyxDQUFDLEtBQUssQ0FBQztTQUNsQjtRQUNELE1BQU0sS0FBSyxHQUFHLElBQUksY0FBYyxDQUFNLEdBQUcsRUFBRSxhQUFhLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDaEUsTUFBTSxLQUFLLEdBQUcsSUFBSSxLQUFLLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ3BDLGFBQWEsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7UUFDekMsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBQ0QsSUFBSSxDQUFDLFFBQVEsR0FBRztRQUNkLE1BQU0sR0FBRyxHQUFHLElBQUksR0FBRyxFQUFFLENBQUM7UUFDdEIsYUFBYSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUU7WUFDekIsT0FBTyxFQUFFLENBQUM7UUFDWixDQUFDLENBQUMsQ0FBQztRQUNILE9BQU8sR0FBRyxDQUFDO0lBQ2IsQ0FBQyxDQUFDO0lBQ0YsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBRUQsTUFBTSxPQUFPLGNBQWM7SUFHekIsWUFBbUIsR0FBTyxFQUFTLGFBQTRCLEVBQVMsSUFBYztRQUFuRSxRQUFHLEdBQUgsR0FBRyxDQUFJO1FBQVMsa0JBQWEsR0FBYixhQUFhLENBQWU7UUFBUyxTQUFJLEdBQUosSUFBSSxDQUFVO1FBRi9FLGVBQVUsR0FBdUIsSUFBSSxDQUFDO0lBRTRDLENBQUM7SUFFMUYsR0FBRyxDQUFDLE1BQVMsRUFBRSxJQUFZO1FBQ3pCLElBQUksS0FBSyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QixNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsVUFBVSxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDL0QsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNoQixJQUFJLE9BQU8sS0FBSyxJQUFJLFFBQVEsSUFBSSxLQUFLLElBQUksSUFBSSxFQUFFO1lBQzdDLEtBQUssR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQzFCO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBRUQsR0FBRyxDQUFDLENBQUksRUFBRSxJQUFZLEVBQUUsUUFBYTtRQUNuQyxNQUFNLElBQUksS0FBSyxDQUFDLG1EQUFtRCxHQUFHLElBQUksR0FBRyxHQUFHLEdBQUcsUUFBUSxDQUFDLENBQUM7UUFDN0YsZUFBZTtJQUNqQixDQUFDO0lBRUQsR0FBRyxDQUFDLE1BQVMsRUFBRSxRQUF5QjtRQUN0QyxPQUFPLE1BQU0sQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDaEUsQ0FBQztJQUVELE9BQU8sQ0FBQyxNQUFTO1FBQ2YsT0FBTyxNQUFNLENBQUMsbUJBQW1CLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDNUMsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBPYnNlcnZlciB9IGZyb20gJy4vd2F0Y2gucHVibGljJztcblxuZXhwb3J0IHR5cGUgU3Vic2NyaXB0aW9ucyA9IE1hcDx7fSwgeyB2YWx1ZTogYW55OyBwcm94eTogU3Vic2NyaWJlUHJveHk8YW55PiB9PjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVdhdGNoRm5PYnNlcnZlcihcbiAgZG9jOiBEb2N1bWVudFxuKTogT2JzZXJ2ZXIgJiB7IGdldEd1YXJkKCk6IE1hcDxzdHJpbmcsIHN0cmluZ1tdPiB9IHtcbiAgY29uc3Qgc3Vic2NyaXB0aW9uczogU3Vic2NyaXB0aW9ucyA9IG5ldyBNYXAoKTtcbiAgZnVuY3Rpb24gd3JhcDxUPihvYmo6IFQpOiBUIHtcbiAgICBjb25zdCBpZCA9IGAke2RvY31gO1xuICAgIGlmICghaWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignUS1FUlJPUjogb25seSBvYmplY3Qgc3RvcmVzIGNhbiBiZSBvYnNlcnZlZC4nKTtcbiAgICB9XG4gICAgY29uc3Qgb2JzID0gc3Vic2NyaXB0aW9ucy5nZXQob2JqKTtcbiAgICBpZiAob2JzKSB7XG4gICAgICByZXR1cm4gb2JzLnZhbHVlO1xuICAgIH1cbiAgICBjb25zdCBwcm94eSA9IG5ldyBTdWJzY3JpYmVQcm94eTxhbnk+KG9iaiwgc3Vic2NyaXB0aW9ucywgd3JhcCk7XG4gICAgY29uc3QgdmFsdWUgPSBuZXcgUHJveHkob2JqLCBwcm94eSk7XG4gICAgc3Vic2NyaXB0aW9ucy5zZXQob2JqLCB7IHZhbHVlLCBwcm94eSB9KTtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbiAgd3JhcC5nZXRHdWFyZCA9IGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCBtYXAgPSBuZXcgTWFwKCk7XG4gICAgc3Vic2NyaXB0aW9ucy5mb3JFYWNoKCgpID0+IHtcbiAgICAgIHJldHVybiAnJztcbiAgICB9KTtcbiAgICByZXR1cm4gbWFwO1xuICB9O1xuICByZXR1cm4gd3JhcDtcbn1cblxuZXhwb3J0IGNsYXNzIFN1YnNjcmliZVByb3h5PFQgZXh0ZW5kcyBSZWNvcmQ8c3RyaW5nLCBhbnk+PiB7XG4gIHB1YmxpYyBwcm9wZXJ0aWVzOiBTZXQ8c3RyaW5nPiB8IG51bGwgPSBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBvYmo6IHt9LCBwdWJsaWMgc3Vic2NyaXB0aW9uczogU3Vic2NyaXB0aW9ucywgcHVibGljIHdyYXA6IE9ic2VydmVyKSB7fVxuXG4gIGdldCh0YXJnZXQ6IFQsIHByb3A6IHN0cmluZyk6IGFueSB7XG4gICAgbGV0IHZhbHVlID0gdGFyZ2V0W3Byb3BdO1xuICAgIGNvbnN0IHByb3BzID0gdGhpcy5wcm9wZXJ0aWVzIHx8ICh0aGlzLnByb3BlcnRpZXMgPSBuZXcgU2V0KCkpO1xuICAgIHByb3BzLmFkZChwcm9wKTtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09ICdvYmplY3QnICYmIHZhbHVlICE9IG51bGwpIHtcbiAgICAgIHZhbHVlID0gdGhpcy53cmFwKHZhbHVlKTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG5cbiAgc2V0KF86IFQsIHByb3A6IHN0cmluZywgbmV3VmFsdWU6IGFueSk6IGJvb2xlYW4ge1xuICAgIHRocm93IG5ldyBFcnJvcignV3JpdGluZyB0byBvYnNlcnZhYmxlcyBpcyBub3QgYWxsb3dlZCEgUHJvcGVydHk6ICcgKyBwcm9wICsgJyAnICsgbmV3VmFsdWUpO1xuICAgIC8vIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaGFzKHRhcmdldDogVCwgcHJvcGVydHk6IHN0cmluZyB8IHN5bWJvbCkge1xuICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodGFyZ2V0LCBwcm9wZXJ0eSk7XG4gIH1cblxuICBvd25LZXlzKHRhcmdldDogVCk6IEFycmF5TGlrZTxzdHJpbmcgfCBzeW1ib2w+IHtcbiAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGFyZ2V0KTtcbiAgfVxufVxuIl19","import { qrlImport } from '../import/qrl.public';\nimport { getContext, getEvent, setEvent } from '../props/props';\nimport { newInvokeContext, useInvoke } from '../use/use-core';\nimport { createWatchFnObserver } from './observer';\nconst ON_WATCH = 'on:qWatch';\nexport function registerOnWatch(element, props, watchFnQrl) {\n    props[ON_WATCH] = watchFnQrl;\n    invokeWatchFn(element, watchFnQrl);\n}\nconst cleanupFnMap = new Map();\nexport async function invokeWatchFn(element, watchFnQrl) {\n    const watchFn = await qrlImport(element, watchFnQrl);\n    const previousCleanupFn = cleanupFnMap.get(watchFn);\n    cleanupFnMap.delete(watchFn);\n    if (isCleanupFn(previousCleanupFn)) {\n        try {\n            previousCleanupFn();\n        }\n        catch (e) {\n            // TODO(misko): Centralize error handling\n            console.error(e);\n        }\n    }\n    const obs = createWatchFnObserver(element.ownerDocument);\n    try {\n        const nextCleanupFn = watchFn(obs);\n        if (isCleanupFn(nextCleanupFn)) {\n            cleanupFnMap.set(watchFn, nextCleanupFn);\n        }\n    }\n    catch (e) {\n        // TODO(misko): Centralize error handling\n        console.error(e);\n    }\n    finally {\n        // const guardRef = (watchFnQrl.guardRef = new Map());\n        watchFnQrl.guard = obs.getGuard();\n        const ctx = getContext(element);\n        setEvent(ctx, ON_WATCH, watchFnQrl);\n    }\n}\nfunction isCleanupFn(value) {\n    return typeof value === 'function';\n}\nexport async function notifyWatchers(element, qObjectId, propName) {\n    const ctx = getContext(element);\n    const onWatch = getEvent(ctx, 'on:qWatch');\n    if (onWatch) {\n        try {\n            // TODO\n            const context = newInvokeContext(element, element);\n            context.qrlGuard = (qrl) => {\n                var _a;\n                const props = (_a = qrl.guard) === null || _a === void 0 ? void 0 : _a.get(qObjectId);\n                return props ? props.indexOf(propName) !== -1 : false;\n            };\n            await useInvoke(context, onWatch, qObjectId, propName);\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2F0Y2guanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3dhdGNoL3dhdGNoLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUVoRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsU0FBUyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDOUQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sWUFBWSxDQUFDO0FBT25ELE1BQU0sUUFBUSxHQUFHLFdBQVcsQ0FBQztBQUU3QixNQUFNLFVBQVUsZUFBZSxDQUFDLE9BQWdCLEVBQUUsS0FBWSxFQUFFLFVBQWdDO0lBQzlGLEtBQUssQ0FBQyxRQUFRLENBQUMsR0FBRyxVQUFVLENBQUM7SUFDN0IsYUFBYSxDQUFDLE9BQU8sRUFBRSxVQUFVLENBQUMsQ0FBQztBQUNyQyxDQUFDO0FBRUQsTUFBTSxZQUFZLEdBQUcsSUFBSSxHQUFHLEVBQXNCLENBQUM7QUFFbkQsTUFBTSxDQUFDLEtBQUssVUFBVSxhQUFhLENBQUMsT0FBZ0IsRUFBRSxVQUFnQztJQUNwRixNQUFNLE9BQU8sR0FBRyxNQUFNLFNBQVMsQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFDckQsTUFBTSxpQkFBaUIsR0FBRyxZQUFZLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3BELFlBQVksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDN0IsSUFBSSxXQUFXLENBQUMsaUJBQWlCLENBQUMsRUFBRTtRQUNsQyxJQUFJO1lBQ0YsaUJBQWlCLEVBQUUsQ0FBQztTQUNyQjtRQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ1YseUNBQXlDO1lBQ3pDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDbEI7S0FDRjtJQUNELE1BQU0sR0FBRyxHQUFHLHFCQUFxQixDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUN6RCxJQUFJO1FBQ0YsTUFBTSxhQUFhLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ25DLElBQUksV0FBVyxDQUFDLGFBQWEsQ0FBQyxFQUFFO1lBQzlCLFlBQVksQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLGFBQWEsQ0FBQyxDQUFDO1NBQzFDO0tBQ0Y7SUFBQyxPQUFPLENBQUMsRUFBRTtRQUNWLHlDQUF5QztRQUN6QyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ2xCO1lBQVM7UUFDUixzREFBc0Q7UUFDdEQsVUFBVSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDbEMsTUFBTSxHQUFHLEdBQUcsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2hDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDO0tBQ3JDO0FBQ0gsQ0FBQztBQUNELFNBQVMsV0FBVyxDQUFDLEtBQVU7SUFDN0IsT0FBTyxPQUFPLEtBQUssS0FBSyxVQUFVLENBQUM7QUFDckMsQ0FBQztBQUVELE1BQU0sQ0FBQyxLQUFLLFVBQVUsY0FBYyxDQUNsQyxPQUFnQixFQUNoQixTQUFpQixFQUNqQixRQUFnQjtJQUVoQixNQUFNLEdBQUcsR0FBRyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDaEMsTUFBTSxPQUFPLEdBQTBCLFFBQVEsQ0FBQyxHQUFHLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDbEUsSUFBSSxPQUFPLEVBQUU7UUFDWCxJQUFJO1lBQ0YsT0FBTztZQUNQLE1BQU0sT0FBTyxHQUFHLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztZQUNuRCxPQUFPLENBQUMsUUFBUSxHQUFHLENBQUMsR0FBZ0IsRUFBRSxFQUFFOztnQkFDdEMsTUFBTSxLQUFLLEdBQUcsTUFBQSxHQUFHLENBQUMsS0FBSywwQ0FBRSxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7Z0JBQ3hDLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7WUFDeEQsQ0FBQyxDQUFDO1lBQ0YsTUFBTSxTQUFTLENBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxDQUFDLENBQUM7U0FDeEQ7UUFBQyxPQUFPLENBQUMsRUFBRTtZQUNWLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDbEI7S0FDRjtBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFFSTEludGVybmFsIH0gZnJvbSAnLi4vaW1wb3J0L3FybC1jbGFzcyc7XG5pbXBvcnQgeyBxcmxJbXBvcnQgfSBmcm9tICcuLi9pbXBvcnQvcXJsLnB1YmxpYyc7XG5pbXBvcnQgeyBnZXRDb250ZXh0LCBnZXRFdmVudCwgc2V0RXZlbnQgfSBmcm9tICcuLi9wcm9wcy9wcm9wcyc7XG5pbXBvcnQgdHlwZSB7IFByb3BzIH0gZnJvbSAnLi4vcHJvcHMvcHJvcHMucHVibGljJztcbmltcG9ydCB7IG5ld0ludm9rZUNvbnRleHQsIHVzZUludm9rZSB9IGZyb20gJy4uL3VzZS91c2UtY29yZSc7XG5pbXBvcnQgeyBjcmVhdGVXYXRjaEZuT2JzZXJ2ZXIgfSBmcm9tICcuL29ic2VydmVyJztcbmltcG9ydCB0eXBlIHsgT2JzZXJ2ZXIgfSBmcm9tICcuL3dhdGNoLnB1YmxpYyc7XG5cbmV4cG9ydCB0eXBlIENsZWFudXBGbiA9ICgpID0+IHZvaWQ7XG5leHBvcnQgdHlwZSBXYXRjaEZuID0gKG9iczogT2JzZXJ2ZXIpID0+IHVua25vd24gfCBDbGVhbnVwRm47XG5leHBvcnQgdHlwZSBPbldhdGNoSGFuZGxlciA9IChxT2JqZWN0SWQ6IHN0cmluZywgcHJvcE5hbWU6IHN0cmluZykgPT4gUHJvbWlzZTx1bmtub3duPjtcblxuY29uc3QgT05fV0FUQ0ggPSAnb246cVdhdGNoJztcblxuZXhwb3J0IGZ1bmN0aW9uIHJlZ2lzdGVyT25XYXRjaChlbGVtZW50OiBFbGVtZW50LCBwcm9wczogUHJvcHMsIHdhdGNoRm5Rcmw6IFFSTEludGVybmFsPFdhdGNoRm4+KSB7XG4gIHByb3BzW09OX1dBVENIXSA9IHdhdGNoRm5Rcmw7XG4gIGludm9rZVdhdGNoRm4oZWxlbWVudCwgd2F0Y2hGblFybCk7XG59XG5cbmNvbnN0IGNsZWFudXBGbk1hcCA9IG5ldyBNYXA8V2F0Y2hGbiwgQ2xlYW51cEZuPigpO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaW52b2tlV2F0Y2hGbihlbGVtZW50OiBFbGVtZW50LCB3YXRjaEZuUXJsOiBRUkxJbnRlcm5hbDxXYXRjaEZuPikge1xuICBjb25zdCB3YXRjaEZuID0gYXdhaXQgcXJsSW1wb3J0KGVsZW1lbnQsIHdhdGNoRm5RcmwpO1xuICBjb25zdCBwcmV2aW91c0NsZWFudXBGbiA9IGNsZWFudXBGbk1hcC5nZXQod2F0Y2hGbik7XG4gIGNsZWFudXBGbk1hcC5kZWxldGUod2F0Y2hGbik7XG4gIGlmIChpc0NsZWFudXBGbihwcmV2aW91c0NsZWFudXBGbikpIHtcbiAgICB0cnkge1xuICAgICAgcHJldmlvdXNDbGVhbnVwRm4oKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAvLyBUT0RPKG1pc2tvKTogQ2VudHJhbGl6ZSBlcnJvciBoYW5kbGluZ1xuICAgICAgY29uc29sZS5lcnJvcihlKTtcbiAgICB9XG4gIH1cbiAgY29uc3Qgb2JzID0gY3JlYXRlV2F0Y2hGbk9ic2VydmVyKGVsZW1lbnQub3duZXJEb2N1bWVudCk7XG4gIHRyeSB7XG4gICAgY29uc3QgbmV4dENsZWFudXBGbiA9IHdhdGNoRm4ob2JzKTtcbiAgICBpZiAoaXNDbGVhbnVwRm4obmV4dENsZWFudXBGbikpIHtcbiAgICAgIGNsZWFudXBGbk1hcC5zZXQod2F0Y2hGbiwgbmV4dENsZWFudXBGbik7XG4gICAgfVxuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gVE9ETyhtaXNrbyk6IENlbnRyYWxpemUgZXJyb3IgaGFuZGxpbmdcbiAgICBjb25zb2xlLmVycm9yKGUpO1xuICB9IGZpbmFsbHkge1xuICAgIC8vIGNvbnN0IGd1YXJkUmVmID0gKHdhdGNoRm5RcmwuZ3VhcmRSZWYgPSBuZXcgTWFwKCkpO1xuICAgIHdhdGNoRm5RcmwuZ3VhcmQgPSBvYnMuZ2V0R3VhcmQoKTtcbiAgICBjb25zdCBjdHggPSBnZXRDb250ZXh0KGVsZW1lbnQpO1xuICAgIHNldEV2ZW50KGN0eCwgT05fV0FUQ0gsIHdhdGNoRm5RcmwpO1xuICB9XG59XG5mdW5jdGlvbiBpc0NsZWFudXBGbih2YWx1ZTogYW55KTogdmFsdWUgaXMgQ2xlYW51cEZuIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG5vdGlmeVdhdGNoZXJzKFxuICBlbGVtZW50OiBFbGVtZW50LFxuICBxT2JqZWN0SWQ6IHN0cmluZyxcbiAgcHJvcE5hbWU6IHN0cmluZ1xuKTogUHJvbWlzZTx2b2lkPiB7XG4gIGNvbnN0IGN0eCA9IGdldENvbnRleHQoZWxlbWVudCk7XG4gIGNvbnN0IG9uV2F0Y2g6IG51bGwgfCBPbldhdGNoSGFuZGxlciA9IGdldEV2ZW50KGN0eCwgJ29uOnFXYXRjaCcpO1xuICBpZiAob25XYXRjaCkge1xuICAgIHRyeSB7XG4gICAgICAvLyBUT0RPXG4gICAgICBjb25zdCBjb250ZXh0ID0gbmV3SW52b2tlQ29udGV4dChlbGVtZW50LCBlbGVtZW50KTtcbiAgICAgIGNvbnRleHQucXJsR3VhcmQgPSAocXJsOiBRUkxJbnRlcm5hbCkgPT4ge1xuICAgICAgICBjb25zdCBwcm9wcyA9IHFybC5ndWFyZD8uZ2V0KHFPYmplY3RJZCk7XG4gICAgICAgIHJldHVybiBwcm9wcyA/IHByb3BzLmluZGV4T2YocHJvcE5hbWUpICE9PSAtMSA6IGZhbHNlO1xuICAgICAgfTtcbiAgICAgIGF3YWl0IHVzZUludm9rZShjb250ZXh0LCBvbldhdGNoLCBxT2JqZWN0SWQsIHByb3BOYW1lKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGUpO1xuICAgIH1cbiAgfVxufVxuIl19","import { getPlatform } from '../index';\nimport { QError, qError } from '../error/error';\nimport { parseQRL, stringifyQRL } from '../import/qrl';\nimport { isQrl } from '../import/qrl-class';\nimport { qrlImport } from '../import/qrl.public';\nimport { qDeflate } from '../json/q-json';\nimport { getInvokeContext, useInvoke } from '../use/use-core';\nimport { fromCamelToKebabCase } from '../util/case';\nimport { EMPTY_ARRAY } from '../util/flyweight';\nimport { isPromise } from '../util/promises';\nimport { debugStringify } from '../util/stringify';\nimport { invokeWatchFn } from '../watch/watch';\nimport { getEvents } from './props';\nconst ON_PROP_REGEX = /on(Document|Window)?:/;\nconst ON$_PROP_REGEX = /on(Document|Window)?\\$:/;\nexport function isOnProp(prop) {\n    return ON_PROP_REGEX.test(prop);\n}\nexport function isOn$Prop(prop) {\n    return ON$_PROP_REGEX.test(prop);\n}\nfunction isQrlFactory(value) {\n    return typeof value === 'function' && value.__brand__ === 'QRLFactory';\n}\nexport function qPropReadQRL(ctx, prop) {\n    const existingQRLs = getExistingQRLs(ctx, prop);\n    if (existingQRLs.length === 0) {\n        return null;\n    }\n    return () => {\n        const context = getInvokeContext();\n        const qrls = getExistingQRLs(ctx, prop);\n        return Promise.all(qrls.map(async (qrlOrPromise) => {\n            const qrl = await qrlOrPromise;\n            const qrlGuard = context.qrlGuard;\n            if (qrlGuard && !qrlGuard(qrl))\n                return;\n            if (!qrl.symbolRef) {\n                qrl.symbolRef = await qrlImport(ctx.element, qrl);\n            }\n            context.qrl = qrl;\n            if (qrlGuard) {\n                return invokeWatchFn(ctx.element, qrl);\n            }\n            else {\n                return useInvoke(context, qrl.symbolRef);\n            }\n        }));\n    };\n}\nexport function qPropWriteQRL(ctx, prop, value) {\n    if (!value) {\n        return;\n    }\n    prop = prop.replace('$:', ':');\n    if (typeof value == 'string') {\n        value = parseQRL(value);\n    }\n    const existingQRLs = getExistingQRLs(ctx, prop);\n    if (Array.isArray(value)) {\n        value.forEach((value) => qPropWriteQRL(ctx, prop, value));\n    }\n    else if (isQrl(value)) {\n        const capture = value.capture;\n        if (capture == null) {\n            // we need to serialize the lexical scope references\n            const captureRef = value.captureRef;\n            value.capture =\n                captureRef && captureRef.length ? captureRef.map((ref) => qDeflate(ref, ctx)) : EMPTY_ARRAY;\n        }\n        // Important we modify the array as it is cached.\n        for (let i = 0; i < existingQRLs.length; i++) {\n            const qrl = existingQRLs[i];\n            if (!isPromise(qrl) &&\n                qrl.canonicalChunk === value.canonicalChunk &&\n                qrl.symbol === value.symbol) {\n                existingQRLs.splice(i, 1);\n                i--;\n            }\n        }\n        existingQRLs.push(value);\n    }\n    else if (isQrlFactory(value)) {\n        if (existingQRLs.length === 0) {\n            // if we don't have any than we use the `qrlFactory` to create a QRLInternal\n            // (otherwise ignore the factory)\n            qPropWriteQRL(ctx, prop, value(ctx.element));\n        }\n    }\n    else if (isPromise(value)) {\n        const writePromise = value.then((qrl) => {\n            existingQRLs.splice(existingQRLs.indexOf(writePromise), 1);\n            qPropWriteQRL(ctx, prop, qrl);\n            return qrl;\n        });\n        existingQRLs.push(writePromise);\n    }\n    else {\n        // TODO(misko): Test/better text\n        throw qError(QError.TODO, `Not QRLInternal: prop: ${prop}; value: ` + value);\n    }\n    if (prop.startsWith('on:q')) {\n        getEvents(ctx)[prop] = serializeQRLs(existingQRLs, ctx);\n    }\n    else {\n        const kebabProp = fromCamelToKebabCase(prop);\n        ctx.element.setAttribute(kebabProp, serializeQRLs(existingQRLs, ctx));\n    }\n}\nexport function closureRefError(ref) {\n    return new Error(`QWIK-ERROR: A closure can only lexically capture 'QObject' and 'QProp' const references. Got: ` +\n        debugStringify(ref));\n}\nfunction getExistingQRLs(ctx, prop) {\n    let parts = ctx.cache.get(prop);\n    if (!parts) {\n        if (prop.startsWith('on:q')) {\n            parts = [];\n            const qrls = getEvents(ctx)[prop];\n            if (qrls) {\n                qrls.split('\\n').forEach((qrl) => {\n                    if (qrl) {\n                        parts.push(parseQRL(qrl, ctx.element));\n                    }\n                });\n                ctx.cache.set(prop, parts);\n                return parts;\n            }\n        }\n        const attrName = fromCamelToKebabCase(prop);\n        parts = [];\n        (ctx.element.getAttribute(attrName) || '').split('\\n').forEach((qrl) => {\n            if (qrl) {\n                parts.push(parseQRL(qrl, ctx.element));\n            }\n        });\n        ctx.cache.set(prop, parts);\n    }\n    return parts;\n}\nfunction serializeQRLs(existingQRLs, ctx) {\n    const platform = getPlatform(ctx.element.ownerDocument);\n    const element = ctx.element;\n    return existingQRLs\n        .map((qrl) => (isPromise(qrl) ? '' : stringifyQRL(qrl, element, platform)))\n        .filter((v) => !!v)\n        .join('\\n');\n}\n//# sourceMappingURL=data:application/json;base64,","import { assertDefined, assertEqual, assertGreater, assertGreaterOrEqual, assertNotEqual, } from '../assert/assert';\nimport { getQComponent } from '../component/component-ctx';\nimport { keyValueArrayGet } from '../util/array_map';\nimport { isComment, isDocument } from '../util/element';\nimport { QHostAttr, OnRenderProp, QSlotAttr } from '../util/markers';\nimport { isComponentElement, isDomElementWithTagName, isQSLotTemplateElement, NodeType, } from '../util/types';\nimport { getContext, getProps, setEvent } from '../props/props';\nimport { getSlotMap, isSlotMap, NamedSlotEnum } from './slots';\nimport { isOn$Prop, isOnProp } from '../props/props-on';\nimport { $ } from '../index';\nimport { getScheduled } from './notify-render';\nexport const SVG_NS = 'http://www.w3.org/2000/svg';\n/**\n * Create a cursor which reconciles logical children.\n *\n * Here logical means children as defined by JSX. (This will be same as DOM except\n * in the case of projection.) In case of projection the cursor will correctly\n * deal with the logical children of the View (rather then rendered children.)\n *\n * See: `cursorForComponent`\n *\n * @param parent Parent `Element` whose children should be reconciled.\n */\nexport function cursorForParent(parent) {\n    let firstChild = parent.firstChild;\n    if (firstChild && firstChild.nodeType === NodeType.DOCUMENT_TYPE_NODE) {\n        firstChild = firstChild.nextSibling;\n    }\n    return newCursor(parent, firstChild, null);\n}\nfunction newCursor(parent, node, end) {\n    return { parent, node, end };\n}\nfunction getNode(cursor) {\n    const node = cursor.node;\n    return cursor.end == node ? null : node;\n}\nfunction setNode(cursor, node) {\n    cursor.node = cursor.end == node ? null : node;\n}\nexport function cursorClone(cursor) {\n    return newCursor(cursor.parent, cursor.node, cursor.end);\n}\n/**\n * Reconcile view children of a component.\n *\n * Use this method to create a cursor when reconciling a component's view.\n *\n * The main point of this method is to skip the `<template q:slot/>` Node.\n *\n * @param componentHost Component host element for which view children should be\n *     reconciled.\n * @returns\n */\nexport function cursorForComponent(componentHost) {\n    assertEqual(isComponentElement(componentHost), true);\n    let firstNonTemplate = componentHost.firstChild;\n    if (isQSLotTemplateElement(firstNonTemplate)) {\n        firstNonTemplate = firstNonTemplate.nextSibling;\n    }\n    return newCursor(componentHost, firstNonTemplate, null);\n}\n/**\n * Ensure that node at cursor is an `Element` with given attributes.\n *\n * Reconciles the current cursor location with `expectTag`/`expectProps`.\n * This method will either leave the element alone if it matches, updates the\n * props, or completely removes and replaces the node with correct element.\n *\n * After invocation of this method, the cursor is advanced to the next sibling.\n *\n * @param cursor\n * @param component `ComponentRenderContext` of the component to whom the view childer\n *        logically belong.\n * @param expectTag\n * @param expectProps\n * @param componentRenderQueue Set if the current element is a component.\n *    This means that the reconciliation should detect input changes and if\n *    present add the component to the `componentRenderQueue` for further processing.\n * @returns Child `Cursor` to reconcile the children of this `Element`.\n */\nexport function cursorReconcileElement(cursor, component, expectTag, expectProps, componentRenderQueue, isSvg) {\n    let node = getNode(cursor);\n    assertNotEqual(node, undefined, 'Cursor already closed');\n    if (isSlotMap(node)) {\n        assertDefined(cursor.parent);\n        return slotMapReconcileSlots(cursor.parent, node, cursor.end, component, expectTag, expectProps, componentRenderQueue, isSvg);\n    }\n    else {\n        assertNotEqual(node, undefined, 'Cursor already closed');\n        node = _reconcileElement(cursor.parent, node, cursor.end, component, expectTag, expectProps, componentRenderQueue, isSvg);\n        assertDefined(node);\n        setNode(cursor, node.nextSibling);\n        return _reconcileElementChildCursor(node, !!componentRenderQueue);\n    }\n}\nfunction slotMapReconcileSlots(parent, slots, end, component, expectTag, expectProps, componentRenderQueue, isSvg) {\n    const slotName = expectProps[QSlotAttr] || '';\n    const namedSlot = keyValueArrayGet(slots, slotName);\n    let childNode;\n    if (namedSlot) {\n        assertGreaterOrEqual(namedSlot.length, 2);\n        const parent = namedSlot[NamedSlotEnum.parent];\n        let index = namedSlot[NamedSlotEnum.index];\n        if (index == -1) {\n            index = 2;\n        }\n        childNode = (namedSlot.length > index ? namedSlot[index] : null);\n        const node = _reconcileElement(parent, childNode, end, component, expectTag, expectProps, componentRenderQueue, isSvg);\n        if (childNode !== node) {\n            namedSlot[index] = node;\n            childNode = node;\n        }\n        namedSlot[NamedSlotEnum.index] = index + 1;\n    }\n    else {\n        const template = getUnSlottedStorage(parent);\n        childNode = _reconcileElement(template.content, null, end, component, expectTag, expectProps, true, isSvg);\n        assertDefined(childNode);\n    }\n    return _reconcileElementChildCursor(childNode, !!componentRenderQueue);\n}\nfunction _reconcileElement(parent, existing, end, component, expectTag, expectProps, componentRenderQueue, isSvg) {\n    let shouldDescendIntoComponent;\n    let reconciledElement;\n    if (isDomElementWithTagName(existing, expectTag)) {\n        updateProperties(existing, expectProps, isSvg);\n        shouldDescendIntoComponent = !!componentRenderQueue;\n        reconciledElement = existing;\n    }\n    else {\n        // Expected node and actual node did not match. Need to switch.\n        const doc = isDocument(parent) ? parent : parent.ownerDocument;\n        reconciledElement = replaceNode(parent, existing, isSvg ? doc.createElementNS(SVG_NS, expectTag) : doc.createElement(expectTag), end);\n        if (componentRenderQueue) {\n            reconciledElement.setAttribute(QHostAttr, '');\n        }\n        shouldDescendIntoComponent = !!componentRenderQueue;\n        updateProperties(reconciledElement, expectProps, isSvg);\n    }\n    component && component.styleClass && reconciledElement.classList.add(component.styleClass);\n    if (shouldDescendIntoComponent) {\n        const hostComponent = getQComponent(reconciledElement);\n        hostComponent.styleHostClass && reconciledElement.classList.add(hostComponent.styleHostClass);\n        if (Array.isArray(componentRenderQueue)) {\n            componentRenderQueue.push(hostComponent.render());\n        }\n        else if (reconciledElement.hasAttribute(QHostAttr)) {\n            const set = getScheduled(reconciledElement.ownerDocument);\n            set.add(reconciledElement);\n        }\n    }\n    return reconciledElement;\n}\nconst noop = () => {\n    return true;\n};\nconst handleStyle = (elm, _, newValue, oldValue) => {\n    if (typeof newValue == 'string') {\n        elm.style.cssText = newValue;\n    }\n    else {\n        for (const prop in oldValue) {\n            if (!newValue || newValue[prop] == null) {\n                if (prop.includes('-')) {\n                    elm.style.removeProperty(prop);\n                }\n                else {\n                    elm.style[prop] = '';\n                }\n            }\n        }\n        for (const prop in newValue) {\n            if (!oldValue || newValue[prop] !== oldValue[prop]) {\n                if (prop.includes('-')) {\n                    elm.style.setProperty(prop, newValue[prop]);\n                }\n                else {\n                    elm.style[prop] = newValue[prop];\n                }\n            }\n        }\n    }\n    return true;\n};\nconst PROP_HANDLER_MAP = {\n    class: noop,\n    style: handleStyle,\n};\nconst ALLOWS_PROPS = ['className', 'class', 'style', 'id', 'title'];\nexport function updateProperties(node, expectProps, isSvg) {\n    const ctx = getContext(node);\n    const qwikProps = OnRenderProp in expectProps ? getProps(ctx) : undefined;\n    if ('class' in expectProps) {\n        const className = expectProps.class;\n        expectProps.className =\n            className && typeof className == 'object'\n                ? Object.keys(className)\n                    .filter((k) => className[k])\n                    .join(' ')\n                : className;\n    }\n    for (const key of Object.keys(expectProps)) {\n        if (key === 'children') {\n            continue;\n        }\n        const newValue = expectProps[key];\n        if (isOnProp(key)) {\n            setEvent(ctx, key, newValue);\n            continue;\n        }\n        if (isOn$Prop(key)) {\n            setEvent(ctx, key.replace('$', ''), $(newValue));\n            continue;\n        }\n        // Early exit if value didnt change\n        const oldValue = ctx.cache.get(key);\n        if (newValue === oldValue) {\n            continue;\n        }\n        ctx.cache.set(key, newValue);\n        const skipQwik = ALLOWS_PROPS.includes(key) || key.startsWith('h:');\n        if (qwikProps && !skipQwik) {\n            // Qwik props\n            qwikProps[key] = newValue;\n        }\n        else {\n            // Check of data- or aria-\n            if (key.startsWith('data-') || key.endsWith('aria-') || isSvg) {\n                renderAttribute(node, key, newValue);\n                continue;\n            }\n            // Check if its an exception\n            const exception = PROP_HANDLER_MAP[key];\n            if (exception) {\n                if (exception(node, key, newValue, oldValue)) {\n                    continue;\n                }\n            }\n            // Check if property in prototype\n            if (key in node) {\n                try {\n                    node[key] = newValue;\n                }\n                catch (e) {\n                    console.error(e);\n                }\n                continue;\n            }\n            // Fallback to render attribute\n            renderAttribute(node, key, newValue);\n        }\n    }\n    return false;\n}\nfunction renderAttribute(node, key, newValue) {\n    if (newValue == null) {\n        node.removeAttribute(key);\n    }\n    else {\n        node.setAttribute(key, String(newValue));\n    }\n}\nfunction _reconcileElementChildCursor(node, isComponent) {\n    assertDefined(node);\n    if (isComponent) {\n        // We are a component. We need to return Slots\n        return newCursor(node, getSlotMap(getQComponent(node)), null);\n    }\n    else {\n        // Not a component, normal return.\n        return cursorForParent(node);\n    }\n}\n/**\n * Ensure that node at cursor is a `Text`.\n *\n * Reconciles the current cursor location with expected text.\n * This method will either leave the text alone if it matches, updates the\n * text, or completely removes and replaces the node with correct text.\n *\n * After invocation of this method, the cursor is advanced to the next sibling.\n *\n * @param cursor\n * @param expectText\n */\nexport function cursorReconcileText(cursor, expectText) {\n    let node = getNode(cursor);\n    assertNotEqual(node, undefined, 'Cursor already closed');\n    assertDefined(cursor.parent);\n    if (isSlotMap(node)) {\n        let parent;\n        let childNode;\n        const namedSlot = keyValueArrayGet(node, '');\n        if (namedSlot) {\n            assertGreaterOrEqual(namedSlot.length, 2);\n            parent = namedSlot[NamedSlotEnum.parent];\n            let index = namedSlot[NamedSlotEnum.index];\n            if (index == -1) {\n                index = 2;\n            }\n            childNode = (namedSlot.length > index ? namedSlot[index] : null);\n            node = _reconcileText(parent, childNode, cursor.end, expectText);\n            if (childNode !== node) {\n                namedSlot[index] = node;\n            }\n            namedSlot[NamedSlotEnum.index] = index + 1;\n        }\n        else {\n            const template = getUnSlottedStorage(cursor.parent);\n            _reconcileText(template.content, null, cursor.end, expectText);\n        }\n    }\n    else {\n        node = _reconcileText(cursor.parent, node, cursor.end, expectText);\n        setNode(cursor, node.nextSibling);\n    }\n}\nfunction _reconcileText(parent, node, beforeNode, expectText) {\n    // Reconcile as Text Node\n    if (node && node.nodeType == NodeType.TEXT_NODE) {\n        if (node.textContent !== expectText) {\n            node.textContent = expectText;\n        }\n    }\n    else {\n        // Expected node and actual node did not match. Need to switch.\n        node = replaceNode(parent, node, parent.ownerDocument.createTextNode(expectText), beforeNode);\n    }\n    return node;\n}\n/**\n * Close out the cursor and clear any extra elements.\n *\n * Invocation of this method indicates that no mare Nodes after the cursor are expected.\n * This is a signal to remove any excess `Node`s if present.\n *\n * @param cursor\n */\nexport function cursorReconcileEnd(cursor) {\n    let node = getNode(cursor);\n    if (isSlotMap(node)) {\n        for (let i = 0; i < node.length; i = i + 2) {\n            const namedSlot = node[i + 1];\n            if (namedSlot[NamedSlotEnum.index] !== -1) {\n                assertGreater(namedSlot[NamedSlotEnum.index], NamedSlotEnum.parent);\n                for (let k = namedSlot[NamedSlotEnum.index]; k < namedSlot.length; k++) {\n                    namedSlot[NamedSlotEnum.parent].removeChild(namedSlot[k]);\n                }\n            }\n        }\n    }\n    else {\n        while (node) {\n            const next = node.nextSibling;\n            cursor.parent.removeChild(node);\n            node = next;\n        }\n    }\n    setNode(cursor, undefined);\n}\nfunction getUnSlottedStorage(componentElement) {\n    assertEqual(isComponentElement(componentElement), true, 'Must be component element');\n    let template = componentElement === null || componentElement === void 0 ? void 0 : componentElement.firstElementChild;\n    if (!isDomElementWithTagName(template, 'template') || !template.hasAttribute(QSlotAttr)) {\n        template = componentElement.insertBefore(componentElement.ownerDocument.createElement('template'), template);\n        template.setAttribute(QSlotAttr, '');\n    }\n    return template;\n}\nconst V_NODE_START = '<node:';\nconst V_NODE_END = '</node:';\nexport function cursorReconcileVirtualNode(cursor) {\n    var _a;\n    let node = getNode(cursor);\n    if (isSlotMap(node)) {\n        // TODO(misko): proper error and test;\n        throw new Error('Not expecting slot map here');\n    }\n    else {\n        if (isComment(node) && ((_a = node.textContent) === null || _a === void 0 ? void 0 : _a.startsWith(V_NODE_START))) {\n            throw new Error('IMPLEMENT');\n        }\n        else {\n            const id = Math.round(Math.random() * Number.MAX_SAFE_INTEGER).toString(36);\n            const parent = cursor.parent;\n            const doc = parent.ownerDocument;\n            const startVNode = doc.createComment(V_NODE_START + id + '>');\n            const endVNode = doc.createComment(V_NODE_END + id + '>');\n            node = replaceNode(cursor.parent, node, endVNode, null);\n            cursor.parent.insertBefore(startVNode, endVNode);\n            setNode(cursor, endVNode.nextSibling);\n            return newCursor(parent, startVNode, endVNode);\n        }\n    }\n}\nexport function cursorReconcileStartVirtualNode(cursor) {\n    const node = getNode(cursor);\n    assertEqual(isComment(node) && node.textContent.startsWith(V_NODE_START), true);\n    setNode(cursor, node && node.nextSibling);\n}\nexport function replaceNode(parentNode, existingNode, newNode, insertBefore) {\n    parentNode.insertBefore(newNode, existingNode || insertBefore);\n    if (existingNode) {\n        parentNode.removeChild(existingNode);\n    }\n    return newNode;\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\n/**\n * Place at the root of the component View to allow binding of attributes on the Host element.\n *\n * ```\n * <Host someAttr={someExpr} someAttrStatic=\"value\">\n *   View content implementation.\n * </Host>\n * ```\n *\n * Qwik requires that components have [docs/HOST_ELEMENTS.ts] so that it is possible to have\n * asynchronous loading point. Host element is not owned by the component. At times it is\n * desirable for the component to render additional attributes on the host element. `<Host>`\n * servers that purpose.\n * @public\n */\nexport const Host = { __brand__: 'host' };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG9zdC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3JlbmRlci9qc3gvaG9zdC5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBSUg7Ozs7Ozs7Ozs7Ozs7O0dBY0c7QUFDSCxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQTJDLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBUyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEJ1aWxkZXIuaW8sIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vQnVpbGRlcklPL3F3aWsvYmxvYi9tYWluL0xJQ0VOU0VcbiAqL1xuXG5pbXBvcnQgdHlwZSB7IEZ1bmN0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi90eXBlcy9qc3gtbm9kZSc7XG5cbi8qKlxuICogUGxhY2UgYXQgdGhlIHJvb3Qgb2YgdGhlIGNvbXBvbmVudCBWaWV3IHRvIGFsbG93IGJpbmRpbmcgb2YgYXR0cmlidXRlcyBvbiB0aGUgSG9zdCBlbGVtZW50LlxuICpcbiAqIGBgYFxuICogPEhvc3Qgc29tZUF0dHI9e3NvbWVFeHByfSBzb21lQXR0clN0YXRpYz1cInZhbHVlXCI+XG4gKiAgIFZpZXcgY29udGVudCBpbXBsZW1lbnRhdGlvbi5cbiAqIDwvSG9zdD5cbiAqIGBgYFxuICpcbiAqIFF3aWsgcmVxdWlyZXMgdGhhdCBjb21wb25lbnRzIGhhdmUgW2RvY3MvSE9TVF9FTEVNRU5UUy50c10gc28gdGhhdCBpdCBpcyBwb3NzaWJsZSB0byBoYXZlXG4gKiBhc3luY2hyb25vdXMgbG9hZGluZyBwb2ludC4gSG9zdCBlbGVtZW50IGlzIG5vdCBvd25lZCBieSB0aGUgY29tcG9uZW50LiBBdCB0aW1lcyBpdCBpc1xuICogZGVzaXJhYmxlIGZvciB0aGUgY29tcG9uZW50IHRvIHJlbmRlciBhZGRpdGlvbmFsIGF0dHJpYnV0ZXMgb24gdGhlIGhvc3QgZWxlbWVudC4gYDxIb3N0PmBcbiAqIHNlcnZlcnMgdGhhdCBwdXJwb3NlLlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgY29uc3QgSG9zdDogRnVuY3Rpb25Db21wb25lbnQ8UmVjb3JkPHN0cmluZywgYW55Pj4gPSB7IF9fYnJhbmRfXzogJ2hvc3QnIH0gYXMgYW55O1xuIl19","/**\n * @public\n */\nexport const Slot = {\n    __brand__: 'slot',\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xvdC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3JlbmRlci9qc3gvc2xvdC5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxJQUFJLEdBR1o7SUFDSCxTQUFTLEVBQUUsTUFBTTtDQUNYLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IEZ1bmN0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi90eXBlcy9qc3gtbm9kZSc7XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgY29uc3QgU2xvdDogRnVuY3Rpb25Db21wb25lbnQ8e1xuICBuYW1lPzogc3RyaW5nO1xuICBjaGlsZHJlbj86IGFueTtcbn0+ID0ge1xuICBfX2JyYW5kX186ICdzbG90Jyxcbn0gYXMgYW55O1xuIl19","import { QError, qError } from '../error/error';\nimport { keyValueArrayGet } from '../util/array_map';\nimport { EMPTY_ARRAY } from '../util/flyweight';\nimport { OnRenderProp, QSlot, QSlotName } from '../util/markers';\nimport { isPromise } from '../util/promises';\nimport { cursorClone, cursorReconcileElement, cursorReconcileEnd, cursorReconcileStartVirtualNode, cursorReconcileText, cursorReconcileVirtualNode, updateProperties, } from './cursor';\nimport { Host } from './jsx/host.public';\nimport { Fragment, isJSXNode } from './jsx/jsx-runtime';\nimport { Slot } from './jsx/slot.public';\nimport { renderMarked } from './notify-render';\nimport { getSlotMap, NamedSlotEnum } from './slots';\nexport function visitJsxNode(component, renderQueue, cursor, jsxNode, isSvg) {\n    if (isJSXNode(jsxNode)) {\n        const nodeType = jsxNode.type;\n        if (nodeType == null)\n            return;\n        if (typeof nodeType === 'string') {\n            visitJsxLiteralNode(component, renderQueue, cursor, jsxNode, isSvg);\n        }\n        else if (nodeType === Fragment || nodeType == null) {\n            const jsxChildren = jsxNode.children || EMPTY_ARRAY;\n            for (const jsxChild of jsxChildren) {\n                visitJsxNode(component, renderQueue, cursor, jsxChild, isSvg);\n            }\n        }\n        else if (jsxNode.type === Host) {\n            updateProperties(cursor.parent, jsxNode.props, isSvg);\n            const jsxChildren = jsxNode.children || EMPTY_ARRAY;\n            for (const jsxChild of jsxChildren) {\n                visitJsxNode(component, renderQueue, cursor, jsxChild, isSvg);\n            }\n        }\n        else if (jsxNode.type === Slot) {\n            component && visitQSlotJsxNode(component, renderQueue, cursor, jsxNode, isSvg);\n        }\n        else if (typeof jsxNode.type === 'function') {\n            visitJsxNode(component, renderQueue, cursor, jsxNode.type(jsxNode.props), isSvg);\n        }\n        else {\n            throw qError(QError.Render_unexpectedJSXNodeType_type, nodeType);\n        }\n    }\n    else if (isPromise(jsxNode)) {\n        const vNodeCursor = cursorReconcileVirtualNode(cursor);\n        const render = (jsxNode) => {\n            cursorReconcileStartVirtualNode(vNodeCursor);\n            visitJsxNode(component, renderQueue, vNodeCursor, jsxNode, isSvg);\n            cursorReconcileEnd(vNodeCursor);\n        };\n        jsxNode.then(render, render);\n        if (jsxNode.whilePending) {\n            const vNodePending = cursorClone(vNodeCursor);\n            cursorReconcileStartVirtualNode(vNodePending);\n            visitJsxNode(component, renderQueue, vNodePending, jsxNode.whilePending, isSvg);\n            cursorReconcileEnd(vNodePending);\n        }\n    }\n    else if (Array.isArray(jsxNode)) {\n        const jsxChildren = jsxNode;\n        for (const jsxChild of jsxChildren) {\n            visitJsxNode(component, renderQueue, cursor, jsxChild, isSvg);\n        }\n    }\n    else if (typeof jsxNode === 'string' || typeof jsxNode === 'number') {\n        // stringify\n        cursorReconcileText(cursor, String(jsxNode));\n    }\n}\nfunction visitJsxLiteralNode(component, renderQueue, cursor, jsxNode, isSvg) {\n    const jsxTag = jsxNode.type;\n    const isQComponent = OnRenderProp in jsxNode.props;\n    if (!isSvg) {\n        isSvg = jsxTag === 'svg';\n    }\n    const elementCursor = cursorReconcileElement(cursor, component, jsxTag, jsxNode.props, isQComponent ? renderQueue : null, isSvg);\n    if (isSvg && jsxTag === 'foreignObject') {\n        isSvg = false;\n    }\n    if (!hasInnerHtmlOrTextBinding(jsxNode)) {\n        // we don't process children if we have inner-html bound to something.\n        const jsxChildren = jsxNode.children || EMPTY_ARRAY;\n        for (const jsxChild of jsxChildren) {\n            visitJsxNode(component, renderQueue, elementCursor, jsxChild, isSvg);\n        }\n        cursorReconcileEnd(elementCursor);\n    }\n    else if (isQComponent) {\n        //TODO(misko): needs tests and QError.\n        throw new Error('innerHTML/innerText bindings not supported on component content');\n    }\n}\nfunction hasInnerHtmlOrTextBinding(jsxNode) {\n    return 'innerHTML' in jsxNode.props || 'innerText' in jsxNode.props;\n}\nexport function visitQSlotJsxNode(component, renderQueue, cursor, jsxNode, isSvg) {\n    const slotName = jsxNode.props.name || '';\n    const slotCursor = cursorReconcileElement(cursor, component, QSlot, Object.assign({ [QSlotName]: slotName }, jsxNode.props), null, isSvg);\n    const slotMap = getSlotMap(component);\n    const namedSlot = keyValueArrayGet(slotMap, slotName);\n    if (namedSlot && namedSlot.length > NamedSlotEnum.firstNode) {\n        // project existing nodes.\n        const cursorParent = slotCursor.parent;\n        if (namedSlot[NamedSlotEnum.parent] !== cursorParent) {\n            // The only time we need to do anything if the existing elements are not already\n            // in the right spot. Move them.\n            cursorReconcileEnd(slotCursor); // clear anything which is already in.\n            for (let i = NamedSlotEnum.firstNode; i < namedSlot.length; i++) {\n                const node = namedSlot[i];\n                cursorParent.appendChild(node);\n            }\n            cursorReconcileEnd(slotCursor);\n        }\n        renderMarked(cursorParent.ownerDocument);\n        // TODO\n        // cursorParent.querySelectorAll(RenderNotifySelector).forEach((compElem) => {\n        //   renderQueue.push(getQComponent(compElem)!.render());\n        // });\n    }\n    else {\n        // fallback to default value projection.\n        const jsxChildren = jsxNode.children;\n        for (const jsxChild of jsxChildren) {\n            visitJsxNode(component, renderQueue, slotCursor, jsxChild, isSvg);\n        }\n        cursorReconcileEnd(slotCursor);\n    }\n}\nexport function whileResolvingRender(...args) {\n    throw new Error('Function not implemented.' + args);\n}\n//# sourceMappingURL=data:application/json;base64,","import { assertDefined } from '../assert/assert';\nimport { cursorForComponent, cursorReconcileEnd } from '../render/cursor';\nimport { visitJsxNode } from '../render/render';\nimport { ComponentScopedStyles, OnRenderProp } from '../util/markers';\nimport { flattenPromiseTree, then } from '../util/promises';\nimport { styleContent, styleHost } from './qrl-styles';\nimport { newInvokeContext, useInvoke } from '../use/use-core';\nimport { getContext, getEvent } from '../props/props';\n// TODO(misko): Can we get rid of this whole file, and instead teach getProps to know how to render\n// the advantage will be that the render capability would then be exposed to the outside world as well.\nexport class QComponentCtx {\n    constructor(hostElement) {\n        this.styleId = undefined;\n        this.styleClass = null;\n        this.styleHostClass = null;\n        this.hostElement = hostElement;\n        this.ctx = getContext(hostElement);\n    }\n    async render() {\n        const hostElement = this.hostElement;\n        const onRender = getEvent(this.ctx, OnRenderProp);\n        assertDefined(onRender);\n        const renderQueue = [];\n        try {\n            const event = 'qRender';\n            const promise = useInvoke(newInvokeContext(hostElement, hostElement, event), onRender);\n            await then(promise, (jsxNode) => {\n                if (this.styleId === undefined) {\n                    const scopedStyleId = (this.styleId = hostElement.getAttribute(ComponentScopedStyles));\n                    if (scopedStyleId) {\n                        this.styleHostClass = styleHost(scopedStyleId);\n                        this.styleClass = styleContent(scopedStyleId);\n                    }\n                }\n                const cursor = cursorForComponent(this.hostElement);\n                visitJsxNode(this, renderQueue, cursor, jsxNode, false);\n                cursorReconcileEnd(cursor);\n            });\n        }\n        catch (e) {\n            // TODO(misko): Proper error handling\n            // eslint-disable-next-line no-console\n            console.log(e);\n        }\n        return [this.hostElement, ...(await flattenPromiseTree(renderQueue))];\n    }\n}\nconst COMPONENT_PROP = '__qComponent__';\nexport function getQComponent(hostElement) {\n    const element = hostElement;\n    let component = element[COMPONENT_PROP];\n    if (!component)\n        component = element[COMPONENT_PROP] = new QComponentCtx(hostElement);\n    return component;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LWN0eC5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvY29tcG9uZW50L2NvbXBvbmVudC1jdHgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQzFFLE9BQU8sRUFBd0IsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDdEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxJQUFJLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUN2RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsU0FBUyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDOUQsT0FBTyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQVksTUFBTSxnQkFBZ0IsQ0FBQztBQUVoRSxtR0FBbUc7QUFDbkcsdUdBQXVHO0FBRXZHLE1BQU0sT0FBTyxhQUFhO0lBU3hCLFlBQVksV0FBd0I7UUFKcEMsWUFBTyxHQUE4QixTQUFTLENBQUM7UUFDL0MsZUFBVSxHQUFrQixJQUFJLENBQUM7UUFDakMsbUJBQWMsR0FBa0IsSUFBSSxDQUFDO1FBR25DLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQy9CLElBQUksQ0FBQyxHQUFHLEdBQUcsVUFBVSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxLQUFLLENBQUMsTUFBTTtRQUNWLE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7UUFDckMsTUFBTSxRQUFRLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsWUFBWSxDQUFzQixDQUFDO1FBQ3ZFLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN4QixNQUFNLFdBQVcsR0FBeUIsRUFBRSxDQUFDO1FBQzdDLElBQUk7WUFDRixNQUFNLEtBQUssR0FBRyxTQUFTLENBQUM7WUFDeEIsTUFBTSxPQUFPLEdBQUcsU0FBUyxDQUFDLGdCQUFnQixDQUFDLFdBQVcsRUFBRSxXQUFXLEVBQUUsS0FBSyxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUM7WUFDdkYsTUFBTSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsT0FBTyxFQUFFLEVBQUU7Z0JBQzlCLElBQUksSUFBSSxDQUFDLE9BQU8sS0FBSyxTQUFTLEVBQUU7b0JBQzlCLE1BQU0sYUFBYSxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxXQUFXLENBQUMsWUFBWSxDQUFDLHFCQUFxQixDQUFDLENBQUMsQ0FBQztvQkFDdkYsSUFBSSxhQUFhLEVBQUU7d0JBQ2pCLElBQUksQ0FBQyxjQUFjLEdBQUcsU0FBUyxDQUFDLGFBQWEsQ0FBQyxDQUFDO3dCQUMvQyxJQUFJLENBQUMsVUFBVSxHQUFHLFlBQVksQ0FBQyxhQUFhLENBQUMsQ0FBQztxQkFDL0M7aUJBQ0Y7Z0JBQ0QsTUFBTSxNQUFNLEdBQUcsa0JBQWtCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO2dCQUNwRCxZQUFZLENBQUMsSUFBSSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDO2dCQUN4RCxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUM3QixDQUFDLENBQUMsQ0FBQztTQUNKO1FBQUMsT0FBTyxDQUFDLEVBQUU7WUFDVixxQ0FBcUM7WUFDckMsc0NBQXNDO1lBQ3RDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDaEI7UUFDRCxPQUFPLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxHQUFHLENBQUMsTUFBTSxrQkFBa0IsQ0FBYyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDckYsQ0FBQztDQUNGO0FBRUQsTUFBTSxjQUFjLEdBQUcsZ0JBQWdCLENBQUM7QUFFeEMsTUFBTSxVQUFVLGFBQWEsQ0FBQyxXQUFvQjtJQUNoRCxNQUFNLE9BQU8sR0FBRyxXQUFtRCxDQUFDO0lBQ3BFLElBQUksU0FBUyxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUN4QyxJQUFJLENBQUMsU0FBUztRQUNaLFNBQVMsR0FBRyxPQUFPLENBQUMsY0FBYyxDQUFDLEdBQUcsSUFBSSxhQUFhLENBQUMsV0FBMEIsQ0FBUSxDQUFDO0lBQzdGLE9BQU8sU0FBUyxDQUFDO0FBQ25CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnREZWZpbmVkIH0gZnJvbSAnLi4vYXNzZXJ0L2Fzc2VydCc7XG5pbXBvcnQgeyBjdXJzb3JGb3JDb21wb25lbnQsIGN1cnNvclJlY29uY2lsZUVuZCB9IGZyb20gJy4uL3JlbmRlci9jdXJzb3InO1xuaW1wb3J0IHsgQ29tcG9uZW50UmVuZGVyUXVldWUsIHZpc2l0SnN4Tm9kZSB9IGZyb20gJy4uL3JlbmRlci9yZW5kZXInO1xuaW1wb3J0IHsgQ29tcG9uZW50U2NvcGVkU3R5bGVzLCBPblJlbmRlclByb3AgfSBmcm9tICcuLi91dGlsL21hcmtlcnMnO1xuaW1wb3J0IHsgZmxhdHRlblByb21pc2VUcmVlLCB0aGVuIH0gZnJvbSAnLi4vdXRpbC9wcm9taXNlcyc7XG5pbXBvcnQgeyBzdHlsZUNvbnRlbnQsIHN0eWxlSG9zdCB9IGZyb20gJy4vcXJsLXN0eWxlcyc7XG5pbXBvcnQgeyBuZXdJbnZva2VDb250ZXh0LCB1c2VJbnZva2UgfSBmcm9tICcuLi91c2UvdXNlLWNvcmUnO1xuaW1wb3J0IHsgZ2V0Q29udGV4dCwgZ2V0RXZlbnQsIFFDb250ZXh0IH0gZnJvbSAnLi4vcHJvcHMvcHJvcHMnO1xuXG4vLyBUT0RPKG1pc2tvKTogQ2FuIHdlIGdldCByaWQgb2YgdGhpcyB3aG9sZSBmaWxlLCBhbmQgaW5zdGVhZCB0ZWFjaCBnZXRQcm9wcyB0byBrbm93IGhvdyB0byByZW5kZXJcbi8vIHRoZSBhZHZhbnRhZ2Ugd2lsbCBiZSB0aGF0IHRoZSByZW5kZXIgY2FwYWJpbGl0eSB3b3VsZCB0aGVuIGJlIGV4cG9zZWQgdG8gdGhlIG91dHNpZGUgd29ybGQgYXMgd2VsbC5cblxuZXhwb3J0IGNsYXNzIFFDb21wb25lbnRDdHgge1xuICBfX2JyYW5kX18hOiAnUUNvbXBvbmVudEN0eCc7XG4gIGN0eDogUUNvbnRleHQ7XG4gIGhvc3RFbGVtZW50OiBIVE1MRWxlbWVudDtcblxuICBzdHlsZUlkOiBzdHJpbmcgfCB1bmRlZmluZWQgfCBudWxsID0gdW5kZWZpbmVkO1xuICBzdHlsZUNsYXNzOiBzdHJpbmcgfCBudWxsID0gbnVsbDtcbiAgc3R5bGVIb3N0Q2xhc3M6IHN0cmluZyB8IG51bGwgPSBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKGhvc3RFbGVtZW50OiBIVE1MRWxlbWVudCkge1xuICAgIHRoaXMuaG9zdEVsZW1lbnQgPSBob3N0RWxlbWVudDtcbiAgICB0aGlzLmN0eCA9IGdldENvbnRleHQoaG9zdEVsZW1lbnQpO1xuICB9XG5cbiAgYXN5bmMgcmVuZGVyKCk6IFByb21pc2U8SFRNTEVsZW1lbnRbXT4ge1xuICAgIGNvbnN0IGhvc3RFbGVtZW50ID0gdGhpcy5ob3N0RWxlbWVudDtcbiAgICBjb25zdCBvblJlbmRlciA9IGdldEV2ZW50KHRoaXMuY3R4LCBPblJlbmRlclByb3ApIGFzIGFueSBhcyAoKSA9PiB2b2lkO1xuICAgIGFzc2VydERlZmluZWQob25SZW5kZXIpO1xuICAgIGNvbnN0IHJlbmRlclF1ZXVlOiBDb21wb25lbnRSZW5kZXJRdWV1ZSA9IFtdO1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBldmVudCA9ICdxUmVuZGVyJztcbiAgICAgIGNvbnN0IHByb21pc2UgPSB1c2VJbnZva2UobmV3SW52b2tlQ29udGV4dChob3N0RWxlbWVudCwgaG9zdEVsZW1lbnQsIGV2ZW50KSwgb25SZW5kZXIpO1xuICAgICAgYXdhaXQgdGhlbihwcm9taXNlLCAoanN4Tm9kZSkgPT4ge1xuICAgICAgICBpZiAodGhpcy5zdHlsZUlkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBjb25zdCBzY29wZWRTdHlsZUlkID0gKHRoaXMuc3R5bGVJZCA9IGhvc3RFbGVtZW50LmdldEF0dHJpYnV0ZShDb21wb25lbnRTY29wZWRTdHlsZXMpKTtcbiAgICAgICAgICBpZiAoc2NvcGVkU3R5bGVJZCkge1xuICAgICAgICAgICAgdGhpcy5zdHlsZUhvc3RDbGFzcyA9IHN0eWxlSG9zdChzY29wZWRTdHlsZUlkKTtcbiAgICAgICAgICAgIHRoaXMuc3R5bGVDbGFzcyA9IHN0eWxlQ29udGVudChzY29wZWRTdHlsZUlkKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY3Vyc29yID0gY3Vyc29yRm9yQ29tcG9uZW50KHRoaXMuaG9zdEVsZW1lbnQpO1xuICAgICAgICB2aXNpdEpzeE5vZGUodGhpcywgcmVuZGVyUXVldWUsIGN1cnNvciwganN4Tm9kZSwgZmFsc2UpO1xuICAgICAgICBjdXJzb3JSZWNvbmNpbGVFbmQoY3Vyc29yKTtcbiAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIC8vIFRPRE8obWlza28pOiBQcm9wZXIgZXJyb3IgaGFuZGxpbmdcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICBjb25zb2xlLmxvZyhlKTtcbiAgICB9XG4gICAgcmV0dXJuIFt0aGlzLmhvc3RFbGVtZW50LCAuLi4oYXdhaXQgZmxhdHRlblByb21pc2VUcmVlPEhUTUxFbGVtZW50PihyZW5kZXJRdWV1ZSkpXTtcbiAgfVxufVxuXG5jb25zdCBDT01QT05FTlRfUFJPUCA9ICdfX3FDb21wb25lbnRfXyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRRQ29tcG9uZW50KGhvc3RFbGVtZW50OiBFbGVtZW50KTogUUNvbXBvbmVudEN0eCB8IHVuZGVmaW5lZCB7XG4gIGNvbnN0IGVsZW1lbnQgPSBob3N0RWxlbWVudCBhcyB7IFtDT01QT05FTlRfUFJPUF0/OiBRQ29tcG9uZW50Q3R4IH07XG4gIGxldCBjb21wb25lbnQgPSBlbGVtZW50W0NPTVBPTkVOVF9QUk9QXTtcbiAgaWYgKCFjb21wb25lbnQpXG4gICAgY29tcG9uZW50ID0gZWxlbWVudFtDT01QT05FTlRfUFJPUF0gPSBuZXcgUUNvbXBvbmVudEN0eChob3N0RWxlbWVudCBhcyBIVE1MRWxlbWVudCkgYXMgYW55O1xuICByZXR1cm4gY29tcG9uZW50O1xufVxuIl19","import { assertDefined } from '../assert/assert';\nimport { getPlatform } from '../platform/platform';\nimport { QHostAttr } from '../util/markers';\nimport { getQComponent } from '../component/component-ctx';\n/**\n * Mark component for rendering.\n *\n * Use `notifyRender` method to mark a component for rendering at some later point in time.\n * This method uses `getPlatform(doc).queueRender` for scheduling of the rendering. The\n * default implementation of the method is to use `requestAnimationFrame` to do actual rendering.\n *\n * The method is intended to coalesce multiple calls into `notifyRender` into a single call for\n * rendering.\n *\n * @param hostElement - Host-element of the component to re-render.\n * @returns A promise which is resolved when the component has been rendered.\n * @public\n */\n// TODO(misko): tests\n// TODO(misko): this should take QComponent as well.\nexport function notifyRender(hostElement) {\n    assertDefined(hostElement.getAttribute(QHostAttr));\n    getScheduled(hostElement.ownerDocument).add(hostElement);\n    return scheduleRender(hostElement.ownerDocument);\n}\nconst SCHEDULE = Symbol();\nexport function getScheduled(doc) {\n    let set = doc[SCHEDULE];\n    if (!set) {\n        set = doc[SCHEDULE] = new Set();\n    }\n    return set;\n}\n/**\n * Schedule rendering for the future.\n *\n * Multiple calls to this function result in a single `rAF` scheduling creating coalescence.\n *\n * Rendering is achieved by `querySelectorAll` looking for all `on:q-render` attributes.\n *\n * @returns a `Promise` of all of the `HostElements` which were re-rendered.\n * @internal\n */\nexport function scheduleRender(doc) {\n    return getPlatform(doc).queueRender(renderMarked);\n}\nexport async function renderMarked(doc) {\n    const set = getScheduled(doc);\n    const hosts = Array.from(set);\n    set.clear();\n    return Promise.all(hosts.map((hostElement) => {\n        const cmp = getQComponent(hostElement);\n        return cmp && cmp.render();\n    }));\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZ5LXJlbmRlci5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvcmVuZGVyL25vdGlmeS1yZW5kZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUVuRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDNUMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRTNEOzs7Ozs7Ozs7Ozs7O0dBYUc7QUFDSCxxQkFBcUI7QUFDckIsb0RBQW9EO0FBQ3BELE1BQU0sVUFBVSxZQUFZLENBQUMsV0FBb0I7SUFDL0MsYUFBYSxDQUFDLFdBQVcsQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztJQUNuRCxZQUFZLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN6RCxPQUFPLGNBQWMsQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFRLENBQUM7QUFDMUQsQ0FBQztBQUVELE1BQU0sUUFBUSxHQUFHLE1BQU0sRUFBRSxDQUFDO0FBQzFCLE1BQU0sVUFBVSxZQUFZLENBQUMsR0FBYTtJQUN4QyxJQUFJLEdBQUcsR0FBSSxHQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDakMsSUFBSSxDQUFDLEdBQUcsRUFBRTtRQUNSLEdBQUcsR0FBSSxHQUFXLENBQUMsUUFBUSxDQUFDLEdBQUcsSUFBSSxHQUFHLEVBQUUsQ0FBQztLQUMxQztJQUNELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQztBQUVEOzs7Ozs7Ozs7R0FTRztBQUNILE1BQU0sVUFBVSxjQUFjLENBQUMsR0FBYTtJQUMxQyxPQUFPLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDcEQsQ0FBQztBQUVELE1BQU0sQ0FBQyxLQUFLLFVBQVUsWUFBWSxDQUFDLEdBQWE7SUFDOUMsTUFBTSxHQUFHLEdBQUcsWUFBWSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzlCLE1BQU0sS0FBSyxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFpQixDQUFDO0lBQzlDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNaLE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FDaEIsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFdBQVcsRUFBRSxFQUFFO1FBQ3hCLE1BQU0sR0FBRyxHQUFHLGFBQWEsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUN2QyxPQUFPLEdBQUcsSUFBSSxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDN0IsQ0FBQyxDQUFDLENBQ0gsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnREZWZpbmVkIH0gZnJvbSAnLi4vYXNzZXJ0L2Fzc2VydCc7XG5pbXBvcnQgeyBnZXRQbGF0Zm9ybSB9IGZyb20gJy4uL3BsYXRmb3JtL3BsYXRmb3JtJztcbmltcG9ydCB0eXBlIHsgSG9zdEVsZW1lbnRzIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgeyBRSG9zdEF0dHIgfSBmcm9tICcuLi91dGlsL21hcmtlcnMnO1xuaW1wb3J0IHsgZ2V0UUNvbXBvbmVudCB9IGZyb20gJy4uL2NvbXBvbmVudC9jb21wb25lbnQtY3R4JztcblxuLyoqXG4gKiBNYXJrIGNvbXBvbmVudCBmb3IgcmVuZGVyaW5nLlxuICpcbiAqIFVzZSBgbm90aWZ5UmVuZGVyYCBtZXRob2QgdG8gbWFyayBhIGNvbXBvbmVudCBmb3IgcmVuZGVyaW5nIGF0IHNvbWUgbGF0ZXIgcG9pbnQgaW4gdGltZS5cbiAqIFRoaXMgbWV0aG9kIHVzZXMgYGdldFBsYXRmb3JtKGRvYykucXVldWVSZW5kZXJgIGZvciBzY2hlZHVsaW5nIG9mIHRoZSByZW5kZXJpbmcuIFRoZVxuICogZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgbWV0aG9kIGlzIHRvIHVzZSBgcmVxdWVzdEFuaW1hdGlvbkZyYW1lYCB0byBkbyBhY3R1YWwgcmVuZGVyaW5nLlxuICpcbiAqIFRoZSBtZXRob2QgaXMgaW50ZW5kZWQgdG8gY29hbGVzY2UgbXVsdGlwbGUgY2FsbHMgaW50byBgbm90aWZ5UmVuZGVyYCBpbnRvIGEgc2luZ2xlIGNhbGwgZm9yXG4gKiByZW5kZXJpbmcuXG4gKlxuICogQHBhcmFtIGhvc3RFbGVtZW50IC0gSG9zdC1lbGVtZW50IG9mIHRoZSBjb21wb25lbnQgdG8gcmUtcmVuZGVyLlxuICogQHJldHVybnMgQSBwcm9taXNlIHdoaWNoIGlzIHJlc29sdmVkIHdoZW4gdGhlIGNvbXBvbmVudCBoYXMgYmVlbiByZW5kZXJlZC5cbiAqIEBwdWJsaWNcbiAqL1xuLy8gVE9ETyhtaXNrbyk6IHRlc3RzXG4vLyBUT0RPKG1pc2tvKTogdGhpcyBzaG91bGQgdGFrZSBRQ29tcG9uZW50IGFzIHdlbGwuXG5leHBvcnQgZnVuY3Rpb24gbm90aWZ5UmVuZGVyKGhvc3RFbGVtZW50OiBFbGVtZW50KTogUHJvbWlzZTx2b2lkPiB7XG4gIGFzc2VydERlZmluZWQoaG9zdEVsZW1lbnQuZ2V0QXR0cmlidXRlKFFIb3N0QXR0cikpO1xuICBnZXRTY2hlZHVsZWQoaG9zdEVsZW1lbnQub3duZXJEb2N1bWVudCkuYWRkKGhvc3RFbGVtZW50KTtcbiAgcmV0dXJuIHNjaGVkdWxlUmVuZGVyKGhvc3RFbGVtZW50Lm93bmVyRG9jdW1lbnQpIGFzIGFueTtcbn1cblxuY29uc3QgU0NIRURVTEUgPSBTeW1ib2woKTtcbmV4cG9ydCBmdW5jdGlvbiBnZXRTY2hlZHVsZWQoZG9jOiBEb2N1bWVudCk6IFNldDxFbGVtZW50PiB7XG4gIGxldCBzZXQgPSAoZG9jIGFzIGFueSlbU0NIRURVTEVdO1xuICBpZiAoIXNldCkge1xuICAgIHNldCA9IChkb2MgYXMgYW55KVtTQ0hFRFVMRV0gPSBuZXcgU2V0KCk7XG4gIH1cbiAgcmV0dXJuIHNldDtcbn1cblxuLyoqXG4gKiBTY2hlZHVsZSByZW5kZXJpbmcgZm9yIHRoZSBmdXR1cmUuXG4gKlxuICogTXVsdGlwbGUgY2FsbHMgdG8gdGhpcyBmdW5jdGlvbiByZXN1bHQgaW4gYSBzaW5nbGUgYHJBRmAgc2NoZWR1bGluZyBjcmVhdGluZyBjb2FsZXNjZW5jZS5cbiAqXG4gKiBSZW5kZXJpbmcgaXMgYWNoaWV2ZWQgYnkgYHF1ZXJ5U2VsZWN0b3JBbGxgIGxvb2tpbmcgZm9yIGFsbCBgb246cS1yZW5kZXJgIGF0dHJpYnV0ZXMuXG4gKlxuICogQHJldHVybnMgYSBgUHJvbWlzZWAgb2YgYWxsIG9mIHRoZSBgSG9zdEVsZW1lbnRzYCB3aGljaCB3ZXJlIHJlLXJlbmRlcmVkLlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzY2hlZHVsZVJlbmRlcihkb2M6IERvY3VtZW50KTogUHJvbWlzZTxIb3N0RWxlbWVudHM+IHtcbiAgcmV0dXJuIGdldFBsYXRmb3JtKGRvYykucXVldWVSZW5kZXIocmVuZGVyTWFya2VkKTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlbmRlck1hcmtlZChkb2M6IERvY3VtZW50KSB7XG4gIGNvbnN0IHNldCA9IGdldFNjaGVkdWxlZChkb2MpO1xuICBjb25zdCBob3N0cyA9IEFycmF5LmZyb20oc2V0KSBhcyBIb3N0RWxlbWVudHM7XG4gIHNldC5jbGVhcigpO1xuICByZXR1cm4gUHJvbWlzZS5hbGwoXG4gICAgaG9zdHMubWFwKChob3N0RWxlbWVudCkgPT4ge1xuICAgICAgY29uc3QgY21wID0gZ2V0UUNvbXBvbmVudChob3N0RWxlbWVudCk7XG4gICAgICByZXR1cm4gY21wICYmIGNtcC5yZW5kZXIoKTtcbiAgICB9KVxuICApO1xufVxuIl19","import { assertEqual } from '../assert/assert';\nimport { QError, qError } from '../error/error';\nimport { notifyRender } from '../render/notify-render';\nimport { tryGetInvokeContext } from '../use/use-core';\nimport { debugStringify } from '../util/stringify';\nexport function qObject(obj) {\n    assertEqual(unwrapProxy(obj), obj, 'Unexpected proxy at this location');\n    if (obj == null || typeof obj !== 'object') {\n        // TODO(misko): centralize\n        throw new Error(`Q-ERROR: Only objects can be wrapped in 'QObject', got ` + debugStringify(obj));\n    }\n    if (obj.constructor !== Object) {\n        throw new Error(`Q-ERROR: Only objects literals can be wrapped in 'QObject', got ` + debugStringify(obj));\n    }\n    const proxy = readWriteProxy(obj);\n    Object.assign(proxy[QOjectTargetSymbol], obj);\n    return proxy;\n}\nexport function _restoreQObject(obj, subs) {\n    return readWriteProxy(obj, subs);\n}\nexport function getTransient(obj, key) {\n    return obj[QOjectTransientsSymbol].get(key);\n}\nexport function setTransient(obj, key, value) {\n    obj[QOjectTransientsSymbol].set(key, value);\n    return value;\n}\n/**\n * Creates a proxy which notifies of any writes.\n */\nexport function readWriteProxy(target, subs) {\n    if (!target || typeof target !== 'object')\n        return target;\n    let proxy = proxyMap.get(target);\n    if (proxy)\n        return proxy;\n    proxy = new Proxy(target, new ReadWriteProxyHandler(subs));\n    proxyMap.set(target, proxy);\n    return proxy;\n}\nexport const QOjectTargetSymbol = ':target:';\nexport const QOjectSubsSymbol = ':subs:';\nconst QOjectTransientsSymbol = ':transients:';\nexport const QObjectIdSymbol = ':id:';\nexport function unwrapProxy(proxy) {\n    if (proxy && typeof proxy == 'object') {\n        const value = proxy[QOjectTargetSymbol];\n        if (value)\n            return value;\n    }\n    return proxy;\n}\nexport function wrap(value) {\n    if (value && typeof value === 'object') {\n        const nakedValue = unwrapProxy(value);\n        if (nakedValue !== value) {\n            // already a proxy return;\n            return value;\n        }\n        verifySerializable(value);\n        const proxy = proxyMap.get(value);\n        return proxy ? proxy : readWriteProxy(value);\n    }\n    else {\n        return value;\n    }\n}\nclass ReadWriteProxyHandler {\n    constructor(subs = new Map()) {\n        this.subs = subs;\n        this.transients = null;\n    }\n    getSub(el) {\n        let sub = this.subs.get(el);\n        if (!sub) {\n            this.subs.set(el, (sub = new Set()));\n        }\n        return sub;\n    }\n    get(target, prop) {\n        if (prop === QOjectTargetSymbol)\n            return target;\n        if (prop === QOjectSubsSymbol)\n            return this.subs;\n        if (prop === QOjectTransientsSymbol) {\n            return this.transients || (this.transients = new WeakMap());\n        }\n        const value = target[prop];\n        const invokeCtx = tryGetInvokeContext();\n        if (invokeCtx && invokeCtx.subscriptions) {\n            const isArray = Array.isArray(target);\n            const sub = this.getSub(invokeCtx.hostElement);\n            if (!isArray) {\n                sub.add(prop);\n            }\n        }\n        return wrap(value);\n    }\n    set(target, prop, newValue) {\n        const unwrappedNewValue = unwrapProxy(newValue);\n        const isArray = Array.isArray(target);\n        if (isArray) {\n            target[prop] = unwrappedNewValue;\n            this.subs.forEach((_, el) => {\n                notifyRender(el);\n            });\n            return true;\n        }\n        const oldValue = target[prop];\n        if (oldValue !== unwrappedNewValue) {\n            target[prop] = unwrappedNewValue;\n            this.subs.forEach((propSets, el) => {\n                if (propSets.has(prop)) {\n                    notifyRender(el);\n                }\n            });\n        }\n        return true;\n    }\n    has(target, property) {\n        if (property === QOjectTargetSymbol)\n            return true;\n        return Object.prototype.hasOwnProperty.call(target, property);\n    }\n    ownKeys(target) {\n        return Object.getOwnPropertyNames(target);\n    }\n}\nfunction verifySerializable(value) {\n    if (typeof value == 'object' && value !== null) {\n        if (Array.isArray(value))\n            return;\n        if (Object.getPrototypeOf(value) !== Object.prototype) {\n            throw qError(QError.TODO, 'Only primitive and object literals can be serialized.');\n        }\n    }\n}\nconst proxyMap = new WeakMap();\n//# sourceMappingURL=data:application/json;base64,","import { assertDefined } from '../assert/assert';\nimport { getContext } from '../props/props';\nimport { isElement } from '../util/element';\nimport { ELEMENT_ID, ELEMENT_ID_PREFIX, ELEMENT_ID_SELECTOR, QHostAttr, QObjAttr, QObjSelector, } from '../util/markers';\nimport { qDev } from '../util/qdev';\nimport { QOjectSubsSymbol, QOjectTargetSymbol, _restoreQObject } from './q-object';\nexport const JSON_OBJ_PREFIX = '\\u0010';\nexport function QStore_hydrate(doc) {\n    const script = doc.querySelector('script[type=\"qwik/json\"]');\n    doc.qDehydrate = () => QStore_dehydrate(doc);\n    if (script) {\n        script.parentElement.removeChild(script);\n        const meta = JSON.parse(script.textContent || '{}');\n        const elements = new Map();\n        doc.querySelectorAll(ELEMENT_ID_SELECTOR).forEach((el) => {\n            const id = el.getAttribute(ELEMENT_ID);\n            elements.set(ELEMENT_ID_PREFIX + id, el);\n        });\n        reviveQObjects(meta.objs, meta.subs, elements);\n        for (const obj of meta.objs) {\n            reviveNestedQObjects(obj, meta.objs);\n        }\n        doc.querySelectorAll(QObjSelector).forEach((el) => {\n            const qobj = el.getAttribute(QObjAttr);\n            const host = el.getAttribute(QHostAttr);\n            const ctx = getContext(el);\n            qobj.split(' ').forEach((part) => {\n                const obj = part[0] === ELEMENT_ID_PREFIX ? elements.get(part) : meta.objs[strToInt(part)];\n                assertDefined(obj);\n                ctx.refMap.add(obj);\n            });\n            if (host) {\n                const [props, events] = host.split(' ').map(strToInt);\n                assertDefined(props);\n                assertDefined(events);\n                ctx.props = ctx.refMap.get(props);\n                ctx.events = ctx.refMap.get(events);\n            }\n        });\n    }\n}\n/**\n * Serialize the current state of the application into DOM\n *\n * @param doc\n */\nexport function QStore_dehydrate(doc) {\n    const objSet = new Set();\n    // Element to index\n    const elementToIndex = new Map();\n    function getElementID(el) {\n        let id = elementToIndex.get(el);\n        if (id === undefined) {\n            id = intToStr(elementToIndex.size);\n            el.setAttribute(ELEMENT_ID, id);\n            id = ELEMENT_ID_PREFIX + id;\n            elementToIndex.set(el, id);\n        }\n        return id;\n    }\n    // Find all Elements which have qObjects attached to them\n    const elements = doc.querySelectorAll(QObjSelector);\n    elements.forEach((node) => {\n        const props = getContext(node);\n        const qMap = props.refMap;\n        qMap.array.forEach((v) => {\n            collectQObjects(v, objSet);\n        });\n    });\n    // Convert objSet to array\n    const objArray = Array.from(objSet);\n    objArray.sort((a, b) => {\n        const isProxyA = a[QOjectTargetSymbol] !== undefined ? 0 : 1;\n        const isProxyB = b[QOjectTargetSymbol] !== undefined ? 0 : 1;\n        return isProxyA - isProxyB;\n    });\n    const objs = objArray.map((a) => {\n        var _a;\n        return (_a = a[QOjectTargetSymbol]) !== null && _a !== void 0 ? _a : a;\n    });\n    const subs = objArray\n        .map((a) => {\n        const subs = a[QOjectSubsSymbol];\n        if (subs) {\n            return Object.fromEntries(Array.from(subs.entries()).map(([el, set]) => {\n                if (el.isConnected) {\n                    const id = getElementID(el);\n                    return [id, Array.from(set)];\n                }\n                else {\n                    return [undefined, undefined];\n                }\n            }));\n        }\n        else {\n            return null;\n        }\n    })\n        .filter((a) => !!a);\n    const objToId = new Map();\n    let count = 0;\n    for (const obj of objs) {\n        objToId.set(obj, count);\n        count++;\n    }\n    const data = {\n        objs,\n        subs,\n    };\n    // Write back to the dom\n    elements.forEach((node) => {\n        const ctx = getContext(node);\n        const props = ctx.props;\n        const events = ctx.events;\n        const attribute = ctx.refMap.array\n            .map((obj) => {\n            var _a;\n            if (isElement(obj)) {\n                return getElementID(obj);\n            }\n            const idx = typeof obj === 'object' ? objToId.get((_a = obj[QOjectTargetSymbol]) !== null && _a !== void 0 ? _a : obj) : objToId.get(obj);\n            assertDefined(idx);\n            return intToStr(idx);\n        })\n            .join(' ');\n        node.setAttribute(QObjAttr, attribute);\n        if (props) {\n            const objs = [props];\n            if (events) {\n                objs.push(events);\n            }\n            node.setAttribute(QHostAttr, objs.map((obj) => ctx.refMap.indexOf(obj)).join(' '));\n        }\n    });\n    // Serialize\n    const script = doc.createElement('script');\n    script.setAttribute('type', 'qwik/json');\n    script.textContent = JSON.stringify(data, function (key, value) {\n        var _a, _b;\n        if (key.startsWith('__'))\n            return undefined;\n        if (value && typeof value === 'object') {\n            value = (_a = value[QOjectTargetSymbol]) !== null && _a !== void 0 ? _a : value;\n        }\n        if (this === objs)\n            return value;\n        const idx = objToId.get(value);\n        if (idx !== undefined) {\n            return intToStr(idx);\n        }\n        return (_b = elementToIndex.get(value)) !== null && _b !== void 0 ? _b : value;\n    }, qDev ? '  ' : undefined);\n    doc.body.appendChild(script);\n}\nfunction reviveQObjects(objs, subs, elementMap) {\n    for (let i = 0; i < objs.length; i++) {\n        const sub = subs[i];\n        if (sub) {\n            const value = objs[i];\n            const converted = new Map(Object.entries(sub).map((entry) => {\n                const el = elementMap.get(entry[0]);\n                assertDefined(el);\n                const set = new Set(entry[1]);\n                return [el, set];\n            }));\n            objs[i] = _restoreQObject(value, converted);\n        }\n    }\n}\nfunction reviveNestedQObjects(obj, map) {\n    if (obj && typeof obj == 'object') {\n        if (Array.isArray(obj)) {\n            for (let i = 0; i < obj.length; i++) {\n                const value = obj[i];\n                if (typeof value == 'string') {\n                    obj[i] = map[strToInt(value)];\n                }\n                else {\n                    reviveNestedQObjects(value, map);\n                }\n            }\n        }\n        else {\n            for (const key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    const value = obj[key];\n                    if (typeof value == 'string') {\n                        obj[key] = map[strToInt(value)];\n                    }\n                    else {\n                        reviveNestedQObjects(value, map);\n                    }\n                }\n            }\n        }\n    }\n}\nfunction collectQObjects(obj, seen) {\n    if (obj != null) {\n        if (isElement(obj)) {\n            return;\n        }\n        if (typeof obj === 'boolean') {\n            return;\n        }\n        if (seen.has(obj))\n            return;\n        seen.add(obj);\n        if (typeof obj === 'object') {\n            if (Array.isArray(obj)) {\n                for (let i = 0; i < obj.length; i++) {\n                    collectQObjects(obj[i], seen);\n                }\n            }\n            else {\n                for (const key in obj) {\n                    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                        const value = obj[key];\n                        collectQObjects(value, seen);\n                    }\n                }\n            }\n        }\n    }\n}\nexport const intToStr = (nu) => {\n    return nu.toString(36);\n};\nexport const strToInt = (nu) => {\n    return parseInt(nu, 36);\n};\n//# sourceMappingURL=data:application/json;base64,","import { QObjAttr } from '../util/markers';\nexport function newQObjectMap(element) {\n    const map = new Map();\n    const array = [];\n    let added = element.hasAttribute(QObjAttr);\n    return {\n        array,\n        get(index) {\n            return array[index];\n        },\n        indexOf(obj) {\n            return map.get(obj);\n        },\n        add(object) {\n            const index = map.get(object);\n            if (index === undefined) {\n                map.set(object, array.length);\n                array.push(object);\n                if (!added) {\n                    element.setAttribute(QObjAttr, '');\n                    added = true;\n                }\n                return array.length - 1;\n            }\n            return index;\n        },\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvcHMtb2JqLW1hcC5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvcHJvcHMvcHJvcHMtb2JqLW1hcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFTM0MsTUFBTSxVQUFVLGFBQWEsQ0FBQyxPQUFnQjtJQUM1QyxNQUFNLEdBQUcsR0FBRyxJQUFJLEdBQUcsRUFBd0IsQ0FBQztJQUM1QyxNQUFNLEtBQUssR0FBbUIsRUFBRSxDQUFDO0lBQ2pDLElBQUksS0FBSyxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUM7SUFFM0MsT0FBTztRQUNMLEtBQUs7UUFDTCxHQUFHLENBQUMsS0FBYTtZQUNmLE9BQU8sS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3RCLENBQUM7UUFDRCxPQUFPLENBQUMsR0FBVztZQUNqQixPQUFPLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdEIsQ0FBQztRQUNELEdBQUcsQ0FBQyxNQUFvQjtZQUN0QixNQUFNLEtBQUssR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQzlCLElBQUksS0FBSyxLQUFLLFNBQVMsRUFBRTtnQkFDdkIsR0FBRyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUM5QixLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUNuQixJQUFJLENBQUMsS0FBSyxFQUFFO29CQUNWLE9BQU8sQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDO29CQUNuQyxLQUFLLEdBQUcsSUFBSSxDQUFDO2lCQUNkO2dCQUNELE9BQU8sS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7YUFDekI7WUFDRCxPQUFPLEtBQUssQ0FBQztRQUNmLENBQUM7S0FDWSxDQUFDO0FBQ2xCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFFPYmplY3QgfSBmcm9tICcuLi9vYmplY3QvcS1vYmplY3QnO1xuaW1wb3J0IHsgUU9iakF0dHIgfSBmcm9tICcuLi91dGlsL21hcmtlcnMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFFPYmplY3RNYXAge1xuICBhZGQocU9iamVjdDogUU9iamVjdDxhbnk+KTogbnVtYmVyO1xuICBnZXQoaW5kZXg6IG51bWJlcik6IFFPYmplY3Q8YW55PiB8IHVuZGVmaW5lZDtcbiAgaW5kZXhPZihvYmplY3Q6IFFPYmplY3Q8YW55Pik6IG51bWJlciB8IHVuZGVmaW5lZDtcbiAgYXJyYXk6IFFPYmplY3Q8YW55PltdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbmV3UU9iamVjdE1hcChlbGVtZW50OiBFbGVtZW50KTogUU9iamVjdE1hcCB7XG4gIGNvbnN0IG1hcCA9IG5ldyBNYXA8UU9iamVjdDxhbnk+LCBudW1iZXI+KCk7XG4gIGNvbnN0IGFycmF5OiBRT2JqZWN0PGFueT5bXSA9IFtdO1xuICBsZXQgYWRkZWQgPSBlbGVtZW50Lmhhc0F0dHJpYnV0ZShRT2JqQXR0cik7XG5cbiAgcmV0dXJuIHtcbiAgICBhcnJheSxcbiAgICBnZXQoaW5kZXg6IG51bWJlcik6IFFPYmplY3Q8YW55PiB8IHVuZGVmaW5lZCB7XG4gICAgICByZXR1cm4gYXJyYXlbaW5kZXhdO1xuICAgIH0sXG4gICAgaW5kZXhPZihvYmo6IHN0cmluZyk6IG51bWJlciB8IHVuZGVmaW5lZCB7XG4gICAgICByZXR1cm4gbWFwLmdldChvYmopO1xuICAgIH0sXG4gICAgYWRkKG9iamVjdDogUU9iamVjdDxhbnk+KSB7XG4gICAgICBjb25zdCBpbmRleCA9IG1hcC5nZXQob2JqZWN0KTtcbiAgICAgIGlmIChpbmRleCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIG1hcC5zZXQob2JqZWN0LCBhcnJheS5sZW5ndGgpO1xuICAgICAgICBhcnJheS5wdXNoKG9iamVjdCk7XG4gICAgICAgIGlmICghYWRkZWQpIHtcbiAgICAgICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZShRT2JqQXR0ciwgJycpO1xuICAgICAgICAgIGFkZGVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXJyYXkubGVuZ3RoIC0gMTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBpbmRleDtcbiAgICB9LFxuICB9IGFzIFFPYmplY3RNYXA7XG59XG4iXX0=","import { QError, qError } from '../error/error';\nimport { readWriteProxy } from '../object/q-object';\nimport { QStore_hydrate } from '../object/store';\nimport { newQObjectMap } from './props-obj-map';\nimport { qPropWriteQRL, qPropReadQRL } from './props-on';\nError.stackTraceLimit = 9999;\n// TODO(misko): For better debugger experience the getProps should never store Proxy, always naked objects to make it easier to traverse in the debugger.\nconst Q_IS_HYDRATED = '__isHydrated__';\nexport const Q_CTX = '__ctx__';\nexport function hydrateIfNeeded(element) {\n    const doc = element.ownerDocument;\n    const isHydrated = doc[Q_IS_HYDRATED];\n    if (!isHydrated) {\n        doc[Q_IS_HYDRATED] = true;\n        QStore_hydrate(doc);\n    }\n}\nexport function getContext(element) {\n    hydrateIfNeeded(element);\n    let ctx = element[Q_CTX];\n    if (!ctx) {\n        const cache = new Map();\n        element[Q_CTX] = ctx = {\n            element,\n            cache,\n            refMap: newQObjectMap(element),\n            id: undefined,\n            props: undefined,\n        };\n    }\n    return ctx;\n}\nexport function setEvent(ctx, prop, value) {\n    qPropWriteQRL(ctx, prop, value);\n}\nexport function getEvent(ctx, prop) {\n    return qPropReadQRL(ctx, prop);\n}\nexport function getProps(ctx) {\n    if (!ctx.props) {\n        ctx.props = readWriteProxy({});\n        ctx.refMap.add(ctx.props);\n    }\n    return ctx.props;\n}\nexport function getEvents(ctx) {\n    let events = ctx.events;\n    if (!events) {\n        events = ctx.events = {};\n        ctx.refMap.add(ctx.events);\n    }\n    return events;\n}\n/**\n * Turn an `Array` or object literal into a `class` or `style`\n *\n * @param obj `string`, `Array` or object literal\n * @param isClass `true` if expecting `class` output\n * @returns `string`\n */\nexport function stringifyClassOrStyle(obj, isClass) {\n    if (obj == null)\n        return '';\n    if (typeof obj == 'object') {\n        let text = '';\n        let sep = '';\n        if (Array.isArray(obj)) {\n            if (!isClass) {\n                throw qError(QError.Render_unsupportedFormat_obj_attr, obj, 'style');\n            }\n            for (let i = 0; i < obj.length; i++) {\n                text += sep + obj[i];\n                sep = ' ';\n            }\n        }\n        else {\n            for (const key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    const value = obj[key];\n                    text += isClass ? (value ? sep + key : '') : sep + key + ':' + value;\n                    sep = isClass ? ' ' : ';';\n                }\n            }\n        }\n        return text;\n    }\n    return String(obj);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvcHMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3Byb3BzL3Byb3BzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDaEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsYUFBYSxFQUFjLE1BQU0saUJBQWlCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGFBQWEsRUFBRSxZQUFZLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFekQsS0FBSyxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUM7QUFFN0IseUpBQXlKO0FBRXpKLE1BQU0sYUFBYSxHQUFHLGdCQUFnQixDQUFDO0FBQ3ZDLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxTQUFTLENBQUM7QUFFL0IsTUFBTSxVQUFVLGVBQWUsQ0FBQyxPQUFnQjtJQUM5QyxNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsYUFBYyxDQUFDO0lBQ25DLE1BQU0sVUFBVSxHQUFJLEdBQVcsQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUMvQyxJQUFJLENBQUMsVUFBVSxFQUFFO1FBQ2QsR0FBVyxDQUFDLGFBQWEsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUNuQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUM7S0FDckI7QUFDSCxDQUFDO0FBZUQsTUFBTSxVQUFVLFVBQVUsQ0FBQyxPQUFnQjtJQUN6QyxlQUFlLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFekIsSUFBSSxHQUFHLEdBQWMsT0FBZSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzVDLElBQUksQ0FBQyxHQUFHLEVBQUU7UUFDUixNQUFNLEtBQUssR0FBRyxJQUFJLEdBQUcsRUFBRSxDQUFDO1FBQ3ZCLE9BQWUsQ0FBQyxLQUFLLENBQUMsR0FB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QUMsQ0FBQztBQUNyQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUUVycm9yLCBxRXJyb3IgfSBmcm9tICcuLi9lcnJvci9lcnJvcic7XG5pbXBvcnQgeyByZWFkV3JpdGVQcm94eSB9IGZyb20gJy4uL29iamVjdC9xLW9iamVjdCc7XG5pbXBvcnQgeyBRU3RvcmVfaHlkcmF0ZSB9IGZyb20gJy4uL29iamVjdC9zdG9yZSc7XG5pbXBvcnQgeyBuZXdRT2JqZWN0TWFwLCBRT2JqZWN0TWFwIH0gZnJvbSAnLi9wcm9wcy1vYmotbWFwJztcbmltcG9ydCB7IHFQcm9wV3JpdGVRUkwsIHFQcm9wUmVhZFFSTCB9IGZyb20gJy4vcHJvcHMtb24nO1xuXG5FcnJvci5zdGFja1RyYWNlTGltaXQgPSA5OTk5O1xuXG4vLyBUT0RPKG1pc2tvKTogRm9yIGJldHRlciBkZWJ1Z2dlciBleHBlcmllbmNlIHRoZSBnZXRQcm9wcyBzaG91bGQgbmV2ZXIgc3RvcmUgUHJveHksIGFsd2F5cyBuYWtlZCBvYmplY3RzIHRvIG1ha2UgaXQgZWFzaWVyIHRvIHRyYXZlcnNlIGluIHRoZSBkZWJ1Z2dlci5cblxuY29uc3QgUV9JU19IWURSQVRFRCA9ICdfX2lzSHlkcmF0ZWRfXyc7XG5leHBvcnQgY29uc3QgUV9DVFggPSAnX19jdHhfXyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBoeWRyYXRlSWZOZWVkZWQoZWxlbWVudDogRWxlbWVudCk6IHZvaWQge1xuICBjb25zdCBkb2MgPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQhO1xuICBjb25zdCBpc0h5ZHJhdGVkID0gKGRvYyBhcyBhbnkpW1FfSVNfSFlEUkFURURdO1xuICBpZiAoIWlzSHlkcmF0ZWQpIHtcbiAgICAoZG9jIGFzIGFueSlbUV9JU19IWURSQVRFRF0gPSB0cnVlO1xuICAgIFFTdG9yZV9oeWRyYXRlKGRvYyk7XG4gIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBRQ29udGV4dEV2ZW50cyB7XG4gIFtldmVudE5hbWU6IHN0cmluZ106IHN0cmluZyB8IHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBRQ29udGV4dCB7XG4gIGNhY2hlOiBNYXA8c3RyaW5nLCBhbnk+O1xuICByZWZNYXA6IFFPYmplY3RNYXA7XG4gIGVsZW1lbnQ6IEVsZW1lbnQ7XG4gIGlkOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gIHByb3BzOiBSZWNvcmQ8c3RyaW5nLCBhbnk+IHwgdW5kZWZpbmVkO1xuICBldmVudHM/OiBRQ29udGV4dEV2ZW50cztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldENvbnRleHQoZWxlbWVudDogRWxlbWVudCk6IFFDb250ZXh0IHtcbiAgaHlkcmF0ZUlmTmVlZGVkKGVsZW1lbnQpO1xuXG4gIGxldCBjdHg6IFFDb250ZXh0ID0gKGVsZW1lbnQgYXMgYW55KVtRX0NUWF07XG4gIGlmICghY3R4KSB7XG4gICAgY29uc3QgY2FjaGUgPSBuZXcgTWFwKCk7XG4gICAgKGVsZW1lbnQgYXMgYW55KVtRX0NUWF0gPSBjdHggPSB7XG4gICAgICBlbGVtZW50LFxuICAgICAgY2FjaGUsXG4gICAgICByZWZNYXA6IG5ld1FPYmplY3RNYXAoZWxlbWVudCksXG4gICAgICBpZDogdW5kZWZpbmVkLFxuICAgICAgcHJvcHM6IHVuZGVmaW5lZCxcbiAgICB9O1xuICB9XG4gIHJldHVybiBjdHg7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRFdmVudChjdHg6IFFDb250ZXh0LCBwcm9wOiBzdHJpbmcsIHZhbHVlOiBhbnkpIHtcbiAgcVByb3BXcml0ZVFSTChjdHgsIHByb3AsIHZhbHVlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEV2ZW50KGN0eDogUUNvbnRleHQsIHByb3A6IHN0cmluZyk6IGFueSB7XG4gIHJldHVybiBxUHJvcFJlYWRRUkwoY3R4LCBwcm9wKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFByb3BzKGN0eDogUUNvbnRleHQpIHtcbiAgaWYgKCFjdHgucHJvcHMpIHtcbiAgICBjdHgucHJvcHMgPSByZWFkV3JpdGVQcm94eSh7fSk7XG4gICAgY3R4LnJlZk1hcC5hZGQoY3R4LnByb3BzKTtcbiAgfVxuICByZXR1cm4gY3R4LnByb3BzITtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEV2ZW50cyhjdHg6IFFDb250ZXh0KTogUUNvbnRleHRFdmVudHMge1xuICBsZXQgZXZlbnRzID0gY3R4LmV2ZW50cztcbiAgaWYgKCFldmVudHMpIHtcbiAgICBldmVudHMgPSBjdHguZXZlbnRzID0ge307XG4gICAgY3R4LnJlZk1hcC5hZGQoY3R4LmV2ZW50cyk7XG4gIH1cbiAgcmV0dXJuIGV2ZW50cztcbn1cblxuLyoqXG4gKiBUdXJuIGFuIGBBcnJheWAgb3Igb2JqZWN0IGxpdGVyYWwgaW50byBhIGBjbGFzc2Agb3IgYHN0eWxlYFxuICpcbiAqIEBwYXJhbSBvYmogYHN0cmluZ2AsIGBBcnJheWAgb3Igb2JqZWN0IGxpdGVyYWxcbiAqIEBwYXJhbSBpc0NsYXNzIGB0cnVlYCBpZiBleHBlY3RpbmcgYGNsYXNzYCBvdXRwdXRcbiAqIEByZXR1cm5zIGBzdHJpbmdgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdHJpbmdpZnlDbGFzc09yU3R5bGUob2JqOiBhbnksIGlzQ2xhc3M6IGJvb2xlYW4pOiBzdHJpbmcge1xuICBpZiAob2JqID09IG51bGwpIHJldHVybiAnJztcbiAgaWYgKHR5cGVvZiBvYmogPT0gJ29iamVjdCcpIHtcbiAgICBsZXQgdGV4dCA9ICcnO1xuICAgIGxldCBzZXAgPSAnJztcbiAgICBpZiAoQXJyYXkuaXNBcnJheShvYmopKSB7XG4gICAgICBpZiAoIWlzQ2xhc3MpIHtcbiAgICAgICAgdGhyb3cgcUVycm9yKFFFcnJvci5SZW5kZXJfdW5zdXBwb3J0ZWRGb3JtYXRfb2JqX2F0dHIsIG9iaiwgJ3N0eWxlJyk7XG4gICAgICB9XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG9iai5sZW5ndGg7IGkrKykge1xuICAgICAgICB0ZXh0ICs9IHNlcCArIG9ialtpXTtcbiAgICAgICAgc2VwID0gJyAnO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBmb3IgKGNvbnN0IGtleSBpbiBvYmopIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHtcbiAgICAgICAgICBjb25zdCB2YWx1ZSA9IG9ialtrZXldO1xuICAgICAgICAgIHRleHQgKz0gaXNDbGFzcyA/ICh2YWx1ZSA/IHNlcCArIGtleSA6ICcnKSA6IHNlcCArIGtleSArICc6JyArIHZhbHVlO1xuICAgICAgICAgIHNlcCA9IGlzQ2xhc3MgPyAnICcgOiAnOyc7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRleHQ7XG4gIH1cbiAgcmV0dXJuIFN0cmluZyhvYmopO1xufVxuIl19","import { toQrlOrError } from '../import/qrl';\nimport { $, implicit$FirstArg, qrlImport } from '../import/qrl.public';\nimport { h } from '../render/jsx/factory';\nimport { newInvokeContext, useInvoke, useWaitOn } from '../use/use-core';\nimport { useHostElement } from '../use/use-host-element.public';\nimport { ComponentScopedStyles, OnRenderProp } from '../util/markers';\nimport { styleKey } from './qrl-styles';\nimport { getContext, getProps } from '../props/props';\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onUnmount\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onUnmount instead)\n/**\n * A lazy-loadable reference to a component's destroy hook.\n *\n * Invoked when the component is destroyed (removed from render tree).\n *\n * @public\n */\n// </docs>\nexport function onUnmount(unmountFn) {\n    throw new Error('IMPLEMENT: onUnmount' + unmountFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onUnmount\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onUnmount instead)\n/**\n * A lazy-loadable reference to a component's destroy hook.\n *\n * Invoked when the component is destroyed (removed from render tree).\n *\n * @public\n */\n// </docs>\nexport const onUnmount$ = implicit$FirstArg(onUnmount);\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onResume\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onResume instead)\n/**\n * A lazy-loadable reference to a component's on resume hook.\n *\n * The hook is eagerly invoked when the application resumes on the client. Because it is called\n * eagerly, this allows the component to hydrate even if no user interaction has taken place.\n *\n * @public\n */\n// </docs>\nexport function onResume(resumeFn) {\n    throw new Error('IMPLEMENT: onRender' + resumeFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onResume\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onResume instead)\n/**\n * A lazy-loadable reference to a component's on resume hook.\n *\n * The hook is eagerly invoked when the application resumes on the client. Because it is called\n * eagerly, this allows the component to hydrate even if no user interaction has taken place.\n *\n * @public\n */\n// </docs>\nexport const onResume$ = implicit$FirstArg(onResume);\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onHydrate\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onHydrate instead)\n/**\n * A lazy-loadable reference to a component's on hydrate hook.\n *\n * Invoked when the component's state is re-hydrated from serialization. This allows the\n * component to do any work to re-activate itself.\n *\n * @public\n */\n// </docs>\nexport function onHydrate(hydrateFn) {\n    throw new Error('IMPLEMENT: onHydrate' + hydrateFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onHydrate\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onHydrate instead)\n/**\n * A lazy-loadable reference to a component's on hydrate hook.\n *\n * Invoked when the component's state is re-hydrated from serialization. This allows the\n * component to do any work to re-activate itself.\n *\n * @public\n */\n// </docs>\nexport const onHydrate$ = implicit$FirstArg(onHydrate);\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onDehydrate\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onDehydrate instead)\n/**\n * A lazy-loadable reference to a component's on dehydrate hook.\n *\n * Invoked when the component's state is being serialized (dehydrated) into the DOM. This allows\n * the component to do last-minute clean-up before its state is serialized.\n *\n * Typically used with transient state.\n *\n * @public\n */\n// </docs>\nexport function onDehydrate(dehydrateFn) {\n    throw new Error('IMPLEMENT: onDehydrate' + dehydrateFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onDehydrate\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onDehydrate instead)\n/**\n * A lazy-loadable reference to a component's on dehydrate hook.\n *\n * Invoked when the component's state is being serialized (dehydrated) into the DOM. This allows\n * the component to do last-minute clean-up before its state is serialized.\n *\n * Typically used with transient state.\n *\n * @public\n */\n// </docs>\nexport const onDehydrate$ = implicit$FirstArg(onDehydrate);\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#on\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#on instead)\n/**\n * Register a listener on the current component's host element.\n *\n * Used to programmatically add event listeners. Useful from custom `use*` methods, which do not\n * have access to the JSX.\n *\n * See: `on`, `onWindow`, `onDocument`.\n *\n * @public\n */\n// </docs>\nexport function on(event, eventFn) {\n    throw new Error('IMPLEMENT: on' + eventFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onDocument\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onDocument instead)\n/**\n * Register a listener on `document`.\n *\n * Used to programmatically add event listeners. Useful from custom `use*` methods, which do not\n * have access to the JSX.\n *\n * See: `on`, `onWindow`, `onDocument`.\n *\n * @public\n */\n// </docs>\nexport function onDocument(event, eventFn) {\n    throw new Error('IMPLEMENT: onDocument' + eventFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onWindow\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onWindow instead)\n/**\n * Register a listener on `window`.\n *\n * Used to programmatically add event listeners. Useful from custom `use*` methods, which do not\n * have access to the JSX.\n *\n * See: `on`, `onWindow`, `onDocument`.\n *\n * @public\n */\n// </docs>\nexport function onWindow(event, eventFn) {\n    throw new Error('IMPLEMENT: onWindow' + eventFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#useStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#useStyles instead)\n/**\n * Refer to component styles.\n *\n * @alpha\n */\n// </docs>\nexport function useStyles(styles) {\n    _useStyles(styles, false);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#useStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#useStyles instead)\n/**\n * Refer to component styles.\n *\n * @alpha\n */\n// </docs>\nexport const useStyles$ = implicit$FirstArg(useStyles);\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#useScopedStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#useScopedStyles instead)\n/**\n * @alpha\n */\n// </docs>\nexport function useScopedStyles(styles) {\n    _useStyles(styles, true);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#useScopedStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#useScopedStyles instead)\n/**\n * @alpha\n */\n// </docs>\nexport const useScopedStyles$ = implicit$FirstArg(useScopedStyles);\n/**\n * @public\n */\nexport function component(onMount, options = {}) {\n    var _a;\n    const tagName = (_a = options.tagName) !== null && _a !== void 0 ? _a : 'div';\n    // Return a QComponent Factory function.\n    return function QComponent(props) {\n        const onRenderFactory = async (hostElement) => {\n            // Turn function into QRL\n            const onMountQrl = toQrlOrError(onMount);\n            const onMountFn = await resolveQrl(hostElement, onMountQrl);\n            const ctx = getContext(hostElement);\n            const props = getProps(ctx);\n            const invokeCtx = newInvokeContext(hostElement, hostElement);\n            return useInvoke(invokeCtx, onMountFn, props);\n        };\n        onRenderFactory.__brand__ = 'QRLFactory';\n        return h(tagName, Object.assign({ [OnRenderProp]: onRenderFactory }, props));\n    };\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#component\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#component instead)\n/**\n * Declare a Qwik component that can be used to create UI.\n *\n * Use `component` (and `component$`) to declare a Qwik component. A Qwik component is a special\n * kind of component that allows the Qwik framework to lazy load and execute the component\n * independently of other Qwik components as well as lazy load the component's life-cycle hooks\n * and event handlers.\n *\n * Side note: You can also declare regular (standard JSX) components that will have standard\n * synchronous behavior.\n *\n * Qwik component is a facade that describes how the component should be used without forcing the\n * implementation of the component to be eagerly loaded. A minimum Qwik definition consists of:\n *\n * - Component `onMount` method, which needs to return an\n * - `onRender` closure which constructs the component's JSX.\n *\n * ### Example:\n *\n * An example showing how to create a counter component:\n *\n * ```typescript\n * export const Counter = component$((props: { value?: number; step?: number }) => {\n *   const state = createStore({ count: props.value || 0 });\n *   return $(() => (\n *     <div>\n *       <span>{state.count}</span>\n *       <button on$:click={() => (state.count += props.step || 1)}>+</button>\n *     </div>\n *   ));\n * });\n * ```\n *\n * - `component$` is how a component gets declared.\n * - `{ value?: number; step?: number }` declares the public (props) interface of the component.\n * - `{ count: number }` declares the private (state) interface of the component.\n * - `onMount` closure: is used to create the data store (see: `createStore`);\n * - `$`: mark which parts of the component will be lazy-loaded. (see `$` for details.)\n *\n * The above can then be used like so:\n *\n * ```typescript\n * export const OtherComponent = component$(() => {\n *   return $(() => <Counter value={100} />);\n * });\n * ```\n *\n * See also: `component`, `onUnmount`, `onHydrate`, `onDehydrate`, `onHalt`, `onResume`, `on`,\n * `onDocument`, `onWindow`, `useStyles`, `useScopedStyles`\n *\n * @param onMount - Initialization closure used when the component is first created.\n * @param tagName - Optional components options. It can be used to set a custom tag-name to be\n * used for the component's host element.\n *\n * @public\n */\n// </docs>\nexport function component$(onMount, options) {\n    return component($(onMount), options);\n}\nfunction resolveQrl(hostElement, onMountQrl) {\n    return onMountQrl.symbolRef\n        ? Promise.resolve(onMountQrl.symbolRef)\n        : Promise.resolve(null).then(() => {\n            return qrlImport(hostElement, onMountQrl);\n        });\n}\nfunction _useStyles(styles, scoped) {\n    const styleQrl = toQrlOrError(styles);\n    const styleId = styleKey(styleQrl);\n    const hostElement = useHostElement();\n    if (scoped) {\n        hostElement.setAttribute(ComponentScopedStyles, styleId);\n    }\n    useWaitOn(qrlImport(hostElement, styleQrl).then((styleText) => {\n        const document = hostElement.ownerDocument;\n        const head = document.querySelector('head');\n        if (head && !head.querySelector(`style[q\\\\:style=\"${styleId}\"]`)) {\n            const style = document.createElement('style');\n            style.setAttribute('q:style', styleId);\n            style.textContent = scoped ? styleText.replace(/�/g, styleId) : styleText;\n            head.appendChild(style);\n        }\n    }));\n}\n//# sourceMappingURL=data:application/json;base64,","import { getContext, getEvent } from '../props/props';\nimport { newInvokeContext, useInvoke } from '../use/use-core';\nimport { useHostElement } from '../use/use-host-element.public';\nimport { OnRenderSelector } from '../util/markers';\nexport function _bubble(eventType, payload) {\n    let node = useHostElement();\n    payload = Object.assign({ type: eventType }, payload);\n    const eventName = 'on:' + eventType;\n    while (node) {\n        const ctx = getContext(node);\n        const listener = getEvent(ctx, eventName);\n        const hostElement = node.closest(OnRenderSelector);\n        listener && useInvoke(newInvokeContext(hostElement, node, payload), listener);\n        node = node.parentElement;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnViYmxlLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9ldmVudC9idWJibGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsU0FBUyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ2hFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRW5ELE1BQU0sVUFBVSxPQUFPLENBQUMsU0FBaUIsRUFBRSxPQUFXO0lBQ3BELElBQUksSUFBSSxHQUFHLGNBQWMsRUFBd0IsQ0FBQztJQUNsRCxPQUFPLG1CQUFLLElBQUksRUFBRSxTQUFTLElBQUssT0FBTyxDQUFFLENBQUM7SUFDMUMsTUFBTSxTQUFTLEdBQUcsS0FBSyxHQUFHLFNBQVMsQ0FBQztJQUNwQyxPQUFPLElBQUksRUFBRTtRQUNYLE1BQU0sR0FBRyxHQUFHLFVBQVUsQ0FBQyxJQUFJLENBQVEsQ0FBQztRQUNwQyxNQUFNLFFBQVEsR0FBNkIsUUFBUSxDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUMsQ0FBQztRQUNwRSxNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFFLENBQUM7UUFDcEQsUUFBUSxJQUFJLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLEVBQUUsSUFBSSxFQUFFLE9BQU8sQ0FBQyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQzlFLElBQUksR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDO0tBQzNCO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldENvbnRleHQsIGdldEV2ZW50IH0gZnJvbSAnLi4vcHJvcHMvcHJvcHMnO1xuaW1wb3J0IHsgbmV3SW52b2tlQ29udGV4dCwgdXNlSW52b2tlIH0gZnJvbSAnLi4vdXNlL3VzZS1jb3JlJztcbmltcG9ydCB7IHVzZUhvc3RFbGVtZW50IH0gZnJvbSAnLi4vdXNlL3VzZS1ob3N0LWVsZW1lbnQucHVibGljJztcbmltcG9ydCB7IE9uUmVuZGVyU2VsZWN0b3IgfSBmcm9tICcuLi91dGlsL21hcmtlcnMnO1xuXG5leHBvcnQgZnVuY3Rpb24gX2J1YmJsZShldmVudFR5cGU6IHN0cmluZywgcGF5bG9hZDoge30pOiB2b2lkIHtcbiAgbGV0IG5vZGUgPSB1c2VIb3N0RWxlbWVudCgpIGFzIEhUTUxFbGVtZW50IHwgbnVsbDtcbiAgcGF5bG9hZCA9IHsgdHlwZTogZXZlbnRUeXBlLCAuLi5wYXlsb2FkIH07XG4gIGNvbnN0IGV2ZW50TmFtZSA9ICdvbjonICsgZXZlbnRUeXBlO1xuICB3aGlsZSAobm9kZSkge1xuICAgIGNvbnN0IGN0eCA9IGdldENvbnRleHQobm9kZSkgYXMgYW55O1xuICAgIGNvbnN0IGxpc3RlbmVyOiB1bmRlZmluZWQgfCAoKCkgPT4gdm9pZCkgPSBnZXRFdmVudChjdHgsIGV2ZW50TmFtZSk7XG4gICAgY29uc3QgaG9zdEVsZW1lbnQgPSBub2RlLmNsb3Nlc3QoT25SZW5kZXJTZWxlY3RvcikhO1xuICAgIGxpc3RlbmVyICYmIHVzZUludm9rZShuZXdJbnZva2VDb250ZXh0KGhvc3RFbGVtZW50LCBub2RlLCBwYXlsb2FkKSwgbGlzdGVuZXIpO1xuICAgIG5vZGUgPSBub2RlLnBhcmVudEVsZW1lbnQ7XG4gIH1cbn1cbiJdfQ==","import { _bubble } from './bubble';\n/**\n * @public\n */\nexport function bubble(eventType, payload) {\n    return _bubble(eventType, payload || {});\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnViYmxlLnB1YmxpYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvZXZlbnQvYnViYmxlLnB1YmxpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBRW5DOztHQUVHO0FBQ0gsTUFBTSxVQUFVLE1BQU0sQ0FBVSxTQUFpQixFQUFFLE9BQWlCO0lBQ2xFLE9BQU8sT0FBTyxDQUFDLFNBQVMsRUFBRSxPQUFPLElBQUksRUFBRSxDQUFDLENBQUM7QUFDM0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9idWJibGUgfSBmcm9tICcuL2J1YmJsZSc7XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgZnVuY3Rpb24gYnViYmxlPFBBWUxPQUQ+KGV2ZW50VHlwZTogc3RyaW5nLCBwYXlsb2FkPzogUEFZTE9BRCk6IHZvaWQge1xuICByZXR1cm4gX2J1YmJsZShldmVudFR5cGUsIHBheWxvYWQgfHwge30pO1xufVxuIl19","import { QStore_dehydrate } from './store';\n//TODO(misko): Add public DOCS.\n//TODO(misko): Rename to dehydrate\n/**\n * @public\n */\nexport function dehydrate(document) {\n    QStore_dehydrate(document);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmUucHVibGljLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9vYmplY3Qvc3RvcmUucHVibGljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUUzQywrQkFBK0I7QUFDL0Isa0NBQWtDO0FBQ2xDOztHQUVHO0FBQ0gsTUFBTSxVQUFVLFNBQVMsQ0FBQyxRQUFrQjtJQUMxQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUM3QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUVN0b3JlX2RlaHlkcmF0ZSB9IGZyb20gJy4vc3RvcmUnO1xuXG4vL1RPRE8obWlza28pOiBBZGQgcHVibGljIERPQ1MuXG4vL1RPRE8obWlza28pOiBSZW5hbWUgdG8gZGVoeWRyYXRlXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlaHlkcmF0ZShkb2N1bWVudDogRG9jdW1lbnQpOiB2b2lkIHtcbiAgUVN0b3JlX2RlaHlkcmF0ZShkb2N1bWVudCk7XG59XG4iXX0=","import { getContext, getProps } from '../props/props';\nimport { getInvokeContext } from './use-core';\nimport { useHostElement } from './use-host-element.public';\nexport function useProps() {\n    const ctx = getInvokeContext();\n    let props = ctx.props;\n    if (!props) {\n        props = ctx.props = getProps(getContext(useHostElement()));\n    }\n    return props;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLXByb3BzLnB1YmxpYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXNlL3VzZS1wcm9wcy5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDOUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBRTNELE1BQU0sVUFBVSxRQUFRO0lBQ3RCLE1BQU0sR0FBRyxHQUFHLGdCQUFnQixFQUFFLENBQUM7SUFDL0IsSUFBSSxLQUFLLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQztJQUN0QixJQUFJLENBQUMsS0FBSyxFQUFFO1FBQ1YsS0FBSyxHQUFHLEdBQUcsQ0FBQyxLQUFLLEdBQUcsUUFBUSxDQUFDLFVBQVUsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxDQUFDLENBQUM7S0FDNUQ7SUFDRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFByb3BzIH0gZnJvbSAnLi4vaW5kZXgnO1xuaW1wb3J0IHsgZ2V0Q29udGV4dCwgZ2V0UHJvcHMgfSBmcm9tICcuLi9wcm9wcy9wcm9wcyc7XG5pbXBvcnQgeyBnZXRJbnZva2VDb250ZXh0IH0gZnJvbSAnLi91c2UtY29yZSc7XG5pbXBvcnQgeyB1c2VIb3N0RWxlbWVudCB9IGZyb20gJy4vdXNlLWhvc3QtZWxlbWVudC5wdWJsaWMnO1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlUHJvcHMoKTogUHJvcHMge1xuICBjb25zdCBjdHggPSBnZXRJbnZva2VDb250ZXh0KCk7XG4gIGxldCBwcm9wcyA9IGN0eC5wcm9wcztcbiAgaWYgKCFwcm9wcykge1xuICAgIHByb3BzID0gY3R4LnByb3BzID0gZ2V0UHJvcHMoZ2V0Q29udGV4dCh1c2VIb3N0RWxlbWVudCgpKSk7XG4gIH1cbiAgcmV0dXJuIHByb3BzO1xufVxuIl19","import { implicit$FirstArg } from '../import/qrl.public';\nimport { useHostElement } from '../use/use-host-element.public';\nimport { useProps } from '../use/use-props.public';\nimport { registerOnWatch } from './watch';\n// <docs markdown=\"https://hackmd.io/_Kl9br9tT8OB-1Dv8uR4Kg#onWatch\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2F_Kl9br9tT8OB-1Dv8uR4Kg%3Fboth#onWatch instead)\n/**\n * Reruns the `watchFn` when the observed inputs change.\n *\n * Use `onWatch` to observe changes on a set of inputs, and then re-execute the `watchFn` when\n * those inputs change.\n *\n * The `watchFn` only executes if the observed inputs change. To observe the inputs use the `obs`\n * function to wrap property reads. This creates subscriptions which will trigger the `watchFn`\n * to re-run.\n *\n * See: `Observer`\n *\n * @public\n *\n * ## Example\n *\n * The `onWatch` function is used to observe the `state.count` property. Any changes to the\n * `state.count` cause the `watchFn` to execute which in turn updates the `state.doubleCount` to\n * the double of `state.count`.\n *\n * ```typescript\n * export const MyComp = component$(() => {\n *   const store = createStore({ count: 0, doubleCount: 0 });\n *   onWatch$((obs) => {\n *     store.doubleCount = 2 * obs(store).count;\n *   });\n *   return $(() => (\n *     <div>\n *       <span>\n *         {store.count} / {store.doubleCount}\n *       </span>\n *       <button on$:click={() => store.count++}>+</button>\n *     </div>\n *   ));\n * });\n * ```\n *\n *\n * @param watch - Function which should be re-executed when changes to the inputs are detected\n * @public\n */\n// </docs>\nexport function onWatch(watchFn) {\n    registerOnWatch(useHostElement(), useProps(), watchFn);\n}\n// <docs markdown=\"https://hackmd.io/_Kl9br9tT8OB-1Dv8uR4Kg#onWatch\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2F_Kl9br9tT8OB-1Dv8uR4Kg%3Fboth#onWatch instead)\n/**\n * Reruns the `watchFn` when the observed inputs change.\n *\n * Use `onWatch` to observe changes on a set of inputs, and then re-execute the `watchFn` when\n * those inputs change.\n *\n * The `watchFn` only executes if the observed inputs change. To observe the inputs use the `obs`\n * function to wrap property reads. This creates subscriptions which will trigger the `watchFn`\n * to re-run.\n *\n * See: `Observer`\n *\n * @public\n *\n * ## Example\n *\n * The `onWatch` function is used to observe the `state.count` property. Any changes to the\n * `state.count` cause the `watchFn` to execute which in turn updates the `state.doubleCount` to\n * the double of `state.count`.\n *\n * ```typescript\n * export const MyComp = component$(() => {\n *   const store = createStore({ count: 0, doubleCount: 0 });\n *   onWatch$((obs) => {\n *     store.doubleCount = 2 * obs(store).count;\n *   });\n *   return $(() => (\n *     <div>\n *       <span>\n *         {store.count} / {store.doubleCount}\n *       </span>\n *       <button on$:click={() => store.count++}>+</button>\n *     </div>\n *   ));\n * });\n * ```\n *\n *\n * @param watch - Function which should be re-executed when changes to the inputs are detected\n * @public\n */\n// </docs>\nexport const onWatch$ = implicit$FirstArg(onWatch);\n//# sourceMappingURL=data:application/json;base64,","/**\n * Use to render asynchronous (`Promise`) values.\n *\n * A `Promise` does not allow a synchronous examination of its state. For this reason\n * `<Async>` provides a mechanism to render pending, resolved and error state of a `Promise`.\n * `<Async>` provides that mechanism by registering a `then` method with the `Promise` and\n * providing callbacks hooks for `pending`, `resolved` and `rejected` state of the promise.\n *\n * Additionally, `<Async>` automatically re-renders the portion of the view when the status\n * of the `Promise` changes.\n *\n * `<Async>` provides three callbacks:\n * - `onPending`: invoked initially to provide a way for the template to provide output while\n *   waiting for the `promise` to resolve.\n * - `onResolved`: invoked when the `promise` is `resolved` allowing the template to generate\n *   output using the `resolved` value.\n * - `onError`: invoked when the `promise` is `rejected` allowing the template to generate\n *   error output describing the problem.\n *\n * The `<Async>` can be used in two ways, which are semantically equivalent and are provided\n * based on the developer needs/preferences.\n *\n * ### Using multiple callbacks\n *\n * ```typescript\n * <Async\n *   resolve={Promise.resolve('some value')}\n *   onPending={() => <span>loading...</span>}\n *   onResolved={(value) => <span>{value}</span>}\n *   onError={(rejection) => <pre>{rejection}</pre>}\n * />\n * ```\n *\n * ### Using single callbacks\n *\n * ```typescript\n * <Async resolve={Promise.resolve('some value')}>\n *   {(response) => {\n *     if (response.isPending) return <span>loading...</span>;\n *     if (response.isResolved) return <span>{response.value}</span>;\n *     if (response.isRejected) return <pre>{response.rejection}</pre>;\n *   }}\n * </Async>\n * ```\n *\n * @param onPending - invoked initially to provide a way for the template to provide output while\n *   waiting for the `promise` to resolve.\n * @param onResolved - invoked when the `promise` is `resolved` allowing the template to generate\n *   output using the `resolved` value.\n * @param onError - invoked when the `promise` is `rejected` allowing the template to generate\n *   error output describing the problem.\n * @param children -  a single callback function for `onPending`, `onResolved` and `onError`.\n *   (Use either `children` or `onPending`, `onResolved` and `onError`, but not both.)\n *   See \"Using multiple callbacks\" vs \"Using single callbacks\" above.\n *\n * @public\n */\nexport function Async(props) {\n    // TODO(misko): implement onPending/onResolved/onError\n    if (!('children' in props)) {\n        throw new Error('IMPLEMENT');\n    }\n    const children = [props.children].flat()[0];\n    const renderFn = typeof children == 'function' ? children : null;\n    const promiseValue = {\n        isPending: true,\n        isResolved: false,\n        value: undefined,\n        isRejected: false,\n        rejection: undefined,\n    };\n    let pending;\n    const jsxPromise = new Promise((resolve, reject) => {\n        pending = renderFn && renderFn(promiseValue);\n        Promise.resolve(props.resolve).then((value) => {\n            promiseValue.isPending = false;\n            promiseValue.isResolved = true;\n            promiseValue.value = value;\n            return resolve(renderFn && renderFn(promiseValue));\n        }, (error) => {\n            promiseValue.isPending = false;\n            promiseValue.isRejected = true;\n            promiseValue.rejection = error;\n            return reject(renderFn && renderFn(promiseValue));\n        });\n    });\n    jsxPromise.whilePending = pending;\n    return jsxPromise;\n}\n//# sourceMappingURL=data:application/json;base64,","import { flattenPromiseTree } from '../util/promises';\nimport { NodeType } from '../util/types';\nimport { cursorForParent } from './cursor';\nimport { isJSXNode, jsx } from './jsx/jsx-runtime';\nimport { visitJsxNode } from './render';\n/**\n * Render JSX.\n *\n * Use this method to render JSX. This function does reconciling which means\n * it always tries to reuse what is already in the DOM (rather then destroy and\n * recrate content.)\n *\n * @param parent - Element which will act as a parent to `jsxNode`. When\n *     possible the rendering will try to reuse existing nodes.\n * @param jsxNode - JSX to render\n * @public\n */\nexport async function render(parent, jsxNode) {\n    // If input is not JSX, convert it\n    if (!isJSXNode(jsxNode)) {\n        jsxNode = jsx(jsxNode, null);\n    }\n    const renderQueue = [];\n    let firstChild = parent.firstChild;\n    while (firstChild && firstChild.nodeType > NodeType.COMMENT_NODE) {\n        firstChild = firstChild.nextSibling;\n    }\n    const cursor = cursorForParent(parent);\n    visitJsxNode(null, renderQueue, cursor, jsxNode, false);\n    return flattenPromiseTree(renderQueue);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVuZGVyLnB1YmxpYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvcmVuZGVyL3JlbmRlci5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxTQUFTLEVBQUUsR0FBRyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFbkQsT0FBTyxFQUF3QixZQUFZLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFFOUQ7Ozs7Ozs7Ozs7O0dBV0c7QUFDSCxNQUFNLENBQUMsS0FBSyxVQUFVLE1BQU0sQ0FDMUIsTUFBMEIsRUFDMUIsT0FBa0Q7SUFFbEQsa0NBQWtDO0lBQ2xDLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLEVBQUU7UUFDdkIsT0FBTyxHQUFHLEdBQUcsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7S0FDOUI7SUFDRCxNQUFNLFdBQVcsR0FBeUIsRUFBRSxDQUFDO0lBQzdDLElBQUksVUFBVSxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUM7SUFDbkMsT0FBTyxVQUFVLElBQUksVUFBVSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUMsWUFBWSxFQUFFO1FBQ2hFLFVBQVUsR0FBRyxVQUFVLENBQUMsV0FBVyxDQUFDO0tBQ3JDO0lBQ0QsTUFBTSxNQUFNLEdBQUcsZUFBZSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3ZDLFlBQVksQ0FBQyxJQUFJLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDeEQsT0FBTyxrQkFBa0IsQ0FBYyxXQUFXLENBQUMsQ0FBQztBQUN0RCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZmxhdHRlblByb21pc2VUcmVlIH0gZnJvbSAnLi4vdXRpbC9wcm9taXNlcyc7XG5pbXBvcnQgeyBOb2RlVHlwZSB9IGZyb20gJy4uL3V0aWwvdHlwZXMnO1xuaW1wb3J0IHsgY3Vyc29yRm9yUGFyZW50IH0gZnJvbSAnLi9jdXJzb3InO1xuaW1wb3J0IHsgaXNKU1hOb2RlLCBqc3ggfSBmcm9tICcuL2pzeC9qc3gtcnVudGltZSc7XG5pbXBvcnQgdHlwZSB7IEpTWE5vZGUsIEZ1bmN0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi9qc3gvdHlwZXMvanN4LW5vZGUnO1xuaW1wb3J0IHsgQ29tcG9uZW50UmVuZGVyUXVldWUsIHZpc2l0SnN4Tm9kZSB9IGZyb20gJy4vcmVuZGVyJztcblxuLyoqXG4gKiBSZW5kZXIgSlNYLlxuICpcbiAqIFVzZSB0aGlzIG1ldGhvZCB0byByZW5kZXIgSlNYLiBUaGlzIGZ1bmN0aW9uIGRvZXMgcmVjb25jaWxpbmcgd2hpY2ggbWVhbnNcbiAqIGl0IGFsd2F5cyB0cmllcyB0byByZXVzZSB3aGF0IGlzIGFscmVhZHkgaW4gdGhlIERPTSAocmF0aGVyIHRoZW4gZGVzdHJveSBhbmRcbiAqIHJlY3JhdGUgY29udGVudC4pXG4gKlxuICogQHBhcmFtIHBhcmVudCAtIEVsZW1lbnQgd2hpY2ggd2lsbCBhY3QgYXMgYSBwYXJlbnQgdG8gYGpzeE5vZGVgLiBXaGVuXG4gKiAgICAgcG9zc2libGUgdGhlIHJlbmRlcmluZyB3aWxsIHRyeSB0byByZXVzZSBleGlzdGluZyBub2Rlcy5cbiAqIEBwYXJhbSBqc3hOb2RlIC0gSlNYIHRvIHJlbmRlclxuICogQHB1YmxpY1xuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcmVuZGVyKFxuICBwYXJlbnQ6IEVsZW1lbnQgfCBEb2N1bWVudCxcbiAganN4Tm9kZTogSlNYTm9kZTx1bmtub3duPiB8IEZ1bmN0aW9uQ29tcG9uZW50PGFueT5cbik6IFByb21pc2U8SFRNTEVsZW1lbnRbXT4ge1xuICAvLyBJZiBpbnB1dCBpcyBub3QgSlNYLCBjb252ZXJ0IGl0XG4gIGlmICghaXNKU1hOb2RlKGpzeE5vZGUpKSB7XG4gICAganN4Tm9kZSA9IGpzeChqc3hOb2RlLCBudWxsKTtcbiAgfVxuICBjb25zdCByZW5kZXJRdWV1ZTogQ29tcG9uZW50UmVuZGVyUXVldWUgPSBbXTtcbiAgbGV0IGZpcnN0Q2hpbGQgPSBwYXJlbnQuZmlyc3RDaGlsZDtcbiAgd2hpbGUgKGZpcnN0Q2hpbGQgJiYgZmlyc3RDaGlsZC5ub2RlVHlwZSA+IE5vZGVUeXBlLkNPTU1FTlRfTk9ERSkge1xuICAgIGZpcnN0Q2hpbGQgPSBmaXJzdENoaWxkLm5leHRTaWJsaW5nO1xuICB9XG4gIGNvbnN0IGN1cnNvciA9IGN1cnNvckZvclBhcmVudChwYXJlbnQpO1xuICB2aXNpdEpzeE5vZGUobnVsbCwgcmVuZGVyUXVldWUsIGN1cnNvciwganN4Tm9kZSwgZmFsc2UpO1xuICByZXR1cm4gZmxhdHRlblByb21pc2VUcmVlPEhUTUxFbGVtZW50PihyZW5kZXJRdWV1ZSk7XG59XG4iXX0=","import { assertEqual } from '../assert/assert';\nimport { getInvokeContext } from './use-core';\n// <docs markdown=\"https://hackmd.io/lQ8v7fyhR-WD3b-2aRUpyw#useEvent\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2FlQ8v7fyhR-WD3b-2aRUpyw%3Fboth#useEvent instead)\n/**\n * Retrieves the current event which triggered the action.\n *\n * NOTE: The `useEvent` method can only be used in the synchronous portion of the callback\n * (before any `await` statements.)\n *\n * @public\n */\n// </docs>\nexport function useEvent(expectEventType) {\n    const event = getInvokeContext().event;\n    expectEventType && assertEqual(event.type, expectEventType);\n    return event;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWV2ZW50LnB1YmxpYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXNlL3VzZS1ldmVudC5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUU5QyxzRUFBc0U7QUFDdEUseUNBQXlDO0FBQ3pDLGtHQUFrRztBQUNsRzs7Ozs7OztHQU9HO0FBQ0gsVUFBVTtBQUNWLE1BQU0sVUFBVSxRQUFRLENBQW1CLGVBQXdCO0lBQ2pFLE1BQU0sS0FBSyxHQUFHLGdCQUFnQixFQUFFLENBQUMsS0FBMEIsQ0FBQztJQUM1RCxlQUFlLElBQUksV0FBVyxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsZUFBZSxDQUFDLENBQUM7SUFDNUQsT0FBTyxLQUFxQixDQUFDO0FBQy9CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnRFcXVhbCB9IGZyb20gJy4uL2Fzc2VydC9hc3NlcnQnO1xuaW1wb3J0IHsgZ2V0SW52b2tlQ29udGV4dCB9IGZyb20gJy4vdXNlLWNvcmUnO1xuXG4vLyA8ZG9jcyBtYXJrZG93bj1cImh0dHBzOi8vaGFja21kLmlvL2xROHY3ZnloUi1XRDNiLTJhUlVweXcjdXNlRXZlbnRcIj5cbi8vICEhRE8gTk9UIEVESVQgVEhJUyBDT01NRU5UIERJUkVDVExZISEhXG4vLyAoZWRpdCBodHRwczovL2hhY2ttZC5pby9AcXdpay1kb2NzL0JreHBTejgwWS8lMkZsUTh2N2Z5aFItV0QzYi0yYVJVcHl3JTNGYm90aCN1c2VFdmVudCBpbnN0ZWFkKVxuLyoqXG4gKiBSZXRyaWV2ZXMgdGhlIGN1cnJlbnQgZXZlbnQgd2hpY2ggdHJpZ2dlcmVkIHRoZSBhY3Rpb24uXG4gKlxuICogTk9URTogVGhlIGB1c2VFdmVudGAgbWV0aG9kIGNhbiBvbmx5IGJlIHVzZWQgaW4gdGhlIHN5bmNocm9ub3VzIHBvcnRpb24gb2YgdGhlIGNhbGxiYWNrXG4gKiAoYmVmb3JlIGFueSBgYXdhaXRgIHN0YXRlbWVudHMuKVxuICpcbiAqIEBwdWJsaWNcbiAqL1xuLy8gPC9kb2NzPlxuZXhwb3J0IGZ1bmN0aW9uIHVzZUV2ZW50PEVWRU5UIGV4dGVuZHMge30+KGV4cGVjdEV2ZW50VHlwZT86IHN0cmluZyk6IEVWRU5UIHtcbiAgY29uc3QgZXZlbnQgPSBnZXRJbnZva2VDb250ZXh0KCkuZXZlbnQgYXMgeyB0eXBlPzogc3RyaW5nIH07XG4gIGV4cGVjdEV2ZW50VHlwZSAmJiBhc3NlcnRFcXVhbChldmVudC50eXBlLCBleHBlY3RFdmVudFR5cGUpO1xuICByZXR1cm4gZXZlbnQgYXMgYW55IGFzIEVWRU5UO1xufVxuIl19","import { getInvokeContext } from './use-core';\nexport function useURL() {\n    const url = getInvokeContext().url;\n    if (!url) {\n        // TODO(misko): centralize\n        throw new Error('Q-ERROR: no URL is associated with the execution context');\n    }\n    return url;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLXVybC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3VzZS91c2UtdXJsLnB1YmxpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFOUMsTUFBTSxVQUFVLE1BQU07SUFDcEIsTUFBTSxHQUFHLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQyxHQUFHLENBQUM7SUFDbkMsSUFBSSxDQUFDLEdBQUcsRUFBRTtRQUNSLDBCQUEwQjtRQUMxQixNQUFNLElBQUksS0FBSyxDQUFDLDBEQUEwRCxDQUFDLENBQUM7S0FDN0U7SUFDRCxPQUFPLEdBQUksQ0FBQztBQUNkLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRJbnZva2VDb250ZXh0IH0gZnJvbSAnLi91c2UtY29yZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VVUkwoKTogVVJMIHtcbiAgY29uc3QgdXJsID0gZ2V0SW52b2tlQ29udGV4dCgpLnVybDtcbiAgaWYgKCF1cmwpIHtcbiAgICAvLyBUT0RPKG1pc2tvKTogY2VudHJhbGl6ZVxuICAgIHRocm93IG5ldyBFcnJvcignUS1FUlJPUjogbm8gVVJMIGlzIGFzc29jaWF0ZWQgd2l0aCB0aGUgZXhlY3V0aW9uIGNvbnRleHQnKTtcbiAgfVxuICByZXR1cm4gdXJsITtcbn1cbiJdfQ==","import { assertDefined } from '../assert/assert';\nimport { parseQRL } from '../import/qrl';\nimport { qInflate } from '../json/q-json';\nimport { getContext } from '../props/props';\nimport { getInvokeContext } from './use-core';\nimport { useURL } from './use-url.public';\n// <docs markdown=\"https://hackmd.io/lQ8v7fyhR-WD3b-2aRUpyw#useLexicalScope\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2FlQ8v7fyhR-WD3b-2aRUpyw%3Fboth#useLexicalScope instead)\n/**\n * Used by the Qwik Optimizer to restore the lexical scoped variables.\n *\n * This method should not be present in the application source code.\n *\n * NOTE: `useLexicalScope` method can only be used in the synchronous portion of the callback\n * (before any `await` statements.)\n *\n * @public\n */\n// </docs>\nexport function useLexicalScope() {\n    var _a;\n    const context = getInvokeContext();\n    const qrl = (_a = context.qrl) !== null && _a !== void 0 ? _a : parseQRL(decodeURIComponent(String(useURL())));\n    if (qrl.captureRef == null) {\n        const el = context.element;\n        const ctx = getContext(el);\n        assertDefined(qrl.capture);\n        qrl.captureRef = qrl.capture.map((idx) => qInflate(idx, ctx));\n    }\n    return qrl.captureRef;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWxleGljYWwtc2NvcGUucHVibGljLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS91c2UvdXNlLWxleGljYWwtc2NvcGUucHVibGljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMxQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDNUMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQzlDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUUxQyw2RUFBNkU7QUFDN0UseUNBQXlDO0FBQ3pDLHlHQUF5RztBQUN6Rzs7Ozs7Ozs7O0dBU0c7QUFDSCxVQUFVO0FBQ1YsTUFBTSxVQUFVLGVBQWU7O0lBQzdCLE1BQU0sT0FBTyxHQUFHLGdCQUFnQixFQUFFLENBQUM7SUFDbkMsTUFBTSxHQUFHLEdBQUcsTUFBQSxPQUFPLENBQUMsR0FBRyxtQ0FBSSxRQUFRLENBQUMsa0JBQWtCLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFFLElBQUksR0FBRyxDQUFDLFVBQVUsSUFBSSxJQUFJLEVBQUU7UUFDMUIsTUFBTSxFQUFFLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUMzQixNQUFNLEdBQUcsR0FBRyxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDM0IsYUFBYSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMzQixHQUFHLENBQUMsVUFBVSxHQUFHLEdBQUcsQ0FBQyxPQUFRLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7S0FDaEU7SUFDRCxPQUFPLEdBQUcsQ0FBQyxVQUFrQixDQUFDO0FBQ2hDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnREZWZpbmVkIH0gZnJvbSAnLi4vYXNzZXJ0L2Fzc2VydCc7XG5pbXBvcnQgeyBwYXJzZVFSTCB9IGZyb20gJy4uL2ltcG9ydC9xcmwnO1xuaW1wb3J0IHsgcUluZmxhdGUgfSBmcm9tICcuLi9qc29uL3EtanNvbic7XG5pbXBvcnQgeyBnZXRDb250ZXh0IH0gZnJvbSAnLi4vcHJvcHMvcHJvcHMnO1xuaW1wb3J0IHsgZ2V0SW52b2tlQ29udGV4dCB9IGZyb20gJy4vdXNlLWNvcmUnO1xuaW1wb3J0IHsgdXNlVVJMIH0gZnJvbSAnLi91c2UtdXJsLnB1YmxpYyc7XG5cbi8vIDxkb2NzIG1hcmtkb3duPVwiaHR0cHM6Ly9oYWNrbWQuaW8vbFE4djdmeWhSLVdEM2ItMmFSVXB5dyN1c2VMZXhpY2FsU2NvcGVcIj5cbi8vICEhRE8gTk9UIEVESVQgVEhJUyBDT01NRU5UIERJUkVDVExZISEhXG4vLyAoZWRpdCBodHRwczovL2hhY2ttZC5pby9AcXdpay1kb2NzL0JreHBTejgwWS8lMkZsUTh2N2Z5aFItV0QzYi0yYVJVcHl3JTNGYm90aCN1c2VMZXhpY2FsU2NvcGUgaW5zdGVhZClcbi8qKlxuICogVXNlZCBieSB0aGUgUXdpayBPcHRpbWl6ZXIgdG8gcmVzdG9yZSB0aGUgbGV4aWNhbCBzY29wZWQgdmFyaWFibGVzLlxuICpcbiAqIFRoaXMgbWV0aG9kIHNob3VsZCBub3QgYmUgcHJlc2VudCBpbiB0aGUgYXBwbGljYXRpb24gc291cmNlIGNvZGUuXG4gKlxuICogTk9URTogYHVzZUxleGljYWxTY29wZWAgbWV0aG9kIGNhbiBvbmx5IGJlIHVzZWQgaW4gdGhlIHN5bmNocm9ub3VzIHBvcnRpb24gb2YgdGhlIGNhbGxiYWNrXG4gKiAoYmVmb3JlIGFueSBgYXdhaXRgIHN0YXRlbWVudHMuKVxuICpcbiAqIEBwdWJsaWNcbiAqL1xuLy8gPC9kb2NzPlxuZXhwb3J0IGZ1bmN0aW9uIHVzZUxleGljYWxTY29wZTxWQVJTIGV4dGVuZHMgYW55W10+KCk6IFZBUlMge1xuICBjb25zdCBjb250ZXh0ID0gZ2V0SW52b2tlQ29udGV4dCgpO1xuICBjb25zdCBxcmwgPSBjb250ZXh0LnFybCA/PyBwYXJzZVFSTChkZWNvZGVVUklDb21wb25lbnQoU3RyaW5nKHVzZVVSTCgpKSkpO1xuICBpZiAocXJsLmNhcHR1cmVSZWYgPT0gbnVsbCkge1xuICAgIGNvbnN0IGVsID0gY29udGV4dC5lbGVtZW50O1xuICAgIGNvbnN0IGN0eCA9IGdldENvbnRleHQoZWwpO1xuICAgIGFzc2VydERlZmluZWQocXJsLmNhcHR1cmUpO1xuICAgIHFybC5jYXB0dXJlUmVmID0gcXJsLmNhcHR1cmUhLm1hcCgoaWR4KSA9PiBxSW5mbGF0ZShpZHgsIGN0eCkpO1xuICB9XG4gIHJldHVybiBxcmwuY2FwdHVyZVJlZiBhcyBWQVJTO1xufVxuIl19","import { qObject } from '../object/q-object';\n// <docs markdown=\"https://hackmd.io/lQ8v7fyhR-WD3b-2aRUpyw#createStore\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2FlQ8v7fyhR-WD3b-2aRUpyw%3Fboth#createStore instead)\n/**\n * Creates a object that Qwik can track across serializations.\n *\n * Use `createStore` to create state for your application. The return object is a proxy which has\n * a unique ID. The ID of the object is used in the `QRL`s to refer to the store.\n *\n * ## Example\n *\n * Example showing how `createStore` is used in Counter example to keep track of count.\n *\n * ```typescript\n * export const Counter = component$(() => {\n *   const store = createStore({ count: 0 });\n *   return $(() => <button on$:click={() => store.count++}>{store.count}</button>);\n * });\n * ```\n *\n * @public\n */\n// </docs>\nexport function createStore(initialState) {\n    return qObject(initialState);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLXN0b3JlLnB1YmxpYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXNlL3VzZS1zdG9yZS5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRTdDLHlFQUF5RTtBQUN6RSx5Q0FBeUM7QUFDekMscUdBQXFHO0FBQ3JHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FrQkc7QUFDSCxVQUFVO0FBQ1YsTUFBTSxVQUFVLFdBQVcsQ0FBbUIsWUFBbUI7SUFDL0QsT0FBTyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDL0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHFPYmplY3QgfSBmcm9tICcuLi9vYmplY3QvcS1vYmplY3QnO1xuXG4vLyA8ZG9jcyBtYXJrZG93bj1cImh0dHBzOi8vaGFja21kLmlvL2xROHY3ZnloUi1XRDNiLTJhUlVweXcjY3JlYXRlU3RvcmVcIj5cbi8vICEhRE8gTk9UIEVESVQgVEhJUyBDT01NRU5UIERJUkVDVExZISEhXG4vLyAoZWRpdCBodHRwczovL2hhY2ttZC5pby9AcXdpay1kb2NzL0JreHBTejgwWS8lMkZsUTh2N2Z5aFItV0QzYi0yYVJVcHl3JTNGYm90aCNjcmVhdGVTdG9yZSBpbnN0ZWFkKVxuLyoqXG4gKiBDcmVhdGVzIGEgb2JqZWN0IHRoYXQgUXdpayBjYW4gdHJhY2sgYWNyb3NzIHNlcmlhbGl6YXRpb25zLlxuICpcbiAqIFVzZSBgY3JlYXRlU3RvcmVgIHRvIGNyZWF0ZSBzdGF0ZSBmb3IgeW91ciBhcHBsaWNhdGlvbi4gVGhlIHJldHVybiBvYmplY3QgaXMgYSBwcm94eSB3aGljaCBoYXNcbiAqIGEgdW5pcXVlIElELiBUaGUgSUQgb2YgdGhlIG9iamVjdCBpcyB1c2VkIGluIHRoZSBgUVJMYHMgdG8gcmVmZXIgdG8gdGhlIHN0b3JlLlxuICpcbiAqICMjIEV4YW1wbGVcbiAqXG4gKiBFeGFtcGxlIHNob3dpbmcgaG93IGBjcmVhdGVTdG9yZWAgaXMgdXNlZCBpbiBDb3VudGVyIGV4YW1wbGUgdG8ga2VlcCB0cmFjayBvZiBjb3VudC5cbiAqXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBleHBvcnQgY29uc3QgQ291bnRlciA9IGNvbXBvbmVudCQoKCkgPT4ge1xuICogICBjb25zdCBzdG9yZSA9IGNyZWF0ZVN0b3JlKHsgY291bnQ6IDAgfSk7XG4gKiAgIHJldHVybiAkKCgpID0+IDxidXR0b24gb24kOmNsaWNrPXsoKSA9PiBzdG9yZS5jb3VudCsrfT57c3RvcmUuY291bnR9PC9idXR0b24+KTtcbiAqIH0pO1xuICogYGBgXG4gKlxuICogQHB1YmxpY1xuICovXG4vLyA8L2RvY3M+XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3RvcmU8U1RBVEUgZXh0ZW5kcyB7fT4oaW5pdGlhbFN0YXRlOiBTVEFURSk6IFNUQVRFIHtcbiAgcmV0dXJuIHFPYmplY3QoaW5pdGlhbFN0YXRlKTtcbn1cbiJdfQ==","import { getTransient, setTransient } from '../object/q-object';\n// <docs markdown=\"https://hackmd.io/lQ8v7fyhR-WD3b-2aRUpyw#useTransient\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2FlQ8v7fyhR-WD3b-2aRUpyw%3Fboth#useTransient instead)\n/**\n * @public\n */\n// </docs>\nexport function useTransient(obj, factory, ...args) {\n    const existing = getTransient(obj, factory);\n    return existing || setTransient(obj, factory, factory.apply(obj, args));\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLXRyYW5zaWVudC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3VzZS91c2UtdHJhbnNpZW50LnB1YmxpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRWhFLDBFQUEwRTtBQUMxRSx5Q0FBeUM7QUFDekMsc0dBQXNHO0FBQ3RHOztHQUVHO0FBQ0gsVUFBVTtBQUNWLE1BQU0sVUFBVSxZQUFZLENBQzFCLEdBQVEsRUFDUixPQUEwQyxFQUMxQyxHQUFHLElBQVU7SUFFYixNQUFNLFFBQVEsR0FBRyxZQUFZLENBQU0sR0FBRyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ2pELE9BQU8sUUFBUSxJQUFJLFlBQVksQ0FBQyxHQUFHLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDMUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFRyYW5zaWVudCwgc2V0VHJhbnNpZW50IH0gZnJvbSAnLi4vb2JqZWN0L3Etb2JqZWN0JztcblxuLy8gPGRvY3MgbWFya2Rvd249XCJodHRwczovL2hhY2ttZC5pby9sUTh2N2Z5aFItV0QzYi0yYVJVcHl3I3VzZVRyYW5zaWVudFwiPlxuLy8gISFETyBOT1QgRURJVCBUSElTIENPTU1FTlQgRElSRUNUTFkhISFcbi8vIChlZGl0IGh0dHBzOi8vaGFja21kLmlvL0Bxd2lrLWRvY3MvQmt4cFN6ODBZLyUyRmxROHY3ZnloUi1XRDNiLTJhUlVweXclM0Zib3RoI3VzZVRyYW5zaWVudCBpbnN0ZWFkKVxuLyoqXG4gKiBAcHVibGljXG4gKi9cbi8vIDwvZG9jcz5cbmV4cG9ydCBmdW5jdGlvbiB1c2VUcmFuc2llbnQ8T0JKLCBBUkdTIGV4dGVuZHMgYW55W10sIFJFVD4oXG4gIG9iajogT0JKLFxuICBmYWN0b3J5OiAodGhpczogT0JKLCAuLi5hcmdzOiBBUkdTKSA9PiBSRVQsXG4gIC4uLmFyZ3M6IEFSR1Ncbik6IFJFVCB7XG4gIGNvbnN0IGV4aXN0aW5nID0gZ2V0VHJhbnNpZW50PFJFVD4ob2JqLCBmYWN0b3J5KTtcbiAgcmV0dXJuIGV4aXN0aW5nIHx8IHNldFRyYW5zaWVudChvYmosIGZhY3RvcnksIGZhY3RvcnkuYXBwbHkob2JqLCBhcmdzKSk7XG59XG4iXX0=","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\n//////////////////////////////////////////////////////////////////////////////////////////\n// Developer Core API\n//////////////////////////////////////////////////////////////////////////////////////////\nexport { component, component$, onUnmount, onUnmount$, onHydrate, onHydrate$, onDehydrate, onDehydrate$, onResume, onResume$, on, onDocument, onWindow, useStyles, useStyles$, useScopedStyles, useScopedStyles$, } from './component/component.public';\n//////////////////////////////////////////////////////////////////////////////////////////\n// Developer Event API\n//////////////////////////////////////////////////////////////////////////////////////////\nexport { bubble } from './event/bubble.public';\nexport { dehydrate } from './object/store.public';\n//////////////////////////////////////////////////////////////////////////////////////////\n// Internal Runtime\n//////////////////////////////////////////////////////////////////////////////////////////\nexport { $, implicit$FirstArg, qrl, qrlImport } from './import/qrl.public';\nexport { notifyRender } from './render/notify-render';\n//////////////////////////////////////////////////////////////////////////////////////////\n// PLATFORM\n//////////////////////////////////////////////////////////////////////////////////////////\nexport { getPlatform, setPlatform } from './platform/platform';\n//////////////////////////////////////////////////////////////////////////////////////////\n// Watch\n//////////////////////////////////////////////////////////////////////////////////////////\nexport { onWatch$, onWatch } from './watch/watch.public';\n//////////////////////////////////////////////////////////////////////////////////////////\n// JSX Support\n//////////////////////////////////////////////////////////////////////////////////////////\nexport { Async } from './render/jsx/async.public';\n//////////////////////////////////////////////////////////////////////////////////////////\n// JSX Runtime\n//////////////////////////////////////////////////////////////////////////////////////////\nexport { h } from './render/jsx/factory';\nexport { Host } from './render/jsx/host.public';\nexport { Slot } from './render/jsx/slot.public';\nexport { Fragment, jsx, jsxDEV, jsxs } from './render/jsx/jsx-runtime';\nexport { render } from './render/render.public';\n//////////////////////////////////////////////////////////////////////////////////////////\n// use API\n//////////////////////////////////////////////////////////////////////////////////////////\nexport { useHostElement } from './use/use-host-element.public';\nexport { useEvent } from './use/use-event.public';\nexport { useLexicalScope } from './use/use-lexical-scope.public';\nexport { createStore } from './use/use-store.public';\nexport { useTransient } from './use/use-transient.public';\n/**\n * @alpha\n */\nexport const version = globalThis.QWIK_VERSION;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVILDBGQUEwRjtBQUMxRixxQkFBcUI7QUFDckIsMEZBQTBGO0FBQzFGLE9BQU8sRUFDTCxTQUFTLEVBQ1QsVUFBVSxFQUNWLFNBQVMsRUFDVCxVQUFVLEVBQ1YsU0FBUyxFQUNULFVBQVUsRUFDVixXQUFXLEVBQ1gsWUFBWSxFQUNaLFFBQVEsRUFDUixTQUFTLEVBQ1QsRUFBRSxFQUNGLFVBQVUsRUFDVixRQUFRLEVBQ1IsU0FBUyxFQUNULFVBQVUsRUFDVixlQUFlLEVBQ2YsZ0JBQWdCLEdBQ2pCLE1BQU0sOEJBQThCLENBQUM7QUFJdEMsMEZBQTBGO0FBQzFGLHNCQUFzQjtBQUN0QiwwRkFBMEY7QUFDMUYsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQy9DLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNsRCwwRkFBMEY7QUFDMUYsbUJBQW1CO0FBQ25CLDBGQUEwRjtBQUMxRixPQUFPLEVBQUUsQ0FBQyxFQUFFLGlCQUFpQixFQUFFLEdBQUcsRUFBRSxTQUFTLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUszRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsMEZBQTBGO0FBQzFGLFdBQVc7QUFDWCwwRkFBMEY7QUFDMUYsT0FBTyxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUUvRCwwRkFBMEY7QUFDMUYsUUFBUTtBQUNSLDBGQUEwRjtBQUMxRixPQUFPLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBR3pELDBGQUEwRjtBQUMxRixjQUFjO0FBQ2QsMEZBQTBGO0FBQzFGLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUdsRCwwRkFBMEY7QUFDMUYsY0FBYztBQUNkLDBGQUEwRjtBQUMxRixPQUFPLEVBQUUsQ0FBQyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDekMsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNoRCxPQUFPLEVBQUUsUUFBUSxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFXdkUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ2hELDBGQUEwRjtBQUMxRixVQUFVO0FBQ1YsMEZBQTBGO0FBQzFGLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUMvRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDbEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFNMUQ7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUksVUFBa0IsQ0FBQyxZQUFzQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEJ1aWxkZXIuaW8sIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vQnVpbGRlcklPL3F3aWsvYmxvYi9tYWluL0xJQ0VOU0VcbiAqL1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIERldmVsb3BlciBDb3JlIEFQSVxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5leHBvcnQge1xuICBjb21wb25lbnQsXG4gIGNvbXBvbmVudCQsXG4gIG9uVW5tb3VudCxcbiAgb25Vbm1vdW50JCxcbiAgb25IeWRyYXRlLFxuICBvbkh5ZHJhdGUkLFxuICBvbkRlaHlkcmF0ZSxcbiAgb25EZWh5ZHJhdGUkLFxuICBvblJlc3VtZSxcbiAgb25SZXN1bWUkLFxuICBvbixcbiAgb25Eb2N1bWVudCxcbiAgb25XaW5kb3csXG4gIHVzZVN0eWxlcyxcbiAgdXNlU3R5bGVzJCxcbiAgdXNlU2NvcGVkU3R5bGVzLFxuICB1c2VTY29wZWRTdHlsZXMkLFxufSBmcm9tICcuL2NvbXBvbmVudC9jb21wb25lbnQucHVibGljJztcblxuZXhwb3J0IHR5cGUgeyBQcm9wc09mLCBDb21wb25lbnRPcHRpb25zLCBPbk1vdW50Rm4gfSBmcm9tICcuL2NvbXBvbmVudC9jb21wb25lbnQucHVibGljJztcblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBEZXZlbG9wZXIgRXZlbnQgQVBJXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbmV4cG9ydCB7IGJ1YmJsZSB9IGZyb20gJy4vZXZlbnQvYnViYmxlLnB1YmxpYyc7XG5leHBvcnQgeyBkZWh5ZHJhdGUgfSBmcm9tICcuL29iamVjdC9zdG9yZS5wdWJsaWMnO1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBJbnRlcm5hbCBSdW50aW1lXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbmV4cG9ydCB7ICQsIGltcGxpY2l0JEZpcnN0QXJnLCBxcmwsIHFybEltcG9ydCB9IGZyb20gJy4vaW1wb3J0L3FybC5wdWJsaWMnO1xuZXhwb3J0IHR5cGUgeyBRUkwgfSBmcm9tICcuL2ltcG9ydC9xcmwucHVibGljJztcblxuZXhwb3J0IHR5cGUgeyBQcm9wcyB9IGZyb20gJy4vcHJvcHMvcHJvcHMucHVibGljJztcblxuZXhwb3J0IHsgbm90aWZ5UmVuZGVyIH0gZnJvbSAnLi9yZW5kZXIvbm90aWZ5LXJlbmRlcic7XG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFBMQVRGT1JNXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbmV4cG9ydCB7IGdldFBsYXRmb3JtLCBzZXRQbGF0Zm9ybSB9IGZyb20gJy4vcGxhdGZvcm0vcGxhdGZvcm0nO1xuZXhwb3J0IHR5cGUgeyBDb3JlUGxhdGZvcm0gfSBmcm9tICcuL3BsYXRmb3JtL3R5cGVzJztcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV2F0Y2hcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuZXhwb3J0IHsgb25XYXRjaCQsIG9uV2F0Y2ggfSBmcm9tICcuL3dhdGNoL3dhdGNoLnB1YmxpYyc7XG5leHBvcnQgdHlwZSB7IE9ic2VydmVyIH0gZnJvbSAnLi93YXRjaC93YXRjaC5wdWJsaWMnO1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIEpTWCBTdXBwb3J0XG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbmV4cG9ydCB7IEFzeW5jIH0gZnJvbSAnLi9yZW5kZXIvanN4L2FzeW5jLnB1YmxpYyc7XG5leHBvcnQgdHlwZSB7IFByb21pc2VWYWx1ZSB9IGZyb20gJy4vcmVuZGVyL2pzeC9hc3luYy5wdWJsaWMnO1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIEpTWCBSdW50aW1lXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbmV4cG9ydCB7IGggfSBmcm9tICcuL3JlbmRlci9qc3gvZmFjdG9yeSc7XG5leHBvcnQgeyBIb3N0IH0gZnJvbSAnLi9yZW5kZXIvanN4L2hvc3QucHVibGljJztcbmV4cG9ydCB7IFNsb3QgfSBmcm9tICcuL3JlbmRlci9qc3gvc2xvdC5wdWJsaWMnO1xuZXhwb3J0IHsgRnJhZ21lbnQsIGpzeCwganN4REVWLCBqc3hzIH0gZnJvbSAnLi9yZW5kZXIvanN4L2pzeC1ydW50aW1lJztcbmV4cG9ydCB0eXBlIHtcbiAgQ29tcG9uZW50Q2hpbGQsXG4gIENvbXBvbmVudENoaWxkcmVuLFxuICBGdW5jdGlvbkNvbXBvbmVudCxcbiAgSlNYRmFjdG9yeSxcbiAgSlNYTm9kZSxcbiAgUmVuZGVyYWJsZVByb3BzLFxufSBmcm9tICcuL3JlbmRlci9qc3gvdHlwZXMvanN4LW5vZGUnO1xuZXhwb3J0IHR5cGUgeyBRd2lrRE9NQXR0cmlidXRlcywgUXdpa0pTWCB9IGZyb20gJy4vcmVuZGVyL2pzeC90eXBlcy9qc3gtcXdpayc7XG5leHBvcnQgdHlwZSB7IFF3aWtJbnRyaW5zaWNFbGVtZW50cyB9IGZyb20gJy4vcmVuZGVyL2pzeC90eXBlcy9qc3gtcXdpay1lbGVtZW50cyc7XG5leHBvcnQgeyByZW5kZXIgfSBmcm9tICcuL3JlbmRlci9yZW5kZXIucHVibGljJztcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gdXNlIEFQSVxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5leHBvcnQgeyB1c2VIb3N0RWxlbWVudCB9IGZyb20gJy4vdXNlL3VzZS1ob3N0LWVsZW1lbnQucHVibGljJztcbmV4cG9ydCB7IHVzZUV2ZW50IH0gZnJvbSAnLi91c2UvdXNlLWV2ZW50LnB1YmxpYyc7XG5leHBvcnQgeyB1c2VMZXhpY2FsU2NvcGUgfSBmcm9tICcuL3VzZS91c2UtbGV4aWNhbC1zY29wZS5wdWJsaWMnO1xuZXhwb3J0IHsgY3JlYXRlU3RvcmUgfSBmcm9tICcuL3VzZS91c2Utc3RvcmUucHVibGljJztcbmV4cG9ydCB7IHVzZVRyYW5zaWVudCB9IGZyb20gJy4vdXNlL3VzZS10cmFuc2llbnQucHVibGljJztcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gRGV2ZWxvcGVyIExvdy1MZXZlbCBBUElcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuZXhwb3J0IHR5cGUgeyBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJy4vdXRpbC90eXBlcyc7XG5cbi8qKlxuICogQGFscGhhXG4gKi9cbmV4cG9ydCBjb25zdCB2ZXJzaW9uID0gKGdsb2JhbFRoaXMgYXMgYW55KS5RV0lLX1ZFUlNJT04gYXMgc3RyaW5nO1xuIl19"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AACA;AACO,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,KAAK,KAAK;;ACtB7C;AACA;AACA;AACA;AACA;AACA;AACA;AAEO,MAAM,WAAW,GAAG,EAAE,CAAC;AACvB,MAAM,SAAS,GAAG,EAAE,CAAC;AAC5B,IAAI,IAAI,EAAE;AACV,IAAI,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;AAC/B,IAAI,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAC7B;;ACbO,SAAS,KAAK,CAAC,KAAK,EAAE;AAC7B,IAAI,OAAO,KAAK,YAAY,WAAW,CAAC;AACxC,CAAC;AACD,MAAM,GAAG,CAAC;AACV,IAAI,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE;AAChF,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AACnC,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACjC,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC/B,QAAQ,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AACrC,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,QAAQ,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;AAC1D,KAAK;AACL,CAAC;AACM,MAAM,WAAW,GAAG,GAAG,CAAC;AAC/B;AACA,MAAM,QAAQ,GAAG,aAAa;;ACjB9B;AACA;AACA;AACA;AACA;AACA;AACA;AAEO,SAAS,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE;AAC3C,IAAI,IAAI,IAAI,EAAE;AACd,QAAQ,IAAI,KAAK,IAAI,IAAI;AACzB,YAAY,OAAO;AACnB,QAAQ,MAAM,QAAQ,CAAC,IAAI,IAAI,yBAAyB,CAAC,CAAC;AAC1D,KAAK;AACL,CAAC;AA4BM,SAAS,cAAc,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE;AACrD,IAAI,IAAI,IAAI,EAAE;AACd,QAAQ,IAAI,MAAM,KAAK,MAAM;AAC7B,YAAY,OAAO;AACnB,QAAQ,MAAM,QAAQ,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AACxE,KAAK;AACL,CAAC;AACM,SAAS,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE;AAClD,IAAI,IAAI,IAAI,EAAE;AACd,QAAQ,IAAI,MAAM,KAAK,MAAM;AAC7B,YAAY,OAAO;AACnB,QAAQ,MAAM,QAAQ,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AACxE,KAAK;AACL,CAAC;AAeM,SAAS,oBAAoB,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE;AAC3D,IAAI,IAAI,IAAI,EAAE;AACd,QAAQ,IAAI,MAAM,IAAI,MAAM;AAC5B,YAAY,OAAO;AACnB,QAAQ,MAAM,QAAQ,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AACvE,KAAK;AACL,CAAC;AACM,SAAS,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE;AACpD,IAAI,IAAI,IAAI,EAAE;AACd,QAAQ,IAAI,MAAM,GAAG,MAAM;AAC3B,YAAY,OAAO;AACnB,QAAQ,MAAM,QAAQ,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AACtE,KAAK;AACL,CAAC;AAaD,SAAS,QAAQ,CAAC,IAAI,EAAE;AACxB,IAAI,SAAS;AACb,IAAI,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;AAClC,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACzB,IAAI,OAAO,KAAK,CAAC;AACjB;;ACrGA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,IAAI,eAAe,GAAG,CAAC,CAAC;AACxB,MAAM,WAAW,GAAG,aAAa,CAAC;AAClC;AACA,MAAM,mBAAmB,GAAG,4BAA4B,CAAC;AACzD;AACA,MAAM,mBAAmB,GAAG,wBAAwB,CAAC;AACrD;AACA,MAAM,iBAAiB,GAAG,iCAAiC,CAAC;AACrD,SAAS,aAAa,CAAC,GAAG,EAAE;AACnC,IAAI,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;AAClC,IAAI,OAAO,GAAG,CAAC;AACf,CAAC;AACM,SAAS,SAAS,CAAC,SAAS,EAAE,MAAM,EAAE,mBAAmB,GAAG,WAAW,EAAE;AAChF,IAAI,IAAI,KAAK,CAAC;AACd,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC;AACxB,IAAI,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;AACvC,QAAQ,KAAK,GAAG,SAAS,CAAC;AAC1B,KAAK;AACL,SAAS,IAAI,OAAO,SAAS,KAAK,UAAU,EAAE;AAC9C,QAAQ,QAAQ,GAAG,SAAS,CAAC;AAC7B,QAAQ,IAAI,KAAK,CAAC;AAClB,QAAQ,MAAM,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AAC1C,QAAQ,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,mBAAmB,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE;AACtE,YAAY,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC7B,SAAS;AACT,aAAa,KAAK,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,mBAAmB,CAAC,GAAG;AAC/D,YAAY,MAAM,GAAG,GAAG,WAAW,CAAC;AACpC,YAAY,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC5D,YAAY,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;AACnE,YAAY,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AAC5C,YAAY,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;AACnD,YAAY,IAAI,CAAC,KAAK,EAAE;AACxB,gBAAgB,KAAK,GAAG,MAAM,CAAC;AAC/B,aAAa;AACb,iBAAiB;AACjB,gBAAgB,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACjC,aAAa;AACb,SAAS;AACT,aAAa;AACb,YAAY,MAAM,IAAI,KAAK,CAAC,qCAAqC,GAAG,OAAO,CAAC,CAAC;AAC7E,SAAS;AACT,KAAK;AACL,SAAS;AACT,QAAQ,MAAM,IAAI,KAAK,CAAC,kCAAkC,GAAG,SAAS,CAAC,CAAC;AACxE,KAAK;AACL,IAAI,OAAO,IAAI,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,mBAAmB,EAAE,IAAI,CAAC,CAAC;AAC3F,CAAC;AACM,SAAS,UAAU,CAAC,MAAM,EAAE,mBAAmB,GAAG,WAAW,EAAE;AACtE,IAAI,OAAO,IAAI,WAAW,CAAC,WAAW,EAAE,GAAG,GAAG,eAAe,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,mBAAmB,EAAE,IAAI,CAAC,CAAC;AAChH,CAAC;AACM,SAAS,YAAY,CAAC,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE;AACrD,IAAI,IAAI,EAAE,CAAC;AACX,IAAI,MAAM,IAAI,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;AACpC,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC/B,IAAI,MAAM,KAAK,GAAG,QAAQ,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAC7H,IAAI,MAAM,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;AAC1B,IAAI,IAAI,MAAM,IAAI,MAAM,KAAK,SAAS,EAAE;AACxC,QAAQ,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AAChC,KAAK;AACL,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAC7B,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAC1J,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACjC,IAAI,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AACvC,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;AAC5C,KAAK;AACL,IAAI,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACrC,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,WAAW,IAAI,OAAO,EAAE;AAC/C,QAAQ,MAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;AACxE,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACtB,KAAK;AACL,IAAI,OAAO,SAAS,CAAC;AACrB,CAAC;AAID;AACA;AACA;AACO,SAAS,QAAQ,CAAC,GAAG,EAAE,OAAO,EAAE;AACvC,IAAI,IAAI,OAAO,EAAE;AACjB,QAAQ,MAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC;AACtC,QAAQ,IAAI,IAAI,EAAE;AAClB,YAAY,KAAK,MAAM,UAAU,IAAI,IAAI,EAAE;AAC3C,gBAAgB,IAAI,YAAY,CAAC,UAAU,CAAC,IAAI,GAAG,EAAE;AACrD,oBAAoB,OAAO,UAAU,CAAC;AACtC,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL,IAAI,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AAC9B,IAAI,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;AACzC,IAAI,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;AAChD,IAAI,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;AACnD,IAAI,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;AAChE,IAAI,MAAM,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;AAChD,IAAI,MAAM,cAAc,GAAG,OAAO,IAAI,MAAM,GAAG,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC;AACrE,IAAI,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;AACxD,IAAI,MAAM,MAAM,GAAG,cAAc,IAAI,YAAY,GAAG,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AAC5G,IAAI,MAAM,aAAa,GAAG,QAAQ,CAAC;AACnC,IAAI,MAAM,WAAW,GAAG,UAAU,CAAC;AACnC,IAAI,MAAM,KAAK,GAAG,aAAa,GAAG,WAAW,GAAG,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC;AAC7G,IAAI,MAAM,eAAe,GAAG,UAAU,CAAC;AACvC,IAAI,MAAM,aAAa,GAAG,MAAM,CAAC;AACjC,IAAI,MAAM,OAAO,GAAG,eAAe,KAAK,aAAa;AACrD,UAAU,WAAW;AACrB,UAAU,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC,CAAC;AACnE,IAAI,IAAI,KAAK,KAAK,WAAW,EAAE;AAC/B,QAAQ,OAAO,CAAC,KAAK,CAAC,CAAC,UAAU,EAAE,GAAG,CAAC,8CAA8C,CAAC,CAAC,CAAC;AACxF,KAAK;AACL,IAAI,OAAO,IAAI,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AAC5E,CAAC;AACD,SAAS,SAAS,CAAC,IAAI,EAAE;AACzB,IAAI,IAAI;AACR,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAChC,KAAK;AACL,IAAI,OAAO,CAAC,EAAE;AACd,QAAQ,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACrC,QAAQ,MAAM,CAAC,CAAC;AAChB,KAAK;AACL,CAAC;AACD,SAAS,UAAU,CAAC,IAAI,EAAE;AAC1B,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC;AACnB,IAAI,IAAI,IAAI,EAAE;AACd,QAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK;AACzC,YAAY,IAAI,GAAG,EAAE;AACrB,gBAAgB,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC7C,gBAAgB,MAAM,EAAE,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;AACzC,gBAAgB,IAAI,CAAC,GAAG;AACxB,oBAAoB,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;AACpC,gBAAgB,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACnC,aAAa;AACb,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf,CAAC;AACD,SAAS,OAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE;AACvC,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC/B,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,IAAI,MAAM,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC;AAC1E,IAAI,OAAO,OAAO,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,OAAO,CAAC;AAC5C,CAAC;AACM,SAAS,YAAY,CAAC,WAAW,EAAE;AAC1C,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE;AAC7B,QAAQ,IAAI,OAAO,WAAW,IAAI,UAAU,IAAI,OAAO,WAAW,IAAI,QAAQ,EAAE;AAChF,YAAY,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC;AAClD,SAAS;AACT,aAAa;AACb;AACA,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,qDAAqD,CAAC,CAAC,CAAC;AACrF,SAAS;AACT,KAAK;AACL,IAAI,OAAO,WAAW,CAAC;AACvB;;ACjKA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACO,MAAM,SAAS,GAAG,QAAQ,CAAC;AAC3B,MAAM,YAAY,GAAG,YAAY,CAAC;AACzC;AACA;AACA;AACO,MAAM,gBAAgB,GAAG,YAAY,CAAC;AAa7C;AACA;AACA;AACO,MAAM,qBAAqB,GAAG,UAAU,CAAC;AAKhD;AACA;AACA;AACO,MAAM,yBAAyB,GAAG,IAAI,CAAC;AAC9C;AACA;AACA;AACO,MAAM,4BAA4B,GAAG,KAAK,CAAC;AASlD;AACA;AACA;AACO,MAAM,KAAK,GAAG,QAAQ,CAAC;AACvB,MAAM,aAAa,GAAG,UAAU,CAAC;AACxC;AACA;AACA;AACO,MAAM,SAAS,GAAG,QAAQ,CAAC;AAC3B,MAAM,QAAQ,GAAG,OAAO,CAAC;AACzB,MAAM,YAAY,GAAG,WAAW,CAAC;AACxC;AACA;AACA;AACO,MAAM,SAAS,GAAG,MAAM,CAAC;AAEzB,MAAM,UAAU,GAAG,MAAM,CAAC;AAC1B,MAAM,mBAAmB,GAAG,UAAU,CAAC;AACvC,MAAM,iBAAiB,GAAG,GAAG;;ACzEpC;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,uBAAuB,CAAC,IAAI,EAAE,OAAO,EAAE;AACvD,IAAI,OAAO,aAAa,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,OAAO,CAAC,WAAW,EAAE,CAAC;AACtF,CAAC;AACD;AACA;AACA;AACO,SAAS,iBAAiB,CAAC,IAAI,EAAE;AACxC,IAAI,OAAO,uBAAuB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;AACrD,CAAC;AACD;AACA;AACA;AACO,SAAS,sBAAsB,CAAC,IAAI,EAAE;AAC7C,IAAI,OAAO,iBAAiB,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;AACnE,CAAC;AACD;AACA;AACA;AACO,SAAS,kBAAkB,CAAC,IAAI,EAAE;AACzC,IAAI,OAAO,aAAa,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;AAC/D,CAAC;AACD;AACA;AACA;AACO,SAAS,aAAa,CAAC,IAAI,EAAE;AACpC,IAAI,OAAO,IAAI,GAAG,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;AAClE,CAAC;AAOD;AACA;AACA;AACO,IAAI,QAAQ,CAAC;AACpB,CAAC,UAAU,QAAQ,EAAE;AACrB,IAAI,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,GAAG,cAAc,CAAC;AAC5D,IAAI,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,GAAG,gBAAgB,CAAC;AAChE,IAAI,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC;AACtD,IAAI,QAAQ,CAAC,QAAQ,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,GAAG,oBAAoB,CAAC;AACxE,IAAI,QAAQ,CAAC,QAAQ,CAAC,6BAA6B,CAAC,GAAG,CAAC,CAAC,GAAG,6BAA6B,CAAC;AAC1F;AACA,IAAI,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,GAAG,cAAc,CAAC;AAC5D,IAAI,QAAQ,CAAC,QAAQ,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,GAAG,eAAe,CAAC;AAC9D,IAAI,QAAQ,CAAC,QAAQ,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC,GAAG,oBAAoB,CAAC;AACzE,IAAI,QAAQ,CAAC,QAAQ,CAAC,wBAAwB,CAAC,GAAG,EAAE,CAAC,GAAG,wBAAwB,CAAC;AACjF,CAAC,EAAE,QAAQ,KAAK,QAAQ,GAAG,EAAE,CAAC,CAAC;;ACvD/B;AACA;AACA;AACA;AACA;AACA;AACA;AAEO,SAAS,MAAM,CAAC,KAAK,EAAE;AAC9B,IAAI,OAAO,KAAK,IAAI,OAAO,KAAK,CAAC,QAAQ,IAAI,QAAQ,CAAC;AACtD,CAAC;AACM,SAAS,UAAU,CAAC,KAAK,EAAE;AAClC,IAAI,OAAO,KAAK,IAAI,KAAK,CAAC,QAAQ,IAAI,QAAQ,CAAC,aAAa,CAAC;AAC7D,CAAC;AACM,SAAS,SAAS,CAAC,KAAK,EAAE;AACjC,IAAI,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,QAAQ,IAAI,QAAQ,CAAC,YAAY,CAAC;AACpE,CAAC;AAIM,SAAS,SAAS,CAAC,KAAK,EAAE;AACjC,IAAI,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,QAAQ,IAAI,QAAQ,CAAC,YAAY,CAAC;AACpE;;ACrBO,MAAM,cAAc,GAAG,CAAC,GAAG,KAAK;AACvC,IAAI,IAAI,YAAY,CAAC;AACrB,IAAI,IAAI,YAAY,CAAC;AACrB,IAAI,MAAM,WAAW,GAAG,IAAI,GAAG,EAAE,CAAC;AAClC,IAAI,OAAO;AACX,QAAQ,YAAY,CAAC,OAAO,EAAE,GAAG,EAAE,UAAU,EAAE;AAC/C,YAAY,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,aAAa,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;AACjF,YAAY,MAAM,OAAO,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC;AAC5C,YAAY,OAAO,CAAC,IAAI,GAAG,EAAE,CAAC;AAC9B,YAAY,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;AAChC,YAAY,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC;AAC3C,YAAY,MAAM,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACnD,YAAY,IAAI,GAAG,EAAE;AACrB,gBAAgB,OAAO,GAAG,CAAC,UAAU,CAAC,CAAC;AACvC,aAAa;AACb,YAAY,OAAO,sHAAO,mBAAmB,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK;AACtE,gBAAgB,WAAW,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;AAChD,gBAAgB,OAAO,GAAG,CAAC,UAAU,CAAC,CAAC;AACvC,aAAa,CAAC,CAAC;AACf,SAAS;AACT,QAAQ,WAAW,EAAE,CAAC,YAAY,KAAK;AACvC,YAAY,IAAI,CAAC,YAAY,EAAE;AAC/B,gBAAgB,YAAY,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK,GAAG,CAAC,WAAW,CAAC,qBAAqB,CAAC,MAAM;AAC5G,oBAAoB,YAAY,GAAG,IAAI,CAAC;AACxC,oBAAoB,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AAC5D,iBAAiB,CAAC,CAAC,CAAC;AACpB,aAAa;AACb,YAAY,OAAO,YAAY,CAAC;AAChC,SAAS;AACT,QAAQ,eAAe,EAAE,CAAC,UAAU,KAAK;AACzC,YAAY,IAAI,CAAC,YAAY,EAAE;AAC/B,gBAAgB,YAAY,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK,GAAG,CAAC,WAAW,CAAC,qBAAqB,CAAC,MAAM;AAC5G,oBAAoB,YAAY,GAAG,IAAI,CAAC;AACxC,oBAAoB,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AAC1D,iBAAiB,CAAC,CAAC,CAAC;AACpB,aAAa;AACb,YAAY,OAAO,YAAY,CAAC;AAChC,SAAS;AACT,QAAQ,cAAc,GAAG;AACzB,YAAY,OAAO,SAAS,CAAC;AAC7B,SAAS;AACT,KAAK,CAAC;AACN,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE;AACzC,IAAI,IAAI,IAAI,CAAC;AACb,IAAI,IAAI,KAAK,GAAG,SAAS,CAAC;AAC1B,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;AAC3B;AACA,QAAQ,IAAI,OAAO,EAAE;AACrB,YAAY,IAAI,GAAG,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;AAClD,YAAY,KAAK,GAAG,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;AAC/F,SAAS;AACT,aAAa;AACb,YAAY,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC;AAC/B,SAAS;AACT,KAAK;AACL,SAAS,IAAI,GAAG,EAAE;AAClB,QAAQ,CAAC,IAAI,GAAG,GAAG,IAAI,KAAK,GAAG,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AAC1E,KAAK;AACL,SAAS;AACT,QAAQ,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;AAC1C,KAAK;AACL,IAAI,OAAO,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;AACxC,CAAC;AACD;AACA;AACA;AACY,MAAC,WAAW,GAAG,CAAC,GAAG,EAAE,GAAG,MAAM,GAAG,CAAC,gBAAgB,CAAC,GAAG,GAAG,EAAE;AACvE;AACA;AACA;AACY,MAAC,WAAW,GAAG,CAAC,SAAS,KAAK;AAC1C,IAAI,MAAM,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,GAAG,SAAS,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC;AAC9E,IAAI,OAAO,GAAG,CAAC,gBAAgB,CAAC,KAAK,GAAG,CAAC,gBAAgB,CAAC,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;AAClF,EAAE;AACF,MAAM,gBAAgB,iBAAiB,MAAM,EAAE;;ACrF/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAe,SAAS,CAAC,OAAO,EAAE,GAAG,EAAE;AAC9C,IAAI,MAAM,IAAI,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;AACpC,IAAI,IAAI,IAAI,CAAC,SAAS;AACtB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC;AAC9B,IAAI,MAAM,GAAG,GAAG,OAAO,CAAC,aAAa,CAAC;AACtC,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;AACvB,QAAQ,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE;AACxF,KAAK;AACL,SAAS;AACT,QAAQ,QAAQ,IAAI,CAAC,SAAS,GAAG,MAAM,WAAW,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE;AACxG,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,CAAC,CAAC,UAAU,EAAE;AAC9B,IAAI,OAAO,UAAU,CAAC,UAAU,CAAC,CAAC;AAClC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,iBAAiB,CAAC,EAAE,EAAE;AACtC,IAAI,OAAO,UAAU,KAAK,EAAE,GAAG,IAAI,EAAE;AACrC,QAAQ,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;AAChD,KAAK,CAAC;AACN,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,GAAG,GAAG;;AC3KnB;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE;AACzC;AACA,IAAI,IAAI,CAAC,GAAG;AACZ,QAAQ,GAAG,GAAG,EAAE,CAAC;AACjB,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;AAC9B,QAAQ,IAAI,KAAK,C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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,WAAW,CAAC,WAAW,EAAE;AACzC,IAAI,MAAM,IAAI,KAAK,CAAC,wBAAwB,GAAG,WAAW,CAAC,CAAC;AAC5D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,YAAY,GAAG,iBAAiB,CAAC,WAAW,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE;AACnC,IAAI,MAAM,IAAI,KAAK,CAAC,eAAe,GAAG,OAAO,CAAC,CAAC;AAC/C,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,UAAU,CAAC,KAAK,EAAE,OAAO,EAAE;AAC3C,IAAI,MAAM,IAAI,KAAK,CAAC,uBAAuB,GAAG,OAAO,CAAC,CAAC;AACvD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE;AACzC,IAAI,MAAM,IAAI,KAAK,CAAC,qBAAqB,GAAG,OAAO,CAAC,CAAC;AACrD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,SAAS,CAAC,MAAM,EAAE;AAClC,IAAI,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC9B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,UAAU,GAAG,iBAAiB,CAAC,SAAS,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,eAAe,CAAC,MAAM,EAAE;AACxC,IAAI,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC7B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,gBAAgB,GAAG,iBAAiB,CAA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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,OAAO,CAAC,OAAO,EAAE;AACjC,IAAI,eAAe,CAAC,cAAc,EAAE,EAAE,QAAQ,EAAE,EAAE,OAAO,CAAC,CAAC;AAC3D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,QAAQ,GAAG,iBAAiB,CAAC,OAAO;;ACjGjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,KAAK,CAAC,KAAK,EAAE;AAC7B;AACA,IAAI,IAAI,EAAE,UAAU,IAAI,KAAK,CAAC,EAAE;AAChC,QAAQ,MAAM,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC;AACrC,KAAK;AACL,IAAI,MAAM,QAAQ,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AAChD,IAAI,MAAM,QAAQ,GAAG,OAAO,QAAQ,IAAI,UAAU,GAAG,QAAQ,GAAG,IAAI,CAAC;AACrE,IAAI,MAAM,YAAY,GAAG;AACzB,QAAQ,SAAS,EAAE,IAAI;AACvB,QAAQ,UAAU,EAAE,KAAK;AACzB,QAAQ,KAAK,EAAE,SAAS;AACxB,QAAQ,UAAU,EAAE,KAAK;AACzB,QAAQ,SAAS,EAAE,SAAS;AAC5B,KAAK,CAAC;A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"}