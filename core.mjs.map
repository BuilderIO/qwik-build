{"version":3,"file":"core.mjs","sources":["../../../dist-dev/tsc-out/packages/qwik/src/core/util/qdev.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/flyweight.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/log.js","../../../dist-dev/tsc-out/packages/qwik/src/core/assert/assert.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/markers.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/dom.js","../../../dist-dev/tsc-out/packages/qwik/src/core/use/use-core.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/array.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/promises.js","../../../dist-dev/tsc-out/packages/qwik/src/core/import/qrl-class.js","../../../dist-dev/tsc-out/packages/qwik/src/core/platform/platform.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/types.js","../../../dist-dev/tsc-out/packages/qwik/src/core/error/stringify.js","../../../dist-dev/tsc-out/packages/qwik/src/core/error/error.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/element.js","../../../dist-dev/tsc-out/packages/qwik/src/core/import/qrl.public.js","../../../dist-dev/tsc-out/packages/qwik/src/core/use/use-host-element.public.js","../../../dist-dev/tsc-out/packages/qwik/src/core/use/use-store.public.js","../../../dist-dev/tsc-out/packages/qwik/src/core/use/use-lexical-scope.public.js","../../../dist-dev/tsc-out/packages/qwik/src/core/use/use-document.public.js","../../../dist-dev/tsc-out/packages/qwik/src/core/watch/watch.public.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/event.js","../../../dist-dev/tsc-out/packages/qwik/src/core/object/store.js","../../../dist-dev/tsc-out/packages/qwik/src/core/props/props-obj-map.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/case.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/stringify.js","../../../dist-dev/tsc-out/packages/qwik/src/core/props/props-on.js","../../../dist-dev/tsc-out/packages/qwik/src/core/object/store.public.js","../../../dist-dev/tsc-out/packages/qwik/src/core/props/props.js","../../../dist-dev/tsc-out/packages/qwik/src/core/render/jsx/host.public.js","../../../dist-dev/tsc-out/packages/qwik/src/core/render/render.js","../../../dist-dev/tsc-out/packages/qwik/src/core/util/hash_code.js","../../../dist-dev/tsc-out/packages/qwik/src/core/component/qrl-styles.js","../../../dist-dev/tsc-out/packages/qwik/src/core/render/jsx/jsx-runtime.js","../../../dist-dev/tsc-out/packages/qwik/src/core/component/component-ctx.js","../../../dist-dev/tsc-out/packages/qwik/src/core/render/cursor.js","../../../dist-dev/tsc-out/packages/qwik/src/core/render/notify-render.js","../../../dist-dev/tsc-out/packages/qwik/src/core/object/q-object.js","../../../dist-dev/tsc-out/packages/qwik/src/core/use/use-subscriber.js","../../../dist-dev/tsc-out/packages/qwik/src/core/import/qrl.js","../../../dist-dev/tsc-out/packages/qwik/src/core/component/component.public.js","../../../dist-dev/tsc-out/packages/qwik/src/core/render/jsx/factory.js","../../../dist-dev/tsc-out/packages/qwik/src/core/render/jsx/slot.public.js","../../../dist-dev/tsc-out/packages/qwik/src/core/version.js","../../../dist-dev/tsc-out/packages/qwik/src/core/render/render.public.js","../../../dist-dev/tsc-out/packages/qwik/src/core/use/use-context.js"],"sourcesContent":["/*@__PURE__*/ ((gbl) => {\n    // ensures unit tests have globalThis on Node10\n    // this will be removed from production builds\n    if (typeof globalThis === 'undefined') {\n        gbl.globalThis = gbl;\n    }\n})(typeof global !== 'undefined'\n    ? global\n    : typeof window !== 'undefined'\n        ? window\n        : typeof self !== 'undefined'\n            ? self\n            : {});\n// minification can replace the `globalThis.qDev` with `false`\n// which will remove all dev code within from the build\nexport const qDev = globalThis.qDev !== false;\nexport const qTest = globalThis.describe !== undefined;\nexport const qGlobal = globalThis;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicWRldi5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvcXdpay9zcmMvY29yZS91dGlsL3FkZXYudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsYUFBYSxDQUFDLENBQUMsQ0FBQyxHQUFRLEVBQUUsRUFBRTtJQUMxQiwrQ0FBK0M7SUFDL0MsOENBQThDO0lBQzlDLElBQUksT0FBTyxVQUFVLEtBQUssV0FBVyxFQUFFO1FBQ3JDLEdBQUcsQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFDO0tBQ3RCO0FBQ0gsQ0FBQyxDQUFDLENBQ0EsT0FBTyxNQUFNLEtBQUssV0FBVztJQUMzQixDQUFDLENBQUMsTUFBTTtJQUNSLENBQUMsQ0FBQyxPQUFPLE1BQU0sS0FBSyxXQUFXO1FBQy9CLENBQUMsQ0FBQyxNQUFNO1FBQ1IsQ0FBQyxDQUFDLE9BQU8sSUFBSSxLQUFLLFdBQVc7WUFDN0IsQ0FBQyxDQUFDLElBQUk7WUFDTixDQUFDLENBQUMsRUFBRSxDQUNQLENBQUM7QUFFRiw4REFBOEQ7QUFDOUQsdURBQXVEO0FBQ3ZELE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBSSxVQUFrQixDQUFDLElBQUksS0FBSyxLQUFLLENBQUM7QUFDdkQsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUFJLFVBQWtCLENBQUMsUUFBUSxLQUFLLFNBQVMsQ0FBQztBQUNoRSxNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUcsVUFBaUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qQF9fUFVSRV9fKi8gKChnYmw6IGFueSkgPT4ge1xuICAvLyBlbnN1cmVzIHVuaXQgdGVzdHMgaGF2ZSBnbG9iYWxUaGlzIG9uIE5vZGUxMFxuICAvLyB0aGlzIHdpbGwgYmUgcmVtb3ZlZCBmcm9tIHByb2R1Y3Rpb24gYnVpbGRzXG4gIGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBnYmwuZ2xvYmFsVGhpcyA9IGdibDtcbiAgfVxufSkoXG4gIHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnXG4gICAgPyBnbG9iYWxcbiAgICA6IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnXG4gICAgPyB3aW5kb3dcbiAgICA6IHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJ1xuICAgID8gc2VsZlxuICAgIDoge31cbik7XG5cbi8vIG1pbmlmaWNhdGlvbiBjYW4gcmVwbGFjZSB0aGUgYGdsb2JhbFRoaXMucURldmAgd2l0aCBgZmFsc2VgXG4vLyB3aGljaCB3aWxsIHJlbW92ZSBhbGwgZGV2IGNvZGUgd2l0aGluIGZyb20gdGhlIGJ1aWxkXG5leHBvcnQgY29uc3QgcURldiA9IChnbG9iYWxUaGlzIGFzIGFueSkucURldiAhPT0gZmFsc2U7XG5leHBvcnQgY29uc3QgcVRlc3QgPSAoZ2xvYmFsVGhpcyBhcyBhbnkpLmRlc2NyaWJlICE9PSB1bmRlZmluZWQ7XG5leHBvcnQgY29uc3QgcUdsb2JhbCA9IGdsb2JhbFRoaXMgYXMgYW55O1xuIl19","import { qDev } from './qdev';\nexport const EMPTY_ARRAY = [];\nexport const EMPTY_OBJ = {};\nif (qDev) {\n    Object.freeze(EMPTY_ARRAY);\n    Object.freeze(EMPTY_OBJ);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmx5d2VpZ2h0LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL3V0aWwvZmx5d2VpZ2h0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFFOUIsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLEVBQUUsQ0FBQztBQUM5QixNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsRUFBRSxDQUFDO0FBRTVCLElBQUksSUFBSSxFQUFFO0lBQ1IsTUFBTSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUMzQixNQUFNLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0NBQzFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcURldiB9IGZyb20gJy4vcWRldic7XG5cbmV4cG9ydCBjb25zdCBFTVBUWV9BUlJBWSA9IFtdO1xuZXhwb3J0IGNvbnN0IEVNUFRZX09CSiA9IHt9O1xuXG5pZiAocURldikge1xuICBPYmplY3QuZnJlZXplKEVNUFRZX0FSUkFZKTtcbiAgT2JqZWN0LmZyZWV6ZShFTVBUWV9PQkopO1xufVxuIl19","import { qDev } from './qdev';\nconst STYLE = qDev\n    ? `background: #564CE0; color: white; padding: 2px 3px; border-radius: 2px; font-size: 0.8em;`\n    : '';\nexport const logError = (message, ...optionalParams) => {\n    // eslint-disable-next-line no-console\n    console.error('%cQWIK ERROR', STYLE, message, ...optionalParams);\n};\nexport const logWarn = (message, ...optionalParams) => {\n    // eslint-disable-next-line no-console\n    console.warn('%cQWIK WARN', STYLE, message, ...optionalParams);\n};\nexport const logDebug = (message, ...optionalParams) => {\n    if (qDev) {\n        // eslint-disable-next-line no-console\n        console.debug('%cQWIK', STYLE, message, ...optionalParams);\n    }\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL3V0aWwvbG9nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFFOUIsTUFBTSxLQUFLLEdBQUcsSUFBSTtJQUNoQixDQUFDLENBQUMsNEZBQTRGO0lBQzlGLENBQUMsQ0FBQyxFQUFFLENBQUM7QUFFUCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsQ0FBQyxPQUFhLEVBQUUsR0FBRyxjQUFxQixFQUFFLEVBQUU7SUFDbEUsc0NBQXNDO0lBQ3RDLE9BQU8sQ0FBQyxLQUFLLENBQUMsY0FBYyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsR0FBRyxjQUFjLENBQUMsQ0FBQztBQUNuRSxDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUcsQ0FBQyxPQUFhLEVBQUUsR0FBRyxjQUFxQixFQUFFLEVBQUU7SUFDakUsc0NBQXNDO0lBQ3RDLE9BQU8sQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsR0FBRyxjQUFjLENBQUMsQ0FBQztBQUNqRSxDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsQ0FBQyxPQUFhLEVBQUUsR0FBRyxjQUFxQixFQUFFLEVBQUU7SUFDbEUsSUFBSSxJQUFJLEVBQUU7UUFDUixzQ0FBc0M7UUFDdEMsT0FBTyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxHQUFHLGNBQWMsQ0FBQyxDQUFDO0tBQzVEO0FBQ0gsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcURldiB9IGZyb20gJy4vcWRldic7XG5cbmNvbnN0IFNUWUxFID0gcURldlxuICA/IGBiYWNrZ3JvdW5kOiAjNTY0Q0UwOyBjb2xvcjogd2hpdGU7IHBhZGRpbmc6IDJweCAzcHg7IGJvcmRlci1yYWRpdXM6IDJweDsgZm9udC1zaXplOiAwLjhlbTtgXG4gIDogJyc7XG5cbmV4cG9ydCBjb25zdCBsb2dFcnJvciA9IChtZXNzYWdlPzogYW55LCAuLi5vcHRpb25hbFBhcmFtczogYW55W10pID0+IHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgY29uc29sZS5lcnJvcignJWNRV0lLIEVSUk9SJywgU1RZTEUsIG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbn07XG5cbmV4cG9ydCBjb25zdCBsb2dXYXJuID0gKG1lc3NhZ2U/OiBhbnksIC4uLm9wdGlvbmFsUGFyYW1zOiBhbnlbXSkgPT4ge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICBjb25zb2xlLndhcm4oJyVjUVdJSyBXQVJOJywgU1RZTEUsIG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbn07XG5cbmV4cG9ydCBjb25zdCBsb2dEZWJ1ZyA9IChtZXNzYWdlPzogYW55LCAuLi5vcHRpb25hbFBhcmFtczogYW55W10pID0+IHtcbiAgaWYgKHFEZXYpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgIGNvbnNvbGUuZGVidWcoJyVjUVdJSycsIFNUWUxFLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gIH1cbn07XG4iXX0=","import { logError } from '../util/log';\nimport { qDev } from '../util/qdev';\nexport function assertDefined(value, text) {\n    if (qDev) {\n        if (value != null)\n            return;\n        throw newError(text || 'Expected defined value');\n    }\n}\nexport function assertNotPromise(value, text) {\n    if (qDev) {\n        if (!(value instanceof Promise))\n            return;\n        throw newError(text || 'Expected defined value.');\n    }\n}\nexport function assertDefinedAndNotPromise(value, text) {\n    if (qDev) {\n        assertDefined(value, text);\n        assertNotPromise(value, text);\n    }\n}\nexport function assertInstanceOf(value, type, text) {\n    if (qDev) {\n        if (value instanceof type)\n            return;\n        throw newError(text || `Expected value '${value}' to be instance of '${type}' but was '${typeOf(value)}'.`);\n    }\n}\nexport function assertString(value, text) {\n    if (qDev) {\n        if (typeof value === 'string')\n            return;\n        throw newError(text || `Expected value '${value}' to be 'string' but was '${typeOf(value)}'.`);\n    }\n}\nexport function assertNotEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 !== value2)\n            return;\n        throw newError(text || `Expected '${value1}' !== '${value2}'.`);\n    }\n}\nexport function assertEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 === value2)\n            return;\n        throw newError(text || `Expected '${value1}' === '${value2}'.`);\n    }\n}\nexport function assertLessOrEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 <= value2)\n            return;\n        throw newError(text || `Expected '${value1}' <= '${value2}'.`);\n    }\n}\nexport function assertLess(value1, value2, text) {\n    if (qDev) {\n        if (value1 < value2)\n            return;\n        throw newError(text || `Expected '${value1}' < '${value2}'.`);\n    }\n}\nexport function assertGreaterOrEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 >= value2)\n            return;\n        throw newError(text || `Expected '${value1}' >= '${value2}'.`);\n    }\n}\nexport function assertGreater(value1, value2, text) {\n    if (qDev) {\n        if (value1 > value2)\n            return;\n        throw newError(text || `Expected '${value1}' > '${value2}'.`);\n    }\n}\nfunction typeOf(value) {\n    if (value === null)\n        return 'null';\n    const type = typeof value;\n    if (type === 'object') {\n        return value?.constructor?.name || '<unknown>';\n    }\n    else {\n        return type;\n    }\n}\nfunction newError(text) {\n    debugger; // eslint-disable-line no-debugger\n    const error = new Error(text);\n    logError(error); // eslint-disable-line no-console\n    return error;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXJ0LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL2Fzc2VydC9hc3NlcnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN2QyxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRXBDLE1BQU0sVUFBVSxhQUFhLENBQUMsS0FBVSxFQUFFLElBQWE7SUFDckQsSUFBSSxJQUFJLEVBQUU7UUFDUixJQUFJLEtBQUssSUFBSSxJQUFJO1lBQUUsT0FBTztRQUMxQixNQUFNLFFBQVEsQ0FBQyxJQUFJLElBQUksd0JBQXdCLENBQUMsQ0FBQztLQUNsRDtBQUNILENBQUM7QUFFRCxNQUFNLFVBQVUsZ0JBQWdCLENBQUMsS0FBVSxFQUFFLElBQWE7SUFDeEQsSUFBSSxJQUFJLEVBQUU7UUFDUixJQUFJLENBQUMsQ0FBQyxLQUFLLFlBQVksT0FBTyxDQUFDO1lBQUUsT0FBTztRQUN4QyxNQUFNLFFBQVEsQ0FBQyxJQUFJLElBQUkseUJBQXlCLENBQUMsQ0FBQztLQUNuRDtBQUNILENBQUM7QUFFRCxNQUFNLFVBQVUsMEJBQTBCLENBQUMsS0FBVSxFQUFFLElBQWE7SUFDbEUsSUFBSSxJQUFJLEVBQUU7UUFDUixhQUFhLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQzNCLGdCQUFnQixDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQztLQUMvQjtBQUNILENBQUM7QUFFRCxNQUFNLFVBQVUsZ0JBQWdCLENBQUMsS0FBVSxFQUFFLElBQVMsRUFBRSxJQUFhO0lBQ25FLElBQUksSUFBSSxFQUFFO1FBQ1IsSUFBSSxLQUFLLFlBQVksSUFBSTtZQUFFLE9BQU87UUFDbEMsTUFBTSxRQUFRLENBQ1osSUFBSSxJQUFJLG1CQUFtQixLQUFLLHdCQUF3QixJQUFJLGNBQWMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJ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IHsgbG9nRXJyb3IgfSBmcm9tICcuLi91dGlsL2xvZyc7XG5pbXBvcnQgeyBxRGV2IH0gZnJvbSAnLi4vdXRpbC9xZGV2JztcblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydERlZmluZWQodmFsdWU6IGFueSwgdGV4dD86IHN0cmluZykge1xuICBpZiAocURldikge1xuICAgIGlmICh2YWx1ZSAhPSBudWxsKSByZXR1cm47XG4gICAgdGhyb3cgbmV3RXJyb3IodGV4dCB8fCAnRXhwZWN0ZWQgZGVmaW5lZCB2YWx1ZScpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnROb3RQcm9taXNlKHZhbHVlOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAoISh2YWx1ZSBpbnN0YW5jZW9mIFByb21pc2UpKSByZXR1cm47XG4gICAgdGhyb3cgbmV3RXJyb3IodGV4dCB8fCAnRXhwZWN0ZWQgZGVmaW5lZCB2YWx1ZS4nKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0RGVmaW5lZEFuZE5vdFByb21pc2UodmFsdWU6IGFueSwgdGV4dD86IHN0cmluZykge1xuICBpZiAocURldikge1xuICAgIGFzc2VydERlZmluZWQodmFsdWUsIHRleHQpO1xuICAgIGFzc2VydE5vdFByb21pc2UodmFsdWUsIHRleHQpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRJbnN0YW5jZU9mKHZhbHVlOiBhbnksIHR5cGU6IGFueSwgdGV4dD86IHN0cmluZykge1xuICBpZiAocURldikge1xuICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIHR5cGUpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcihcbiAgICAgIHRleHQgfHwgYEV4cGVjdGVkIHZhbHVlICcke3ZhbHVlfScgdG8gYmUgaW5zdGFuY2Ugb2YgJyR7dHlwZX0nIGJ1dCB3YXMgJyR7dHlwZU9mKHZhbHVlKX0nLmBcbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRTdHJpbmcodmFsdWU6IGFueSwgdGV4dD86IHN0cmluZykge1xuICBpZiAocURldikge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSByZXR1cm47XG4gICAgdGhyb3cgbmV3RXJyb3IodGV4dCB8fCBgRXhwZWN0ZWQgdmFsdWUgJyR7dmFsdWV9JyB0byBiZSAnc3RyaW5nJyBidXQgd2FzICcke3R5cGVPZih2YWx1ZSl9Jy5gKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0Tm90RXF1YWwodmFsdWUxOiBhbnksIHZhbHVlMjogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKHZhbHVlMSAhPT0gdmFsdWUyKSByZXR1cm47XG4gICAgdGhyb3cgbmV3RXJyb3IodGV4dCB8fCBgRXhwZWN0ZWQgJyR7dmFsdWUxfScgIT09ICcke3ZhbHVlMn0nLmApO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRFcXVhbCh2YWx1ZTE6IGFueSwgdmFsdWUyOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAodmFsdWUxID09PSB2YWx1ZTIpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8IGBFeHBlY3RlZCAnJHt2YWx1ZTF9JyA9PT0gJyR7dmFsdWUyfScuYCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydExlc3NPckVxdWFsKHZhbHVlMTogYW55LCB2YWx1ZTI6IGFueSwgdGV4dD86IHN0cmluZykge1xuICBpZiAocURldikge1xuICAgIGlmICh2YWx1ZTEgPD0gdmFsdWUyKSByZXR1cm47XG4gICAgdGhyb3cgbmV3RXJyb3IodGV4dCB8fCBgRXhwZWN0ZWQgJyR7dmFsdWUxfScgPD0gJyR7dmFsdWUyfScuYCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydExlc3ModmFsdWUxOiBhbnksIHZhbHVlMjogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKHZhbHVlMSA8IHZhbHVlMikgcmV0dXJuO1xuICAgIHRocm93IG5ld0Vycm9yKHRleHQgfHwgYEV4cGVjdGVkICcke3ZhbHVlMX0nIDwgJyR7dmFsdWUyfScuYCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydEdyZWF0ZXJPckVxdWFsKHZhbHVlMTogYW55LCB2YWx1ZTI6IGFueSwgdGV4dD86IHN0cmluZykge1xuICBpZiAocURldikge1xuICAgIGlmICh2YWx1ZTEgPj0gdmFsdWUyKSByZXR1cm47XG4gICAgdGhyb3cgbmV3RXJyb3IodGV4dCB8fCBgRXhwZWN0ZWQgJyR7dmFsdWUxfScgPj0gJyR7dmFsdWUyfScuYCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydEdyZWF0ZXIodmFsdWUxOiBhbnksIHZhbHVlMjogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKHZhbHVlMSA+IHZhbHVlMikgcmV0dXJuO1xuICAgIHRocm93IG5ld0Vycm9yKHRleHQgfHwgYEV4cGVjdGVkICcke3ZhbHVlMX0nID4gJyR7dmFsdWUyfScuYCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gdHlwZU9mKHZhbHVlOiBhbnkpIHtcbiAgaWYgKHZhbHVlID09PSBudWxsKSByZXR1cm4gJ251bGwnO1xuICBjb25zdCB0eXBlID0gdHlwZW9mIHZhbHVlO1xuICBpZiAodHlwZSA9PT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gdmFsdWU/LmNvbnN0cnVjdG9yPy5uYW1lIHx8ICc8dW5rbm93bj4nO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB0eXBlO1xuICB9XG59XG5cbmZ1bmN0aW9uIG5ld0Vycm9yKHRleHQ6IHN0cmluZykge1xuICBkZWJ1Z2dlcjsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1kZWJ1Z2dlclxuICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcih0ZXh0KTtcbiAgbG9nRXJyb3IoZXJyb3IpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGVcbiAgcmV0dXJuIGVycm9yO1xufVxuIl19","/**\n * State factory of the component.\n */\nexport const OnMount = 'on:qmount';\n/**\n * State factory of the component.\n */\nexport const QHostAttr = 'q:host';\nexport const OnRenderProp = 'q:renderFn';\n/**\n * State factory of the component.\n */\nexport const QHostSelector = '[q\\\\:host]';\n/**\n * State factory of the component.\n */\nexport const OnUnmount = 'on:qunmount';\n/**\n * State factory of the component.\n */\nexport const OnResume = 'on:qinit';\n/**\n * Component Styles.\n */\nexport const ComponentScopedStyles = 'q:sstyle';\n/**\n * Unscoped Component Styles.\n */\nexport const ComponentUnscopedStyles = 'q:ustyle';\n/**\n * Component style host prefix\n */\nexport const ComponentStylesPrefixHost = '💎';\n/**\n * Component style content prefix\n */\nexport const ComponentStylesPrefixContent = '⭐️';\n/**\n * Prefix used to identify on listeners.\n */\nexport const EventPrefix = 'on:';\n/**\n * Attribute used to mark that an event listener is attached.\n */\nexport const EventAny = 'on:.';\n/**\n * Tag name used for projection.\n */\nexport const QSlot = 'Q:SLOT';\nexport const QSlotSelector = 'Q\\\\:SLOT';\n/**\n * `<some-element q:slot=\"...\">`\n */\nexport const QSlotAttr = 'q:slot';\nexport const QCtxAttr = 'q:ctx';\nexport const QContainerAttr = 'q:container';\nexport const QContainerSelector = '[q\\\\:container]';\nexport const RenderEvent = 'qRender';\n/**\n * `<q:slot name=\"...\">`\n */\nexport const QSlotName = 'name';\nexport const QSlotInertName = '\\u0000';\nexport const ELEMENT_ID = 'q:id';\nexport const ELEMENT_ID_SELECTOR = '[q\\\\:id]';\nexport const ELEMENT_ID_PREFIX = '#';\nexport const ELEMENT_ID_Q_PROPS_PREFIX = '&';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFya2Vycy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvcXdpay9zcmMvY29yZS91dGlsL21hcmtlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUcsV0FBVyxDQUFDO0FBRW5DOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLFFBQVEsQ0FBQztBQUNsQyxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsWUFBWSxDQUFDO0FBRXpDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLFlBQVksQ0FBQztBQUUxQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxhQUFhLENBQUM7QUFFdkM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsVUFBVSxDQUFDO0FBRW5DOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUcsVUFBVSxDQUFDO0FBRWhEOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQUcsVUFBVSxDQUFDO0FBRWxEOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDO0FBRTlDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQUcsSUFBSSxDQUFDO0FBRWpEOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLEtBQUssQ0FBQztBQUVqQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUM7QUFFL0I7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxLQUFLLEdBQUcsUUFBUSxDQUFDO0FBQzlCLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxVQUFVLENBQUM7QUFFeEM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDO0FBRWxDLE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxPQUFPLENBQUM7QUFFaEMsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLGFBQWEsQ0FBQztBQUU1QyxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxpQkFBaUIsQ0FBQztBQUVwRCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsU0FBUyxDQUFDO0FBQ3JDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLE1BQU0sQ0FBQztBQUNoQyxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsUUFBUSxDQUFDO0FBRXZDLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxNQUFNLENBQUM7QUFDakMsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsVUFBVSxDQUFDO0FBQzlDLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLEdBQUcsQ0FBQztBQUNyQyxNQUFNLENBQUMsTUFBTSx5QkFBeUIsR0FBRyxHQUFHLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFN0YXRlIGZhY3Rvcnkgb2YgdGhlIGNvbXBvbmVudC5cbiAqL1xuZXhwb3J0IGNvbnN0IE9uTW91bnQgPSAnb246cW1vdW50JztcblxuLyoqXG4gKiBTdGF0ZSBmYWN0b3J5IG9mIHRoZSBjb21wb25lbnQuXG4gKi9cbmV4cG9ydCBjb25zdCBRSG9zdEF0dHIgPSAncTpob3N0JztcbmV4cG9ydCBjb25zdCBPblJlbmRlclByb3AgPSAncTpyZW5kZXJGbic7XG5cbi8qKlxuICogU3RhdGUgZmFjdG9yeSBvZiB0aGUgY29tcG9uZW50LlxuICovXG5leHBvcnQgY29uc3QgUUhvc3RTZWxlY3RvciA9ICdbcVxcXFw6aG9zdF0nO1xuXG4vKipcbiAqIFN0YXRlIGZhY3Rvcnkgb2YgdGhlIGNvbXBvbmVudC5cbiAqL1xuZXhwb3J0IGNvbnN0IE9uVW5tb3VudCA9ICdvbjpxdW5tb3VudCc7XG5cbi8qKlxuICogU3RhdGUgZmFjdG9yeSBvZiB0aGUgY29tcG9uZW50LlxuICovXG5leHBvcnQgY29uc3QgT25SZXN1bWUgPSAnb246cWluaXQnO1xuXG4vKipcbiAqIENvbXBvbmVudCBTdHlsZXMuXG4gKi9cbmV4cG9ydCBjb25zdCBDb21wb25lbnRTY29wZWRTdHlsZXMgPSAncTpzc3R5bGUnO1xuXG4vKipcbiAqIFVuc2NvcGVkIENvbXBvbmVudCBTdHlsZXMuXG4gKi9cbmV4cG9ydCBjb25zdCBDb21wb25lbnRVbnNjb3BlZFN0eWxlcyA9ICdxOnVzdHlsZSc7XG5cbi8qKlxuICogQ29tcG9uZW50IHN0eWxlIGhvc3QgcHJlZml4XG4gKi9cbmV4cG9ydCBjb25zdCBDb21wb25lbnRTdHlsZXNQcmVmaXhIb3N0ID0gJ/Cfko4nO1xuXG4vKipcbiAqIENvbXBvbmVudCBzdHlsZSBjb250ZW50IHByZWZpeFxuICovXG5leHBvcnQgY29uc3QgQ29tcG9uZW50U3R5bGVzUHJlZml4Q29udGVudCA9ICfirZDvuI8nO1xuXG4vKipcbiAqIFByZWZpeCB1c2VkIHRvIGlkZW50aWZ5IG9uIGxpc3RlbmVycy5cbiAqL1xuZXhwb3J0IGNvbnN0IEV2ZW50UHJlZml4ID0gJ29uOic7XG5cbi8qKlxuICogQXR0cmlidXRlIHVzZWQgdG8gbWFyayB0aGF0IGFuIGV2ZW50IGxpc3RlbmVyIGlzIGF0dGFjaGVkLlxuICovXG5leHBvcnQgY29uc3QgRXZlbnRBbnkgPSAnb246Lic7XG5cbi8qKlxuICogVGFnIG5hbWUgdXNlZCBmb3IgcHJvamVjdGlvbi5cbiAqL1xuZXhwb3J0IGNvbnN0IFFTbG90ID0gJ1E6U0xPVCc7XG5leHBvcnQgY29uc3QgUVNsb3RTZWxlY3RvciA9ICdRXFxcXDpTTE9UJztcblxuLyoqXG4gKiBgPHNvbWUtZWxlbWVudCBxOnNsb3Q9XCIuLi5cIj5gXG4gKi9cbmV4cG9ydCBjb25zdCBRU2xvdEF0dHIgPSAncTpzbG90JztcblxuZXhwb3J0IGNvbnN0IFFDdHhBdHRyID0gJ3E6Y3R4JztcblxuZXhwb3J0IGNvbnN0IFFDb250YWluZXJBdHRyID0gJ3E6Y29udGFpbmVyJztcblxuZXhwb3J0IGNvbnN0IFFDb250YWluZXJTZWxlY3RvciA9ICdbcVxcXFw6Y29udGFpbmVyXSc7XG5cbmV4cG9ydCBjb25zdCBSZW5kZXJFdmVudCA9ICdxUmVuZGVyJztcbi8qKlxuICogYDxxOnNsb3QgbmFtZT1cIi4uLlwiPmBcbiAqL1xuZXhwb3J0IGNvbnN0IFFTbG90TmFtZSA9ICduYW1lJztcbmV4cG9ydCBjb25zdCBRU2xvdEluZXJ0TmFtZSA9ICdcXHUwMDAwJztcblxuZXhwb3J0IGNvbnN0IEVMRU1FTlRfSUQgPSAncTppZCc7XG5leHBvcnQgY29uc3QgRUxFTUVOVF9JRF9TRUxFQ1RPUiA9ICdbcVxcXFw6aWRdJztcbmV4cG9ydCBjb25zdCBFTEVNRU5UX0lEX1BSRUZJWCA9ICcjJztcbmV4cG9ydCBjb25zdCBFTEVNRU5UX0lEX1FfUFJPUFNfUFJFRklYID0gJyYnO1xuIl19","import { assertDefined } from '../assert/assert';\nexport function getDocument(node) {\n    if (typeof document !== 'undefined') {\n        return document;\n    }\n    if (node.nodeType === 9) {\n        return node;\n    }\n    let doc = node.ownerDocument;\n    while (doc && doc.nodeType !== 9) {\n        doc = doc.parentNode;\n    }\n    assertDefined(doc);\n    return doc;\n}\nexport function getParentElement(node) {\n    return node.parentElement || previousParent.get(node) || null;\n}\nexport const previousParent = new WeakMap();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9tLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL3V0aWwvZG9tLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVqRCxNQUFNLFVBQVUsV0FBVyxDQUFDLElBQVU7SUFDcEMsSUFBSSxPQUFPLFFBQVEsS0FBSyxXQUFXLEVBQUU7UUFDbkMsT0FBTyxRQUFRLENBQUM7S0FDakI7SUFDRCxJQUFJLElBQUksQ0FBQyxRQUFRLEtBQUssQ0FBQyxFQUFFO1FBQ3ZCLE9BQU8sSUFBZ0IsQ0FBQztLQUN6QjtJQUNELElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUM7SUFDN0IsT0FBTyxHQUFHLElBQUksR0FBRyxDQUFDLFFBQVEsS0FBSyxDQUFDLEVBQUU7UUFDaEMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxVQUFpQixDQUFDO0tBQzdCO0lBQ0QsYUFBYSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ25CLE9BQU8sR0FBSSxDQUFDO0FBQ2QsQ0FBQztBQUVELE1BQU0sVUFBVSxnQkFBZ0IsQ0FBQyxJQUFVO0lBQ3pDLE9BQU8sSUFBSSxDQUFDLGFBQWEsSUFBSSxjQUFjLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQztBQUNoRSxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLElBQUksT0FBTyxFQUFpQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXNzZXJ0RGVmaW5lZCB9IGZyb20gJy4uL2Fzc2VydC9hc3NlcnQnO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RG9jdW1lbnQobm9kZTogTm9kZSk6IERvY3VtZW50IHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gZG9jdW1lbnQ7XG4gIH1cbiAgaWYgKG5vZGUubm9kZVR5cGUgPT09IDkpIHtcbiAgICByZXR1cm4gbm9kZSBhcyBEb2N1bWVudDtcbiAgfVxuICBsZXQgZG9jID0gbm9kZS5vd25lckRvY3VtZW50O1xuICB3aGlsZSAoZG9jICYmIGRvYy5ub2RlVHlwZSAhPT0gOSkge1xuICAgIGRvYyA9IGRvYy5wYXJlbnROb2RlIGFzIGFueTtcbiAgfVxuICBhc3NlcnREZWZpbmVkKGRvYyk7XG4gIHJldHVybiBkb2MhO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UGFyZW50RWxlbWVudChub2RlOiBOb2RlKTogRWxlbWVudCB8IG51bGwge1xuICByZXR1cm4gbm9kZS5wYXJlbnRFbGVtZW50IHx8IHByZXZpb3VzUGFyZW50LmdldChub2RlKSB8fCBudWxsO1xufVxuXG5leHBvcnQgY29uc3QgcHJldmlvdXNQYXJlbnQgPSBuZXcgV2Vha01hcDxOb2RlLCBFbGVtZW50PigpO1xuIl19","import { assertDefined } from '../assert/assert';\nimport { QContainerSelector, QHostAttr } from '../util/markers';\nimport { getDocument } from '../util/dom';\nexport const CONTAINER = Symbol('container');\nexport function isStyleTask(obj) {\n    return obj && typeof obj === 'object' && obj.type === 'style';\n}\nlet _context;\nexport function tryGetInvokeContext() {\n    if (!_context) {\n        const context = typeof document !== 'undefined' && document && document.__q_context__;\n        if (!context) {\n            return undefined;\n        }\n        if (Array.isArray(context)) {\n            const element = context[0];\n            const hostElement = getHostElement(element);\n            assertDefined(element);\n            return (document.__q_context__ = newInvokeContext(getDocument(element), hostElement, element, context[1], context[2]));\n        }\n        return context;\n    }\n    return _context;\n}\nexport function getInvokeContext() {\n    const ctx = tryGetInvokeContext();\n    if (!ctx) {\n        throw new Error(\"Q-ERROR: invoking 'use*()' method outside of invocation context.\");\n    }\n    return ctx;\n}\nexport function useInvoke(context, fn, ...args) {\n    const previousContext = _context;\n    let returnValue;\n    try {\n        _context = context;\n        returnValue = fn.apply(null, args);\n    }\n    finally {\n        const currentCtx = _context;\n        _context = previousContext;\n        if (currentCtx.waitOn && currentCtx.waitOn.length > 0) {\n            // eslint-disable-next-line no-unsafe-finally\n            return Promise.all(currentCtx.waitOn).then(() => returnValue);\n        }\n    }\n    return returnValue;\n}\nexport function newInvokeContext(doc, hostElement, element, event, url) {\n    return {\n        seq: 0,\n        doc,\n        hostElement,\n        element,\n        event: event,\n        url: url || null,\n        qrl: undefined,\n    };\n}\n/**\n * @alpha\n */\nexport function useWaitOn(promise) {\n    const ctx = getInvokeContext();\n    (ctx.waitOn || (ctx.waitOn = [])).push(promise);\n}\nexport function getHostElement(el) {\n    let foundSlot = false;\n    let node = el;\n    while (node) {\n        const isHost = node.hasAttribute(QHostAttr);\n        const isSlot = node.tagName === 'Q:SLOT';\n        if (isHost) {\n            if (!foundSlot) {\n                break;\n            }\n            else {\n                foundSlot = false;\n            }\n        }\n        if (isSlot) {\n            foundSlot = true;\n        }\n        node = node.parentElement;\n    }\n    return node;\n}\nexport function getContainer(el) {\n    let container = el[CONTAINER];\n    if (!container) {\n        container = el.closest(QContainerSelector);\n        el[CONTAINER] = container;\n    }\n    return container;\n}\nexport function useContainerState() {\n    const ctx = getInvokeContext();\n    const containerState = ctx.renderCtx?.containerState;\n    if (!containerState) {\n        throw new Error('Cant access containerState for existing context');\n    }\n    return containerState;\n}\n//# sourceMappingURL=data:application/json;base64,","export function flattenArray(array, dst) {\n    // Yes this function is just Array.flat, but we need to run on old versions of Node.\n    if (!dst)\n        dst = [];\n    for (const item of array) {\n        if (Array.isArray(item)) {\n            flattenArray(item, dst);\n        }\n        else {\n            dst.push(item);\n        }\n    }\n    return dst;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJyYXkuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL3F3aWsvc3JjL2NvcmUvdXRpbC9hcnJheS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLFVBQVUsWUFBWSxDQUFJLEtBQWtCLEVBQUUsR0FBUztJQUMzRCxvRkFBb0Y7SUFDcEYsSUFBSSxDQUFDLEdBQUc7UUFBRSxHQUFHLEdBQUcsRUFBRSxDQUFDO0lBQ25CLEtBQUssTUFBTSxJQUFJLElBQUksS0FBSyxFQUFFO1FBQ3hCLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUN2QixZQUFZLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1NBQ3pCO2FBQU07WUFDTCxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ2hCO0tBQ0Y7SUFDRCxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZmxhdHRlbkFycmF5PFQ+KGFycmF5OiAoVCB8IFRbXSlbXSwgZHN0PzogVFtdKTogVFtdIHtcbiAgLy8gWWVzIHRoaXMgZnVuY3Rpb24gaXMganVzdCBBcnJheS5mbGF0LCBidXQgd2UgbmVlZCB0byBydW4gb24gb2xkIHZlcnNpb25zIG9mIE5vZGUuXG4gIGlmICghZHN0KSBkc3QgPSBbXTtcbiAgZm9yIChjb25zdCBpdGVtIG9mIGFycmF5KSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoaXRlbSkpIHtcbiAgICAgIGZsYXR0ZW5BcnJheShpdGVtLCBkc3QpO1xuICAgIH0gZWxzZSB7XG4gICAgICBkc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGRzdDtcbn1cbiJdfQ==","import { flattenArray } from './array';\n/**\n * Converts a tree of Promises into a flat array of resolved promise values.\n *\n * @param tree - array of arrays of values or promises of values.\n * @returns a `Promise` of array of values.\n */\nexport function flattenPromiseTree(tree) {\n    return Promise.all(tree).then((values) => {\n        const flatArray = flattenArray(values);\n        for (let i = 0; i < flatArray.length; i++) {\n            if (isPromise(flatArray[i])) {\n                return flattenPromiseTree(flatArray);\n            }\n        }\n        return flatArray;\n    });\n}\nexport function isPromise(value) {\n    return value instanceof Promise;\n}\nexport const then = (promise, thenFn, rejectFn) => {\n    return isPromise(promise) ? promise.then(thenFn, rejectFn) : thenFn(promise);\n};\nexport const promiseAll = (promises) => {\n    const hasPromise = promises.some(isPromise);\n    if (hasPromise) {\n        return Promise.all(promises);\n    }\n    return promises;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvbWlzZXMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL3F3aWsvc3JjL2NvcmUvdXRpbC9wcm9taXNlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBSXZDOzs7OztHQUtHO0FBQ0gsTUFBTSxVQUFVLGtCQUFrQixDQUFJLElBQW9CO0lBQ3hELE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFXLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFhLEVBQUUsRUFBRTtRQUNyRCxNQUFNLFNBQVMsR0FBRyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDdkMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDekMsSUFBSSxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7Z0JBQzNCLE9BQU8sa0JBQWtCLENBQUMsU0FBUyxDQUFDLENBQUM7YUFDdEM7U0FDRjtRQUNELE9BQU8sU0FBUyxDQUFDO0lBQ25CLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQUVELE1BQU0sVUFBVSxTQUFTLENBQUMsS0FBVTtJQUNsQyxPQUFPLEtBQUssWUFBWSxPQUFPLENBQUM7QUFDbEMsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBRyxDQUNsQixPQUEwQixFQUMxQixNQUE4QyxFQUM5QyxRQUE0QixFQUNULEVBQUU7SUFDckIsT0FBTyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBYSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBYyxDQUFDLENBQUM7QUFDN0YsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLENBQWtCLFFBQVcsRUFBcUIsRUFBRTtJQUM1RSxNQUFNLFVBQVUsR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQzVDLElBQUksVUFBVSxFQUFFO1FBQ2QsT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0tBQzlCO0lBQ0QsT0FBTyxRQUFRLENBQUM7QUFDbEIsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IHsgZmxhdHRlbkFycmF5IH0gZnJvbSAnLi9hcnJheSc7XG5cbmV4cG9ydCB0eXBlIFByb21pc2VUcmVlPFQ+ID0gVCB8IFByb21pc2U8VD4gfCBQcm9taXNlPFRbXT4gfCBBcnJheTxQcm9taXNlVHJlZTxUPj47XG5cbi8qKlxuICogQ29udmVydHMgYSB0cmVlIG9mIFByb21pc2VzIGludG8gYSBmbGF0IGFycmF5IG9mIHJlc29sdmVkIHByb21pc2UgdmFsdWVzLlxuICpcbiAqIEBwYXJhbSB0cmVlIC0gYXJyYXkgb2YgYXJyYXlzIG9mIHZhbHVlcyBvciBwcm9taXNlcyBvZiB2YWx1ZXMuXG4gKiBAcmV0dXJucyBhIGBQcm9taXNlYCBvZiBhcnJheSBvZiB2YWx1ZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmbGF0dGVuUHJvbWlzZVRyZWU8VD4odHJlZTogUHJvbWlzZVRyZWU8VD4pOiBQcm9taXNlPFRbXT4ge1xuICByZXR1cm4gUHJvbWlzZS5hbGwodHJlZSBhcyBUW10pLnRoZW4oKHZhbHVlczogYW55W10pID0+IHtcbiAgICBjb25zdCBmbGF0QXJyYXkgPSBmbGF0dGVuQXJyYXkodmFsdWVzKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZsYXRBcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKGlzUHJvbWlzZShmbGF0QXJyYXlbaV0pKSB7XG4gICAgICAgIHJldHVybiBmbGF0dGVuUHJvbWlzZVRyZWUoZmxhdEFycmF5KTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZsYXRBcnJheTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1Byb21pc2UodmFsdWU6IGFueSk6IHZhbHVlIGlzIFByb21pc2U8YW55PiB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFByb21pc2U7XG59XG5cbmV4cG9ydCBjb25zdCB0aGVuID0gPFQsIEI+KFxuICBwcm9taXNlOiBWYWx1ZU9yUHJvbWlzZTxUPixcbiAgdGhlbkZuOiAoYXJnOiBBd2FpdGVkPFQ+KSA9PiBWYWx1ZU9yUHJvbWlzZTxCPixcbiAgcmVqZWN0Rm4/OiAoZXJyOiBhbnkpID0+IGFueVxuKTogVmFsdWVPclByb21pc2U8Qj4gPT4ge1xuICByZXR1cm4gaXNQcm9taXNlKHByb21pc2UpID8gcHJvbWlzZS50aGVuKHRoZW5GbiBhcyBhbnksIHJlamVjdEZuKSA6IHRoZW5Gbihwcm9taXNlIGFzIGFueSk7XG59O1xuXG5leHBvcnQgY29uc3QgcHJvbWlzZUFsbCA9IDxUIGV4dGVuZHMgYW55W10+KHByb21pc2VzOiBUKTogVmFsdWVPclByb21pc2U8VD4gPT4ge1xuICBjb25zdCBoYXNQcm9taXNlID0gcHJvbWlzZXMuc29tZShpc1Byb21pc2UpO1xuICBpZiAoaGFzUHJvbWlzZSkge1xuICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcyk7XG4gIH1cbiAgcmV0dXJuIHByb21pc2VzO1xufTtcbiJdfQ==","import { newInvokeContext, useInvoke } from '../use/use-core';\nimport { then } from '../util/promises';\nimport { qrlImport, stringifyQRL } from './qrl';\nexport function isQrl(value) {\n    return value instanceof QRLInternal;\n}\nclass QRL {\n    constructor(chunk, symbol, symbolRef, symbolFn, capture, captureRef) {\n        this.chunk = chunk;\n        this.symbol = symbol;\n        this.symbolRef = symbolRef;\n        this.symbolFn = symbolFn;\n        this.capture = capture;\n        this.captureRef = captureRef;\n    }\n    setContainer(el) {\n        if (!this.el) {\n            this.el = el;\n        }\n    }\n    getSymbol() {\n        return this.refSymbol ?? this.symbol;\n    }\n    getCanonicalSymbol() {\n        return getCanonicalSymbol(this.refSymbol ?? this.symbol);\n    }\n    async resolve(el) {\n        if (el) {\n            this.setContainer(el);\n        }\n        return qrlImport(this.el, this);\n    }\n    resolveIfNeeded(el) {\n        return typeof this.symbolRef === 'function' ? this.symbolRef : this.resolve(el);\n    }\n    invokeFn(el, currentCtx, beforeFn) {\n        return ((...args) => {\n            const fn = this.resolveIfNeeded(el);\n            return then(fn, (fn) => {\n                if (typeof fn === 'function') {\n                    const baseContext = currentCtx ?? newInvokeContext();\n                    const context = {\n                        ...baseContext,\n                        qrl: this,\n                    };\n                    if (beforeFn) {\n                        beforeFn();\n                    }\n                    return useInvoke(context, fn, ...args);\n                }\n                throw new Error('QRL is not a function');\n            });\n        });\n    }\n    copy() {\n        const copy = new QRLInternal(this.chunk, this.symbol, this.symbolRef, this.symbolFn, null, this.captureRef);\n        copy.refSymbol = this.refSymbol;\n        return copy;\n    }\n    async invoke(...args) {\n        const fn = this.invokeFn();\n        const result = await fn(...args);\n        return result;\n    }\n    serialize(options) {\n        return stringifyQRL(this, options);\n    }\n}\nexport const getCanonicalSymbol = (symbolName) => {\n    const index = symbolName.lastIndexOf('_');\n    if (index > -1) {\n        return symbolName.slice(index + 1);\n    }\n    return symbolName;\n};\nexport const isSameQRL = (a, b) => {\n    return a.getCanonicalSymbol() === b.getCanonicalSymbol();\n};\nexport const QRLInternal = QRL;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXJsLWNsYXNzLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL2ltcG9ydC9xcmwtY2xhc3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFpQixnQkFBZ0IsRUFBRSxTQUFTLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUM3RSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFeEMsT0FBTyxFQUFFLFNBQVMsRUFBdUIsWUFBWSxFQUFFLE1BQU0sT0FBTyxDQUFDO0FBR3JFLE1BQU0sVUFBVSxLQUFLLENBQUMsS0FBVTtJQUM5QixPQUFPLEtBQUssWUFBWSxXQUFXLENBQUM7QUFDdEMsQ0FBQztBQUVELE1BQU0sR0FBRztJQU1QLFlBQ1MsS0FBYSxFQUNiLE1BQWMsRUFDZCxTQUFzQyxFQUN0QyxRQUFxRCxFQUNyRCxPQUF3QixFQUN4QixVQUF3QjtRQUx4QixVQUFLLEdBQUwsS0FBSyxDQUFRO1FBQ2IsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUNkLGNBQVMsR0FBVCxTQUFTLENBQTZCO1FBQ3RDLGFBQVEsR0FBUixRQUFRLENBQTZDO1FBQ3JELFlBQU8sR0FBUCxPQUFPLENBQWlCO1FBQ3hCLGVBQVUsR0FBVixVQUFVLENBQWM7SUFDOUIsQ0FBQztJQUVKLFlBQVksQ0FBQyxFQUFXO1FBQ3RCLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFO1lBQ1osSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7U0FDZDtJQUNILENBQUM7SUFFRCxTQUFTO1FBQ1AsT0FBTyxJQUFJLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDdkMsQ0FBQztJQUVELGtCQUFrQjtRQUNoQixPQUFPLGtCQUFrQixDQUFDLElBQUksQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzNELENBQUM7SUFFRCxLQUFLLENBQUMsT0FBTyxD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ZUNvbnRleHQsIG5ld0ludm9rZUNvbnRleHQsIHVzZUludm9rZSB9IGZyb20gJy4uL3VzZS91c2UtY29yZSc7XG5pbXBvcnQgeyB0aGVuIH0gZnJvbSAnLi4vdXRpbC9wcm9taXNlcyc7XG5pbXBvcnQgdHlwZSB7IFZhbHVlT3JQcm9taXNlIH0gZnJvbSAnLi4vdXRpbC90eXBlcyc7XG5pbXBvcnQgeyBxcmxJbXBvcnQsIFFSTFNlcmlhbGl6ZU9wdGlvbnMsIHN0cmluZ2lmeVFSTCB9IGZyb20gJy4vcXJsJztcbmltcG9ydCB0eXBlIHsgUVJMIGFzIElRUkwgfSBmcm9tICcuL3FybC5wdWJsaWMnO1xuXG5leHBvcnQgZnVuY3Rpb24gaXNRcmwodmFsdWU6IGFueSk6IHZhbHVlIGlzIFFSTEludGVybmFsIHtcbiAgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUVJMSW50ZXJuYWw7XG59XG5cbmNsYXNzIFFSTDxUWVBFID0gYW55PiBpbXBsZW1lbnRzIElRUkw8VFlQRT4ge1xuICBfX2JyYW5kX19RUkxfXyE6IFRZUEU7XG4gIHJlZlN5bWJvbD86IHN0cmluZztcblxuICBwcml2YXRlIGVsOiBFbGVtZW50IHwgdW5kZWZpbmVkO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBjaHVuazogc3RyaW5nLFxuICAgIHB1YmxpYyBzeW1ib2w6IHN0cmluZyxcbiAgICBwdWJsaWMgc3ltYm9sUmVmOiBudWxsIHwgVmFsdWVPclByb21pc2U8VFlQRT4sXG4gICAgcHVibGljIHN5bWJvbEZuOiBudWxsIHwgKCgpID0+IFByb21pc2U8UmVjb3JkPHN0cmluZywgYW55Pj4pLFxuICAgIHB1YmxpYyBjYXB0dXJlOiBudWxsIHwgc3RyaW5nW10sXG4gICAgcHVibGljIGNhcHR1cmVSZWY6IG51bGwgfCBhbnlbXVxuICApIHt9XG5cbiAgc2V0Q29udGFpbmVyKGVsOiBFbGVtZW50KSB7XG4gICAgaWYgKCF0aGlzLmVsKSB7XG4gICAgICB0aGlzLmVsID0gZWw7XG4gICAgfVxuICB9XG5cbiAgZ2V0U3ltYm9sKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMucmVmU3ltYm9sID8/IHRoaXMuc3ltYm9sO1xuICB9XG5cbiAgZ2V0Q2Fub25pY2FsU3ltYm9sKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGdldENhbm9uaWNhbFN5bWJvbCh0aGlzLnJlZlN5bWJvbCA/PyB0aGlzLnN5bWJvbCk7XG4gIH1cblxuICBhc3luYyByZXNvbHZlKGVsPzogRWxlbWVudCk6IFByb21pc2U8VFlQRT4ge1xuICAgIGlmIChlbCkge1xuICAgICAgdGhpcy5zZXRDb250YWluZXIoZWwpO1xuICAgIH1cbiAgICByZXR1cm4gcXJsSW1wb3J0KHRoaXMuZWwsIHRoaXMgYXMgYW55KTtcbiAgfVxuXG4gIHJlc29sdmVJZk5lZWRlZChlbD86IEVsZW1lbnQpOiBWYWx1ZU9yUHJvbWlzZTxUWVBFPiB7XG4gICAgcmV0dXJuIHR5cGVvZiB0aGlzLnN5bWJvbFJlZiA9PT0gJ2Z1bmN0aW9uJyA/IHRoaXMuc3ltYm9sUmVmIDogdGhpcy5yZXNvbHZlKGVsKTtcbiAgfVxuXG4gIGludm9rZUZuKGVsPzogRWxlbWVudCwgY3VycmVudEN0eD86IEludm9rZUNvbnRleHQsIGJlZm9yZUZuPzogKCkgPT4gdm9pZCk6IGFueSB7XG4gICAgcmV0dXJuICgoLi4uYXJnczogYW55W10pOiBhbnkgPT4ge1xuICAgICAgY29uc3QgZm4gPSB0aGlzLnJlc29sdmVJZk5lZWRlZChlbCkgYXMgVFlQRTtcbiAgICAgIHJldHVybiB0aGVuKGZuLCAoZm4pID0+IHtcbiAgICAgICAgaWYgKHR5cGVvZiBmbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIGNvbnN0IGJhc2VDb250ZXh0ID0gY3VycmVudEN0eCA/PyBuZXdJbnZva2VDb250ZXh0KCk7XG4gICAgICAgICAgY29uc3QgY29udGV4dDogSW52b2tlQ29udGV4dCA9IHtcbiAgICAgICAgICAgIC4uLmJhc2VDb250ZXh0LFxuICAgICAgICAgICAgcXJsOiB0aGlzLFxuICAgICAgICAgIH07XG4gICAgICAgICAgaWYgKGJlZm9yZUZuKSB7XG4gICAgICAgICAgICBiZWZvcmVGbigpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gdXNlSW52b2tlKGNvbnRleHQsIGZuIGFzIGFueSwgLi4uYXJncyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdRUkwgaXMgbm90IGEgZnVuY3Rpb24nKTtcbiAgICAgIH0pO1xuICAgIH0pIGFzIGFueTtcbiAgfVxuXG4gIGNvcHkoKTogUVJMSW50ZXJuYWw8VFlQRT4ge1xuICAgIGNvbnN0IGNvcHkgPSBuZXcgUVJMSW50ZXJuYWwoXG4gICAgICB0aGlzLmNodW5rLFxuICAgICAgdGhpcy5zeW1ib2wsXG4gICAgICB0aGlzLnN5bWJvbFJlZixcbiAgICAgIHRoaXMuc3ltYm9sRm4sXG4gICAgICBudWxsLFxuICAgICAgdGhpcy5jYXB0dXJlUmVmXG4gICAgKTtcbiAgICBjb3B5LnJlZlN5bWJvbCA9IHRoaXMucmVmU3ltYm9sO1xuICAgIHJldHVybiBjb3B5O1xuICB9XG5cbiAgYXN5bmMgaW52b2tlKC4uLmFyZ3M6IFRZUEUgZXh0ZW5kcyAoLi4uYXJnczogaW5mZXIgQVJHUykgPT4gYW55ID8gQVJHUyA6IG5ldmVyKSB7XG4gICAgY29uc3QgZm4gPSB0aGlzLmludm9rZUZuKCk7XG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZm4oLi4uYXJncyk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIHNlcmlhbGl6ZShvcHRpb25zPzogUVJMU2VyaWFsaXplT3B0aW9ucykge1xuICAgIHJldHVybiBzdHJpbmdpZnlRUkwodGhpcywgb3B0aW9ucyk7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGdldENhbm9uaWNhbFN5bWJvbCA9IChzeW1ib2xOYW1lOiBzdHJpbmcpID0+IHtcbiAgY29uc3QgaW5kZXggPSBzeW1ib2xOYW1lLmxhc3RJbmRleE9mKCdfJyk7XG4gIGlmIChpbmRleCA+IC0xKSB7XG4gICAgcmV0dXJuIHN5bWJvbE5hbWUuc2xpY2UoaW5kZXggKyAxKTtcbiAgfVxuICByZXR1cm4gc3ltYm9sTmFtZTtcbn07XG5cbmV4cG9ydCBjb25zdCBpc1NhbWVRUkwgPSAoYTogUVJMPGFueT4sIGI6IFFSTDxhbnk+KTogYm9vbGVhbiA9PiB7XG4gIHJldHVybiBhLmdldENhbm9uaWNhbFN5bWJvbCgpID09PSBiLmdldENhbm9uaWNhbFN5bWJvbCgpO1xufTtcblxuZXhwb3J0IHR5cGUgUVJMSW50ZXJuYWw8VCA9IGFueT4gPSBRUkw8VD47XG5leHBvcnQgY29uc3QgUVJMSW50ZXJuYWw6IHR5cGVvZiBRUkwgPSBRUkw7XG4iXX0=","import { getContainer } from '../use/use-core';\nimport { getDocument } from '../util/dom';\nexport const createPlatform = (doc) => {\n    const moduleCache = new Map();\n    return {\n        isServer: false,\n        importSymbol(element, url, symbolName) {\n            const urlDoc = toUrl(doc, element, url).toString();\n            const urlCopy = new URL(urlDoc);\n            urlCopy.hash = '';\n            urlCopy.search = '';\n            const importURL = urlCopy.href;\n            const mod = moduleCache.get(importURL);\n            if (mod) {\n                return mod[symbolName];\n            }\n            return import(/* @vite-ignore */ importURL).then((mod) => {\n                mod = findModule(mod);\n                moduleCache.set(importURL, mod);\n                return mod[symbolName];\n            });\n        },\n        raf: (fn) => {\n            return new Promise((resolve) => {\n                requestAnimationFrame(() => {\n                    resolve(fn());\n                });\n            });\n        },\n        nextTick: (fn) => {\n            return new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(fn());\n                });\n            });\n        },\n        chunkForSymbol() {\n            return undefined;\n        },\n    };\n};\nfunction findModule(module) {\n    return Object.values(module).find(isModule) || module;\n}\nfunction isModule(module) {\n    return typeof module === 'object' && module && module[Symbol.toStringTag] === 'Module';\n}\n/**\n * Convert relative base URI and relative URL into a fully qualified URL.\n *\n * @param base -`QRL`s are relative, and therefore they need a base for resolution.\n *    - `Element` use `base.ownerDocument.baseURI`\n *    - `Document` use `base.baseURI`\n *    - `string` use `base` as is\n *    - `QConfig` use `base.baseURI`\n * @param url - relative URL\n * @returns fully qualified URL.\n */\nexport function toUrl(doc, element, url) {\n    const containerEl = getContainer(element);\n    const base = new URL(containerEl?.getAttribute('q:base') ?? doc.baseURI, doc.baseURI);\n    return new URL(url, base);\n}\n/**\n * @public\n */\nexport const setPlatform = (doc, plt) => (doc[DocumentPlatform] = plt);\n/**\n * @public\n */\nexport const getPlatform = (docOrNode) => {\n    const doc = getDocument(docOrNode);\n    return doc[DocumentPlatform] || (doc[DocumentPlatform] = createPlatform(doc));\n};\nconst DocumentPlatform = /*@__PURE__*/ Symbol();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhdGZvcm0uanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL3F3aWsvc3JjL2NvcmUvcGxhdGZvcm0vcGxhdGZvcm0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFHMUMsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLENBQUMsR0FBYSxFQUFnQixFQUFFO0lBQzVELE1BQU0sV0FBVyxHQUFHLElBQUksR0FBRyxFQUFxQyxDQUFDO0lBQ2pFLE9BQU87UUFDTCxRQUFRLEVBQUUsS0FBSztRQUNmLFlBQVksQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFLFVBQVU7WUFDbkMsTUFBTSxNQUFNLEdBQUcsS0FBSyxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsR0FBRyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7WUFFbkQsTUFBTSxPQUFPLEdBQUcsSUFBSSxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDaEMsT0FBTyxDQUFDLElBQUksR0FBRyxFQUFFLENBQUM7WUFDbEIsT0FBTyxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUM7WUFDcEIsTUFBTSxTQUFTLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztZQUMvQixNQUFNLEdBQUcsR0FBRyxXQUFXLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQ3ZDLElBQUksR0FBRyxFQUFFO2dCQUNQLE9BQU8sR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO2FBQ3hCO1lBQ0QsT0FBTyxNQUFNLENBQUMsa0JBQWtCLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUU7Z0JBQ3ZELEdBQUcsR0FBRyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQ3RCLFdBQVcsQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLEdBQUcsQ0FBQyxDQUFDO2dCQUNoQyxPQUFPLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUN6QixDQUFDLENBQUMsQ0FBQztRQUNMLENBQUM7UUFDRCxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtZQUNWLE9BQU8sSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTtnQkFDN0IscUJBQXFCLENBQUMsR0FBRyxFQUFFO29CQUN6QixPQUFPLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztnQkFDaEIsQ0FBQyxDQUFDLENBQUM7WUFDTCxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUM7UUFDRCxRQUFRLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtZQUNmLE9BQU8sSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTtnQkFDN0IsVUFBVSxDQUFDLEdBQUcsRUFBRTtvQkFDZCxPQUFPLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztnQkFDaEIsQ0FBQyxDQUFDLENBQUM7WUFDTCxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUM7UUFDRCxjQUFjO1lBQ1osT0FBTyxTQUFTLENBQUM7UUFDbkIsQ0FBQztLQUNGLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixTQUFTLFVBQVUsQ0FBQyxNQUFXO0lBQzdCLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksTUFBTSxDQUFDO0FBQ3hELENBQUM7QUFFRCxTQUFTLFFBQVEsQ0FBQyxNQUFXO0lBQzNCLE9BQU8sT0FBTyxNQUFNLEtBQUssUUFBUSxJQUFJLE1BQU0sSUFBSSxNQUFNLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxLQUFLLFFBQVEsQ0FBQztBQUN6RixDQUFDO0FBRUQ7Ozs7Ozs7Ozs7R0FVRztBQUNILE1BQU0sVUFBVSxLQUFLLENBQUMsR0FBYSxFQUFFLE9BQWdCLEVBQUUsR0FBaUI7SUFDdEUsTUFBTSxXQUFXLEdBQUcsWUFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzFDLE1BQU0sSUFBSSxHQUFHLElBQUksR0FBRyxDQUFDLFdBQVcsRUFBRSxZQUFZLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRyxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDdEYsT0FBTyxJQUFJLEdBQUcsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDNUIsQ0FBQztBQUVEOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLENBQUMsR0FBYSxFQUFFLEdBQWlCLEVBQUUsRUFBRSxDQUM5RCxDQUFFLEdBQXdCLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQztBQUV0RDs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxDQUFDLFNBQTBCLEVBQUUsRUFBRTtJQUN4RCxNQUFNLEdBQUcsR0FBRyxXQUFXLENBQUMsU0FBUyxDQUFxQixDQUFDO0lBQ3ZELE9BQU8sR0FBRyxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztBQUNoRixDQUFDLENBQUM7QUFFRixNQUFNLGdCQUFnQixHQUFHLGFBQWEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldENvbnRhaW5lciB9IGZyb20gJy4uL3VzZS91c2UtY29yZSc7XG5pbXBvcnQgeyBnZXREb2N1bWVudCB9IGZyb20gJy4uL3V0aWwvZG9tJztcbmltcG9ydCB0eXBlIHsgQ29yZVBsYXRmb3JtIH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVQbGF0Zm9ybSA9IChkb2M6IERvY3VtZW50KTogQ29yZVBsYXRmb3JtID0+IHtcbiAgY29uc3QgbW9kdWxlQ2FjaGUgPSBuZXcgTWFwPHN0cmluZywgeyBbc3ltYm9sOiBzdHJpbmddOiBhbnkgfT4oKTtcbiAgcmV0dXJuIHtcbiAgICBpc1NlcnZlcjogZmFsc2UsXG4gICAgaW1wb3J0U3ltYm9sKGVsZW1lbnQsIHVybCwgc3ltYm9sTmFtZSkge1xuICAgICAgY29uc3QgdXJsRG9jID0gdG9VcmwoZG9jLCBlbGVtZW50LCB1cmwpLnRvU3RyaW5nKCk7XG5cbiAgICAgIGNvbnN0IHVybENvcHkgPSBuZXcgVVJMKHVybERvYyk7XG4gICAgICB1cmxDb3B5Lmhhc2ggPSAnJztcbiAgICAgIHVybENvcHkuc2VhcmNoID0gJyc7XG4gICAgICBjb25zdCBpbXBvcnRVUkwgPSB1cmxDb3B5LmhyZWY7XG4gICAgICBjb25zdCBtb2QgPSBtb2R1bGVDYWNoZS5nZXQoaW1wb3J0VVJMKTtcbiAgICAgIGlmIChtb2QpIHtcbiAgICAgICAgcmV0dXJuIG1vZFtzeW1ib2xOYW1lXTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBpbXBvcnQoLyogQHZpdGUtaWdub3JlICovIGltcG9ydFVSTCkudGhlbigobW9kKSA9PiB7XG4gICAgICAgIG1vZCA9IGZpbmRNb2R1bGUobW9kKTtcbiAgICAgICAgbW9kdWxlQ2FjaGUuc2V0KGltcG9ydFVSTCwgbW9kKTtcbiAgICAgICAgcmV0dXJuIG1vZFtzeW1ib2xOYW1lXTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgcmFmOiAoZm4pID0+IHtcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4ge1xuICAgICAgICAgIHJlc29sdmUoZm4oKSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBuZXh0VGljazogKGZuKSA9PiB7XG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgcmVzb2x2ZShmbigpKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGNodW5rRm9yU3ltYm9sKCkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9LFxuICB9O1xufTtcblxuZnVuY3Rpb24gZmluZE1vZHVsZShtb2R1bGU6IGFueSkge1xuICByZXR1cm4gT2JqZWN0LnZhbHVlcyhtb2R1bGUpLmZpbmQoaXNNb2R1bGUpIHx8IG1vZHVsZTtcbn1cblxuZnVuY3Rpb24gaXNNb2R1bGUobW9kdWxlOiBhbnkpIHtcbiAgcmV0dXJuIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnICYmIG1vZHVsZSAmJiBtb2R1bGVbU3ltYm9sLnRvU3RyaW5nVGFnXSA9PT0gJ01vZHVsZSc7XG59XG5cbi8qKlxuICogQ29udmVydCByZWxhdGl2ZSBiYXNlIFVSSSBhbmQgcmVsYXRpdmUgVVJMIGludG8gYSBmdWxseSBxdWFsaWZpZWQgVVJMLlxuICpcbiAqIEBwYXJhbSBiYXNlIC1gUVJMYHMgYXJlIHJlbGF0aXZlLCBhbmQgdGhlcmVmb3JlIHRoZXkgbmVlZCBhIGJhc2UgZm9yIHJlc29sdXRpb24uXG4gKiAgICAtIGBFbGVtZW50YCB1c2UgYGJhc2Uub3duZXJEb2N1bWVudC5iYXNlVVJJYFxuICogICAgLSBgRG9jdW1lbnRgIHVzZSBgYmFzZS5iYXNlVVJJYFxuICogICAgLSBgc3RyaW5nYCB1c2UgYGJhc2VgIGFzIGlzXG4gKiAgICAtIGBRQ29uZmlnYCB1c2UgYGJhc2UuYmFzZVVSSWBcbiAqIEBwYXJhbSB1cmwgLSByZWxhdGl2ZSBVUkxcbiAqIEByZXR1cm5zIGZ1bGx5IHF1YWxpZmllZCBVUkwuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b1VybChkb2M6IERvY3VtZW50LCBlbGVtZW50OiBFbGVtZW50LCB1cmw6IHN0cmluZyB8IFVSTCk6IFVSTCB7XG4gIGNvbnN0IGNvbnRhaW5lckVsID0gZ2V0Q29udGFpbmVyKGVsZW1lbnQpO1xuICBjb25zdCBiYXNlID0gbmV3IFVSTChjb250YWluZXJFbD8uZ2V0QXR0cmlidXRlKCdxOmJhc2UnKSA/PyBkb2MuYmFzZVVSSSwgZG9jLmJhc2VVUkkpO1xuICByZXR1cm4gbmV3IFVSTCh1cmwsIGJhc2UpO1xufVxuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGNvbnN0IHNldFBsYXRmb3JtID0gKGRvYzogRG9jdW1lbnQsIHBsdDogQ29yZVBsYXRmb3JtKSA9PlxuICAoKGRvYyBhcyBQbGF0Zm9ybURvY3VtZW50KVtEb2N1bWVudFBsYXRmb3JtXSA9IHBsdCk7XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgY29uc3QgZ2V0UGxhdGZvcm0gPSAoZG9jT3JOb2RlOiBEb2N1bWVudCB8IE5vZGUpID0+IHtcbiAgY29uc3QgZG9jID0gZ2V0RG9jdW1lbnQoZG9jT3JOb2RlKSBhcyBQbGF0Zm9ybURvY3VtZW50O1xuICByZXR1cm4gZG9jW0RvY3VtZW50UGxhdGZvcm1dIHx8IChkb2NbRG9jdW1lbnRQbGF0Zm9ybV0gPSBjcmVhdGVQbGF0Zm9ybShkb2MpKTtcbn07XG5cbmNvbnN0IERvY3VtZW50UGxhdGZvcm0gPSAvKkBfX1BVUkVfXyovIFN5bWJvbCgpO1xuXG5pbnRlcmZhY2UgUGxhdGZvcm1Eb2N1bWVudCBleHRlbmRzIERvY3VtZW50IHtcbiAgW0RvY3VtZW50UGxhdGZvcm1dPzogQ29yZVBsYXRmb3JtO1xufVxuIl19","import { QHostAttr, QSlotAttr } from './markers';\n/**\n * Returns true if the `node` is `Element` and of the right `tagName`.\n *\n * @param node\n * @private\n */\nexport function isDomElementWithTagName(node, tagName) {\n    return isHtmlElement(node) && node.tagName.toUpperCase() == tagName.toUpperCase();\n}\n/**\n * @private\n */\nexport function isTemplateElement(node) {\n    return isDomElementWithTagName(node, 'template');\n}\n/**\n * @private\n */\nexport function isQSLotTemplateElement(node) {\n    return isTemplateElement(node) && node.hasAttribute(QSlotAttr);\n}\n/**\n * @private\n */\nexport function isComponentElement(node) {\n    return isHtmlElement(node) && node.hasAttribute(QHostAttr);\n}\n/**\n * @private\n */\nexport function isHtmlElement(node) {\n    return node ? node.nodeType === 1 : false;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL3F3aWsvc3JjL2NvcmUvdXRpbC90eXBlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUVqRDs7Ozs7R0FLRztBQUNILE1BQU0sVUFBVSx1QkFBdUIsQ0FDckMsSUFBNkIsRUFDN0IsT0FBZTtJQUVmLE9BQU8sYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLElBQUksT0FBTyxDQUFDLFdBQVcsRUFBRSxDQUFDO0FBQ3BGLENBQUM7QUFFRDs7R0FFRztBQUNILE1BQU0sVUFBVSxpQkFBaUIsQ0FBQyxJQUE2QjtJQUM3RCxPQUFPLHVCQUF1QixDQUFDLElBQUksRUFBRSxVQUFVLENBQUMsQ0FBQztBQUNuRCxDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsc0JBQXNCLENBQUMsSUFBNkI7SUFDbEUsT0FBTyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ2pFLENBQUM7QUFFRDs7R0FFRztBQUNILE1BQU0sVUFBVSxrQkFBa0IsQ0FBQyxJQUE2QjtJQUM5RCxPQUFPLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQzdELENBQUM7QUFFRDs7R0FFRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQUMsSUFBUztJQUNyQyxPQUFPLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztBQUM1QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUUhvc3RBdHRyLCBRU2xvdEF0dHIgfSBmcm9tICcuL21hcmtlcnMnO1xuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgYG5vZGVgIGlzIGBFbGVtZW50YCBhbmQgb2YgdGhlIHJpZ2h0IGB0YWdOYW1lYC5cbiAqXG4gKiBAcGFyYW0gbm9kZVxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzRG9tRWxlbWVudFdpdGhUYWdOYW1lKFxuICBub2RlOiBOb2RlIHwgbnVsbCB8IHVuZGVmaW5lZCxcbiAgdGFnTmFtZTogc3RyaW5nXG4pOiBub2RlIGlzIEVsZW1lbnQge1xuICByZXR1cm4gaXNIdG1sRWxlbWVudChub2RlKSAmJiBub2RlLnRhZ05hbWUudG9VcHBlckNhc2UoKSA9PSB0YWdOYW1lLnRvVXBwZXJDYXNlKCk7XG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVGVtcGxhdGVFbGVtZW50KG5vZGU6IE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkKTogbm9kZSBpcyBIVE1MVGVtcGxhdGVFbGVtZW50IHtcbiAgcmV0dXJuIGlzRG9tRWxlbWVudFdpdGhUYWdOYW1lKG5vZGUsICd0ZW1wbGF0ZScpO1xufVxuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1FTTG90VGVtcGxhdGVFbGVtZW50KG5vZGU6IE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkKTogbm9kZSBpcyBIVE1MVGVtcGxhdGVFbGVtZW50IHtcbiAgcmV0dXJuIGlzVGVtcGxhdGVFbGVtZW50KG5vZGUpICYmIG5vZGUuaGFzQXR0cmlidXRlKFFTbG90QXR0cik7XG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzQ29tcG9uZW50RWxlbWVudChub2RlOiBOb2RlIHwgbnVsbCB8IHVuZGVmaW5lZCk6IG5vZGUgaXMgSFRNTEVsZW1lbnQge1xuICByZXR1cm4gaXNIdG1sRWxlbWVudChub2RlKSAmJiBub2RlLmhhc0F0dHJpYnV0ZShRSG9zdEF0dHIpO1xufVxuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0h0bWxFbGVtZW50KG5vZGU6IGFueSk6IG5vZGUgaXMgRWxlbWVudCB7XG4gIHJldHVybiBub2RlID8gbm9kZS5ub2RlVHlwZSA9PT0gMSA6IGZhbHNlO1xufVxuXG4vKipcbiAqIFR5cGUgcmVwcmVzZW50aW5nIGEgdmFsdWUgd2hpY2ggaXMgZWl0aGVyIHJlc29sdmUgb3IgYSBwcm9taXNlLlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgdHlwZSBWYWx1ZU9yUHJvbWlzZTxUPiA9IFQgfCBQcm9taXNlPFQ+O1xuIl19","import { isHtmlElement } from '../util/types';\nexport function stringifyDebug(value) {\n    if (value == null)\n        return String(value);\n    if (typeof value === 'function')\n        return value.name;\n    if (isHtmlElement(value))\n        return stringifyElement(value);\n    if (value instanceof URL)\n        return String(value);\n    if (typeof value === 'object')\n        return JSON.stringify(value, function (key, value) {\n            if (isHtmlElement(value))\n                return stringifyElement(value);\n            return value;\n        });\n    return String(value);\n}\nexport function stringifyElement(element) {\n    let html = '<' + element.localName;\n    const attributes = element.attributes;\n    const names = [];\n    for (let i = 0; i < attributes.length; i++) {\n        names.push(attributes[i].name);\n    }\n    names.sort();\n    for (let i = 0; i < names.length; i++) {\n        const name = names[i];\n        let value = element.getAttribute(name);\n        if (value?.startsWith('file:/')) {\n            value = value.replace(/(file:\\/\\/).*(\\/.*)$/, (all, protocol, file) => protocol + '...' + file);\n        }\n        html +=\n            ' ' + name + (value == null || value == '' ? '' : \"='\" + value.replace(\"'\", '&apos;') + \"'\");\n    }\n    return html + '>';\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaW5naWZ5LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL2Vycm9yL3N0cmluZ2lmeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTlDLE1BQU0sVUFBVSxjQUFjLENBQUMsS0FBVTtJQUN2QyxJQUFJLEtBQUssSUFBSSxJQUFJO1FBQUUsT0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDeEMsSUFBSSxPQUFPLEtBQUssS0FBSyxVQUFVO1FBQUUsT0FBTyxLQUFLLENBQUMsSUFBSSxDQUFDO0lBQ25ELElBQUksYUFBYSxDQUFDLEtBQUssQ0FBQztRQUFFLE9BQU8sZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDekQsSUFBSSxLQUFLLFlBQVksR0FBRztRQUFFLE9BQU8sTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQy9DLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUTtRQUMzQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLFVBQXFCLEdBQVcsRUFBRSxLQUFVO1lBQ3ZFLElBQUksYUFBYSxDQUFDLEtBQUssQ0FBQztnQkFBRSxPQUFPLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3pELE9BQU8sS0FBSyxDQUFDO1FBQ2YsQ0FBQyxDQUFDLENBQUM7SUFDTCxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUN2QixDQUFDO0FBRUQsTUFBTSxVQUFVLGdCQUFnQixDQUFDLE9BQWdCO0lBQy9DLElBQUksSUFBSSxHQUFHLEdBQUcsR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDO0lBQ25DLE1BQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUM7SUFDdEMsTUFBTSxLQUFLLEdBQUcsRUFBRSxDQUFDO0lBQ2pCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQzFDLEtBQUssQ0FBQyxJQUFJLENBQUUsVUFBVSxDQUFDLENBQUMsQ0FBVSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzFDO0lBQ0QsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDckMsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3RCLElBQUksS0FBSyxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkMsSUFBSSxLQUFLLEVBQUUsVUFBVSxDQUFDLFFBQVEsQ0FBQyxFQUFFO1lBQy9CLEtBQUssR0FBRyxLQUFLLENBQUMsT0FBTyxDQUNuQixzQkFBc0IsRUFDdEIsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxFQUFFLENBQUMsUUFBUSxHQUFHLEtBQUssR0FBRyxJQUFJLENBQ2pELENBQUM7U0FDSDtRQUNELElBQUk7WUFDRixHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsS0FBSyxJQUFJLElBQUksSUFBSSxLQUFLLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQztLQUNoRztJQUNELE9BQU8sSUFBSSxHQUFHLEdBQUcsQ0FBQztBQUNwQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNIdG1sRWxlbWVudCB9IGZyb20gJy4uL3V0aWwvdHlwZXMnO1xuXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5naWZ5RGVidWcodmFsdWU6IGFueSk6IHN0cmluZyB8IG51bGwge1xuICBpZiAodmFsdWUgPT0gbnVsbCkgcmV0dXJuIFN0cmluZyh2YWx1ZSk7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdmdW5jdGlvbicpIHJldHVybiB2YWx1ZS5uYW1lO1xuICBpZiAoaXNIdG1sRWxlbWVudCh2YWx1ZSkpIHJldHVybiBzdHJpbmdpZnlFbGVtZW50KHZhbHVlKTtcbiAgaWYgKHZhbHVlIGluc3RhbmNlb2YgVVJMKSByZXR1cm4gU3RyaW5nKHZhbHVlKTtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpXG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHZhbHVlLCBmdW5jdGlvbiAodGhpczogYW55LCBrZXk6IHN0cmluZywgdmFsdWU6IGFueSkge1xuICAgICAgaWYgKGlzSHRtbEVsZW1lbnQodmFsdWUpKSByZXR1cm4gc3RyaW5naWZ5RWxlbWVudCh2YWx1ZSk7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSk7XG4gIHJldHVybiBTdHJpbmcodmFsdWUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5naWZ5RWxlbWVudChlbGVtZW50OiBFbGVtZW50KTogc3RyaW5nIHtcbiAgbGV0IGh0bWwgPSAnPCcgKyBlbGVtZW50LmxvY2FsTmFtZTtcbiAgY29uc3QgYXR0cmlidXRlcyA9IGVsZW1lbnQuYXR0cmlidXRlcztcbiAgY29uc3QgbmFtZXMgPSBbXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBhdHRyaWJ1dGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgbmFtZXMucHVzaCgoYXR0cmlidXRlc1tpXSBhcyBBdHRyKS5uYW1lKTtcbiAgfVxuICBuYW1lcy5zb3J0KCk7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbmFtZXMubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBuYW1lID0gbmFtZXNbaV07XG4gICAgbGV0IHZhbHVlID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUobmFtZSk7XG4gICAgaWYgKHZhbHVlPy5zdGFydHNXaXRoKCdmaWxlOi8nKSkge1xuICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKFxuICAgICAgICAvKGZpbGU6XFwvXFwvKS4qKFxcLy4qKSQvLFxuICAgICAgICAoYWxsLCBwcm90b2NvbCwgZmlsZSkgPT4gcHJvdG9jb2wgKyAnLi4uJyArIGZpbGVcbiAgICAgICk7XG4gICAgfVxuICAgIGh0bWwgKz1cbiAgICAgICcgJyArIG5hbWUgKyAodmFsdWUgPT0gbnVsbCB8fCB2YWx1ZSA9PSAnJyA/ICcnIDogXCI9J1wiICsgdmFsdWUucmVwbGFjZShcIidcIiwgJyZhcG9zOycpICsgXCInXCIpO1xuICB9XG4gIHJldHVybiBodG1sICsgJz4nO1xufVxuIl19","import { stringifyDebug } from './stringify';\nimport { qDev } from '../util/qdev';\nexport var QError;\n(function (QError) {\n    // core 000-099\n    QError[QError[\"TODO\"] = 0] = \"TODO\";\n    QError[QError[\"Core_qConfigNotFound_path\"] = 1] = \"Core_qConfigNotFound_path\";\n    QError[QError[\"Core_unrecognizedStack_frame\"] = 2] = \"Core_unrecognizedStack_frame\";\n    QError[QError[\"Core_noAttribute_atr1_element\"] = 3] = \"Core_noAttribute_atr1_element\";\n    QError[QError[\"Core_noAttribute_atr1_attr2_element\"] = 4] = \"Core_noAttribute_atr1_attr2_element\";\n    QError[QError[\"Core_missingProperty_name_props\"] = 5] = \"Core_missingProperty_name_props\";\n    QError[QError[\"Core_missingExport_name_url_props\"] = 6] = \"Core_missingExport_name_url_props\";\n    // QRL 100-199\n    QError[QError[\"QRL_expectFunction_url_actual\"] = 100] = \"QRL_expectFunction_url_actual\";\n    // Injection 200-299\n    QError[QError[\"Injector_noHost_element\"] = 200] = \"Injector_noHost_element\";\n    QError[QError[\"Injector_expectedSpecificInjector_expected_actual\"] = 201] = \"Injector_expectedSpecificInjector_expected_actual\";\n    QError[QError[\"Injector_notElement_arg\"] = 202] = \"Injector_notElement_arg\";\n    QError[QError[\"Injector_wrongMethodThis_expected_actual\"] = 203] = \"Injector_wrongMethodThis_expected_actual\";\n    QError[QError[\"Injector_missingSerializedState_entityKey_element\"] = 204] = \"Injector_missingSerializedState_entityKey_element\";\n    QError[QError[\"Injector_notFound_element\"] = 206] = \"Injector_notFound_element\";\n    QError[QError[\"Injector_eventInjectorNotSerializable\"] = 207] = \"Injector_eventInjectorNotSerializable\";\n    // Entities 300-399\n    QError[QError[\"Entity_notValidKey_key\"] = 300] = \"Entity_notValidKey_key\";\n    QError[QError[\"Entity_keyAlreadyExists_key\"] = 301] = \"Entity_keyAlreadyExists_key\";\n    QError[QError[\"Entity_invalidAttribute_name\"] = 303] = \"Entity_invalidAttribute_name\";\n    QError[QError[\"Entity_missingExpandoOrState_attrName\"] = 304] = \"Entity_missingExpandoOrState_attrName\";\n    QError[QError[\"Entity_elementMissingEntityAttr_element_attr\"] = 305] = \"Entity_elementMissingEntityAttr_element_attr\";\n    QError[QError[\"Entity_noState_entity_props\"] = 306] = \"Entity_noState_entity_props\";\n    QError[QError[\"Entity_expected_obj\"] = 307] = \"Entity_expected_obj\";\n    QError[QError[\"Entity_overridesConstructor_entity\"] = 308] = \"Entity_overridesConstructor_entity\";\n    QError[QError[\"Entity_keyMissingParts_key_key\"] = 309] = \"Entity_keyMissingParts_key_key\";\n    QError[QError[\"Entity_no$type_entity\"] = 310] = \"Entity_no$type_entity\";\n    QError[QError[\"Entity_no$keyProps_entity\"] = 311] = \"Entity_no$keyProps_entity\";\n    QError[QError[\"Entity_no$qrl_entity\"] = 312] = \"Entity_no$qrl_entity\";\n    QError[QError[\"Entity_nameCollision_name_currentQrl_expectedQrl\"] = 313] = \"Entity_nameCollision_name_currentQrl_expectedQrl\";\n    QError[QError[\"Entity_keyTooManyParts_entity_parts_key\"] = 314] = \"Entity_keyTooManyParts_entity_parts_key\";\n    QError[QError[\"Entity_keyNameMismatch_key_name_entity_name\"] = 315] = \"Entity_keyNameMismatch_key_name_entity_name\";\n    QError[QError[\"Entity_stateMissingKey_state\"] = 316] = \"Entity_stateMissingKey_state\";\n    // Component 400-499\n    QError[QError[\"Component_bindNeedsKey\"] = 400] = \"Component_bindNeedsKey\";\n    QError[QError[\"Component_bindNeedsValue\"] = 401] = \"Component_bindNeedsValue\";\n    QError[QError[\"Component_needsState\"] = 402] = \"Component_needsState\";\n    QError[QError[\"Component_needsInjectionContext_constructor\"] = 403] = \"Component_needsInjectionContext_constructor\";\n    QError[QError[\"Component_noProperty_propName_props_host\"] = 404] = \"Component_noProperty_propName_props_host\";\n    QError[QError[\"Component_notFound_component\"] = 405] = \"Component_notFound_component\";\n    QError[QError[\"Component_doesNotMatch_component_actual\"] = 406] = \"Component_doesNotMatch_component_actual\";\n    QError[QError[\"Component_noState_component_props\"] = 408] = \"Component_noState_component_props\";\n    // Provider 500-599\n    QError[QError[\"Provider_unrecognizedFormat_value\"] = 500] = \"Provider_unrecognizedFormat_value\";\n    // Render 600-699\n    QError[QError[\"Render_unexpectedJSXNodeType_type\"] = 600] = \"Render_unexpectedJSXNodeType_type\";\n    QError[QError[\"Render_unsupportedFormat_obj_attr\"] = 601] = \"Render_unsupportedFormat_obj_attr\";\n    QError[QError[\"Render_expectingEntity_entity\"] = 602] = \"Render_expectingEntity_entity\";\n    QError[QError[\"Render_expectingEntityArray_obj\"] = 603] = \"Render_expectingEntityArray_obj\";\n    QError[QError[\"Render_expectingEntityOrComponent_obj\"] = 604] = \"Render_expectingEntityOrComponent_obj\";\n    QError[QError[\"Render_stateMachineStuck\"] = 699] = \"Render_stateMachineStuck\";\n    // Event\n    QError[QError[\"Event_emitEventRequiresName_url\"] = 700] = \"Event_emitEventRequiresName_url\";\n    QError[QError[\"Event_emitEventCouldNotFindListener_event_element\"] = 701] = \"Event_emitEventCouldNotFindListener_event_element\";\n})(QError || (QError = {}));\nexport function qError(code, ...args) {\n    if (qDev) {\n        const text = codeToText(code);\n        const parts = text.split('{}');\n        const error = parts\n            .map((value, index) => {\n            return value + (index === parts.length - 1 ? '' : stringifyDebug(args[index]));\n        })\n            .join('');\n        debugger; // eslint-disable-line no-debugger\n        return new Error(error);\n    }\n    else {\n        return new Error(`QError ` + code);\n    }\n}\nfunction codeToText(code) {\n    const area = {\n        0: 'ERROR',\n        1: 'QRL-ERROR',\n        2: 'INJECTOR-ERROR',\n        3: 'SERVICE-ERROR',\n        4: 'COMPONENT-ERROR',\n        5: 'PROVIDER-ERROR',\n        6: 'RENDER-ERROR',\n        7: 'EVENT-ERROR',\n    }[Math.floor(code / 100)];\n    const text = {\n        [QError.TODO]: '{}',\n        [QError.Core_qConfigNotFound_path]: \"QConfig not found in path '{}'.\",\n        [QError.Core_unrecognizedStack_frame]: \"Unrecognized stack format '{}'\",\n        [QError.Core_noAttribute_atr1_element]: \"Could not find entity state '{}' at '{}' or any of it's parents.\",\n        [QError.Core_noAttribute_atr1_attr2_element]: \"Could not find entity state '{}' ( or entity provider '{}') at '{}' or any of it's parents.\",\n        [QError.Core_missingProperty_name_props]: \"Missing property '{}' in props '{}'.\",\n        [QError.Core_missingExport_name_url_props]: \"Missing export '{}' from '{}'. Exported symbols are: {}\",\n        //////////////\n        [QError.QRL_expectFunction_url_actual]: \"QRL '${}' should point to function, was '{}'.\",\n        //////////////\n        [QError.Injector_noHost_element]: \"Can't find host element above '{}'.\",\n        [QError.Injector_expectedSpecificInjector_expected_actual]: \"Provider is expecting '{}' but got '{}'.\",\n        [QError.Injector_notElement_arg]: \"Expected 'Element' was '{}'.\",\n        [QError.Injector_wrongMethodThis_expected_actual]: \"Expected injection 'this' to be of type '{}', but was of type '{}'.\",\n        [QError.Injector_missingSerializedState_entityKey_element]: \"Entity key '{}' is found on '{}' but does not contain state. Was 'serializeState()' not run during dehydration?\",\n        [QError.Injector_notFound_element]: \"No injector can be found starting at '{}'.\",\n        [QError.Injector_eventInjectorNotSerializable]: 'EventInjector does not support serialization.',\n        //////////////\n        [QError.Entity_notValidKey_key]: \"Data key '{}' is not a valid key.\\n\" +\n            '  - Data key can only contain characters (preferably lowercase) or number\\n' +\n            '  - Data key is prefixed with entity name\\n' +\n            \"  - Data key is made up from parts that are separated with ':'.\",\n        [QError.Entity_keyAlreadyExists_key]: \"A entity with key '{}' already exists.\",\n        [QError.Entity_invalidAttribute_name]: \"'{}' is not a valid attribute. \" +\n            \"Attributes can only contain 'a-z' (lowercase), '0-9', '-' and '_'.\",\n        [QError.Entity_missingExpandoOrState_attrName]: \"Found '{}' but expando did not have entity and attribute did not have state.\",\n        [QError.Entity_elementMissingEntityAttr_element_attr]: \"Element '{}' is missing entity attribute definition '{}'.\",\n        [QError.Entity_noState_entity_props]: \"Unable to create state for entity '{}' with props '{}' because no state found and '$newState()' method was not defined on entity.\",\n        [QError.Entity_expected_obj]: \"'{}' is not an instance of 'Entity'.\",\n        [QError.Entity_overridesConstructor_entity]: \"'{}' overrides 'constructor' property preventing 'EntityType' retrieval.\",\n        [QError.Entity_no$keyProps_entity]: \"Entity '{}' does not define '$keyProps'.\",\n        [QError.Entity_no$type_entity]: \"Entity '{}' must have static '$type' property defining the name of the entity.\",\n        [QError.Entity_no$qrl_entity]: \"Entity '{}' must have static '$qrl' property defining the import location of the entity.\",\n        [QError.Entity_nameCollision_name_currentQrl_expectedQrl]: \"Name collision. Already have entity named '{}' with QRL '{}' but expected QRL '{}'.\",\n        [QError.Entity_keyMissingParts_key_key]: \"Entity key '{}' is missing values. Expecting '{}:someValue'.\",\n        [QError.Entity_keyTooManyParts_entity_parts_key]: \"Entity '{}' defines '$keyProps' as  '{}'. Actual key '{}' has more parts than entity defines.\",\n        [QError.Entity_keyNameMismatch_key_name_entity_name]: \"Key '{}' belongs to entity named '{}', but expected entity '{}' with name '{}'.\",\n        [QError.Entity_stateMissingKey_state]: \"Entity state is missing '$key'. Are you sure you passed in state? Got '{}'.\",\n        //////////////\n        [QError.Component_bindNeedsKey]: \"'bind:' must have an key. (Example: 'bind:key=\\\"propertyName\\\"').\",\n        [QError.Component_bindNeedsValue]: \"'bind:id' must have a property name. (Example: 'bind:key=\\\"propertyName\\\"').\",\n        [QError.Component_needsState]: \"Can't find state on host element.\",\n        [QError.Component_needsInjectionContext_constructor]: \"Components must be instantiated inside an injection context. Use '{}.new(...)' for creation.\",\n        [QError.Component_noProperty_propName_props_host]: \"Property '{}' not found in '{}' on component '{}'.\",\n        [QError.Component_notFound_component]: \"Unable to find '{}' component.\",\n        [QError.Component_doesNotMatch_component_actual]: \"Requesting component type '{}' does not match existing component instance '{}'.\",\n        [QError.Component_noState_component_props]: \"Unable to create state for component '{}' with props '{}' because no state found and '$newState()' method was not defined on component.\",\n        //////////////\n        [QError.Provider_unrecognizedFormat_value]: \"Unrecognized expression format '{}'.\",\n        //////////////\n        [QError.Render_unexpectedJSXNodeType_type]: 'Unexpected JSXNode<{}> type.',\n        [QError.Render_unsupportedFormat_obj_attr]: \"Value '{}' can't be written into '{}' attribute.\",\n        [QError.Render_expectingEntity_entity]: \"Expecting entity object, got '{}'.\",\n        [QError.Render_expectingEntityArray_obj]: \"Expecting array of entities, got '{}'.\",\n        [QError.Render_expectingEntityOrComponent_obj]: \"Expecting Entity or Component got '{}'.\",\n        [QError.Render_stateMachineStuck]: 'Render state machine did not advance.',\n        //////////////\n        [QError.Event_emitEventRequiresName_url]: \"Missing '$type' attribute in the '{}' url.\",\n        [QError.Event_emitEventCouldNotFindListener_event_element]: \"Re-emitting event '{}' but no listener found at '{}' or any of its parents.\",\n    }[code];\n    let textCode = '000' + code;\n    textCode = textCode.slice(-3);\n    return `${area}(Q-${textCode}): ${text}`;\n}\n//# sourceMappingURL=data:application/json;base64,","export function isNode(value) {\n    return value && typeof value.nodeType == 'number';\n}\nexport function isDocument(value) {\n    return value && value.nodeType == 9;\n}\nexport function isElement(value) {\n    return isNode(value) && value.nodeType === 1;\n}\nexport function isText(value) {\n    return isNode(value) && value.nodeType === 3;\n}\nexport function isComment(value) {\n    return isNode(value) && value.nodeType === 9;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWxlbWVudC5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvcXdpay9zcmMvY29yZS91dGlsL2VsZW1lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxVQUFVLE1BQU0sQ0FBQyxLQUFVO0lBQy9CLE9BQU8sS0FBSyxJQUFJLE9BQU8sS0FBSyxDQUFDLFFBQVEsSUFBSSxRQUFRLENBQUM7QUFDcEQsQ0FBQztBQUNELE1BQU0sVUFBVSxVQUFVLENBQUMsS0FBVTtJQUNuQyxPQUFPLEtBQUssSUFBSSxLQUFLLENBQUMsUUFBUSxJQUFJLENBQUMsQ0FBQztBQUN0QyxDQUFDO0FBQ0QsTUFBTSxVQUFVLFNBQVMsQ0FBQyxLQUFVO0lBQ2xDLE9BQU8sTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLEtBQUssQ0FBQyxRQUFRLEtBQUssQ0FBQyxDQUFDO0FBQy9DLENBQUM7QUFDRCxNQUFNLFVBQVUsTUFBTSxDQUFDLEtBQVU7SUFDL0IsT0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksS0FBSyxDQUFDLFFBQVEsS0FBSyxDQUFDLENBQUM7QUFDL0MsQ0FBQztBQUNELE1BQU0sVUFBVSxTQUFTLENBQUMsS0FBVTtJQUNsQyxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsUUFBUSxLQUFLLENBQUMsQ0FBQztBQUMvQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGlzTm9kZSh2YWx1ZTogYW55KTogdmFsdWUgaXMgTm9kZSB7XG4gIHJldHVybiB2YWx1ZSAmJiB0eXBlb2YgdmFsdWUubm9kZVR5cGUgPT0gJ251bWJlcic7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNEb2N1bWVudCh2YWx1ZTogYW55KTogdmFsdWUgaXMgRG9jdW1lbnQge1xuICByZXR1cm4gdmFsdWUgJiYgdmFsdWUubm9kZVR5cGUgPT0gOTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0VsZW1lbnQodmFsdWU6IGFueSk6IHZhbHVlIGlzIEVsZW1lbnQge1xuICByZXR1cm4gaXNOb2RlKHZhbHVlKSAmJiB2YWx1ZS5ub2RlVHlwZSA9PT0gMTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1RleHQodmFsdWU6IGFueSk6IHZhbHVlIGlzIFRleHQge1xuICByZXR1cm4gaXNOb2RlKHZhbHVlKSAmJiB2YWx1ZS5ub2RlVHlwZSA9PT0gMztcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0NvbW1lbnQodmFsdWU6IGFueSk6IHZhbHVlIGlzIENvbW1lbnQge1xuICByZXR1cm4gaXNOb2RlKHZhbHVlKSAmJiB2YWx1ZS5ub2RlVHlwZSA9PT0gOTtcbn1cbiJdfQ==","import { runtimeQrl } from './qrl';\n// <docs markdown=\"../readme.md#$\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#$ instead)\n/**\n * Qwik Optimizer marker function.\n *\n * Use `$(...)` to tell Qwik Optimizer to extract the expression in `$(...)` into a lazy-loadable\n * resource referenced by `QRL`.\n *\n * @see `implicit$FirstArg` for additional `____$(...)` rules.\n *\n * In this example `$(...)` is used to capture the callback function of `onmousemove` into\n * lazy-loadable reference. This allows the code to refer to the function without actually\n * loading the function. In this example, the callback function does not get loaded until\n * `mousemove` event fires.\n *\n * ```tsx\n * useOnDocument(\n *   'mousemove',\n *   $(() => console.log('mousemove'))\n * );\n * ```\n *\n * In this code the Qwik Optimizer detects `$(...)` and transforms the code into:\n *\n * ```tsx\n * // FILE: <current file>\n * useOnDocument('mousemove', qrl('./chunk-abc.js', 'onMousemove'));\n *\n * // FILE: chunk-abc.js\n * export const onMousemove = () => console.log('mousemove');\n * ```\n *\n * ## Special Rules\n *\n * The Qwik Optimizer places special rules on functions that can be lazy-loaded.\n *\n * 1. The expression of the `$(expression)` function must be importable by the system.\n * (expression shows up in `import` or has `export`)\n * 2. If inlined function then all lexically captured values must be:\n *    - importable (vars shows up in `import` or has `export`)\n *    - const (The capturing process differs from JS capturing in that writing to captured\n * variables does not update them, and therefore writes are forbidden. The best practice is that\n * all captured variables are constants.)\n *    - Must be runtime serializable.\n *\n * ```tsx\n * import { importedFn } from './import/example';\n *\n * export const greet = () => console.log('greet');\n * function topLevelFn() {}\n *\n * function myCode() {\n *   const store = useStore({});\n *   function localFn() {}\n *   // Valid Examples\n *   $(greet); // greet is importable\n *   $(importedFn); // importedFn is importable\n *   $(() => greet()); // greet is importable;\n *   $(() => importedFn()); // importedFn is importable\n *   $(() => console.log(store)); // store is serializable.\n *\n *   // Compile time errors\n *   $(topLevelFn); // ERROR: `topLevelFn` not importable\n *   $(() => topLevelFn()); // ERROR: `topLevelFn` not importable\n *\n *   // Runtime errors\n *   $(localFn); // ERROR: `localFn` fails serialization\n *   $(() => localFn()); // ERROR: `localFn` fails serialization\n * }\n *\n * ```\n *\n * @param expression - Expression which should be lazy loaded\n * @public\n */\n// </docs>\nexport function $(expression) {\n    return runtimeQrl(expression);\n}\n// <docs markdown=\"../readme.md#implicit$FirstArg\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#implicit$FirstArg instead)\n/**\n * Create a `____$(...)` convenience method from `___(...)`.\n *\n * It is very common for functions to take a lazy-loadable resource as a first argument. For this\n * reason, the Qwik Optimizer automatically extracts the first argument from any function which\n * ends in `$`.\n *\n * This means that `foo$(arg0)` and `foo($(arg0))` are equivalent with respect to Qwik Optimizer.\n * The former is just a shorthand for the latter.\n *\n * For example these function call are equivalent:\n *\n * - `component$(() => {...})` is same as `onRender($(() => {...}))`\n *\n * ```tsx\n * export function myApi(callback: QRL<() => void>): void {\n *   // ...\n * }\n *\n * export const myApi$ = implicit$FirstArg(myApi);\n * // type of myApi$: (callback: () => void): void\n *\n * // can be used as:\n * myApi$(() => console.log('callback'));\n *\n * // will be transpiled to:\n * // FILE: <current file>\n * myApi(qrl('./chunk-abc.js', 'callback'));\n *\n * // FILE: chunk-abc.js\n * export const callback = () => console.log('callback');\n * ```\n *\n * @param fn - function that should have its first argument automatically `$`.\n * @alpha\n */\n// </docs>\nexport function implicit$FirstArg(fn) {\n    return function (first, ...rest) {\n        return fn.call(null, $(first), ...rest);\n    };\n}\n//# sourceMappingURL=data:application/json;base64,","import { assertDefined, assertEqual } from '../assert/assert';\nimport { RenderEvent } from '../util/markers';\nimport { getInvokeContext } from './use-core';\n// <docs markdown=\"../readme.md#useHostElement\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useHostElement instead)\n/**\n * Retrieves the Host Element of the current component.\n *\n * NOTE: `useHostElement` method can only be used in the synchronous portion of the callback\n * (before any `await` statements.)\n *\n * ```tsx\n * const Section = component$(\n *   () => {\n *     const hostElement = useHostElement();\n *     console.log(hostElement); // hostElement is a HTMLSectionElement\n *\n *     return <Host>I am a section</Host>;\n *   },\n *   {\n *     tagName: 'section',\n *   }\n * );\n * ```\n *\n * @public\n */\n// </docs>\nexport function useHostElement() {\n    const ctx = getInvokeContext();\n    assertEqual(ctx.event, RenderEvent);\n    const element = ctx.hostElement;\n    assertDefined(element);\n    return element;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWhvc3QtZWxlbWVudC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL3F3aWsvc3JjL2NvcmUvdXNlL3VzZS1ob3N0LWVsZW1lbnQucHVibGljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDOUQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUU5QyxnREFBZ0Q7QUFDaEQseUNBQXlDO0FBQ3pDLDZDQUE2QztBQUM3Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBcUJHO0FBQ0gsVUFBVTtBQUNWLE1BQU0sVUFBVSxjQUFjO0lBQzVCLE1BQU0sR0FBRyxHQUFHLGdCQUFnQixFQUFFLENBQUM7SUFDL0IsV0FBVyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDcEMsTUFBTSxPQUFPLEdBQUcsR0FBRyxDQUFDLFdBQVksQ0FBQztJQUNqQyxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDdkIsT0FBTyxPQUFPLENBQUM7QUFDakIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzc2VydERlZmluZWQsIGFzc2VydEVxdWFsIH0gZnJvbSAnLi4vYXNzZXJ0L2Fzc2VydCc7XG5pbXBvcnQgeyBSZW5kZXJFdmVudCB9IGZyb20gJy4uL3V0aWwvbWFya2Vycyc7XG5pbXBvcnQgeyBnZXRJbnZva2VDb250ZXh0IH0gZnJvbSAnLi91c2UtY29yZSc7XG5cbi8vIDxkb2NzIG1hcmtkb3duPVwiLi4vcmVhZG1lLm1kI3VzZUhvc3RFbGVtZW50XCI+XG4vLyAhIURPIE5PVCBFRElUIFRISVMgQ09NTUVOVCBESVJFQ1RMWSEhIVxuLy8gKGVkaXQgLi4vcmVhZG1lLm1kI3VzZUhvc3RFbGVtZW50IGluc3RlYWQpXG4vKipcbiAqIFJldHJpZXZlcyB0aGUgSG9zdCBFbGVtZW50IG9mIHRoZSBjdXJyZW50IGNvbXBvbmVudC5cbiAqXG4gKiBOT1RFOiBgdXNlSG9zdEVsZW1lbnRgIG1ldGhvZCBjYW4gb25seSBiZSB1c2VkIGluIHRoZSBzeW5jaHJvbm91cyBwb3J0aW9uIG9mIHRoZSBjYWxsYmFja1xuICogKGJlZm9yZSBhbnkgYGF3YWl0YCBzdGF0ZW1lbnRzLilcbiAqXG4gKiBgYGB0c3hcbiAqIGNvbnN0IFNlY3Rpb24gPSBjb21wb25lbnQkKFxuICogICAoKSA9PiB7XG4gKiAgICAgY29uc3QgaG9zdEVsZW1lbnQgPSB1c2VIb3N0RWxlbWVudCgpO1xuICogICAgIGNvbnNvbGUubG9nKGhvc3RFbGVtZW50KTsgLy8gaG9zdEVsZW1lbnQgaXMgYSBIVE1MU2VjdGlvbkVsZW1lbnRcbiAqXG4gKiAgICAgcmV0dXJuIDxIb3N0PkkgYW0gYSBzZWN0aW9uPC9Ib3N0PjtcbiAqICAgfSxcbiAqICAge1xuICogICAgIHRhZ05hbWU6ICdzZWN0aW9uJyxcbiAqICAgfVxuICogKTtcbiAqIGBgYFxuICpcbiAqIEBwdWJsaWNcbiAqL1xuLy8gPC9kb2NzPlxuZXhwb3J0IGZ1bmN0aW9uIHVzZUhvc3RFbGVtZW50KCk6IEVsZW1lbnQge1xuICBjb25zdCBjdHggPSBnZXRJbnZva2VDb250ZXh0KCk7XG4gIGFzc2VydEVxdWFsKGN0eC5ldmVudCwgUmVuZGVyRXZlbnQpO1xuICBjb25zdCBlbGVtZW50ID0gY3R4Lmhvc3RFbGVtZW50ITtcbiAgYXNzZXJ0RGVmaW5lZChlbGVtZW50KTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG4iXX0=","import { qObject } from '../object/q-object';\nimport { getInvokeContext, useContainerState } from './use-core';\nimport { useHostElement } from './use-host-element.public';\nimport { getContext } from '../props/props';\nimport { wrapSubscriber } from './use-subscriber';\nimport { assertEqual } from '../assert/assert';\nimport { RenderEvent } from '../util/markers';\n// <docs markdown=\"../readme.md#useStore\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useStore instead)\n/**\n * Creates a object that Qwik can track across serializations.\n *\n * Use `useStore` to create state for your application. The return object is a proxy which has a\n * unique ID. The ID of the object is used in the `QRL`s to refer to the store.\n *\n * ## Example\n *\n * Example showing how `useStore` is used in Counter example to keep track of count.\n *\n * ```tsx\n * const Stores = component$(() => {\n *   const counter = useCounter(1);\n *\n *   // Reactivity happens even for nested objects and arrays\n *   const userData = useStore({\n *     name: 'Manu',\n *     address: {\n *       address: '',\n *       city: '',\n *     },\n *     orgs: [],\n *   });\n *\n *   // useStore() can also accept a function to calculate the initial value\n *   const state = useStore(() => {\n *     return {\n *       value: expensiveInitialValue(),\n *     };\n *   });\n *\n *   return (\n *     <Host>\n *       <div>Counter: {counter.value}</div>\n *       <Child userData={userData} state={state} />\n *     </Host>\n *   );\n * });\n *\n * function useCounter(step: number) {\n *   // Multiple stores can be created in custom hooks for convenience and composability\n *   const counterStore = useStore({\n *     value: 0,\n *   });\n *   useClientEffect$(() => {\n *     // Only runs in the client\n *     const timer = setInterval(() => {\n *       counterStore.value += step;\n *     }, 500);\n *     return () => {\n *       clearInterval(timer);\n *     };\n *   });\n *   return counterStore;\n * }\n * ```\n *\n * @public\n */\n// </docs>\nexport function useStore(initialState) {\n    const [store, setStore] = useSequentialScope();\n    const hostElement = useHostElement();\n    if (store != null) {\n        return wrapSubscriber(store, hostElement);\n    }\n    const containerState = useContainerState();\n    const value = typeof initialState === 'function' ? initialState() : initialState;\n    const newStore = qObject(value, containerState);\n    setStore(newStore);\n    return wrapSubscriber(newStore, hostElement);\n}\n// <docs markdown=\"../readme.md#useRef\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useRef instead)\n/**\n * It's a very thin wrapper around `useStore()` including the proper type signature to be passed\n * to the `ref` property in JSX.\n *\n * ```tsx\n * export function useRef<T = Element>(current?: T): Ref<T> {\n *   return useStore({ current });\n * }\n * ```\n *\n * ## Example\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   const input = useRef<HTMLInputElement>();\n *\n *   useClientEffect$((track) => {\n *     const el = track(input, 'current')!;\n *     el.focus();\n *   });\n *\n *   return (\n *     <Host>\n *       <input type=\"text\" ref={input} />\n *     </Host>\n *   );\n * });\n *\n * ```\n *\n * @public\n */\n// </docs>\nexport function useRef(current) {\n    return useStore({ current });\n}\n/**\n * @alpha\n */\nexport function useSequentialScope() {\n    const ctx = getInvokeContext();\n    assertEqual(ctx.event, RenderEvent);\n    const index = ctx.seq;\n    const hostElement = useHostElement();\n    const elementCtx = getContext(hostElement);\n    ctx.seq++;\n    const updateFn = (value) => {\n        elementCtx.seq[index] = value;\n    };\n    return [elementCtx.seq[index], updateFn, index];\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLXN0b3JlLnB1YmxpYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvcXdpay9zcmMvY29yZS91c2UvdXNlLXN0b3JlLnB1YmxpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDN0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLGlCQUFpQixFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDNUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUMvQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFOUMsMENBQTBDO0FBQzFDLHlDQUF5QztBQUN6Qyx1Q0FBdUM7QUFDdkM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0EwREc7QUFDSCxVQUFVO0FBQ1YsTUFBTSxVQUFVLFFBQVEsQ0FBdUIsWUFBbUM7SUFDaEYsTUFBTSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsR0FBRyxrQkFBa0IsRUFBRSxDQUFDO0lBQy9DLE1BQU0sV0FBVyxHQUFHLGNBQWMsRUFBRSxDQUFDO0lBQ3JDLElBQUksS0FBSyxJQUFJLElBQUksRUFBRTtRQUNqQixPQUFPLGNBQWMsQ0FBQyxLQUFLLEVBQUUsV0FBVyxDQUFDLENBQUM7S0FDM0M7SUFFRCxNQUFNLGNBQWMsR0FBRyxpQkFBaUIsRUFBRSxDQUFDO0lBQzNDLE1BQU0sS0FBSyxHQUFHLE9BQU8sWUFBWSxLQUFLLFVBQVUsQ0FBQyxDQUFDLENBQUUsWUFBeUIsRUFBRSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUM7SUFDL0YsTUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLEtBQUssRUFBRSxjQUFjLENBQUMsQ0FBQztJQUNoRCxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbkIsT0FBTyxjQUFjLENBQUMsUUFBUSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0FBQy9DLENBQUM7QUFTRCx3Q0FBd0M7QUFDeEMseUNBQXlDO0FBQ3pDLHFDQUFxQztBQUNyQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQStCRztBQUNILFVBQVU7QUFDVixNQUFNLFVBQVUsTUFBTSxDQUFjLE9BQVc7SUFDN0MsT0FBTyxRQUFRLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDO0FBQy9CLENBQUM7QUFFRDs7R0FFRztBQUNILE1BQU0sVUFBVSxrQkFBa0I7SUFDaEMsTUFBTSxHQUFHLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQztJQUMvQixXQUFXLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxXQUFXLENBQUMsQ0FBQztJQUNwQyxNQUFNLEtBQUssR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDO0lBQ3RCLE1BQU0sV0FBVyxHQUFHLGNBQWMsRUFBRSxDQUFDO0lBQ3JDLE1BQU0sVUFBVSxHQUFHLFVBQVUsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUMzQyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDVixNQUFNLFFBQVEsR0FBRyxDQUFDLEtBQVUsRUFBRSxFQUFFO1FBQzlCLFVBQVUsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQ2hDLENBQUMsQ0FBQztJQUNGLE9BQU8sQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQztBQUNsRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcU9iamVjdCB9IGZyb20gJy4uL29iamVjdC9xLW9iamVjdCc7XG5pbXBvcnQgeyBnZXRJbnZva2VDb250ZXh0LCB1c2VDb250YWluZXJTdGF0ZSB9IGZyb20gJy4vdXNlLWNvcmUnO1xuaW1wb3J0IHsgdXNlSG9zdEVsZW1lbnQgfSBmcm9tICcuL3VzZS1ob3N0LWVsZW1lbnQucHVibGljJztcbmltcG9ydCB7IGdldENvbnRleHQgfSBmcm9tICcuLi9wcm9wcy9wcm9wcyc7XG5pbXBvcnQgeyB3cmFwU3Vic2NyaWJlciB9IGZyb20gJy4vdXNlLXN1YnNjcmliZXInO1xuaW1wb3J0IHsgYXNzZXJ0RXF1YWwgfSBmcm9tICcuLi9hc3NlcnQvYXNzZXJ0JztcbmltcG9ydCB7IFJlbmRlckV2ZW50IH0gZnJvbSAnLi4vdXRpbC9tYXJrZXJzJztcblxuLy8gPGRvY3MgbWFya2Rvd249XCIuLi9yZWFkbWUubWQjdXNlU3RvcmVcIj5cbi8vICEhRE8gTk9UIEVESVQgVEhJUyBDT01NRU5UIERJUkVDVExZISEhXG4vLyAoZWRpdCAuLi9yZWFkbWUubWQjdXNlU3RvcmUgaW5zdGVhZClcbi8qKlxuICogQ3JlYXRlcyBhIG9iamVjdCB0aGF0IFF3aWsgY2FuIHRyYWNrIGFjcm9zcyBzZXJpYWxpemF0aW9ucy5cbiAqXG4gKiBVc2UgYHVzZVN0b3JlYCB0byBjcmVhdGUgc3RhdGUgZm9yIHlvdXIgYXBwbGljYXRpb24uIFRoZSByZXR1cm4gb2JqZWN0IGlzIGEgcHJveHkgd2hpY2ggaGFzIGFcbiAqIHVuaXF1ZSBJRC4gVGhlIElEIG9mIHRoZSBvYmplY3QgaXMgdXNlZCBpbiB0aGUgYFFSTGBzIHRvIHJlZmVyIHRvIHRoZSBzdG9yZS5cbiAqXG4gKiAjIyBFeGFtcGxlXG4gKlxuICogRXhhbXBsZSBzaG93aW5nIGhvdyBgdXNlU3RvcmVgIGlzIHVzZWQgaW4gQ291bnRlciBleGFtcGxlIHRvIGtlZXAgdHJhY2sgb2YgY291bnQuXG4gKlxuICogYGBgdHN4XG4gKiBjb25zdCBTdG9yZXMgPSBjb21wb25lbnQkKCgpID0+IHtcbiAqICAgY29uc3QgY291bnRlciA9IHVzZUNvdW50ZXIoMSk7XG4gKlxuICogICAvLyBSZWFjdGl2aXR5IGhhcHBlbnMgZXZlbiBmb3IgbmVzdGVkIG9iamVjdHMgYW5kIGFycmF5c1xuICogICBjb25zdCB1c2VyRGF0YSA9IHVzZVN0b3JlKHtcbiAqICAgICBuYW1lOiAnTWFudScsXG4gKiAgICAgYWRkcmVzczoge1xuICogICAgICAgYWRkcmVzczogJycsXG4gKiAgICAgICBjaXR5OiAnJyxcbiAqICAgICB9LFxuICogICAgIG9yZ3M6IFtdLFxuICogICB9KTtcbiAqXG4gKiAgIC8vIHVzZVN0b3JlKCkgY2FuIGFsc28gYWNjZXB0IGEgZnVuY3Rpb24gdG8gY2FsY3VsYXRlIHRoZSBpbml0aWFsIHZhbHVlXG4gKiAgIGNvbnN0IHN0YXRlID0gdXNlU3RvcmUoKCkgPT4ge1xuICogICAgIHJldHVybiB7XG4gKiAgICAgICB2YWx1ZTogZXhwZW5zaXZlSW5pdGlhbFZhbHVlKCksXG4gKiAgICAgfTtcbiAqICAgfSk7XG4gKlxuICogICByZXR1cm4gKFxuICogICAgIDxIb3N0PlxuICogICAgICAgPGRpdj5Db3VudGVyOiB7Y291bnRlci52YWx1ZX08L2Rpdj5cbiAqICAgICAgIDxDaGlsZCB1c2VyRGF0YT17dXNlckRhdGF9IHN0YXRlPXtzdGF0ZX0gLz5cbiAqICAgICA8L0hvc3Q+XG4gKiAgICk7XG4gKiB9KTtcbiAqXG4gKiBmdW5jdGlvbiB1c2VDb3VudGVyKHN0ZXA6IG51bWJlcikge1xuICogICAvLyBNdWx0aXBsZSBzdG9yZXMgY2FuIGJlIGNyZWF0ZWQgaW4gY3VzdG9tIGhvb2tzIGZvciBjb252ZW5pZW5jZSBhbmQgY29tcG9zYWJpbGl0eVxuICogICBjb25zdCBjb3VudGVyU3RvcmUgPSB1c2VTdG9yZSh7XG4gKiAgICAgdmFsdWU6IDAsXG4gKiAgIH0pO1xuICogICB1c2VDbGllbnRFZmZlY3QkKCgpID0+IHtcbiAqICAgICAvLyBPbmx5IHJ1bnMgaW4gdGhlIGNsaWVudFxuICogICAgIGNvbnN0IHRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICogICAgICAgY291bnRlclN0b3JlLnZhbHVlICs9IHN0ZXA7XG4gKiAgICAgfSwgNTAwKTtcbiAqICAgICByZXR1cm4gKCkgPT4ge1xuICogICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lcik7XG4gKiAgICAgfTtcbiAqICAgfSk7XG4gKiAgIHJldHVybiBjb3VudGVyU3RvcmU7XG4gKiB9XG4gKiBgYGBcbiAqXG4gKiBAcHVibGljXG4gKi9cbi8vIDwvZG9jcz5cbmV4cG9ydCBmdW5jdGlvbiB1c2VTdG9yZTxTVEFURSBleHRlbmRzIG9iamVjdD4oaW5pdGlhbFN0YXRlOiBTVEFURSB8ICgoKSA9PiBTVEFURSkpOiBTVEFURSB7XG4gIGNvbnN0IFtzdG9yZSwgc2V0U3RvcmVdID0gdXNlU2VxdWVudGlhbFNjb3BlKCk7XG4gIGNvbnN0IGhvc3RFbGVtZW50ID0gdXNlSG9zdEVsZW1lbnQoKTtcbiAgaWYgKHN0b3JlICE9IG51bGwpIHtcbiAgICByZXR1cm4gd3JhcFN1YnNjcmliZXIoc3RvcmUsIGhvc3RFbGVtZW50KTtcbiAgfVxuXG4gIGNvbnN0IGNvbnRhaW5lclN0YXRlID0gdXNlQ29udGFpbmVyU3RhdGUoKTtcbiAgY29uc3QgdmFsdWUgPSB0eXBlb2YgaW5pdGlhbFN0YXRlID09PSAnZnVuY3Rpb24nID8gKGluaXRpYWxTdGF0ZSBhcyBGdW5jdGlvbikoKSA6IGluaXRpYWxTdGF0ZTtcbiAgY29uc3QgbmV3U3RvcmUgPSBxT2JqZWN0KHZhbHVlLCBjb250YWluZXJTdGF0ZSk7XG4gIHNldFN0b3JlKG5ld1N0b3JlKTtcbiAgcmV0dXJuIHdyYXBTdWJzY3JpYmVyKG5ld1N0b3JlLCBob3N0RWxlbWVudCk7XG59XG5cbi8qKlxuICogQGFscGhhXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUmVmPFQ+IHtcbiAgY3VycmVudD86IFQ7XG59XG5cbi8vIDxkb2NzIG1hcmtkb3duPVwiLi4vcmVhZG1lLm1kI3VzZVJlZlwiPlxuLy8gISFETyBOT1QgRURJVCBUSElTIENPTU1FTlQgRElSRUNUTFkhISFcbi8vIChlZGl0IC4uL3JlYWRtZS5tZCN1c2VSZWYgaW5zdGVhZClcbi8qKlxuICogSXQncyBhIHZlcnkgdGhpbiB3cmFwcGVyIGFyb3VuZCBgdXNlU3RvcmUoKWAgaW5jbHVkaW5nIHRoZSBwcm9wZXIgdHlwZSBzaWduYXR1cmUgdG8gYmUgcGFzc2VkXG4gKiB0byB0aGUgYHJlZmAgcHJvcGVydHkgaW4gSlNYLlxuICpcbiAqIGBgYHRzeFxuICogZXhwb3J0IGZ1bmN0aW9uIHVzZVJlZjxUID0gRWxlbWVudD4oY3VycmVudD86IFQpOiBSZWY8VD4ge1xuICogICByZXR1cm4gdXNlU3RvcmUoeyBjdXJyZW50IH0pO1xuICogfVxuICogYGBgXG4gKlxuICogIyMgRXhhbXBsZVxuICpcbiAqIGBgYHRzeFxuICogY29uc3QgQ21wID0gY29tcG9uZW50JCgoKSA9PiB7XG4gKiAgIGNvbnN0IGlucHV0ID0gdXNlUmVmPEhUTUxJbnB1dEVsZW1lbnQ+KCk7XG4gKlxuICogICB1c2VDbGllbnRFZmZlY3QkKCh0cmFjaykgPT4ge1xuICogICAgIGNvbnN0IGVsID0gdHJhY2soaW5wdXQsICdjdXJyZW50JykhO1xuICogICAgIGVsLmZvY3VzKCk7XG4gKiAgIH0pO1xuICpcbiAqICAgcmV0dXJuIChcbiAqICAgICA8SG9zdD5cbiAqICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIHJlZj17aW5wdXR9IC8+XG4gKiAgICAgPC9Ib3N0PlxuICogICApO1xuICogfSk7XG4gKlxuICogYGBgXG4gKlxuICogQHB1YmxpY1xuICovXG4vLyA8L2RvY3M+XG5leHBvcnQgZnVuY3Rpb24gdXNlUmVmPFQgPSBFbGVtZW50PihjdXJyZW50PzogVCk6IFJlZjxUPiB7XG4gIHJldHVybiB1c2VTdG9yZSh7IGN1cnJlbnQgfSk7XG59XG5cbi8qKlxuICogQGFscGhhXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VTZXF1ZW50aWFsU2NvcGUoKTogW2FueSwgKHByb3A6IGFueSkgPT4gdm9pZCwgbnVtYmVyXSB7XG4gIGNvbnN0IGN0eCA9IGdldEludm9rZUNvbnRleHQoKTtcbiAgYXNzZXJ0RXF1YWwoY3R4LmV2ZW50LCBSZW5kZXJFdmVudCk7XG4gIGNvbnN0IGluZGV4ID0gY3R4LnNlcTtcbiAgY29uc3QgaG9zdEVsZW1lbnQgPSB1c2VIb3N0RWxlbWVudCgpO1xuICBjb25zdCBlbGVtZW50Q3R4ID0gZ2V0Q29udGV4dChob3N0RWxlbWVudCk7XG4gIGN0eC5zZXErKztcbiAgY29uc3QgdXBkYXRlRm4gPSAodmFsdWU6IGFueSkgPT4ge1xuICAgIGVsZW1lbnRDdHguc2VxW2luZGV4XSA9IHZhbHVlO1xuICB9O1xuICByZXR1cm4gW2VsZW1lbnRDdHguc2VxW2luZGV4XSwgdXBkYXRlRm4sIGluZGV4XTtcbn1cbiJdfQ==","import { wrapSubscriber } from './use-subscriber';\nimport { assertDefined, assertEqual } from '../assert/assert';\nimport { parseQRL } from '../import/qrl';\nimport { getContext, resumeIfNeeded } from '../props/props';\nimport { getContainer, getInvokeContext } from './use-core';\n// <docs markdown=\"../readme.md#useLexicalScope\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useLexicalScope instead)\n/**\n * Used by the Qwik Optimizer to restore the lexical scoped variables.\n *\n * This method should not be present in the application source code.\n *\n * NOTE: `useLexicalScope` method can only be used in the synchronous portion of the callback\n * (before any `await` statements.)\n *\n * @public\n */\n// </docs>\nexport function useLexicalScope() {\n    const context = getInvokeContext();\n    const hostElement = context.hostElement;\n    const qrl = (context.qrl ??\n        parseQRL(decodeURIComponent(String(context.url)), hostElement));\n    if (qrl.captureRef == null) {\n        const el = context.element;\n        assertDefined(el);\n        resumeIfNeeded(getContainer(el));\n        const ctx = getContext(el);\n        qrl.captureRef = qrl.capture.map((idx) => qInflate(idx, ctx));\n    }\n    const subscriber = context.subscriber;\n    if (subscriber) {\n        return qrl.captureRef.map((obj) => wrapSubscriber(obj, subscriber));\n    }\n    return qrl.captureRef;\n}\nfunction qInflate(ref, hostCtx) {\n    const int = parseInt(ref, 10);\n    const obj = hostCtx.refMap.get(int);\n    assertEqual(hostCtx.refMap.array.length > int, true);\n    return obj;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWxleGljYWwtc2NvcGUucHVibGljLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL3VzZS91c2UtbGV4aWNhbC1zY29wZS5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxhQUFhLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDOUQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsVUFBVSxFQUFZLGNBQWMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxZQUFZLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFHNUQsaURBQWlEO0FBQ2pELHlDQUF5QztBQUN6Qyw4Q0FBOEM7QUFDOUM7Ozs7Ozs7OztHQVNHO0FBQ0gsVUFBVTtBQUNWLE1BQU0sVUFBVSxlQUFlO0lBQzdCLE1BQU0sT0FBTyxHQUFHLGdCQUFnQixFQUFFLENBQUM7SUFDbkMsTUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQztJQUN4QyxNQUFNLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHO1FBQ3RCLFFBQVEsQ0FBQyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsV0FBVyxDQUFDLENBQWdCLENBQUM7SUFDakYsSUFBSSxHQUFHLENBQUMsVUFBVSxJQUFJLElBQUksRUFBRTtRQUMxQixNQUFNLEVBQUUsR0FBRyxPQUFPLENBQUMsT0FBUSxDQUFDO1FBQzVCLGFBQWEsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNsQixjQUFjLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBRSxDQUFDLENBQUM7UUFDbEMsTUFBTSxHQUFHLEdBQUcsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRTNCLEdBQUcsQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFDLE9BQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztLQUNoRTtJQUNELE1BQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUM7SUFDdEMsSUFBSSxVQUFVLEVBQUU7UUFDZCxPQUFPLEdBQUcsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLFVBQVUsQ0FBQyxDQUFTLENBQUM7S0FDN0U7SUFDRCxPQUFPLEdBQUcsQ0FBQyxVQUFrQixDQUFDO0FBQ2hDLENBQUM7QUFFRCxTQUFTLFFBQVEsQ0FBQyxHQUFXLEVBQUUsT0FBaUI7SUFDOUMsTUFBTSxHQUFHLEdBQUcsUUFBUSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUM5QixNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNwQyxXQUFXLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNyRCxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3cmFwU3Vic2NyaWJlciB9IGZyb20gJy4vdXNlLXN1YnNjcmliZXInO1xuaW1wb3J0IHsgYXNzZXJ0RGVmaW5lZCwgYXNzZXJ0RXF1YWwgfSBmcm9tICcuLi9hc3NlcnQvYXNzZXJ0JztcbmltcG9ydCB7IHBhcnNlUVJMIH0gZnJvbSAnLi4vaW1wb3J0L3FybCc7XG5pbXBvcnQgeyBnZXRDb250ZXh0LCBRQ29udGV4dCwgcmVzdW1lSWZOZWVkZWQgfSBmcm9tICcuLi9wcm9wcy9wcm9wcyc7XG5pbXBvcnQgeyBnZXRDb250YWluZXIsIGdldEludm9rZUNvbnRleHQgfSBmcm9tICcuL3VzZS1jb3JlJztcbmltcG9ydCB0eXBlIHsgUVJMSW50ZXJuYWwgfSBmcm9tICcuLi9pbXBvcnQvcXJsLWNsYXNzJztcblxuLy8gPGRvY3MgbWFya2Rvd249XCIuLi9yZWFkbWUubWQjdXNlTGV4aWNhbFNjb3BlXCI+XG4vLyAhIURPIE5PVCBFRElUIFRISVMgQ09NTUVOVCBESVJFQ1RMWSEhIVxuLy8gKGVkaXQgLi4vcmVhZG1lLm1kI3VzZUxleGljYWxTY29wZSBpbnN0ZWFkKVxuLyoqXG4gKiBVc2VkIGJ5IHRoZSBRd2lrIE9wdGltaXplciB0byByZXN0b3JlIHRoZSBsZXhpY2FsIHNjb3BlZCB2YXJpYWJsZXMuXG4gKlxuICogVGhpcyBtZXRob2Qgc2hvdWxkIG5vdCBiZSBwcmVzZW50IGluIHRoZSBhcHBsaWNhdGlvbiBzb3VyY2UgY29kZS5cbiAqXG4gKiBOT1RFOiBgdXNlTGV4aWNhbFNjb3BlYCBtZXRob2QgY2FuIG9ubHkgYmUgdXNlZCBpbiB0aGUgc3luY2hyb25vdXMgcG9ydGlvbiBvZiB0aGUgY2FsbGJhY2tcbiAqIChiZWZvcmUgYW55IGBhd2FpdGAgc3RhdGVtZW50cy4pXG4gKlxuICogQHB1YmxpY1xuICovXG4vLyA8L2RvY3M+XG5leHBvcnQgZnVuY3Rpb24gdXNlTGV4aWNhbFNjb3BlPFZBUlMgZXh0ZW5kcyBhbnlbXT4oKTogVkFSUyB7XG4gIGNvbnN0IGNvbnRleHQgPSBnZXRJbnZva2VDb250ZXh0KCk7XG4gIGNvbnN0IGhvc3RFbGVtZW50ID0gY29udGV4dC5ob3N0RWxlbWVudDtcbiAgY29uc3QgcXJsID0gKGNvbnRleHQucXJsID8/XG4gICAgcGFyc2VRUkwoZGVjb2RlVVJJQ29tcG9uZW50KFN0cmluZyhjb250ZXh0LnVybCkpLCBob3N0RWxlbWVudCkpIGFzIFFSTEludGVybmFsO1xuICBpZiAocXJsLmNhcHR1cmVSZWYgPT0gbnVsbCkge1xuICAgIGNvbnN0IGVsID0gY29udGV4dC5lbGVtZW50ITtcbiAgICBhc3NlcnREZWZpbmVkKGVsKTtcbiAgICByZXN1bWVJZk5lZWRlZChnZXRDb250YWluZXIoZWwpISk7XG4gICAgY29uc3QgY3R4ID0gZ2V0Q29udGV4dChlbCk7XG5cbiAgICBxcmwuY2FwdHVyZVJlZiA9IHFybC5jYXB0dXJlIS5tYXAoKGlkeCkgPT4gcUluZmxhdGUoaWR4LCBjdHgpKTtcbiAgfVxuICBjb25zdCBzdWJzY3JpYmVyID0gY29udGV4dC5zdWJzY3JpYmVyO1xuICBpZiAoc3Vic2NyaWJlcikge1xuICAgIHJldHVybiBxcmwuY2FwdHVyZVJlZi5tYXAoKG9iaikgPT4gd3JhcFN1YnNjcmliZXIob2JqLCBzdWJzY3JpYmVyKSkgYXMgVkFSUztcbiAgfVxuICByZXR1cm4gcXJsLmNhcHR1cmVSZWYgYXMgVkFSUztcbn1cblxuZnVuY3Rpb24gcUluZmxhdGUocmVmOiBzdHJpbmcsIGhvc3RDdHg6IFFDb250ZXh0KTogYW55IHtcbiAgY29uc3QgaW50ID0gcGFyc2VJbnQocmVmLCAxMCk7XG4gIGNvbnN0IG9iaiA9IGhvc3RDdHgucmVmTWFwLmdldChpbnQpO1xuICBhc3NlcnRFcXVhbChob3N0Q3R4LnJlZk1hcC5hcnJheS5sZW5ndGggPiBpbnQsIHRydWUpO1xuICByZXR1cm4gb2JqO1xufVxuIl19","import { assertEqual } from '../assert/assert';\nimport { RenderEvent } from '../util/markers';\nimport { getInvokeContext } from './use-core';\n// <docs markdown=\"../readme.md#useDocument\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useDocument instead)\n/**\n * Retrieves the document of the current element. It's important to use this method instead of\n * accessing `document` directly, because during SSR, the global document might not exist.\n *\n * NOTE: `useDocument` method can only be used in the synchronous portion of the callback (before\n * any `await` statements.)\n *\n * @alpha\n */\n// </docs>\nexport function useDocument() {\n    const ctx = getInvokeContext();\n    assertEqual(ctx.event, RenderEvent);\n    const doc = ctx.doc;\n    if (!doc) {\n        throw new Error('Cant access document for existing context');\n    }\n    return doc;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWRvY3VtZW50LnB1YmxpYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvcXdpay9zcmMvY29yZS91c2UvdXNlLWRvY3VtZW50LnB1YmxpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUU5Qyw2Q0FBNkM7QUFDN0MseUNBQXlDO0FBQ3pDLDBDQUEwQztBQUMxQzs7Ozs7Ozs7R0FRRztBQUNILFVBQVU7QUFDVixNQUFNLFVBQVUsV0FBVztJQUN6QixNQUFNLEdBQUcsR0FBRyxnQkFBZ0IsRUFBRSxDQUFDO0lBQy9CLFdBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ3BDLE1BQU0sR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUM7SUFDcEIsSUFBSSxDQUFDLEdBQUcsRUFBRTtRQUNSLE1BQU0sSUFBSSxLQUFLLENBQUMsMkNBQTJDLENBQUMsQ0FBQztLQUM5RDtJQUNELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzc2VydEVxdWFsIH0gZnJvbSAnLi4vYXNzZXJ0L2Fzc2VydCc7XG5pbXBvcnQgeyBSZW5kZXJFdmVudCB9IGZyb20gJy4uL3V0aWwvbWFya2Vycyc7XG5pbXBvcnQgeyBnZXRJbnZva2VDb250ZXh0IH0gZnJvbSAnLi91c2UtY29yZSc7XG5cbi8vIDxkb2NzIG1hcmtkb3duPVwiLi4vcmVhZG1lLm1kI3VzZURvY3VtZW50XCI+XG4vLyAhIURPIE5PVCBFRElUIFRISVMgQ09NTUVOVCBESVJFQ1RMWSEhIVxuLy8gKGVkaXQgLi4vcmVhZG1lLm1kI3VzZURvY3VtZW50IGluc3RlYWQpXG4vKipcbiAqIFJldHJpZXZlcyB0aGUgZG9jdW1lbnQgb2YgdGhlIGN1cnJlbnQgZWxlbWVudC4gSXQncyBpbXBvcnRhbnQgdG8gdXNlIHRoaXMgbWV0aG9kIGluc3RlYWQgb2ZcbiAqIGFjY2Vzc2luZyBgZG9jdW1lbnRgIGRpcmVjdGx5LCBiZWNhdXNlIGR1cmluZyBTU1IsIHRoZSBnbG9iYWwgZG9jdW1lbnQgbWlnaHQgbm90IGV4aXN0LlxuICpcbiAqIE5PVEU6IGB1c2VEb2N1bWVudGAgbWV0aG9kIGNhbiBvbmx5IGJlIHVzZWQgaW4gdGhlIHN5bmNocm9ub3VzIHBvcnRpb24gb2YgdGhlIGNhbGxiYWNrIChiZWZvcmVcbiAqIGFueSBgYXdhaXRgIHN0YXRlbWVudHMuKVxuICpcbiAqIEBhbHBoYVxuICovXG4vLyA8L2RvY3M+XG5leHBvcnQgZnVuY3Rpb24gdXNlRG9jdW1lbnQoKTogRG9jdW1lbnQge1xuICBjb25zdCBjdHggPSBnZXRJbnZva2VDb250ZXh0KCk7XG4gIGFzc2VydEVxdWFsKGN0eC5ldmVudCwgUmVuZGVyRXZlbnQpO1xuICBjb25zdCBkb2MgPSBjdHguZG9jO1xuICBpZiAoIWRvYykge1xuICAgIHRocm93IG5ldyBFcnJvcignQ2FudCBhY2Nlc3MgZG9jdW1lbnQgZm9yIGV4aXN0aW5nIGNvbnRleHQnKTtcbiAgfVxuICByZXR1cm4gZG9jO1xufVxuIl19","import { noSerialize, notifyWatch } from '../object/q-object';\nimport { implicit$FirstArg } from '../import/qrl.public';\nimport { getContext } from '../props/props';\nimport { newInvokeContext, useContainerState, useWaitOn } from '../use/use-core';\nimport { useHostElement } from '../use/use-host-element.public';\nimport { logDebug, logError } from '../util/log';\nimport { then } from '../util/promises';\nimport { useSequentialScope } from '../use/use-store.public';\nimport { QRLInternal } from '../import/qrl-class';\nimport { getDocument } from '../util/dom';\nimport { useLexicalScope } from '../use/use-lexical-scope.public';\nimport { getPlatform } from '../platform/platform';\nimport { useDocument } from '../use/use-document.public';\nimport { useResumeQrl, useVisibleQrl } from '../component/component.public';\nimport { getProxyTarget } from '../object/store';\nexport var WatchFlags;\n(function (WatchFlags) {\n    WatchFlags[WatchFlags[\"IsEffect\"] = 1] = \"IsEffect\";\n    WatchFlags[WatchFlags[\"IsWatch\"] = 2] = \"IsWatch\";\n    WatchFlags[WatchFlags[\"IsDirty\"] = 4] = \"IsDirty\";\n    WatchFlags[WatchFlags[\"IsCleanup\"] = 8] = \"IsCleanup\";\n})(WatchFlags || (WatchFlags = {}));\nexport const isWatchDescriptor = (obj) => {\n    return obj && typeof obj === 'object' && 'qrl' in obj && 'f' in obj;\n};\nexport const isWatchCleanup = (obj) => {\n    return isWatchDescriptor(obj) && !!(obj.f & WatchFlags.IsCleanup);\n};\n/**\n * @alpha\n */\nexport function handleWatch() {\n    const [watch] = useLexicalScope();\n    notifyWatch(watch);\n}\n// <docs markdown=\"../readme.md#useWatch\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useWatch instead)\n/**\n * Reruns the `watchFn` when the observed inputs change.\n *\n * Use `useWatch` to observe changes on a set of inputs, and then re-execute the `watchFn` when\n * those inputs change.\n *\n * The `watchFn` only executes if the observed inputs change. To observe the inputs use the `obs`\n * function to wrap property reads. This creates subscriptions which will trigger the `watchFn`\n * to re-run.\n *\n * @see `Tracker`\n *\n * @public\n *\n * ## Example\n *\n * The `useWatch` function is used to observe the `state.count` property. Any changes to the\n * `state.count` cause the `watchFn` to execute which in turn updates the `state.doubleCount` to\n * the double of `state.count`.\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   const store = useStore({\n *     count: 0,\n *     doubleCount: 0,\n *     debounced: 0,\n *   });\n *\n *   // Double count watch\n *   useWatch$((track) => {\n *     const count = track(store, 'count');\n *     store.doubleCount = 2 * count;\n *   });\n *\n *   // Debouncer watch\n *   useWatch$((track) => {\n *     const doubleCount = track(store, 'doubleCount');\n *     const timer = setTimeout(() => {\n *       store.debounced = doubleCount;\n *     }, 2000);\n *     return () => {\n *       clearTimeout(timer);\n *     };\n *   });\n *   return (\n *     <Host>\n *       <div>\n *         {store.count} / {store.doubleCount}\n *       </div>\n *       <div>{store.debounced}</div>\n *     </Host>\n *   );\n * });\n * ```\n *\n * @param watch - Function which should be re-executed when changes to the inputs are detected\n * @public\n */\n// </docs>\nexport function useWatchQrl(qrl, opts) {\n    const [watch, setWatch, i] = useSequentialScope();\n    if (!watch) {\n        const el = useHostElement();\n        const containerState = useContainerState();\n        const watch = {\n            qrl,\n            el,\n            f: WatchFlags.IsDirty | WatchFlags.IsWatch,\n            i,\n        };\n        setWatch(true);\n        getContext(el).watches.push(watch);\n        useWaitOn(Promise.resolve().then(() => runWatch(watch, containerState)));\n        const isServer = containerState.platform.isServer;\n        if (isServer) {\n            useRunWatch(watch, opts?.run);\n        }\n    }\n}\n// <docs markdown=\"../readme.md#useWatch\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useWatch instead)\n/**\n * Reruns the `watchFn` when the observed inputs change.\n *\n * Use `useWatch` to observe changes on a set of inputs, and then re-execute the `watchFn` when\n * those inputs change.\n *\n * The `watchFn` only executes if the observed inputs change. To observe the inputs use the `obs`\n * function to wrap property reads. This creates subscriptions which will trigger the `watchFn`\n * to re-run.\n *\n * @see `Tracker`\n *\n * @public\n *\n * ## Example\n *\n * The `useWatch` function is used to observe the `state.count` property. Any changes to the\n * `state.count` cause the `watchFn` to execute which in turn updates the `state.doubleCount` to\n * the double of `state.count`.\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   const store = useStore({\n *     count: 0,\n *     doubleCount: 0,\n *     debounced: 0,\n *   });\n *\n *   // Double count watch\n *   useWatch$((track) => {\n *     const count = track(store, 'count');\n *     store.doubleCount = 2 * count;\n *   });\n *\n *   // Debouncer watch\n *   useWatch$((track) => {\n *     const doubleCount = track(store, 'doubleCount');\n *     const timer = setTimeout(() => {\n *       store.debounced = doubleCount;\n *     }, 2000);\n *     return () => {\n *       clearTimeout(timer);\n *     };\n *   });\n *   return (\n *     <Host>\n *       <div>\n *         {store.count} / {store.doubleCount}\n *       </div>\n *       <div>{store.debounced}</div>\n *     </Host>\n *   );\n * });\n * ```\n *\n * @param watch - Function which should be re-executed when changes to the inputs are detected\n * @public\n */\n// </docs>\nexport const useWatch$ = implicit$FirstArg(useWatchQrl);\n// <docs markdown=\"../readme.md#useClientEffect\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useClientEffect instead)\n/**\n * ```tsx\n * const Timer = component$(() => {\n *   const store = useStore({\n *     count: 0,\n *   });\n *\n *   useClientEffect$(() => {\n *     // Only runs in the client\n *     const timer = setInterval(() => {\n *       store.count++;\n *     }, 500);\n *     return () => {\n *       clearInterval(timer);\n *     };\n *   });\n *\n *   return <Host>{store.count}</Host>;\n * });\n * ```\n *\n * @public\n */\n// </docs>\nexport function useClientEffectQrl(qrl, opts) {\n    const [watch, setWatch, i] = useSequentialScope();\n    if (!watch) {\n        const el = useHostElement();\n        const watch = {\n            qrl,\n            el,\n            f: WatchFlags.IsEffect,\n            i,\n        };\n        setWatch(true);\n        getContext(el).watches.push(watch);\n        useRunWatch(watch, opts?.run ?? 'visible');\n        const doc = useDocument();\n        if (doc['qO']) {\n            doc['qO'].observe(el);\n        }\n    }\n}\n// <docs markdown=\"../readme.md#useClientEffect\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useClientEffect instead)\n/**\n * ```tsx\n * const Timer = component$(() => {\n *   const store = useStore({\n *     count: 0,\n *   });\n *\n *   useClientEffect$(() => {\n *     // Only runs in the client\n *     const timer = setInterval(() => {\n *       store.count++;\n *     }, 500);\n *     return () => {\n *       clearInterval(timer);\n *     };\n *   });\n *\n *   return <Host>{store.count}</Host>;\n * });\n * ```\n *\n * @public\n */\n// </docs>\nexport const useClientEffect$ = implicit$FirstArg(useClientEffectQrl);\n// <docs markdown=\"../readme.md#useServerMount\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useServerMount instead)\n/**\n * Register's a server mount hook, that runs only in server when the component is first mounted.\n *\n * ## Example\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   const store = useStore({\n *     users: [],\n *   });\n *\n *   useServerMount$(async () => {\n *     // This code will ONLY run once in the server, when the component is mounted\n *     store.users = await db.requestUsers();\n *   });\n *\n *   return (\n *     <Host>\n *       {store.users.map((user) => (\n *         <User user={user} />\n *       ))}\n *     </Host>\n *   );\n * });\n *\n * interface User {\n *   name: string;\n * }\n * function User(props: { user: User }) {\n *   return <div>Name: {props.user.name}</div>;\n * }\n * ```\n *\n * @see `useClientMount` `useMount`\n * @public\n */\n// </docs>\nexport function useServerMountQrl(mountQrl) {\n    const [watch, setWatch] = useSequentialScope();\n    if (!watch) {\n        setWatch(true);\n        const isServer = getPlatform(useDocument()).isServer;\n        if (isServer) {\n            useWaitOn(mountQrl.invoke());\n        }\n    }\n}\n// <docs markdown=\"../readme.md#useServerMount\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useServerMount instead)\n/**\n * Register's a server mount hook, that runs only in server when the component is first mounted.\n *\n * ## Example\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   const store = useStore({\n *     users: [],\n *   });\n *\n *   useServerMount$(async () => {\n *     // This code will ONLY run once in the server, when the component is mounted\n *     store.users = await db.requestUsers();\n *   });\n *\n *   return (\n *     <Host>\n *       {store.users.map((user) => (\n *         <User user={user} />\n *       ))}\n *     </Host>\n *   );\n * });\n *\n * interface User {\n *   name: string;\n * }\n * function User(props: { user: User }) {\n *   return <div>Name: {props.user.name}</div>;\n * }\n * ```\n *\n * @see `useClientMount` `useMount`\n * @public\n */\n// </docs>\nexport const useServerMount$ = implicit$FirstArg(useServerMountQrl);\n// <docs markdown=\"../readme.md#useClientMount\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useClientMount instead)\n/**\n * Register's a client mount hook, that runs only in client when the component is first mounted.\n *\n * ## Example\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   const store = useStore({\n *     hash: ''\n *   });\n *\n *   useClientMount$(async () => {\n *     // This code will ONLY run once in the client, when the component is mounted\n *     store.hash = document.location.hash\n *   });\n *\n *   return (\n *     <Host>\n *       <p>The url hash is: ${store.hash}</p>\n *     </Host>\n *   );\n * });\n * ```\n *\n * @see `useServerMount` `useMount`\n *\n * @public\n */\n// </docs>\nexport function useClientMountQrl(mountQrl) {\n    const [watch, setWatch] = useSequentialScope();\n    if (!watch) {\n        setWatch(true);\n        const isServer = getPlatform(useDocument()).isServer;\n        if (!isServer) {\n            useWaitOn(mountQrl.invoke());\n        }\n    }\n}\n// <docs markdown=\"../readme.md#useClientMount\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useClientMount instead)\n/**\n * Register's a client mount hook, that runs only in client when the component is first mounted.\n *\n * ## Example\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   const store = useStore({\n *     hash: ''\n *   });\n *\n *   useClientMount$(async () => {\n *     // This code will ONLY run once in the client, when the component is mounted\n *     store.hash = document.location.hash\n *   });\n *\n *   return (\n *     <Host>\n *       <p>The url hash is: ${store.hash}</p>\n *     </Host>\n *   );\n * });\n * ```\n *\n * @see `useServerMount` `useMount`\n *\n * @public\n */\n// </docs>\nexport const useClientMount$ = implicit$FirstArg(useClientMountQrl);\n// <docs markdown=\"../readme.md#useMount\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useMount instead)\n/**\n * Register's a mount hook, that runs both in the server and the client when the component is\n * first mounted.\n *\n * ## Example\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   const store = useStore({\n *     temp: 0,\n *   });\n *\n *   useMount$(async () => {\n *     // This code will run once whenever a component is mounted in the server, or in the client\n *     const res = await fetch('weather-api.example');\n *     const json = await res.json() as any;\n *     store.temp = json.temp;\n *   });\n *\n *   return (\n *     <Host>\n *       <p>The temperature is: ${store.temp}</p>\n *     </Host>\n *   );\n * });\n * ```\n *\n * @see `useServerMount` `useClientMount`\n * @public\n */\n// </docs>\nexport function useMountQrl(mountQrl) {\n    const [watch, setWatch] = useSequentialScope();\n    if (!watch) {\n        setWatch(true);\n        useWaitOn(mountQrl.invoke());\n    }\n}\n// <docs markdown=\"../readme.md#useMount\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useMount instead)\n/**\n * Register's a mount hook, that runs both in the server and the client when the component is\n * first mounted.\n *\n * ## Example\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   const store = useStore({\n *     temp: 0,\n *   });\n *\n *   useMount$(async () => {\n *     // This code will run once whenever a component is mounted in the server, or in the client\n *     const res = await fetch('weather-api.example');\n *     const json = await res.json() as any;\n *     store.temp = json.temp;\n *   });\n *\n *   return (\n *     <Host>\n *       <p>The temperature is: ${store.temp}</p>\n *     </Host>\n *   );\n * });\n * ```\n *\n * @see `useServerMount` `useClientMount`\n * @public\n */\n// </docs>\nexport const useMount$ = implicit$FirstArg(useMountQrl);\nexport function runWatch(watch, containerState) {\n    if (!(watch.f & WatchFlags.IsDirty)) {\n        logDebug('Watch is not dirty, skipping run', watch);\n        return Promise.resolve(watch);\n    }\n    watch.f &= ~WatchFlags.IsDirty;\n    const promise = new Promise((resolve) => {\n        then(watch.running, () => {\n            cleanupWatch(watch);\n            const el = watch.el;\n            const doc = getDocument(el);\n            const invokationContext = newInvokeContext(doc, el, el, 'WatchEvent');\n            const { subsManager } = containerState;\n            const watchFn = watch.qrl.invokeFn(el, invokationContext, () => {\n                subsManager.clearSub(watch);\n            });\n            const track = (obj, prop) => {\n                const manager = subsManager.getLocal(getProxyTarget(obj) ?? obj);\n                manager.addSub(watch, prop);\n                if (prop) {\n                    return obj[prop];\n                }\n                else {\n                    return obj;\n                }\n            };\n            return then(watchFn(track), (returnValue) => {\n                if (typeof returnValue === 'function') {\n                    watch.destroy = noSerialize(returnValue);\n                }\n                resolve(watch);\n            });\n        });\n    });\n    watch.running = noSerialize(promise);\n    return promise;\n}\nexport const cleanupWatch = (watch) => {\n    const destroy = watch.destroy;\n    if (destroy) {\n        watch.destroy = undefined;\n        try {\n            destroy();\n        }\n        catch (err) {\n            logError(err);\n        }\n    }\n};\nexport const destroyWatch = (watch) => {\n    if (watch.f & WatchFlags.IsCleanup) {\n        watch.f &= ~WatchFlags.IsCleanup;\n        const cleanup = watch.qrl.invokeFn(watch.el);\n        cleanup();\n    }\n    else {\n        cleanupWatch(watch);\n    }\n};\nconst useRunWatch = (watch, run) => {\n    if (run === 'load') {\n        useResumeQrl(getWatchHandlerQrl(watch));\n    }\n    else if (run === 'visible') {\n        useVisibleQrl(getWatchHandlerQrl(watch));\n    }\n};\nconst getWatchHandlerQrl = (watch) => {\n    const watchQrl = watch.qrl;\n    const watchHandler = new QRLInternal(watchQrl.chunk, 'handleWatch', handleWatch, null, null, [watch]);\n    watchHandler.refSymbol = watchQrl.symbol;\n    return watchHandler;\n};\n//# sourceMappingURL=data:application/json;base64,","export const emitEvent = (el, eventName, detail, bubbles) => {\n    if (el && typeof CustomEvent === 'function') {\n        el.dispatchEvent(new CustomEvent(eventName, {\n            detail,\n            bubbles: bubbles,\n            composed: bubbles,\n        }));\n    }\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnQuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL3F3aWsvc3JjL2NvcmUvdXRpbC9ldmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsQ0FDdkIsRUFBdUIsRUFDdkIsU0FBaUIsRUFDakIsTUFBVyxFQUNYLE9BQWdCLEVBQ2hCLEVBQUU7SUFDRixJQUFJLEVBQUUsSUFBSSxPQUFPLFdBQVcsS0FBSyxVQUFVLEVBQUU7UUFDM0MsRUFBRSxDQUFDLGFBQWEsQ0FDZCxJQUFJLFdBQVcsQ0FBQyxTQUFTLEVBQUU7WUFDekIsTUFBTTtZQUNOLE9BQU8sRUFBRSxPQUFPO1lBQ2hCLFFBQVEsRUFBRSxPQUFPO1NBQ2xCLENBQUMsQ0FDSCxDQUFDO0tBQ0g7QUFDSCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZW1pdEV2ZW50ID0gKFxuICBlbDogRWxlbWVudCB8IHVuZGVmaW5lZCxcbiAgZXZlbnROYW1lOiBzdHJpbmcsXG4gIGRldGFpbDogYW55LFxuICBidWJibGVzOiBib29sZWFuXG4pID0+IHtcbiAgaWYgKGVsICYmIHR5cGVvZiBDdXN0b21FdmVudCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGVsLmRpc3BhdGNoRXZlbnQoXG4gICAgICBuZXcgQ3VzdG9tRXZlbnQoZXZlbnROYW1lLCB7XG4gICAgICAgIGRldGFpbCxcbiAgICAgICAgYnViYmxlczogYnViYmxlcyxcbiAgICAgICAgY29tcG9zZWQ6IGJ1YmJsZXMsXG4gICAgICB9KVxuICAgICk7XG4gIH1cbn07XG4iXX0=","import { assertDefined, assertEqual } from '../assert/assert';\nimport { parseQRL, stringifyQRL } from '../import/qrl';\nimport { isQrl } from '../import/qrl-class';\nimport { getContext, createProps, tryGetContext } from '../props/props';\nimport { getDocument } from '../util/dom';\nimport { isElement, isNode } from '../util/element';\nimport { logDebug, logError, logWarn } from '../util/log';\nimport { ELEMENT_ID, ELEMENT_ID_PREFIX, QContainerAttr } from '../util/markers';\nimport { qDev } from '../util/qdev';\nimport { isConnected, QOjectSubsSymbol, QOjectTargetSymbol, readWriteProxy, shouldSerialize, _restoreQObject, } from './q-object';\nimport { destroyWatch, WatchFlags } from '../watch/watch.public';\nimport { emitEvent } from '../util/event';\nimport { getContainerState } from '../render/notify-render';\nexport const UNDEFINED_PREFIX = '\\u0010';\nexport const QRL_PREFIX = '\\u0011';\nexport const DOCUMENT_PREFIX = '\\u0012';\nexport function resumeContainer(containerEl) {\n    if (!isContainer(containerEl)) {\n        logWarn('Skipping hydration because parent element is not q:container');\n        return;\n    }\n    const doc = getDocument(containerEl);\n    const isDocElement = containerEl === doc.documentElement;\n    const parentJSON = isDocElement ? doc.body : containerEl;\n    const script = getQwikJSON(parentJSON);\n    if (!script) {\n        logWarn('Skipping hydration qwik/json metadata was not found.');\n        return;\n    }\n    script.remove();\n    const containerState = getContainerState(containerEl);\n    const meta = JSON.parse(unescapeText(script.textContent || '{}'));\n    // Collect all elements\n    const elements = new Map();\n    getNodesInScope(containerEl, hasQId).forEach((el) => {\n        const id = el.getAttribute(ELEMENT_ID);\n        elements.set(ELEMENT_ID_PREFIX + id, el);\n    });\n    const getObject = (id) => {\n        return getObjectImpl(id, elements, meta.objs, containerState);\n    };\n    // Revive proxies with subscriptions into the proxymap\n    reviveValues(meta.objs, meta.subs, getObject, containerState, parentJSON);\n    // Rebuild target objects\n    for (const obj of meta.objs) {\n        reviveNestedObjects(obj, getObject);\n    }\n    Object.entries(meta.ctx).forEach(([elementID, ctxMeta]) => {\n        const el = getObject(elementID);\n        assertDefined(el);\n        const ctx = getContext(el);\n        const qobj = ctxMeta.r;\n        const seq = ctxMeta.s;\n        const host = ctxMeta.h;\n        const contexts = ctxMeta.c;\n        const watches = ctxMeta.w;\n        if (qobj) {\n            ctx.refMap.array.push(...qobj.split(' ').map((part) => getObject(part)));\n        }\n        if (seq) {\n            ctx.seq = seq.split(' ').map((part) => getObject(part));\n        }\n        if (watches) {\n            ctx.watches = watches.split(' ').map((part) => getObject(part));\n        }\n        if (contexts) {\n            contexts.split(' ').map((part) => {\n                const [key, value] = part.split('=');\n                if (!ctx.contexts) {\n                    ctx.contexts = new Map();\n                }\n                ctx.contexts.set(key, getObject(value));\n            });\n        }\n        // Restore sequence scoping\n        if (host) {\n            const [props, renderQrl] = host.split(' ');\n            assertDefined(props);\n            assertDefined(renderQrl);\n            ctx.props = createProps(getObject(props), ctx.element, containerState);\n            ctx.renderQrl = getObject(renderQrl);\n        }\n    });\n    containerEl.setAttribute(QContainerAttr, 'resumed');\n    logDebug('Container resumed');\n    emitEvent(containerEl, 'qresume', undefined, true);\n}\nfunction hasContext(el) {\n    return !!tryGetContext(el);\n}\nexport function snapshotState(containerEl) {\n    const doc = getDocument(containerEl);\n    const { subsManager, proxyMap, platform } = getContainerState(containerEl);\n    const elementToIndex = new Map();\n    const collector = createCollector(doc, proxyMap);\n    // Collect all qObjected around the DOM\n    const elements = getNodesInScope(containerEl, hasContext);\n    elements.forEach((node) => {\n        const ctx = tryGetContext(node);\n        collectProps(node, ctx.props, collector);\n        ctx.contexts?.forEach((ctx) => {\n            collectValue(ctx, collector);\n        });\n        ctx.listeners?.forEach((listeners) => {\n            for (const l of listeners) {\n                const captured = l.captureRef;\n                if (captured) {\n                    captured.forEach((obj) => collectValue(obj, collector));\n                }\n            }\n        });\n        ctx.watches.forEach((watch) => {\n            collector.watches.push(watch);\n        });\n    });\n    // Convert objSet to array\n    const objs = Array.from(collector.objSet);\n    function hasSubscriptions(a) {\n        const manager = subsManager.tryGetLocal(a);\n        if (manager) {\n            return manager.subs.size > 0;\n        }\n        return false;\n    }\n    objs.sort((a, b) => {\n        const isProxyA = hasSubscriptions(a) ? 0 : 1;\n        const isProxyB = hasSubscriptions(b) ? 0 : 1;\n        return isProxyA - isProxyB;\n    });\n    const objToId = new Map();\n    let count = 0;\n    for (const obj of objs) {\n        objToId.set(obj, count);\n        count++;\n    }\n    function getElementID(el) {\n        let id = elementToIndex.get(el);\n        if (id === undefined) {\n            if (el.isConnected) {\n                id = intToStr(elementToIndex.size);\n                el.setAttribute(ELEMENT_ID, id);\n                id = ELEMENT_ID_PREFIX + id;\n            }\n            else {\n                id = null;\n            }\n            elementToIndex.set(el, id);\n        }\n        return id;\n    }\n    function getObjId(obj) {\n        if (obj !== null && typeof obj === 'object') {\n            const target = obj[QOjectTargetSymbol];\n            const id = objToId.get(normalizeObj(target ?? obj, doc));\n            if (id !== undefined) {\n                const proxySuffix = target ? '!' : '';\n                return intToStr(id) + proxySuffix;\n            }\n            if (!target && isNode(obj)) {\n                if (obj.nodeType === 1) {\n                    return getElementID(obj);\n                }\n                else {\n                    logError('Can not serialize a HTML Node that is not an Element', obj);\n                    return null;\n                }\n            }\n        }\n        else {\n            const id = objToId.get(normalizeObj(obj, doc));\n            if (id !== undefined) {\n                return intToStr(id);\n            }\n        }\n        return null;\n    }\n    function mustGetObjId(obj) {\n        const id = getObjId(obj);\n        assertDefined(id);\n        return id;\n    }\n    const subs = objs\n        .map((obj) => {\n        const subs = subsManager.tryGetLocal(obj)?.subs;\n        if (subs && subs.size > 0) {\n            return Object.fromEntries(Array.from(subs.entries()).map(([sub, set]) => {\n                const id = getObjId(sub);\n                if (id !== null) {\n                    return [id, set ? Array.from(set) : null];\n                }\n                else {\n                    return [undefined, undefined];\n                }\n            }));\n        }\n        else {\n            return null;\n        }\n    })\n        .filter((a) => !!a);\n    const serialize = (value) => {\n        return getObjId(value) ?? value;\n    };\n    const qrlSerializeOptions = {\n        platform,\n        getObjId,\n    };\n    const convertedObjs = objs.map((obj) => {\n        if (Array.isArray(obj)) {\n            return obj.map(serialize);\n        }\n        else if (obj && typeof obj === 'object') {\n            if (isQrl(obj)) {\n                return QRL_PREFIX + stringifyQRL(obj, qrlSerializeOptions);\n            }\n            const output = {};\n            Object.entries(obj).forEach(([key, value]) => {\n                output[key] = serialize(value);\n            });\n            return output;\n        }\n        return obj;\n    });\n    const listeners = [];\n    const meta = {};\n    // Write back to the dom\n    elements.forEach((node) => {\n        const ctx = getContext(node);\n        assertDefined(ctx);\n        const ref = ctx.refMap;\n        const props = ctx.props;\n        const contexts = ctx.contexts;\n        const watches = ctx.watches;\n        const renderQrl = ctx.renderQrl;\n        const seq = ctx.seq;\n        const metaValue = {};\n        const elementCaptured = collector.elements.includes(node);\n        let add = false;\n        if (ref.array.length > 0) {\n            const value = ref.array.map((obj) => mustGetObjId(obj)).join(' ');\n            if (value) {\n                metaValue.r = value;\n                add = true;\n            }\n        }\n        if (elementCaptured && props) {\n            const objs = [getProxyTarget(props)];\n            if (renderQrl) {\n                objs.push(renderQrl);\n            }\n            const value = objs.map((obj) => mustGetObjId(obj)).join(' ');\n            if (value) {\n                metaValue.h = value;\n                add = true;\n            }\n        }\n        if (watches.length > 0) {\n            const value = watches\n                .map((watch) => getObjId(watch))\n                .filter((obj) => obj != null)\n                .join(' ');\n            if (value) {\n                metaValue.w = value;\n                add = true;\n            }\n        }\n        if (elementCaptured && seq.length > 0) {\n            const value = seq.map((obj) => mustGetObjId(obj)).join(' ');\n            if (value) {\n                metaValue.s = value;\n                add = true;\n            }\n        }\n        if (contexts) {\n            const serializedContexts = [];\n            contexts.forEach((value, key) => {\n                serializedContexts.push(`${key}=${mustGetObjId(value)}`);\n            });\n            const value = serializedContexts.join(' ');\n            if (value) {\n                metaValue.c = value;\n                add = true;\n            }\n        }\n        if (add) {\n            const elementID = getElementID(node);\n            assertDefined(elementID);\n            meta[elementID] = metaValue;\n        }\n        if (ctx.listeners) {\n            ctx.listeners.forEach((qrls, key) => {\n                qrls.forEach((qrl) => {\n                    listeners.push({\n                        key,\n                        qrl,\n                    });\n                });\n            });\n        }\n    });\n    for (const watch of collector.watches) {\n        destroyWatch(watch);\n        if (qDev) {\n            if (watch.f & WatchFlags.IsDirty) {\n                logWarn('Serializing dirty watch. Looks like an internal error.');\n            }\n            if (!isConnected(watch)) {\n                logWarn('Serializing disconneted watch. Looks like an internal error.');\n            }\n        }\n    }\n    // Sanity check of serialized element\n    if (qDev) {\n        elementToIndex.forEach((value, el) => {\n            if (getDocument(el) !== doc) {\n                logWarn('element from different document', value, el.tagName);\n            }\n            if (!value) {\n                logWarn('unconnected element', el.tagName, '\\n');\n            }\n        });\n    }\n    return {\n        state: {\n            ctx: meta,\n            objs: convertedObjs,\n            subs,\n        },\n        objs,\n        listeners,\n    };\n}\nexport function getQwikJSON(parentElm) {\n    let child = parentElm.lastElementChild;\n    while (child) {\n        if (child.tagName === 'SCRIPT' && child.getAttribute('type') === 'qwik/json') {\n            return child;\n        }\n        child = child.previousElementSibling;\n    }\n    return undefined;\n}\nexport function getNodesInScope(parent, predicate) {\n    const nodes = [];\n    walkNodes(nodes, parent, predicate);\n    return nodes;\n}\nexport function walkNodes(nodes, parent, predicate) {\n    let child = parent.firstElementChild;\n    while (child) {\n        if (!isContainer(child)) {\n            if (predicate(child)) {\n                nodes.push(child);\n            }\n            walkNodes(nodes, child, predicate);\n        }\n        child = child.nextElementSibling;\n    }\n}\nfunction reviveValues(objs, subs, getObject, containerState, containerEl) {\n    for (let i = 0; i < objs.length; i++) {\n        const value = objs[i];\n        if (typeof value === 'string') {\n            if (value === UNDEFINED_PREFIX) {\n                objs[i] = undefined;\n            }\n            else if (value === DOCUMENT_PREFIX) {\n                objs[i] = getDocument(containerEl);\n            }\n            else if (value.startsWith(QRL_PREFIX)) {\n                objs[i] = parseQRL(value.slice(1), containerEl);\n            }\n        }\n        else {\n            const sub = subs[i];\n            if (sub) {\n                const converted = new Map();\n                Object.entries(sub).forEach((entry) => {\n                    const el = getObject(entry[0]);\n                    if (!el) {\n                        logWarn('QWIK can not revive subscriptions because of missing element ID', entry, value);\n                        return;\n                    }\n                    const set = entry[1] === null ? null : new Set(entry[1]);\n                    converted.set(el, set);\n                });\n                _restoreQObject(value, containerState, converted);\n            }\n        }\n    }\n}\nfunction reviveNestedObjects(obj, getObject) {\n    if (obj && typeof obj == 'object') {\n        if (isQrl(obj)) {\n            if (obj.capture && obj.capture.length > 0) {\n                obj.captureRef = obj.capture.map(getObject);\n                obj.capture = null;\n            }\n            return;\n        }\n        else if (Array.isArray(obj)) {\n            for (let i = 0; i < obj.length; i++) {\n                const value = obj[i];\n                if (typeof value == 'string') {\n                    obj[i] = getObject(value);\n                }\n                else {\n                    reviveNestedObjects(value, getObject);\n                }\n            }\n        }\n        else if (Object.getPrototypeOf(obj) === Object.prototype) {\n            for (const key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    const value = obj[key];\n                    if (typeof value == 'string') {\n                        obj[key] = getObject(value);\n                    }\n                    else {\n                        reviveNestedObjects(value, getObject);\n                    }\n                }\n            }\n        }\n    }\n}\nfunction getObjectImpl(id, elements, objs, containerState) {\n    if (id.startsWith(ELEMENT_ID_PREFIX)) {\n        assertEqual(elements.has(id), true);\n        return elements.get(id);\n    }\n    const index = strToInt(id);\n    assertEqual(objs.length > index, true);\n    const obj = objs[index];\n    const needsProxy = id.endsWith('!');\n    if (needsProxy && containerState) {\n        return containerState.proxyMap.get(obj) ?? readWriteProxy(obj, containerState);\n    }\n    return obj;\n}\nfunction normalizeObj(obj, doc) {\n    if (obj === doc) {\n        return DOCUMENT_PREFIX;\n    }\n    if (obj === undefined || !shouldSerialize(obj)) {\n        return UNDEFINED_PREFIX;\n    }\n    return getProxyTarget(obj) ?? obj;\n}\nfunction collectValue(obj, collector) {\n    const handled = collectQObjects(obj, collector);\n    if (!handled) {\n        collector.objSet.add(normalizeObj(obj, collector.doc));\n    }\n}\nfunction collectProps(el, props, collector) {\n    const subs = props && typeof props === 'object' && props[QOjectSubsSymbol];\n    if (subs && subs.has(el)) {\n        // The host element read the props\n        collectElement(el, collector);\n    }\n}\nfunction createCollector(doc, proxyMap) {\n    return {\n        seen: new Set(),\n        objSet: new Set(),\n        elements: [],\n        watches: [],\n        proxyMap,\n        doc,\n    };\n}\nfunction collectQrl(obj, collector) {\n    if (collector.seen.has(obj)) {\n        return true;\n    }\n    collector.seen.add(obj);\n    collector.objSet.add(normalizeObj(obj, collector.doc));\n    if (obj.captureRef) {\n        obj.captureRef.forEach((obj) => collectValue(obj, collector));\n    }\n}\nfunction collectElement(el, collector) {\n    if (collector.seen.has(el)) {\n        return;\n    }\n    collector.seen.add(el);\n    const ctx = tryGetContext(el);\n    if (ctx) {\n        collector.elements.push(el);\n        if (ctx.props) {\n            collectValue(ctx.props, collector);\n        }\n        if (ctx.renderQrl) {\n            collectValue(ctx.renderQrl, collector);\n        }\n        ctx.seq.forEach((obj) => {\n            collectValue(obj, collector);\n        });\n        ctx.refMap.array.forEach((obj) => {\n            collectValue(obj, collector);\n        });\n        ctx.watches.forEach((watch) => {\n            collectValue(watch, collector);\n        });\n        if (ctx.contexts) {\n            ctx.contexts.forEach((obj) => {\n                collectValue(obj, collector);\n            });\n        }\n    }\n}\nexport function escapeText(str) {\n    return str.replace(/<(\\/?script)/g, '\\\\x3C$1');\n}\nexport function unescapeText(str) {\n    return str.replace(/\\\\x3C(\\/?script)/g, '<$1');\n}\nfunction collectSubscriptions(subs, collector) {\n    if (collector.seen.has(subs)) {\n        return;\n    }\n    collector.seen.add(subs);\n    Array.from(subs.keys()).forEach((key) => {\n        if (isElement(key)) {\n            collectElement(key, collector);\n        }\n        else {\n            collectValue(key, collector);\n        }\n    });\n}\nfunction collectQObjects(obj, collector) {\n    if (obj != null) {\n        if (typeof obj === 'object') {\n            const hasTarget = !!obj[QOjectTargetSymbol];\n            if (!hasTarget && isNode(obj)) {\n                if (obj.nodeType === 1) {\n                    return true;\n                }\n                return false;\n            }\n            if (isQrl(obj)) {\n                collectQrl(obj, collector);\n                return true;\n            }\n            const proxied = hasTarget ? obj : collector.proxyMap.get(obj);\n            const subs = proxied?.[QOjectSubsSymbol];\n            if (subs) {\n                collectSubscriptions(subs, collector);\n            }\n            obj = normalizeObj(obj, collector.doc);\n        }\n        if (typeof obj === 'object') {\n            if (collector.seen.has(obj)) {\n                return true;\n            }\n            collector.seen.add(obj);\n            collector.objSet.add(obj);\n            if (Array.isArray(obj)) {\n                for (let i = 0; i < obj.length; i++) {\n                    collectQObjects(obj[i], collector);\n                }\n            }\n            else {\n                for (const key in obj) {\n                    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                        collectQObjects(obj[key], collector);\n                    }\n                }\n            }\n            return true;\n        }\n        if (typeof obj === 'string') {\n            collector.objSet.add(obj);\n            return true;\n        }\n    }\n    return false;\n}\nexport function getProxyTarget(obj) {\n    if (obj !== null && typeof obj === 'object') {\n        return obj[QOjectTargetSymbol];\n    }\n    return undefined;\n}\nexport function isContainer(el) {\n    return el.hasAttribute(QContainerAttr);\n}\nfunction hasQId(el) {\n    return el.hasAttribute(ELEMENT_ID);\n}\nexport const intToStr = (nu) => {\n    return nu.toString(36);\n};\nexport const strToInt = (nu) => {\n    return parseInt(nu, 36);\n};\n//# sourceMappingURL=data:application/json;base64,","export function newQObjectMap() {\n    const array = [];\n    return {\n        array,\n        get(index) {\n            return array[index];\n        },\n        indexOf(obj) {\n            const index = array.indexOf(obj);\n            return index === -1 ? undefined : index;\n        },\n        add(object) {\n            const index = array.indexOf(object);\n            if (index === -1) {\n                array.push(object);\n                return array.length - 1;\n            }\n            return index;\n        },\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvcHMtb2JqLW1hcC5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvcXdpay9zcmMvY29yZS9wcm9wcy9wcm9wcy1vYmotbWFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVNBLE1BQU0sVUFBVSxhQUFhO0lBQzNCLE1BQU0sS0FBSyxHQUFtQixFQUFFLENBQUM7SUFDakMsT0FBTztRQUNMLEtBQUs7UUFDTCxHQUFHLENBQUMsS0FBYTtZQUNmLE9BQU8sS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3RCLENBQUM7UUFDRCxPQUFPLENBQUMsR0FBVztZQUNqQixNQUFNLEtBQUssR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ2pDLE9BQU8sS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztRQUMxQyxDQUFDO1FBQ0QsR0FBRyxDQUFDLE1BQW9CO1lBQ3RCLE1BQU0sS0FBSyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDcEMsSUFBSSxLQUFLLEtBQUssQ0FBQyxDQUFDLEVBQUU7Z0JBQ2hCLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7Z0JBQ25CLE9BQU8sS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7YUFDekI7WUFDRCxPQUFPLEtBQUssQ0FBQztRQUNmLENBQUM7S0FDWSxDQUFDO0FBQ2xCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFFPYmplY3QgfSBmcm9tICcuLi9vYmplY3QvcS1vYmplY3QnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFFPYmplY3RNYXAge1xuICBhZGQocU9iamVjdDogUU9iamVjdDxhbnk+KTogbnVtYmVyO1xuICBnZXQoaW5kZXg6IG51bWJlcik6IFFPYmplY3Q8YW55PiB8IHVuZGVmaW5lZDtcbiAgaW5kZXhPZihvYmplY3Q6IFFPYmplY3Q8YW55Pik6IG51bWJlciB8IHVuZGVmaW5lZDtcbiAgcmVhZG9ubHkgYXJyYXk6IFFPYmplY3Q8YW55PltdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbmV3UU9iamVjdE1hcCgpOiBRT2JqZWN0TWFwIHtcbiAgY29uc3QgYXJyYXk6IFFPYmplY3Q8YW55PltdID0gW107XG4gIHJldHVybiB7XG4gICAgYXJyYXksXG4gICAgZ2V0KGluZGV4OiBudW1iZXIpOiBRT2JqZWN0PGFueT4gfCB1bmRlZmluZWQge1xuICAgICAgcmV0dXJuIGFycmF5W2luZGV4XTtcbiAgICB9LFxuICAgIGluZGV4T2Yob2JqOiBzdHJpbmcpOiBudW1iZXIgfCB1bmRlZmluZWQge1xuICAgICAgY29uc3QgaW5kZXggPSBhcnJheS5pbmRleE9mKG9iaik7XG4gICAgICByZXR1cm4gaW5kZXggPT09IC0xID8gdW5kZWZpbmVkIDogaW5kZXg7XG4gICAgfSxcbiAgICBhZGQob2JqZWN0OiBRT2JqZWN0PGFueT4pIHtcbiAgICAgIGNvbnN0IGluZGV4ID0gYXJyYXkuaW5kZXhPZihvYmplY3QpO1xuICAgICAgaWYgKGluZGV4ID09PSAtMSkge1xuICAgICAgICBhcnJheS5wdXNoKG9iamVjdCk7XG4gICAgICAgIHJldHVybiBhcnJheS5sZW5ndGggLSAxO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGluZGV4O1xuICAgIH0sXG4gIH0gYXMgUU9iamVjdE1hcDtcbn1cbiJdfQ==","export function fromCamelToKebabCase(text) {\n    return text.replace(/([A-Z])/g, '-$1').toLowerCase();\n}\nexport function fromKebabToCamelCase(text) {\n    return text.replace(/-./g, (x) => x[1].toUpperCase());\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FzZS5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvcXdpay9zcmMvY29yZS91dGlsL2Nhc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxVQUFVLG9CQUFvQixDQUFDLElBQVk7SUFDL0MsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztBQUN2RCxDQUFDO0FBRUQsTUFBTSxVQUFVLG9CQUFvQixDQUFDLElBQVk7SUFDL0MsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7QUFDeEQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBmcm9tQ2FtZWxUb0tlYmFiQ2FzZSh0ZXh0OiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gdGV4dC5yZXBsYWNlKC8oW0EtWl0pL2csICctJDEnKS50b0xvd2VyQ2FzZSgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZnJvbUtlYmFiVG9DYW1lbENhc2UodGV4dDogc3RyaW5nKTogc3RyaW5nIHtcbiAgcmV0dXJuIHRleHQucmVwbGFjZSgvLS4vZywgKHgpID0+IHhbMV0udG9VcHBlckNhc2UoKSk7XG59XG4iXX0=","export function stringify(value) {\n    return value == null ? null : String(value);\n}\nexport function debugStringify(value) {\n    if (value != null && typeof value == 'object') {\n        return String(value.constructor.name) + '\\n' + safeJSONStringify(value);\n    }\n    return String(value);\n}\nfunction safeJSONStringify(value) {\n    try {\n        return JSON.stringify(value, null, '  ');\n    }\n    catch (e) {\n        return String(e);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaW5naWZ5LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL3V0aWwvc3RyaW5naWZ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sVUFBVSxTQUFTLENBQUMsS0FBVTtJQUNsQyxPQUFPLEtBQUssSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzlDLENBQUM7QUFFRCxNQUFNLFVBQVUsY0FBYyxDQUFDLEtBQVU7SUFDdkMsSUFBSSxLQUFLLElBQUksSUFBSSxJQUFJLE9BQU8sS0FBSyxJQUFJLFFBQVEsRUFBRTtRQUM3QyxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksR0FBRyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUN6RTtJQUNELE9BQU8sTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3ZCLENBQUM7QUFFRCxTQUFTLGlCQUFpQixDQUFDLEtBQVU7SUFDbkMsSUFBSTtRQUNGLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0tBQzFDO0lBQUMsT0FBTyxDQUFDLEVBQUU7UUFDVixPQUFPLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNsQjtBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gc3RyaW5naWZ5KHZhbHVlOiBhbnkpOiBzdHJpbmcgfCBudWxsIHtcbiAgcmV0dXJuIHZhbHVlID09IG51bGwgPyBudWxsIDogU3RyaW5nKHZhbHVlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRlYnVnU3RyaW5naWZ5KHZhbHVlOiBhbnkpOiBzdHJpbmcge1xuICBpZiAodmFsdWUgIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gU3RyaW5nKHZhbHVlLmNvbnN0cnVjdG9yLm5hbWUpICsgJ1xcbicgKyBzYWZlSlNPTlN0cmluZ2lmeSh2YWx1ZSk7XG4gIH1cbiAgcmV0dXJuIFN0cmluZyh2YWx1ZSk7XG59XG5cbmZ1bmN0aW9uIHNhZmVKU09OU3RyaW5naWZ5KHZhbHVlOiBhbnkpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkodmFsdWUsIG51bGwsICcgICcpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIFN0cmluZyhlKTtcbiAgfVxufVxuIl19","import { getPlatform } from '../platform/platform';\nimport { parseQRL, stringifyQRL } from '../import/qrl';\nimport { isSameQRL } from '../import/qrl-class';\nimport { fromCamelToKebabCase } from '../util/case';\nimport { EMPTY_ARRAY } from '../util/flyweight';\nimport { isPromise } from '../util/promises';\nimport { debugStringify } from '../util/stringify';\nimport { setAttribute } from '../render/cursor';\nconst ON_PROP_REGEX = /^(window:|document:|)on([A-Z]|-.).*Qrl$/;\nconst ON$_PROP_REGEX = /^(window:|document:|)on([A-Z]|-.).*\\$$/;\nexport function isOnProp(prop) {\n    return ON_PROP_REGEX.test(prop);\n}\nexport function isOn$Prop(prop) {\n    return ON$_PROP_REGEX.test(prop);\n}\nexport function qPropWriteQRL(rctx, ctx, prop, value) {\n    if (!value) {\n        return;\n    }\n    if (!ctx.listeners) {\n        ctx.listeners = getDomListeners(ctx.element);\n    }\n    const kebabProp = fromCamelToKebabCase(prop);\n    const existingListeners = ctx.listeners.get(kebabProp) || [];\n    const newQRLs = Array.isArray(value) ? value : [value];\n    for (const value of newQRLs) {\n        const cp = value.copy();\n        cp.setContainer(ctx.element);\n        const capture = cp.capture;\n        if (capture == null) {\n            // we need to serialize the lexical scope references\n            const captureRef = cp.captureRef;\n            cp.capture =\n                captureRef && captureRef.length\n                    ? captureRef.map((ref) => String(ctx.refMap.add(ref)))\n                    : EMPTY_ARRAY;\n        }\n        // Important we modify the array as it is cached.\n        for (let i = 0; i < existingListeners.length; i++) {\n            const qrl = existingListeners[i];\n            if (isSameQRL(qrl, cp)) {\n                existingListeners.splice(i, 1);\n                i--;\n            }\n        }\n        existingListeners.push(cp);\n    }\n    ctx.listeners.set(kebabProp, existingListeners);\n    const newValue = serializeQRLs(existingListeners, ctx);\n    if (ctx.element.getAttribute(kebabProp) !== newValue) {\n        if (rctx) {\n            setAttribute(rctx, ctx.element, kebabProp, newValue);\n        }\n        else {\n            ctx.element.setAttribute(kebabProp, newValue);\n        }\n    }\n}\nexport function closureRefError(ref) {\n    return new Error(`QWIK-ERROR: A closure can only lexically capture 'QObject' and 'QProp' const references. Got: ` +\n        debugStringify(ref));\n}\nexport function getDomListeners(el) {\n    const attributes = el.attributes;\n    const listeners = new Map();\n    for (let i = 0; i < attributes.length; i++) {\n        const attr = attributes.item(i);\n        if (attr.name.startsWith('on:') ||\n            attr.name.startsWith('on-window:') ||\n            attr.name.startsWith('on-document:')) {\n            let array = listeners.get(attr.name);\n            if (!array) {\n                listeners.set(attr.name, (array = []));\n            }\n            array.push(parseQRL(attr.value, el));\n        }\n    }\n    return listeners;\n}\nfunction serializeQRLs(existingQRLs, ctx) {\n    const platform = getPlatform(ctx.element);\n    const element = ctx.element;\n    const opts = {\n        platform,\n        element,\n    };\n    return existingQRLs\n        .map((qrl) => (isPromise(qrl) ? '' : stringifyQRL(qrl, opts)))\n        .filter((v) => !!v)\n        .join('\\n');\n}\n//# sourceMappingURL=data:application/json;base64,","import { getDocument } from '../util/dom';\nimport { isDocument } from '../util/element';\nimport { QContainerAttr } from '../util/markers';\nimport { qDev } from '../util/qdev';\nimport { escapeText, snapshotState } from './store';\n// <docs markdown=\"../readme.md#pauseContainer\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#pauseContainer instead)\n/**\n * Serialize the current state of the application into DOM\n *\n * @alpha\n */\n// </docs>\nexport function pauseContainer(elmOrDoc) {\n    const doc = getDocument(elmOrDoc);\n    const containerEl = isDocument(elmOrDoc) ? elmOrDoc.documentElement : elmOrDoc;\n    const parentJSON = isDocument(elmOrDoc) ? elmOrDoc.body : containerEl;\n    const data = snapshotState(containerEl);\n    const script = doc.createElement('script');\n    script.setAttribute('type', 'qwik/json');\n    script.textContent = escapeText(JSON.stringify(data.state, undefined, qDev ? '  ' : undefined));\n    parentJSON.appendChild(script);\n    containerEl.setAttribute(QContainerAttr, 'paused');\n    return data;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmUucHVibGljLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL29iamVjdC9zdG9yZS5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMxQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDN0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDcEMsT0FBTyxFQUFFLFVBQVUsRUFBRSxhQUFhLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFHcEQsZ0RBQWdEO0FBQ2hELHlDQUF5QztBQUN6Qyw2Q0FBNkM7QUFDN0M7Ozs7R0FJRztBQUNILFVBQVU7QUFDVixNQUFNLFVBQVUsY0FBYyxDQUFDLFFBQTRCO0lBQ3pELE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNsQyxNQUFNLFdBQVcsR0FBRyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztJQUMvRSxNQUFNLFVBQVUsR0FBRyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQztJQUN0RSxNQUFNLElBQUksR0FBRyxhQUFhLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDeEMsTUFBTSxNQUFNLEdBQUcsR0FBRyxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUMzQyxNQUFNLENBQUMsWUFBWSxDQUFDLE1BQU0sRUFBRSxXQUFXLENBQUMsQ0FBQztJQUN6QyxNQUFNLENBQUMsV0FBVyxHQUFHLFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO0lBQ2hHLFVBQVUsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDL0IsV0FBVyxDQUFDLFlBQVksQ0FBQyxjQUFjLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDbkQsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0RG9jdW1lbnQgfSBmcm9tICcuLi91dGlsL2RvbSc7XG5pbXBvcnQgeyBpc0RvY3VtZW50IH0gZnJvbSAnLi4vdXRpbC9lbGVtZW50JztcbmltcG9ydCB7IFFDb250YWluZXJBdHRyIH0gZnJvbSAnLi4vdXRpbC9tYXJrZXJzJztcbmltcG9ydCB7IHFEZXYgfSBmcm9tICcuLi91dGlsL3FkZXYnO1xuaW1wb3J0IHsgZXNjYXBlVGV4dCwgc25hcHNob3RTdGF0ZSB9IGZyb20gJy4vc3RvcmUnO1xuaW1wb3J0IHR5cGUgeyBTbmFwc2hvdFN0YXRlLCBTbmFwc2hvdFJlc3VsdCB9IGZyb20gJy4vc3RvcmUnO1xuXG4vLyA8ZG9jcyBtYXJrZG93bj1cIi4uL3JlYWRtZS5tZCNwYXVzZUNvbnRhaW5lclwiPlxuLy8gISFETyBOT1QgRURJVCBUSElTIENPTU1FTlQgRElSRUNUTFkhISFcbi8vIChlZGl0IC4uL3JlYWRtZS5tZCNwYXVzZUNvbnRhaW5lciBpbnN0ZWFkKVxuLyoqXG4gKiBTZXJpYWxpemUgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGFwcGxpY2F0aW9uIGludG8gRE9NXG4gKlxuICogQGFscGhhXG4gKi9cbi8vIDwvZG9jcz5cbmV4cG9ydCBmdW5jdGlvbiBwYXVzZUNvbnRhaW5lcihlbG1PckRvYzogRWxlbWVudCB8IERvY3VtZW50KTogU25hcHNob3RSZXN1bHQge1xuICBjb25zdCBkb2MgPSBnZXREb2N1bWVudChlbG1PckRvYyk7XG4gIGNvbnN0IGNvbnRhaW5lckVsID0gaXNEb2N1bWVudChlbG1PckRvYykgPyBlbG1PckRvYy5kb2N1bWVudEVsZW1lbnQgOiBlbG1PckRvYztcbiAgY29uc3QgcGFyZW50SlNPTiA9IGlzRG9jdW1lbnQoZWxtT3JEb2MpID8gZWxtT3JEb2MuYm9keSA6IGNvbnRhaW5lckVsO1xuICBjb25zdCBkYXRhID0gc25hcHNob3RTdGF0ZShjb250YWluZXJFbCk7XG4gIGNvbnN0IHNjcmlwdCA9IGRvYy5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcbiAgc2NyaXB0LnNldEF0dHJpYnV0ZSgndHlwZScsICdxd2lrL2pzb24nKTtcbiAgc2NyaXB0LnRleHRDb250ZW50ID0gZXNjYXBlVGV4dChKU09OLnN0cmluZ2lmeShkYXRhLnN0YXRlLCB1bmRlZmluZWQsIHFEZXYgPyAnICAnIDogdW5kZWZpbmVkKSk7XG4gIHBhcmVudEpTT04uYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbiAgY29udGFpbmVyRWwuc2V0QXR0cmlidXRlKFFDb250YWluZXJBdHRyLCAncGF1c2VkJyk7XG4gIHJldHVybiBkYXRhO1xufVxuXG5leHBvcnQgdHlwZSB7IFNuYXBzaG90U3RhdGUsIFNuYXBzaG90UmVzdWx0IH07XG4iXX0=","import { isMutable, QOjectAllSymbol, QOjectOriginalProxy, QOjectSubsSymbol, QOjectTargetSymbol, readWriteProxy, } from '../object/q-object';\nimport { getProxyTarget, resumeContainer } from '../object/store';\nimport { newQObjectMap } from './props-obj-map';\nimport { qPropWriteQRL } from './props-on';\nimport { QContainerAttr } from '../util/markers';\nimport { destroyWatch } from '../watch/watch.public';\nimport { pauseContainer } from '../object/store.public';\nimport { getContainerState } from '../render/notify-render';\nimport { qDev } from '../util/qdev';\nimport { logError } from '../util/log';\nimport { unwrapSubscriber } from '../use/use-subscriber';\nimport { isQrl } from '../import/qrl-class';\nError.stackTraceLimit = 9999;\nconst Q_CTX = '__ctx__';\nexport function resumeIfNeeded(containerEl) {\n    const isResumed = containerEl.getAttribute(QContainerAttr);\n    if (isResumed === 'paused') {\n        resumeContainer(containerEl);\n        if (qDev) {\n            appendQwikDevTools(containerEl);\n        }\n    }\n}\nexport function appendQwikDevTools(containerEl) {\n    containerEl['qwik'] = {\n        pause: () => pauseContainer(containerEl),\n        state: getContainerState(containerEl),\n    };\n}\nexport function tryGetContext(element) {\n    return element[Q_CTX];\n}\nexport function getContext(element) {\n    let ctx = tryGetContext(element);\n    if (!ctx) {\n        const cache = new Map();\n        element[Q_CTX] = ctx = {\n            element,\n            cache,\n            refMap: newQObjectMap(),\n            dirty: false,\n            seq: [],\n            watches: [],\n            props: undefined,\n            renderQrl: undefined,\n            component: undefined,\n        };\n    }\n    return ctx;\n}\nexport function cleanupContext(ctx, subsManager) {\n    const el = ctx.element;\n    ctx.watches.forEach((watch) => {\n        subsManager.clearSub(watch);\n        destroyWatch(watch);\n    });\n    if (ctx.renderQrl) {\n        subsManager.clearSub(el);\n    }\n    ctx.component = undefined;\n    ctx.renderQrl = undefined;\n    ctx.seq.length = 0;\n    ctx.watches.length = 0;\n    ctx.cache.clear();\n    ctx.dirty = false;\n    ctx.refMap.array.length = 0;\n    el[Q_CTX] = undefined;\n}\nconst PREFIXES = ['document:on', 'window:on', 'on'];\nconst SCOPED = ['on-document', 'on-window', 'on'];\nexport function normalizeOnProp(prop) {\n    let scope = 'on';\n    for (let i = 0; i < PREFIXES.length; i++) {\n        const prefix = PREFIXES[i];\n        if (prop.startsWith(prefix)) {\n            scope = SCOPED[i];\n            prop = prop.slice(prefix.length);\n        }\n    }\n    if (prop.startsWith('-')) {\n        prop = prop.slice(1);\n    }\n    else {\n        prop = prop.toLowerCase();\n    }\n    return `${scope}:${prop}`;\n}\nexport function setEvent(rctx, ctx, prop, value) {\n    qPropWriteQRL(rctx, ctx, normalizeOnProp(prop), value);\n}\nexport function createProps(target, el, containerState) {\n    const manager = containerState.subsManager.getLocal(target);\n    return new Proxy(target, new PropsProxyHandler(el, containerState, manager));\n}\nexport function getPropsMutator(ctx, containerState) {\n    let props = ctx.props;\n    if (!ctx.props) {\n        ctx.props = props = createProps({}, ctx.element, containerState);\n    }\n    const target = getProxyTarget(props);\n    const manager = containerState.subsManager.getLocal(target);\n    return {\n        set(prop, value) {\n            const didSet = prop in target;\n            let oldValue = target[prop];\n            let mut = false;\n            if (isMutable(oldValue)) {\n                oldValue = oldValue.v;\n            }\n            value = unwrapSubscriber(value);\n            target[prop] = value;\n            if (isMutable(value)) {\n                value = value.v;\n                mut = true;\n            }\n            if (oldValue !== value) {\n                if (qDev) {\n                    if (didSet && !mut && !isQrl(value)) {\n                        const displayName = ctx.renderQrl?.getSymbol() ?? ctx.element.localName;\n                        logError(`Props are immutable by default. If you need to change a value of a passed in prop, please wrap the prop with \"mutable()\" <${displayName} ${prop}={mutable(...)}>`, '\\n - Component:', displayName, '\\n - Prop:', prop, '\\n - Old value:', oldValue, '\\n - New value:', value);\n                    }\n                }\n                manager.notifySubs(prop);\n            }\n        },\n    };\n}\nclass PropsProxyHandler {\n    constructor(hostElement, containerState, manager) {\n        this.hostElement = hostElement;\n        this.containerState = containerState;\n        this.manager = manager;\n    }\n    get(target, prop) {\n        if (typeof prop === 'symbol') {\n            return target[prop];\n        }\n        if (prop === QOjectTargetSymbol)\n            return target;\n        if (prop === QOjectSubsSymbol)\n            return this.manager.subs;\n        if (prop === QOjectOriginalProxy)\n            return readWriteProxy(target, this.containerState);\n        if (prop === QOjectAllSymbol) {\n            this.manager.addSub(this.hostElement);\n            return target;\n        }\n        const value = target[prop];\n        if (typeof prop === 'symbol') {\n            return value;\n        }\n        if (isMutable(value)) {\n            this.manager.addSub(this.hostElement, prop);\n            return value.v;\n        }\n        return value;\n    }\n    set() {\n        throw new Error('props are inmutable');\n    }\n    has(target, property) {\n        if (property === QOjectTargetSymbol)\n            return true;\n        if (property === QOjectSubsSymbol)\n            return true;\n        return Object.prototype.hasOwnProperty.call(target, property);\n    }\n    ownKeys(target) {\n        const subscriber = this.hostElement;\n        this.manager.addSub(subscriber);\n        return Object.getOwnPropertyNames(target);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * Place at the root of the component View to allow binding of attributes on the Host element.\n *\n * ```\n * <Host someAttr={someExpr} someAttrStatic=\"value\">\n *   View content implementation.\n * </Host>\n * ```\n *\n * Qwik requires that components have [docs/HOST_ELEMENTS.ts] so that it is possible to have\n * asynchronous loading point. Host element is not owned by the component. At times it is\n * desirable for the component to render additional attributes on the host element. `<Host>`\n * servers that purpose.\n * @public\n */\nexport const Host = { __brand__: 'host' };\n/**\n * @public\n */\nexport const SkipRerender = { __brand__: 'skip' };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG9zdC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL3F3aWsvc3JjL2NvcmUvcmVuZGVyL2pzeC9ob3N0LnB1YmxpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTs7Ozs7Ozs7Ozs7Ozs7R0FjRztBQUNILE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBbUQsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFTLENBQUM7QUFFakc7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQTBCLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBUyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBIVE1MQXR0cmlidXRlcyB9IGZyb20gJy4vdHlwZXMvanN4LWdlbmVyYXRlZCc7XG5pbXBvcnQgdHlwZSB7IEZ1bmN0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi90eXBlcy9qc3gtbm9kZSc7XG5cbi8qKlxuICogUGxhY2UgYXQgdGhlIHJvb3Qgb2YgdGhlIGNvbXBvbmVudCBWaWV3IHRvIGFsbG93IGJpbmRpbmcgb2YgYXR0cmlidXRlcyBvbiB0aGUgSG9zdCBlbGVtZW50LlxuICpcbiAqIGBgYFxuICogPEhvc3Qgc29tZUF0dHI9e3NvbWVFeHByfSBzb21lQXR0clN0YXRpYz1cInZhbHVlXCI+XG4gKiAgIFZpZXcgY29udGVudCBpbXBsZW1lbnRhdGlvbi5cbiAqIDwvSG9zdD5cbiAqIGBgYFxuICpcbiAqIFF3aWsgcmVxdWlyZXMgdGhhdCBjb21wb25lbnRzIGhhdmUgW2RvY3MvSE9TVF9FTEVNRU5UUy50c10gc28gdGhhdCBpdCBpcyBwb3NzaWJsZSB0byBoYXZlXG4gKiBhc3luY2hyb25vdXMgbG9hZGluZyBwb2ludC4gSG9zdCBlbGVtZW50IGlzIG5vdCBvd25lZCBieSB0aGUgY29tcG9uZW50LiBBdCB0aW1lcyBpdCBpc1xuICogZGVzaXJhYmxlIGZvciB0aGUgY29tcG9uZW50IHRvIHJlbmRlciBhZGRpdGlvbmFsIGF0dHJpYnV0ZXMgb24gdGhlIGhvc3QgZWxlbWVudC4gYDxIb3N0PmBcbiAqIHNlcnZlcnMgdGhhdCBwdXJwb3NlLlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgY29uc3QgSG9zdDogRnVuY3Rpb25Db21wb25lbnQ8SFRNTEF0dHJpYnV0ZXM8SFRNTEVsZW1lbnQ+PiA9IHsgX19icmFuZF9fOiAnaG9zdCcgfSBhcyBhbnk7XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgY29uc3QgU2tpcFJlcmVuZGVyOiBGdW5jdGlvbkNvbXBvbmVudDx7fT4gPSB7IF9fYnJhbmRfXzogJ3NraXAnIH0gYXMgYW55O1xuIl19","import { Host } from '../render/jsx/host.public';\nimport { getContext } from '../props/props';\nimport { smartUpdateChildren, updateProperties } from './cursor';\nexport function visitJsxNode(ctx, elm, jsxNode, isSvg) {\n    if (jsxNode === undefined) {\n        return smartUpdateChildren(ctx, elm, [], 'root', isSvg);\n    }\n    if (Array.isArray(jsxNode)) {\n        return smartUpdateChildren(ctx, elm, jsxNode.flat(), 'root', isSvg);\n    }\n    else if (jsxNode.type === Host) {\n        updateProperties(ctx, getContext(elm), jsxNode.props, isSvg);\n        return smartUpdateChildren(ctx, elm, jsxNode.children || [], 'root', isSvg);\n    }\n    else {\n        return smartUpdateChildren(ctx, elm, [jsxNode], 'root', isSvg);\n    }\n}\nexport function whileResolvingRender(...args) {\n    throw new Error('Function not implemented.' + args);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVuZGVyLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL3JlbmRlci9yZW5kZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU1QyxPQUFPLEVBQWlCLG1CQUFtQixFQUFFLGdCQUFnQixFQUFFLE1BQU0sVUFBVSxDQUFDO0FBSWhGLE1BQU0sVUFBVSxZQUFZLENBQzFCLEdBQWtCLEVBQ2xCLEdBQVksRUFDWixPQUF3QyxFQUN4QyxLQUFjO0lBRWQsSUFBSSxPQUFPLEtBQUssU0FBUyxFQUFFO1FBQ3pCLE9BQU8sbUJBQW1CLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0tBQ3pEO0lBQ0QsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQzFCLE9BQU8sbUJBQW1CLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0tBQ3JFO1NBQU0sSUFBSSxPQUFPLENBQUMsSUFBSSxLQUFLLElBQUksRUFBRTtRQUNoQyxnQkFBZ0IsQ0FBQyxHQUFHLEVBQUUsVUFBVSxDQUFDLEdBQUcsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDN0QsT0FBTyxtQkFBbUIsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLE9BQU8sQ0FBQyxRQUFRLElBQUksRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztLQUM3RTtTQUFNO1FBQ0wsT0FBTyxtQkFBbUIsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLEVBQUUsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0tBQ2hFO0FBQ0gsQ0FBQztBQUVELE1BQU0sVUFBVSxvQkFBb0IsQ0FDbEMsR0FBRyxJQUF1RDtJQUUxRCxNQUFNLElBQUksS0FBSyxDQUFDLDJCQUEyQixHQUFHLElBQUksQ0FBQyxDQUFDO0FBQ3RELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIb3N0IH0gZnJvbSAnLi4vcmVuZGVyL2pzeC9ob3N0LnB1YmxpYyc7XG5pbXBvcnQgeyBnZXRDb250ZXh0IH0gZnJvbSAnLi4vcHJvcHMvcHJvcHMnO1xuaW1wb3J0IHR5cGUgeyBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJy4uL3V0aWwvdHlwZXMnO1xuaW1wb3J0IHsgUmVuZGVyQ29udGV4dCwgc21hcnRVcGRhdGVDaGlsZHJlbiwgdXBkYXRlUHJvcGVydGllcyB9IGZyb20gJy4vY3Vyc29yJztcbmltcG9ydCB0eXBlIHsgSlNYTm9kZSB9IGZyb20gJy4vanN4L3R5cGVzL2pzeC1ub2RlJztcbmV4cG9ydCB0eXBlIENvbXBvbmVudFJlbmRlclF1ZXVlID0gUHJvbWlzZTxIVE1MRWxlbWVudFtdPltdO1xuXG5leHBvcnQgZnVuY3Rpb24gdmlzaXRKc3hOb2RlKFxuICBjdHg6IFJlbmRlckNvbnRleHQsXG4gIGVsbTogRWxlbWVudCxcbiAganN4Tm9kZTogSlNYTm9kZSB8IEpTWE5vZGVbXSB8IHVuZGVmaW5lZCxcbiAgaXNTdmc6IGJvb2xlYW5cbik6IFZhbHVlT3JQcm9taXNlPHZvaWQ+IHtcbiAgaWYgKGpzeE5vZGUgPT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiBzbWFydFVwZGF0ZUNoaWxkcmVuKGN0eCwgZWxtLCBbXSwgJ3Jvb3QnLCBpc1N2Zyk7XG4gIH1cbiAgaWYgKEFycmF5LmlzQXJyYXkoanN4Tm9kZSkpIHtcbiAgICByZXR1cm4gc21hcnRVcGRhdGVDaGlsZHJlbihjdHgsIGVsbSwganN4Tm9kZS5mbGF0KCksICdyb290JywgaXNTdmcpO1xuICB9IGVsc2UgaWYgKGpzeE5vZGUudHlwZSA9PT0gSG9zdCkge1xuICAgIHVwZGF0ZVByb3BlcnRpZXMoY3R4LCBnZXRDb250ZXh0KGVsbSksIGpzeE5vZGUucHJvcHMsIGlzU3ZnKTtcbiAgICByZXR1cm4gc21hcnRVcGRhdGVDaGlsZHJlbihjdHgsIGVsbSwganN4Tm9kZS5jaGlsZHJlbiB8fCBbXSwgJ3Jvb3QnLCBpc1N2Zyk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHNtYXJ0VXBkYXRlQ2hpbGRyZW4oY3R4LCBlbG0sIFtqc3hOb2RlXSwgJ3Jvb3QnLCBpc1N2Zyk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHdoaWxlUmVzb2x2aW5nUmVuZGVyPEFSR1MgZXh0ZW5kcyBhbnlbXSwgUkVUPihcbiAgLi4uYXJnczogWy4uLkFSR1MsICguLi5hcmdzOiBSZXNvbHZlZFZhbHVlczxBUkdTPikgPT4gUkVUXVxuKTogUkVUIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdGdW5jdGlvbiBub3QgaW1wbGVtZW50ZWQuJyArIGFyZ3MpO1xufVxuXG5leHBvcnQgdHlwZSBSZXNvbHZlZFZhbHVlczxBUkdTIGV4dGVuZHMgYW55W10+ID0ge1xuICBbSyBpbiBrZXlvZiBBUkdTXTogQVJHU1tLXSBleHRlbmRzIFZhbHVlT3JQcm9taXNlPGluZmVyIFU+ID8gVSA6IEFSR1NbS107XG59O1xuIl19","export function hashCode(text, hash = 0) {\n    if (text.length === 0)\n        return hash;\n    for (let i = 0; i < text.length; i++) {\n        const chr = text.charCodeAt(i);\n        hash = (hash << 5) - hash + chr;\n        hash |= 0; // Convert to 32bit integer\n    }\n    return Number(Math.abs(hash)).toString(36);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFzaF9jb2RlLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJwYWNrYWdlcy9xd2lrL3NyYy9jb3JlL3V0aWwvaGFzaF9jb2RlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sVUFBVSxRQUFRLENBQUMsSUFBWSxFQUFFLE9BQWUsQ0FBQztJQUNyRCxJQUFJLElBQUksQ0FBQyxNQUFNLEtBQUssQ0FBQztRQUFFLE9BQU8sSUFBSSxDQUFDO0lBQ25DLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ3BDLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDL0IsSUFBSSxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksR0FBRyxHQUFHLENBQUM7UUFDaEMsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLDJCQUEyQjtLQUN2QztJQUNELE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDN0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBoYXNoQ29kZSh0ZXh0OiBzdHJpbmcsIGhhc2g6IG51bWJlciA9IDApIHtcbiAgaWYgKHRleHQubGVuZ3RoID09PSAwKSByZXR1cm4gaGFzaDtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB0ZXh0Lmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgY2hyID0gdGV4dC5jaGFyQ29kZUF0KGkpO1xuICAgIGhhc2ggPSAoaGFzaCA8PCA1KSAtIGhhc2ggKyBjaHI7XG4gICAgaGFzaCB8PSAwOyAvLyBDb252ZXJ0IHRvIDMyYml0IGludGVnZXJcbiAgfVxuICByZXR1cm4gTnVtYmVyKE1hdGguYWJzKGhhc2gpKS50b1N0cmluZygzNik7XG59XG4iXX0=","import { ComponentStylesPrefixContent, ComponentStylesPrefixHost } from '../util/markers';\nimport { hashCode } from '../util/hash_code';\nexport function styleKey(qStyles) {\n    return qStyles && String(hashCode(qStyles.getCanonicalSymbol()));\n}\nexport function styleHost(styleId) {\n    return styleId && ComponentStylesPrefixHost + styleId;\n}\nexport function styleContent(styleId) {\n    return styleId && ComponentStylesPrefixContent + styleId;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXJsLXN0eWxlcy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvcXdpay9zcmMvY29yZS9jb21wb25lbnQvcXJsLXN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMxRixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFPN0MsTUFBTSxVQUFVLFFBQVEsQ0FBQyxPQUFtQztJQUMxRCxPQUFPLE9BQU8sSUFBSSxNQUFNLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUNuRSxDQUFDO0FBT0QsTUFBTSxVQUFVLFNBQVMsQ0FBQyxPQUEyQjtJQUNuRCxPQUFPLE9BQU8sSUFBSSx5QkFBeUIsR0FBRyxPQUFPLENBQUM7QUFDeEQsQ0FBQztBQU9ELE1BQU0sVUFBVSxZQUFZLENBQUMsT0FBMkI7SUFDdEQsT0FBTyxPQUFPLElBQUksNEJBQTRCLEdBQUcsT0FBTyxDQUFDO0FBQzNELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFFSTEludGVybmFsIH0gZnJvbSAnLi4vaW1wb3J0L3FybC1jbGFzcyc7XG5pbXBvcnQgeyBDb21wb25lbnRTdHlsZXNQcmVmaXhDb250ZW50LCBDb21wb25lbnRTdHlsZXNQcmVmaXhIb3N0IH0gZnJvbSAnLi4vdXRpbC9tYXJrZXJzJztcbmltcG9ydCB7IGhhc2hDb2RlIH0gZnJvbSAnLi4vdXRpbC9oYXNoX2NvZGUnO1xuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlS2V5KHFTdHlsZXM6IFFSTEludGVybmFsPHN0cmluZz4pOiBzdHJpbmc7XG5leHBvcnQgZnVuY3Rpb24gc3R5bGVLZXkocVN0eWxlczogUVJMSW50ZXJuYWw8c3RyaW5nPiB8IG51bGwpOiBzdHJpbmcgfCBudWxsO1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlS2V5KHFTdHlsZXM6IFFSTEludGVybmFsPHN0cmluZz4gfCBudWxsKTogc3RyaW5nIHwgbnVsbCB7XG4gIHJldHVybiBxU3R5bGVzICYmIFN0cmluZyhoYXNoQ29kZShxU3R5bGVzLmdldENhbm9uaWNhbFN5bWJvbCgpKSk7XG59XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgZnVuY3Rpb24gc3R5bGVIb3N0KHN0eWxlSWQ6IHN0cmluZyk6IHN0cmluZztcbmV4cG9ydCBmdW5jdGlvbiBzdHlsZUhvc3Qoc3R5bGVJZDogc3RyaW5nIHwgdW5kZWZpbmVkKTogc3RyaW5nIHwgdW5kZWZpbmVkO1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlSG9zdChzdHlsZUlkOiBzdHJpbmcgfCB1bmRlZmluZWQpOiBzdHJpbmcgfCB1bmRlZmluZWQge1xuICByZXR1cm4gc3R5bGVJZCAmJiBDb21wb25lbnRTdHlsZXNQcmVmaXhIb3N0ICsgc3R5bGVJZDtcbn1cblxuLyoqXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdHlsZUNvbnRlbnQoc3R5bGVJZDogc3RyaW5nKTogc3RyaW5nO1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlQ29udGVudChzdHlsZUlkOiBzdHJpbmcgfCB1bmRlZmluZWQpOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG5leHBvcnQgZnVuY3Rpb24gc3R5bGVDb250ZW50KHN0eWxlSWQ6IHN0cmluZyB8IHVuZGVmaW5lZCk6IHN0cmluZyB8IHVuZGVmaW5lZCB7XG4gIHJldHVybiBzdHlsZUlkICYmIENvbXBvbmVudFN0eWxlc1ByZWZpeENvbnRlbnQgKyBzdHlsZUlkO1xufVxuIl19","import { qDev } from '../../util/qdev';\nimport { Host, SkipRerender } from './host.public';\nimport { EMPTY_ARRAY } from '../../util/flyweight';\nimport { logWarn } from '../../util/log';\n/**\n * @public\n */\nexport function jsx(type, props, key) {\n    return new JSXNodeImpl(type, props, key);\n}\nexport class JSXNodeImpl {\n    constructor(type, props, key = null) {\n        this.type = type;\n        this.props = props;\n        this.children = EMPTY_ARRAY;\n        this.text = undefined;\n        this.key = null;\n        if (key != null) {\n            this.key = String(key);\n        }\n        if (props) {\n            const children = processNode(props.children);\n            if (children !== undefined) {\n                if (Array.isArray(children)) {\n                    this.children = children;\n                }\n                else {\n                    this.children = [children];\n                }\n            }\n        }\n    }\n}\nexport function processNode(node) {\n    if (node == null || typeof node === 'boolean') {\n        return undefined;\n    }\n    if (isJSXNode(node)) {\n        if (node.type === Host || node.type === SkipRerender) {\n            return node;\n        }\n        else if (typeof node.type === 'function') {\n            return processNode(node.type({ ...node.props, children: node.children }, node.key));\n        }\n        else {\n            return node;\n        }\n    }\n    else if (Array.isArray(node)) {\n        return node.flatMap(processNode).filter((e) => e != null);\n    }\n    else if (typeof node === 'string' || typeof node === 'number' || typeof node === 'boolean') {\n        const newNode = new JSXNodeImpl('#text', null, null);\n        newNode.text = String(node);\n        return newNode;\n    }\n    else {\n        logWarn('Unvalid node, skipping');\n        return undefined;\n    }\n}\nexport const isJSXNode = (n) => {\n    if (qDev) {\n        if (n instanceof JSXNodeImpl) {\n            return true;\n        }\n        if (n && typeof n === 'object' && n.constructor.name === JSXNodeImpl.name) {\n            throw new Error(`Duplicate implementations of \"JSXNodeImpl\" found`);\n        }\n        return false;\n    }\n    else {\n        return n instanceof JSXNodeImpl;\n    }\n};\n/**\n * @public\n */\nexport const Fragment = (props) => props.children;\nexport { jsx as jsxs, jsx as jsxDEV };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianN4LXJ1bnRpbWUuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL3F3aWsvc3JjL2NvcmUvcmVuZGVyL2pzeC9qc3gtcnVudGltZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdkMsT0FBTyxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbkQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUV6Qzs7R0FFRztBQUNILE1BQU0sVUFBVSxHQUFHLENBQ2pCLElBQU8sRUFDUCxLQUFZLEVBQ1osR0FBcUI7SUFFckIsT0FBTyxJQUFJLFdBQVcsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLEdBQUcsQ0FBUSxDQUFDO0FBQ2xELENBQUM7QUFFRCxNQUFNLE9BQU8sV0FBVztJQUt0QixZQUNTLElBQU8sRUFDUCxLQUFpQyxFQUN4QyxNQUE4QixJQUFJO1FBRjNCLFNBQUksR0FBSixJQUFJLENBQUc7UUFDUCxVQUFLLEdBQUwsS0FBSyxDQUE0QjtRQU4xQyxhQUFRLEdBQWMsV0FBVyxDQUFDO1FBQ2xDLFNBQUksR0FBd0IsU0FBUyxDQUFDO1FBQ3RDLFFBQUcsR0FBa0IsSUFBSSxDQUFDO1FBT3hCLElBQUksR0FBRyxJQUFJLElBQUksRUFBRTtZQUNmLElBQUksQ0FBQyxHQUFHLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ3hCO1FBQ0QsSUFBSSxLQUFLLEVBQUU7WUFDVCxNQUFNLFFBQVEsR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQzdDLElBQUksUUFBUSxLQUFLLFNBQVMsRUFBRTtnQkFDMUIsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFO29CQUMzQixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztpQkFDMUI7cUJBQU07b0JBQ0wsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO2lCQUM1QjthQUNGO1NBQ0Y7SUFDSCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLFVBQVUsV0FBVyxDQUFDLElBQVM7SUFDbkMsSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLE9BQU8sSUFBSSxLQUFLLFNBQVMsRUFBRTtRQUM3QyxPQUFPLFNBQVMsQ0FBQztLQUNsQjtJQUNELElBQUksU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ25CLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxJQUFJLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxZQUFZLEVBQUU7WUFDcEQsT0FBTyxJQUFJLENBQUM7U0FDYjthQUFNLElBQUksT0FBTyxJQUFJLENBQUMsSUFBSSxLQUFLLFVBQVUsRUFBRTtZQUMxQyxPQUFPLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7U0FDckY7YUFBTTtZQUNMLE9BQU8sSUFBSSxDQUFDO1NBQ2I7S0FDRjtTQUFNLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUM5QixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFjLENBQUM7S0FDeEU7U0FBTSxJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLElBQUksT0FBTyxJQUFJLEtBQUssU0FBUyxFQUFFO1FBQzVGLE1BQU0sT0FBTyxHQUFHLElBQUksV0FBVyxDQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDckQsT0FBTyxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDNUIsT0FBTyxPQUFPLENBQUM7S0FDaEI7U0FBTTtRQUNMLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO1FBQ2xDLE9BQU8sU0FBUyxDQUFDO0tBQ2xCO0FBQ0gsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxDQUFDLENBQU0sRUFBeUIsRUFBRTtJQUN6RCxJQUFJLElBQUksRUFBRTtRQUNSLElBQUksQ0FBQyxZQUFZLFdBQVcsRUFBRTtZQUM1QixPQUFPLElBQUksQ0FBQztTQUNiO1FBQ0QsSUFBSSxDQUFDLElBQUksT0FBTyxDQUFDLEtBQUssUUFBUSxJQUFJLENBQUMsQ0FBQyxXQUFXLENBQUMsSUFBSSxLQUFLLFdBQVcsQ0FBQyxJQUFJLEVBQUU7WUFDekUsTUFBTSxJQUFJLEtBQUssQ0FBQyxrREFBa0QsQ0FBQyxDQUFDO1NBQ3JFO1FBQ0QsT0FBTyxLQUFLLENBQUM7S0FDZDtTQUFNO1FBQ0wsT0FBTyxDQUFDLFlBQVksV0FBVyxDQUFDO0tBQ2pDO0FBQ0gsQ0FBQyxDQUFDO0FBRUY7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQTBDLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsUUFBZSxDQUFDO0FBSWhHLE9BQU8sRUFBRSxHQUFHLElBQUksSUFBSSxFQUFFLEdBQUcsSUFBSSxNQUFNLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgRnVuY3Rpb25Db21wb25lbnQsIEpTWE5vZGUgfSBmcm9tICcuL3R5cGVzL2pzeC1ub2RlJztcbmltcG9ydCB0eXBlIHsgUXdpa0pTWCB9IGZyb20gJy4vdHlwZXMvanN4LXF3aWsnO1xuaW1wb3J0IHsgcURldiB9IGZyb20gJy4uLy4uL3V0aWwvcWRldic7XG5pbXBvcnQgeyBIb3N0LCBTa2lwUmVyZW5kZXIgfSBmcm9tICcuL2hvc3QucHVibGljJztcbmltcG9ydCB7IEVNUFRZX0FSUkFZIH0gZnJvbSAnLi4vLi4vdXRpbC9mbHl3ZWlnaHQnO1xuaW1wb3J0IHsgbG9nV2FybiB9IGZyb20gJy4uLy4uL3V0aWwvbG9nJztcblxuLyoqXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBqc3g8VCBleHRlbmRzIHN0cmluZyB8IEZ1bmN0aW9uQ29tcG9uZW50PFBST1BTPiwgUFJPUFM+KFxuICB0eXBlOiBULFxuICBwcm9wczogUFJPUFMsXG4gIGtleT86IHN0cmluZyB8IG51bWJlclxuKTogSlNYTm9kZTxUPiB7XG4gIHJldHVybiBuZXcgSlNYTm9kZUltcGwodHlwZSwgcHJvcHMsIGtleSkgYXMgYW55O1xufVxuXG5leHBvcnQgY2xhc3MgSlNYTm9kZUltcGw8VD4gaW1wbGVtZW50cyBKU1hOb2RlPFQ+IHtcbiAgY2hpbGRyZW46IEpTWE5vZGVbXSA9IEVNUFRZX0FSUkFZO1xuICB0ZXh0Pzogc3RyaW5nIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkO1xuICBrZXk6IHN0cmluZyB8IG51bGwgPSBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyB0eXBlOiBULFxuICAgIHB1YmxpYyBwcm9wczogUmVjb3JkPHN0cmluZywgYW55PiB8IG51bGwsXG4gICAga2V5OiBzdHJpbmcgfCBudW1iZXIgfCBudWxsID0gbnVsbFxuICApIHtcbiAgICBpZiAoa2V5ICE9IG51bGwpIHtcbiAgICAgIHRoaXMua2V5ID0gU3RyaW5nKGtleSk7XG4gICAgfVxuICAgIGlmIChwcm9wcykge1xuICAgICAgY29uc3QgY2hpbGRyZW4gPSBwcm9jZXNzTm9kZShwcm9wcy5jaGlsZHJlbik7XG4gICAgICBpZiAoY2hpbGRyZW4gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZHJlbikpIHtcbiAgICAgICAgICB0aGlzLmNoaWxkcmVuID0gY2hpbGRyZW47XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5jaGlsZHJlbiA9IFtjaGlsZHJlbl07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHByb2Nlc3NOb2RlKG5vZGU6IGFueSk6IEpTWE5vZGVbXSB8IEpTWE5vZGUgfCB1bmRlZmluZWQge1xuICBpZiAobm9kZSA9PSBudWxsIHx8IHR5cGVvZiBub2RlID09PSAnYm9vbGVhbicpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG4gIGlmIChpc0pTWE5vZGUobm9kZSkpIHtcbiAgICBpZiAobm9kZS50eXBlID09PSBIb3N0IHx8IG5vZGUudHlwZSA9PT0gU2tpcFJlcmVuZGVyKSB7XG4gICAgICByZXR1cm4gbm9kZTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBub2RlLnR5cGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJldHVybiBwcm9jZXNzTm9kZShub2RlLnR5cGUoeyAuLi5ub2RlLnByb3BzLCBjaGlsZHJlbjogbm9kZS5jaGlsZHJlbiB9LCBub2RlLmtleSkpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gbm9kZTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShub2RlKSkge1xuICAgIHJldHVybiBub2RlLmZsYXRNYXAocHJvY2Vzc05vZGUpLmZpbHRlcigoZSkgPT4gZSAhPSBudWxsKSBhcyBKU1hOb2RlW107XG4gIH0gZWxzZSBpZiAodHlwZW9mIG5vZGUgPT09ICdzdHJpbmcnIHx8IHR5cGVvZiBub2RlID09PSAnbnVtYmVyJyB8fCB0eXBlb2Ygbm9kZSA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgY29uc3QgbmV3Tm9kZSA9IG5ldyBKU1hOb2RlSW1wbCgnI3RleHQnLCBudWxsLCBudWxsKTtcbiAgICBuZXdOb2RlLnRleHQgPSBTdHJpbmcobm9kZSk7XG4gICAgcmV0dXJuIG5ld05vZGU7XG4gIH0gZWxzZSB7XG4gICAgbG9nV2FybignVW52YWxpZCBub2RlLCBza2lwcGluZycpO1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGlzSlNYTm9kZSA9IChuOiBhbnkpOiBuIGlzIEpTWE5vZGU8dW5rbm93bj4gPT4ge1xuICBpZiAocURldikge1xuICAgIGlmIChuIGluc3RhbmNlb2YgSlNYTm9kZUltcGwpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAobiAmJiB0eXBlb2YgbiA9PT0gJ29iamVjdCcgJiYgbi5jb25zdHJ1Y3Rvci5uYW1lID09PSBKU1hOb2RlSW1wbC5uYW1lKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYER1cGxpY2F0ZSBpbXBsZW1lbnRhdGlvbnMgb2YgXCJKU1hOb2RlSW1wbFwiIGZvdW5kYCk7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gbiBpbnN0YW5jZW9mIEpTWE5vZGVJbXBsO1xuICB9XG59O1xuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGNvbnN0IEZyYWdtZW50OiBGdW5jdGlvbkNvbXBvbmVudDx7IGNoaWxkcmVuPzogYW55IH0+ID0gKHByb3BzKSA9PiBwcm9wcy5jaGlsZHJlbiBhcyBhbnk7XG5cbmV4cG9ydCB0eXBlIHsgUXdpa0pTWCBhcyBKU1ggfTtcblxuZXhwb3J0IHsganN4IGFzIGpzeHMsIGpzeCBhcyBqc3hERVYgfTtcbiJdfQ==","import { assertDefined } from '../assert/assert';\nimport { appendStyle } from '../render/cursor';\nimport { visitJsxNode } from '../render/render';\nimport { ComponentScopedStyles, QHostAttr, RenderEvent } from '../util/markers';\nimport { promiseAll, then } from '../util/promises';\nimport { styleContent, styleHost } from './qrl-styles';\nimport { isStyleTask, newInvokeContext } from '../use/use-core';\nimport { processNode } from '../render/jsx/jsx-runtime';\nimport { logDebug, logError } from '../util/log';\nexport const firstRenderComponent = (rctx, ctx) => {\n    ctx.element.setAttribute(QHostAttr, '');\n    return renderComponent(rctx, ctx);\n};\nexport const renderComponent = (rctx, ctx) => {\n    ctx.dirty = false;\n    const hostElement = ctx.element;\n    const onRenderQRL = ctx.renderQrl;\n    assertDefined(onRenderQRL);\n    const props = ctx.props;\n    assertDefined(props);\n    // Component is not dirty any more\n    rctx.containerState.hostsStaging.delete(hostElement);\n    const newCtx = {\n        ...rctx,\n        components: [...rctx.components],\n    };\n    // Invoke render hook\n    const invocatinContext = newInvokeContext(rctx.doc, hostElement, hostElement, RenderEvent);\n    invocatinContext.subscriber = hostElement;\n    invocatinContext.renderCtx = newCtx;\n    const waitOn = (invocatinContext.waitOn = []);\n    // Clean current subscription before render\n    rctx.containerState.subsManager.clearSub(hostElement);\n    // Resolve render function\n    const onRenderFn = onRenderQRL.invokeFn(rctx.containerEl, invocatinContext);\n    try {\n        // Execution of the render function\n        const renderPromise = onRenderFn(props);\n        // Wait for results\n        return then(renderPromise, (jsxNode) => {\n            rctx.hostElements.add(hostElement);\n            const waitOnPromise = promiseAll(waitOn);\n            return then(waitOnPromise, (waitOnResolved) => {\n                waitOnResolved.forEach((task) => {\n                    if (isStyleTask(task)) {\n                        appendStyle(rctx, hostElement, task);\n                    }\n                });\n                if (typeof jsxNode === 'function') {\n                    ctx.dirty = false;\n                    jsxNode = jsxNode();\n                }\n                else if (ctx.dirty) {\n                    logDebug('Dropping render. State changed during render.');\n                    return renderComponent(rctx, ctx);\n                }\n                let componentCtx = ctx.component;\n                if (!componentCtx) {\n                    componentCtx = ctx.component = {\n                        hostElement,\n                        slots: [],\n                        styleHostClass: undefined,\n                        styleClass: undefined,\n                        styleId: undefined,\n                    };\n                    const scopedStyleId = hostElement.getAttribute(ComponentScopedStyles) ?? undefined;\n                    if (scopedStyleId) {\n                        componentCtx.styleId = scopedStyleId;\n                        componentCtx.styleHostClass = styleHost(scopedStyleId);\n                        componentCtx.styleClass = styleContent(scopedStyleId);\n                        hostElement.classList.add(componentCtx.styleHostClass);\n                    }\n                }\n                componentCtx.slots = [];\n                newCtx.components.push(componentCtx);\n                return visitJsxNode(newCtx, hostElement, processNode(jsxNode), false);\n            });\n        }, (err) => {\n            logError(err);\n        });\n    }\n    catch (err) {\n        logError(err);\n    }\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LWN0eC5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvcXdpay9zcmMvY29yZS9jb21wb25lbnQvY29tcG9uZW50LWN0eC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDakQsT0FBTyxFQUFFLFdBQVcsRUFBaUIsTUFBTSxrQkFBa0IsQ0FBQztBQUM5RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNoRixPQUFPLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ3ZELE9BQU8sRUFBRSxXQUFXLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDeEQsT0FBTyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFJakQsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQUcsQ0FBQyxJQUFtQixFQUFFLEdBQWEsRUFBd0IsRUFBRTtJQUMvRixHQUFHLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDeEMsT0FBTyxlQUFlLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQ3BDLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxDQUFDLElBQW1CLEVBQUUsR0FBYSxFQUF3QixFQUFFO0lBQzFGLEdBQUcsQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBRWxCLE1BQU0sV0FBVyxHQUFHLEdB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Q0FBQzt3QkFDdkQsWUFBWSxDQUFDLFVBQVUsR0FBRyxZQUFZLENBQUMsYUFBYSxDQUFDLENBQUM7d0JBQ3RELFdBQVcsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxjQUFjLENBQUMsQ0FBQztxQkFDeEQ7aUJBQ0Y7Z0JBQ0QsWUFBWSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7Z0JBQ3hCLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO2dCQUNyQyxPQUFPLFlBQVksQ0FBQyxNQUFNLEVBQUUsV0FBVyxFQUFFLFdBQVcsQ0FBQyxPQUFPLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztZQUN4RSxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUMsRUFDRCxDQUFDLEdBQUcsRUFBRSxFQUFFO1lBQ04sUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2hCLENBQUMsQ0FDRixDQUFDO0tBQ0g7SUFBQyxPQUFPLEdBQUcsRUFBRTtRQUNaLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztLQUNmO0FBQ0gsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXNzZXJ0RGVmaW5lZCB9IGZyb20gJy4uL2Fzc2VydC9hc3NlcnQnO1xuaW1wb3J0IHsgYXBwZW5kU3R5bGUsIFJlbmRlckNvbnRleHQgfSBmcm9tICcuLi9yZW5kZXIvY3Vyc29yJztcbmltcG9ydCB7IHZpc2l0SnN4Tm9kZSB9IGZyb20gJy4uL3JlbmRlci9yZW5kZXInO1xuaW1wb3J0IHsgQ29tcG9uZW50U2NvcGVkU3R5bGVzLCBRSG9zdEF0dHIsIFJlbmRlckV2ZW50IH0gZnJvbSAnLi4vdXRpbC9tYXJrZXJzJztcbmltcG9ydCB7IHByb21pc2VBbGwsIHRoZW4gfSBmcm9tICcuLi91dGlsL3Byb21pc2VzJztcbmltcG9ydCB7IHN0eWxlQ29udGVudCwgc3R5bGVIb3N0IH0gZnJvbSAnLi9xcmwtc3R5bGVzJztcbmltcG9ydCB7IGlzU3R5bGVUYXNrLCBuZXdJbnZva2VDb250ZXh0IH0gZnJvbSAnLi4vdXNlL3VzZS1jb3JlJztcbmltcG9ydCB7IHByb2Nlc3NOb2RlIH0gZnJvbSAnLi4vcmVuZGVyL2pzeC9qc3gtcnVudGltZSc7XG5pbXBvcnQgeyBsb2dEZWJ1ZywgbG9nRXJyb3IgfSBmcm9tICcuLi91dGlsL2xvZyc7XG5pbXBvcnQgdHlwZSB7IFZhbHVlT3JQcm9taXNlIH0gZnJvbSAnLi4vdXRpbC90eXBlcyc7XG5pbXBvcnQgdHlwZSB7IFFDb250ZXh0IH0gZnJvbSAnLi4vcHJvcHMvcHJvcHMnO1xuXG5leHBvcnQgY29uc3QgZmlyc3RSZW5kZXJDb21wb25lbnQgPSAocmN0eDogUmVuZGVyQ29udGV4dCwgY3R4OiBRQ29udGV4dCk6IFZhbHVlT3JQcm9taXNlPHZvaWQ+ID0+IHtcbiAgY3R4LmVsZW1lbnQuc2V0QXR0cmlidXRlKFFIb3N0QXR0ciwgJycpO1xuICByZXR1cm4gcmVuZGVyQ29tcG9uZW50KHJjdHgsIGN0eCk7XG59O1xuXG5leHBvcnQgY29uc3QgcmVuZGVyQ29tcG9uZW50ID0gKHJjdHg6IFJlbmRlckNvbnRleHQsIGN0eDogUUNvbnRleHQpOiBWYWx1ZU9yUHJvbWlzZTx2b2lkPiA9PiB7XG4gIGN0eC5kaXJ0eSA9IGZhbHNlO1xuXG4gIGNvbnN0IGhvc3RFbGVtZW50ID0gY3R4LmVsZW1lbnQ7XG4gIGNvbnN0IG9uUmVuZGVyUVJMID0gY3R4LnJlbmRlclFybCE7XG4gIGFzc2VydERlZmluZWQob25SZW5kZXJRUkwpO1xuXG4gIGNvbnN0IHByb3BzID0gY3R4LnByb3BzO1xuICBhc3NlcnREZWZpbmVkKHByb3BzKTtcblxuICAvLyBDb21wb25lbnQgaXMgbm90IGRpcnR5IGFueSBtb3JlXG4gIHJjdHguY29udGFpbmVyU3RhdGUuaG9zdHNTdGFnaW5nLmRlbGV0ZShob3N0RWxlbWVudCk7XG5cbiAgY29uc3QgbmV3Q3R4OiBSZW5kZXJDb250ZXh0ID0ge1xuICAgIC4uLnJjdHgsXG4gICAgY29tcG9uZW50czogWy4uLnJjdHguY29tcG9uZW50c10sXG4gIH07XG5cbiAgLy8gSW52b2tlIHJlbmRlciBob29rXG4gIGNvbnN0IGludm9jYXRpbkNvbnRleHQgPSBuZXdJbnZva2VDb250ZXh0KHJjdHguZG9jLCBob3N0RWxlbWVudCwgaG9zdEVsZW1lbnQsIFJlbmRlckV2ZW50KTtcbiAgaW52b2NhdGluQ29udGV4dC5zdWJzY3JpYmVyID0gaG9zdEVsZW1lbnQ7XG4gIGludm9jYXRpbkNvbnRleHQucmVuZGVyQ3R4ID0gbmV3Q3R4O1xuICBjb25zdCB3YWl0T24gPSAoaW52b2NhdGluQ29udGV4dC53YWl0T24gPSBbXSBhcyBhbnlbXSk7XG5cbiAgLy8gQ2xlYW4gY3VycmVudCBzdWJzY3JpcHRpb24gYmVmb3JlIHJlbmRlclxuICByY3R4LmNvbnRhaW5lclN0YXRlLnN1YnNNYW5hZ2VyLmNsZWFyU3ViKGhvc3RFbGVtZW50KTtcblxuICAvLyBSZXNvbHZlIHJlbmRlciBmdW5jdGlvblxuICBjb25zdCBvblJlbmRlckZuID0gb25SZW5kZXJRUkwuaW52b2tlRm4ocmN0eC5jb250YWluZXJFbCwgaW52b2NhdGluQ29udGV4dCk7XG5cbiAgdHJ5IHtcbiAgICAvLyBFeGVjdXRpb24gb2YgdGhlIHJlbmRlciBmdW5jdGlvblxuICAgIGNvbnN0IHJlbmRlclByb21pc2UgPSBvblJlbmRlckZuKHByb3BzKTtcblxuICAgIC8vIFdhaXQgZm9yIHJlc3VsdHNcbiAgICByZXR1cm4gdGhlbihcbiAgICAgIHJlbmRlclByb21pc2UsXG4gICAgICAoanN4Tm9kZSkgPT4ge1xuICAgICAgICByY3R4Lmhvc3RFbGVtZW50cy5hZGQoaG9zdEVsZW1lbnQpO1xuICAgICAgICBjb25zdCB3YWl0T25Qcm9taXNlID0gcHJvbWlzZUFsbCh3YWl0T24pO1xuICAgICAgICByZXR1cm4gdGhlbih3YWl0T25Qcm9taXNlLCAod2FpdE9uUmVzb2x2ZWQpID0+IHtcbiAgICAgICAgICB3YWl0T25SZXNvbHZlZC5mb3JFYWNoKCh0YXNrKSA9PiB7XG4gICAgICAgICAgICBpZiAoaXNTdHlsZVRhc2sodGFzaykpIHtcbiAgICAgICAgICAgICAgYXBwZW5kU3R5bGUocmN0eCwgaG9zdEVsZW1lbnQsIHRhc2spO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIGlmICh0eXBlb2YganN4Tm9kZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY3R4LmRpcnR5ID0gZmFsc2U7XG4gICAgICAgICAgICBqc3hOb2RlID0ganN4Tm9kZSgpO1xuICAgICAgICAgIH0gZWxzZSBpZiAoY3R4LmRpcnR5KSB7XG4gICAgICAgICAgICBsb2dEZWJ1ZygnRHJvcHBpbmcgcmVuZGVyLiBTdGF0ZSBjaGFuZ2VkIGR1cmluZyByZW5kZXIuJyk7XG4gICAgICAgICAgICByZXR1cm4gcmVuZGVyQ29tcG9uZW50KHJjdHgsIGN0eCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgbGV0IGNvbXBvbmVudEN0eCA9IGN0eC5jb21wb25lbnQ7XG4gICAgICAgICAgaWYgKCFjb21wb25lbnRDdHgpIHtcbiAgICAgICAgICAgIGNvbXBvbmVudEN0eCA9IGN0eC5jb21wb25lbnQgPSB7XG4gICAgICAgICAgICAgIGhvc3RFbGVtZW50LFxuICAgICAgICAgICAgICBzbG90czogW10sXG4gICAgICAgICAgICAgIHN0eWxlSG9zdENsYXNzOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgIHN0eWxlQ2xhc3M6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgc3R5bGVJZDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGNvbnN0IHNjb3BlZFN0eWxlSWQgPSBob3N0RWxlbWVudC5nZXRBdHRyaWJ1dGUoQ29tcG9uZW50U2NvcGVkU3R5bGVzKSA/PyB1bmRlZmluZWQ7XG4gICAgICAgICAgICBpZiAoc2NvcGVkU3R5bGVJZCkge1xuICAgICAgICAgICAgICBjb21wb25lbnRDdHguc3R5bGVJZCA9IHNjb3BlZFN0eWxlSWQ7XG4gICAgICAgICAgICAgIGNvbXBvbmVudEN0eC5zdHlsZUhvc3RDbGFzcyA9IHN0eWxlSG9zdChzY29wZWRTdHlsZUlkKTtcbiAgICAgICAgICAgICAgY29tcG9uZW50Q3R4LnN0eWxlQ2xhc3MgPSBzdHlsZUNvbnRlbnQoc2NvcGVkU3R5bGVJZCk7XG4gICAgICAgICAgICAgIGhvc3RFbGVtZW50LmNsYXNzTGlzdC5hZGQoY29tcG9uZW50Q3R4LnN0eWxlSG9zdENsYXNzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgY29tcG9uZW50Q3R4LnNsb3RzID0gW107XG4gICAgICAgICAgbmV3Q3R4LmNvbXBvbmVudHMucHVzaChjb21wb25lbnRDdHgpO1xuICAgICAgICAgIHJldHVybiB2aXNpdEpzeE5vZGUobmV3Q3R4LCBob3N0RWxlbWVudCwgcHJvY2Vzc05vZGUoanN4Tm9kZSksIGZhbHNlKTtcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgKGVycikgPT4ge1xuICAgICAgICBsb2dFcnJvcihlcnIpO1xuICAgICAgfVxuICAgICk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGxvZ0Vycm9yKGVycik7XG4gIH1cbn07XG4iXX0=","import { OnRenderProp, QHostSelector, QSlotAttr } from '../util/markers';\nimport { cleanupContext, getContext, getPropsMutator, setEvent, tryGetContext, } from '../props/props';\nimport { isOn$Prop, isOnProp } from '../props/props-on';\nimport { Host } from '../render/jsx/host.public';\nimport { $ } from '../import/qrl.public';\nimport { firstRenderComponent, renderComponent } from '../component/component-ctx';\nimport { promiseAll, then } from '../util/promises';\nimport { assertDefined, assertEqual } from '../assert/assert';\nimport { intToStr } from '../object/store';\nimport { EMPTY_ARRAY } from '../util/flyweight';\nimport { SkipRerender } from './jsx/host.public';\nimport { logDebug, logError, logWarn } from '../util/log';\nimport { qDev } from '../util/qdev';\nimport { qError, QError } from '../error/error';\nimport { fromCamelToKebabCase } from '../util/case';\nimport { CONTAINER } from '../use/use-core';\nexport const SVG_NS = 'http://www.w3.org/2000/svg';\nexport function smartUpdateChildren(ctx, elm, ch, mode, isSvg) {\n    if (ch.length === 1 && ch[0].type === SkipRerender) {\n        if (elm.firstChild !== null) {\n            return;\n        }\n        ch = ch[0].children;\n    }\n    const oldCh = getChildren(elm, mode);\n    if (oldCh.length > 0 && ch.length > 0) {\n        return updateChildren(ctx, elm, oldCh, ch, isSvg);\n    }\n    else if (ch.length > 0) {\n        return addVnodes(ctx, elm, undefined, ch, 0, ch.length - 1, isSvg);\n    }\n    else if (oldCh.length > 0) {\n        return removeVnodes(ctx, oldCh, 0, oldCh.length - 1);\n    }\n}\nexport function updateChildren(ctx, parentElm, oldCh, newCh, isSvg) {\n    let oldStartIdx = 0;\n    let newStartIdx = 0;\n    let oldEndIdx = oldCh.length - 1;\n    let oldStartVnode = oldCh[0];\n    let oldEndVnode = oldCh[oldEndIdx];\n    let newEndIdx = newCh.length - 1;\n    let newStartVnode = newCh[0];\n    let newEndVnode = newCh[newEndIdx];\n    let oldKeyToIdx;\n    let idxInOld;\n    let elmToMove;\n    const results = [];\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (oldStartVnode == null) {\n            oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left\n        }\n        else if (oldEndVnode == null) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (newStartVnode == null) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (newEndVnode == null) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldStartVnode, newStartVnode)) {\n            results.push(patchVnode(ctx, oldStartVnode, newStartVnode, isSvg));\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (sameVnode(oldEndVnode, newEndVnode)) {\n            results.push(patchVnode(ctx, oldEndVnode, newEndVnode, isSvg));\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldStartVnode, newEndVnode)) {\n            // Vnode moved right\n            results.push(patchVnode(ctx, oldStartVnode, newEndVnode, isSvg));\n            insertBefore(ctx, parentElm, oldStartVnode, oldEndVnode.nextSibling);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldEndVnode, newStartVnode)) {\n            // Vnode moved left\n            results.push(patchVnode(ctx, oldEndVnode, newStartVnode, isSvg));\n            insertBefore(ctx, parentElm, oldEndVnode, oldStartVnode);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            if (oldKeyToIdx === undefined) {\n                oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n            }\n            idxInOld = oldKeyToIdx[newStartVnode.key];\n            if (idxInOld === undefined) {\n                // New element\n                const newElm = createElm(ctx, newStartVnode, isSvg);\n                results.push(then(newElm, (newElm) => {\n                    insertBefore(ctx, parentElm, newElm, oldStartVnode);\n                }));\n            }\n            else {\n                elmToMove = oldCh[idxInOld];\n                if (!isTagName(elmToMove, newStartVnode.type)) {\n                    const newElm = createElm(ctx, newStartVnode, isSvg);\n                    results.push(then(newElm, (newElm) => {\n                        insertBefore(ctx, parentElm, newElm, oldStartVnode);\n                    }));\n                }\n                else {\n                    results.push(patchVnode(ctx, elmToMove, newStartVnode, isSvg));\n                    oldCh[idxInOld] = undefined;\n                    insertBefore(ctx, parentElm, elmToMove, oldStartVnode);\n                }\n            }\n            newStartVnode = newCh[++newStartIdx];\n        }\n    }\n    if (newStartIdx <= newEndIdx) {\n        const before = newCh[newEndIdx + 1] == null ? undefined : newCh[newEndIdx + 1].elm;\n        results.push(addVnodes(ctx, parentElm, before, newCh, newStartIdx, newEndIdx, isSvg));\n    }\n    let wait = promiseAll(results);\n    if (oldStartIdx <= oldEndIdx) {\n        wait = then(wait, () => {\n            removeVnodes(ctx, oldCh, oldStartIdx, oldEndIdx);\n        });\n    }\n    return wait;\n}\nfunction isComponentNode(node) {\n    return node.props && OnRenderProp in node.props;\n}\nfunction getCh(elm) {\n    return Array.from(elm.childNodes).filter(isNode);\n}\nexport function getChildren(elm, mode) {\n    switch (mode) {\n        case 'default':\n            return getCh(elm);\n        case 'slot':\n            return getCh(elm).filter(isChildSlot);\n        case 'root':\n            return getCh(elm).filter(isChildComponent);\n        case 'fallback':\n            return getCh(elm).filter(isFallback);\n    }\n}\nexport function isNode(elm) {\n    const type = elm.nodeType;\n    return type === 1 || type === 3;\n}\nfunction isFallback(node) {\n    return node.nodeName === 'Q:FALLBACK';\n}\nfunction isChildSlot(node) {\n    return node.nodeName !== 'Q:FALLBACK' && isChildComponent(node);\n}\nfunction isSlotTemplate(node) {\n    return node.nodeName === 'TEMPLATE' && node.hasAttribute(QSlotAttr);\n}\nfunction isChildComponent(node) {\n    return node.nodeName !== 'TEMPLATE' || !node.hasAttribute(QSlotAttr);\n}\nfunction splitBy(input, condition) {\n    const output = {};\n    for (const item of input) {\n        const key = condition(item);\n        const array = output[key] ?? (output[key] = []);\n        array.push(item);\n    }\n    return output;\n}\nexport function patchVnode(rctx, elm, vnode, isSvg) {\n    rctx.perf.visited++;\n    vnode.elm = elm;\n    const tag = vnode.type;\n    if (tag === '#text') {\n        if (elm.data !== vnode.text) {\n            setProperty(rctx, elm, 'data', vnode.text);\n        }\n        return;\n    }\n    if (tag === '#comment') {\n        if (elm.data !== vnode.text) {\n            setProperty(rctx, elm, 'data', vnode.text);\n        }\n        return;\n    }\n    if (tag === Host || tag === SkipRerender) {\n        return;\n    }\n    if (!isSvg) {\n        isSvg = tag === 'svg';\n    }\n    let promise;\n    const props = vnode.props;\n    const ctx = getContext(elm);\n    const dirty = updateProperties(rctx, ctx, props, isSvg);\n    const isSlot = tag === 'q:slot';\n    if (isSvg && vnode.type === 'foreignObject') {\n        isSvg = false;\n    }\n    else if (isSlot) {\n        const currentComponent = rctx.components.length > 0 ? rctx.components[rctx.components.length - 1] : undefined;\n        if (currentComponent) {\n            currentComponent.slots.push(vnode);\n        }\n    }\n    const isComponent = isComponentNode(vnode);\n    if (dirty) {\n        promise = renderComponent(rctx, ctx);\n    }\n    const ch = vnode.children;\n    if (isComponent) {\n        return then(promise, () => {\n            const slotMaps = getSlots(ctx.component, elm);\n            const splittedChidren = splitBy(ch, getSlotName);\n            const promises = [];\n            // Mark empty slots and remove content\n            Object.entries(slotMaps.slots).forEach(([key, slotEl]) => {\n                if (slotEl && !splittedChidren[key]) {\n                    const oldCh = getChildren(slotEl, 'slot');\n                    if (oldCh.length > 0) {\n                        removeVnodes(rctx, oldCh, 0, oldCh.length - 1);\n                    }\n                }\n            });\n            // Mark empty slots and remove content\n            Object.entries(slotMaps.templates).forEach(([key, templateEl]) => {\n                if (templateEl && !splittedChidren[key]) {\n                    removeNode(rctx, templateEl);\n                    slotMaps.templates[key] = undefined;\n                }\n            });\n            // Render into slots\n            Object.entries(splittedChidren).forEach(([key, ch]) => {\n                const slotElm = getSlotElement(rctx, slotMaps, elm, key);\n                promises.push(smartUpdateChildren(rctx, slotElm, ch, 'slot', isSvg));\n            });\n            return then(promiseAll(promises), () => {\n                removeTemplates(rctx, slotMaps);\n            });\n        });\n    }\n    const setsInnerHTML = checkInnerHTML(props);\n    if (setsInnerHTML) {\n        if (qDev && ch.length > 0) {\n            logWarn('Node can not have children when innerHTML is set');\n        }\n        return;\n    }\n    return then(promise, () => {\n        const mode = isSlot ? 'fallback' : 'default';\n        return smartUpdateChildren(rctx, elm, ch, mode, isSvg);\n    });\n}\nfunction addVnodes(ctx, parentElm, before, vnodes, startIdx, endIdx, isSvg) {\n    const promises = [];\n    for (; startIdx <= endIdx; ++startIdx) {\n        const ch = vnodes[startIdx];\n        assertDefined(ch);\n        promises.push(createElm(ctx, ch, isSvg));\n    }\n    return then(promiseAll(promises), (children) => {\n        for (const child of children) {\n            insertBefore(ctx, parentElm, child, before);\n        }\n    });\n}\nfunction removeVnodes(ctx, nodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n        const ch = nodes[startIdx];\n        if (ch) {\n            removeNode(ctx, ch);\n        }\n    }\n}\nlet refCount = 0;\nconst RefSymbol = Symbol();\nfunction setSlotRef(ctx, hostElm, slotEl) {\n    let ref = hostElm[RefSymbol] ?? hostElm.getAttribute('q:sref');\n    if (ref === null) {\n        ref = intToStr(refCount++);\n        hostElm[RefSymbol] = ref;\n        setAttribute(ctx, hostElm, 'q:sref', ref);\n    }\n    slotEl.setAttribute('q:sref', ref);\n}\nfunction getSlotElement(ctx, slotMaps, parentEl, slotName) {\n    const slotEl = slotMaps.slots[slotName];\n    if (slotEl) {\n        return slotEl;\n    }\n    const templateEl = slotMaps.templates[slotName];\n    if (templateEl) {\n        return templateEl.content;\n    }\n    const template = createTemplate(ctx, slotName);\n    prepend(ctx, parentEl, template);\n    slotMaps.templates[slotName] = template;\n    return template.content;\n}\nfunction createTemplate(ctx, slotName) {\n    const template = createElement(ctx, 'template', false);\n    template.setAttribute(QSlotAttr, slotName);\n    return template;\n}\nfunction removeTemplates(ctx, slotMaps) {\n    Object.keys(slotMaps.templates).forEach((key) => {\n        const template = slotMaps.templates[key];\n        if (template && slotMaps.slots[key] !== undefined) {\n            removeNode(ctx, template);\n            slotMaps.templates[key] = undefined;\n        }\n    });\n}\nexport function resolveSlotProjection(ctx, hostElm, before, after) {\n    Object.entries(before.slots).forEach(([key, slotEl]) => {\n        if (slotEl && !after.slots[key]) {\n            // Slot removed\n            // Move slot to template\n            const template = createTemplate(ctx, key);\n            const slotChildren = getChildren(slotEl, 'slot');\n            template.content.append(...slotChildren);\n            hostElm.insertBefore(template, hostElm.firstChild);\n            ctx.operations.push({\n                el: template,\n                operation: 'slot-to-template',\n                args: slotChildren,\n                fn: () => { },\n            });\n        }\n    });\n    Object.entries(after.slots).forEach(([key, slotEl]) => {\n        if (slotEl && !before.slots[key]) {\n            // Slot created\n            // Move template to slot\n            const template = before.templates[key];\n            if (template) {\n                slotEl.appendChild(template.content);\n                template.remove();\n                ctx.operations.push({\n                    el: slotEl,\n                    operation: 'template-to-slot',\n                    args: [template],\n                    fn: () => { },\n                });\n            }\n        }\n    });\n}\nfunction getSlotName(node) {\n    return node.props?.['q:slot'] ?? '';\n}\nfunction createElm(rctx, vnode, isSvg) {\n    rctx.perf.visited++;\n    const tag = vnode.type;\n    if (tag === '#text') {\n        return (vnode.elm = createTextNode(rctx, vnode.text));\n    }\n    if (!isSvg) {\n        isSvg = tag === 'svg';\n    }\n    const props = vnode.props;\n    const elm = (vnode.elm = createElement(rctx, tag, isSvg));\n    const isComponent = isComponentNode(vnode);\n    const ctx = getContext(elm);\n    setKey(elm, vnode.key);\n    updateProperties(rctx, ctx, props, isSvg);\n    if (isSvg && tag === 'foreignObject') {\n        isSvg = false;\n    }\n    const currentComponent = rctx.components.length > 0 ? rctx.components[rctx.components.length - 1] : undefined;\n    if (currentComponent) {\n        const styleTag = currentComponent.styleClass;\n        if (styleTag) {\n            classlistAdd(rctx, elm, styleTag);\n        }\n        if (tag === 'q:slot') {\n            setSlotRef(rctx, currentComponent.hostElement, elm);\n            currentComponent.slots.push(vnode);\n        }\n    }\n    let wait;\n    if (isComponent) {\n        // Run mount hook\n        const renderQRL = props[OnRenderProp];\n        ctx.renderQrl = renderQRL;\n        wait = firstRenderComponent(rctx, ctx);\n    }\n    else {\n        const setsInnerHTML = checkInnerHTML(props);\n        if (setsInnerHTML) {\n            if (qDev && vnode.children.length > 0) {\n                logWarn('Node can not have children when innerHTML is set');\n            }\n            return elm;\n        }\n    }\n    return then(wait, () => {\n        let children = vnode.children;\n        if (children.length > 0) {\n            if (children.length === 1 && children[0].type === SkipRerender) {\n                children = children[0].children;\n            }\n            const slotMap = isComponent ? getSlots(ctx.component, elm) : undefined;\n            const promises = children.map((ch) => createElm(rctx, ch, isSvg));\n            return then(promiseAll(promises), () => {\n                let parent = elm;\n                for (const node of children) {\n                    if (slotMap) {\n                        parent = getSlotElement(rctx, slotMap, elm, getSlotName(node));\n                    }\n                    parent.appendChild(node.elm);\n                }\n                return elm;\n            });\n        }\n        return elm;\n    });\n}\nconst getSlots = (componentCtx, hostElm) => {\n    const slots = {};\n    const templates = {};\n    const slotRef = hostElm.getAttribute('q:sref');\n    const existingSlots = Array.from(hostElm.querySelectorAll(`q\\\\:slot[q\\\\:sref=\"${slotRef}\"]`));\n    const newSlots = componentCtx?.slots ?? EMPTY_ARRAY;\n    const t = Array.from(hostElm.children).filter(isSlotTemplate);\n    // Map slots\n    for (const elm of existingSlots) {\n        slots[elm.getAttribute('name') ?? ''] = elm;\n    }\n    // Map virtual slots\n    for (const vnode of newSlots) {\n        slots[vnode.props?.name ?? ''] = vnode.elm;\n    }\n    // Map templates\n    for (const elm of t) {\n        templates[elm.getAttribute('q:slot') ?? ''] = elm;\n    }\n    return { slots, templates };\n};\nconst handleStyle = (ctx, elm, _, newValue) => {\n    setAttribute(ctx, elm, 'style', stringifyClassOrStyle(newValue, false));\n    return true;\n};\nconst handleClass = (ctx, elm, _, newValue) => {\n    setAttribute(ctx, elm, 'class', stringifyClassOrStyle(newValue, true));\n    return true;\n};\nconst checkBeforeAssign = (ctx, elm, prop, newValue) => {\n    if (prop in elm) {\n        if (elm[prop] !== newValue) {\n            setProperty(ctx, elm, prop, newValue);\n        }\n    }\n    return true;\n};\nconst dangerouslySetInnerHTML = 'dangerouslySetInnerHTML';\nconst setInnerHTML = (ctx, elm, _, newValue) => {\n    if (dangerouslySetInnerHTML in elm) {\n        setProperty(ctx, elm, dangerouslySetInnerHTML, newValue);\n    }\n    else if ('innerHTML' in elm) {\n        setProperty(ctx, elm, 'innerHTML', newValue);\n    }\n    return true;\n};\nconst PROP_HANDLER_MAP = {\n    style: handleStyle,\n    class: handleClass,\n    className: handleClass,\n    value: checkBeforeAssign,\n    checked: checkBeforeAssign,\n    [dangerouslySetInnerHTML]: setInnerHTML,\n};\nconst ALLOWS_PROPS = ['class', 'className', 'style', 'id', 'q:slot'];\nconst HOST_PREFIX = 'host:';\nconst SCOPE_PREFIX = /^(host|window|document):/;\nexport function updateProperties(rctx, ctx, expectProps, isSvg) {\n    if (!expectProps) {\n        return false;\n    }\n    const elm = ctx.element;\n    const isCmp = OnRenderProp in expectProps;\n    const qwikProps = isCmp ? getPropsMutator(ctx, rctx.containerState) : undefined;\n    for (let key of Object.keys(expectProps)) {\n        if (key === 'children' || key === OnRenderProp) {\n            continue;\n        }\n        const newValue = expectProps[key];\n        if (key === 'ref') {\n            newValue.current = elm;\n            continue;\n        }\n        // Early exit if value didnt change\n        const oldValue = ctx.cache.get(key);\n        if (newValue === oldValue) {\n            continue;\n        }\n        ctx.cache.set(key, newValue);\n        // Check of data- or aria-\n        if (key.startsWith('data-') || key.startsWith('aria-')) {\n            setAttribute(rctx, elm, key, newValue);\n            continue;\n        }\n        if (qwikProps) {\n            const skipProperty = ALLOWS_PROPS.includes(key);\n            const hasPrefix = SCOPE_PREFIX.test(key);\n            if (!skipProperty && !hasPrefix) {\n                // Qwik props\n                qwikProps.set(key, newValue);\n                continue;\n            }\n            const hPrefixed = key.startsWith(HOST_PREFIX);\n            if (hPrefixed) {\n                key = key.slice(HOST_PREFIX.length);\n            }\n        }\n        else if (qDev && key.startsWith(HOST_PREFIX)) {\n            logWarn(`${HOST_PREFIX} prefix can not be used in non components`);\n            continue;\n        }\n        if (isOnProp(key)) {\n            setEvent(rctx, ctx, key.slice(0, -3), newValue);\n            continue;\n        }\n        if (isOn$Prop(key)) {\n            setEvent(rctx, ctx, key.slice(0, -1), $(newValue));\n            continue;\n        }\n        // Check if its an exception\n        const exception = PROP_HANDLER_MAP[key];\n        if (exception) {\n            if (exception(rctx, elm, key, newValue, oldValue)) {\n                continue;\n            }\n        }\n        // Check if property in prototype\n        if (!isSvg && key in elm) {\n            setProperty(rctx, elm, key, newValue);\n            continue;\n        }\n        // Fallback to render attribute\n        setAttribute(rctx, elm, key, newValue);\n    }\n    return ctx.dirty;\n}\nexport const startEvent = (ctx, name) => {\n    const event = {\n        name,\n        timeStart: performance.now(),\n        timeEnd: 0,\n    };\n    ctx.perf.timing.push(event);\n    return () => {\n        event.timeEnd = performance.now();\n    };\n};\nexport function setAttribute(ctx, el, prop, value) {\n    const fn = () => {\n        if (value == null) {\n            el.removeAttribute(prop);\n        }\n        else {\n            el.setAttribute(prop, String(value));\n        }\n    };\n    ctx.operations.push({\n        el,\n        operation: 'set-attribute',\n        args: [prop, value],\n        fn,\n    });\n}\nexport function classlistAdd(ctx, el, hostStyleTag) {\n    const fn = () => {\n        el.classList.add(hostStyleTag);\n    };\n    ctx.operations.push({\n        el,\n        operation: 'classlist-add',\n        args: [hostStyleTag],\n        fn,\n    });\n}\nfunction setProperty(ctx, node, key, value) {\n    const fn = () => {\n        try {\n            node[key] = value;\n        }\n        catch (err) {\n            logError('Set property', { node, key, value }, err);\n        }\n    };\n    ctx.operations.push({\n        el: node,\n        operation: 'set-property',\n        args: [key, value],\n        fn,\n    });\n}\nfunction createElement(ctx, expectTag, isSvg) {\n    const el = isSvg ? ctx.doc.createElementNS(SVG_NS, expectTag) : ctx.doc.createElement(expectTag);\n    el[CONTAINER] = ctx.containerEl;\n    ctx.operations.push({\n        el,\n        operation: 'create-element',\n        args: [expectTag],\n        fn: () => { },\n    });\n    return el;\n}\nfunction insertBefore(ctx, parent, newChild, refChild) {\n    const fn = () => {\n        parent.insertBefore(newChild, refChild ? refChild : null);\n    };\n    ctx.operations.push({\n        el: parent,\n        operation: 'insert-before',\n        args: [newChild, refChild],\n        fn,\n    });\n    return newChild;\n}\nexport function appendStyle(ctx, hostElement, styleTask) {\n    const fn = () => {\n        const containerEl = ctx.containerEl;\n        const stylesParent = ctx.doc.documentElement === containerEl ? ctx.doc.head ?? containerEl : containerEl;\n        if (!stylesParent.querySelector(`style[q\\\\:style=\"${styleTask.styleId}\"]`)) {\n            const style = ctx.doc.createElement('style');\n            style.setAttribute('q:style', styleTask.styleId);\n            style.textContent = styleTask.content;\n            stylesParent.insertBefore(style, stylesParent.firstChild);\n        }\n    };\n    ctx.operations.push({\n        el: hostElement,\n        operation: 'append-style',\n        args: [styleTask],\n        fn,\n    });\n}\nfunction prepend(ctx, parent, newChild) {\n    const fn = () => {\n        parent.insertBefore(newChild, parent.firstChild);\n    };\n    ctx.operations.push({\n        el: parent,\n        operation: 'prepend',\n        args: [newChild],\n        fn,\n    });\n}\nfunction removeNode(ctx, el) {\n    const fn = () => {\n        const parent = el.parentNode;\n        if (parent) {\n            if (el.nodeType === 1) {\n                const subsManager = ctx.containerState.subsManager;\n                cleanupElement(el, subsManager);\n                el\n                    .querySelectorAll(QHostSelector)\n                    .forEach((el) => cleanupElement(el, subsManager));\n            }\n            parent.removeChild(el);\n        }\n        else if (qDev) {\n            logWarn('Trying to remove component already removed', el);\n        }\n    };\n    ctx.operations.push({\n        el: el,\n        operation: 'remove',\n        args: [],\n        fn,\n    });\n}\nfunction cleanupElement(el, subsManager) {\n    const ctx = tryGetContext(el);\n    if (ctx) {\n        cleanupContext(ctx, subsManager);\n    }\n}\nfunction createTextNode(ctx, text) {\n    return ctx.doc.createTextNode(text);\n}\nexport function executeContextWithSlots(ctx) {\n    const before = ctx.roots.map((elm) => getSlots(undefined, elm));\n    executeContext(ctx);\n    const after = ctx.roots.map((elm) => getSlots(undefined, elm));\n    assertEqual(before.length, after.length);\n    for (let i = 0; i < before.length; i++) {\n        resolveSlotProjection(ctx, ctx.roots[i], before[i], after[i]);\n    }\n}\nexport function executeContext(ctx) {\n    for (const op of ctx.operations) {\n        op.fn();\n    }\n}\nexport function printRenderStats(ctx) {\n    const byOp = {};\n    for (const op of ctx.operations) {\n        byOp[op.operation] = (byOp[op.operation] ?? 0) + 1;\n    }\n    const affectedElements = Array.from(new Set(ctx.operations.map((a) => a.el)));\n    const stats = {\n        byOp,\n        roots: ctx.roots,\n        hostElements: Array.from(ctx.hostElements),\n        affectedElements,\n        visitedNodes: ctx.perf.visited,\n        operations: ctx.operations.map((v) => [v.operation, v.el, ...v.args]),\n    };\n    const noOps = ctx.operations.length === 0;\n    logDebug('Render stats.', noOps ? 'No operations' : '', stats);\n    return stats;\n}\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n    const map = {};\n    for (let i = beginIdx; i <= endIdx; ++i) {\n        const child = children[i];\n        if (child.nodeType === 1) {\n            const key = getKey(child);\n            if (key != null) {\n                map[key] = i;\n            }\n        }\n    }\n    return map;\n}\nconst KEY_SYMBOL = Symbol('vnode key');\nfunction getKey(el) {\n    let key = el[KEY_SYMBOL];\n    if (key === undefined) {\n        key = el[KEY_SYMBOL] = el.getAttribute('q:key');\n    }\n    return key;\n}\nfunction setKey(el, key) {\n    if (typeof key === 'string') {\n        el.setAttribute('q:key', key);\n    }\n    el[KEY_SYMBOL] = key;\n}\nfunction sameVnode(elm, vnode2) {\n    const isElement = elm.nodeType === 1;\n    if (isElement) {\n        const isSameSel = elm.localName === vnode2.type;\n        if (!isSameSel) {\n            return false;\n        }\n        return getKey(elm) === vnode2.key;\n    }\n    return elm.nodeName === vnode2.type;\n}\nfunction isTagName(elm, tagName) {\n    if (elm.nodeType === 1) {\n        return elm.localName === tagName;\n    }\n    return elm.nodeName === tagName;\n}\nfunction checkInnerHTML(props) {\n    return props && ('innerHTML' in props || dangerouslySetInnerHTML in props);\n}\nexport function stringifyClassOrStyle(obj, isClass) {\n    if (obj == null)\n        return '';\n    if (typeof obj == 'object') {\n        let text = '';\n        let sep = '';\n        if (Array.isArray(obj)) {\n            if (!isClass) {\n                throw qError(QError.Render_unsupportedFormat_obj_attr, obj, 'style');\n            }\n            for (let i = 0; i < obj.length; i++) {\n                text += sep + obj[i];\n                sep = ' ';\n            }\n        }\n        else {\n            for (const key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    const value = obj[key];\n                    if (value) {\n                        text += isClass\n                            ? value\n                                ? sep + key\n                                : ''\n                            : sep + fromCamelToKebabCase(key) + ':' + value;\n                        sep = isClass ? ' ' : ';';\n                    }\n                }\n            }\n        }\n        return text;\n    }\n    return String(obj);\n}\n//# sourceMappingURL=data:application/json;base64,","import { assertDefined } from '../assert/assert';\nimport { QHostAttr } from '../util/markers';\nimport { executeContextWithSlots, printRenderStats } from './cursor';\nimport { getContext, resumeIfNeeded } from '../props/props';\nimport { qDev, qTest } from '../util/qdev';\nimport { getPlatform } from '../platform/platform';\nimport { getDocument } from '../util/dom';\nimport { renderComponent } from '../component/component-ctx';\nimport { logError, logWarn } from '../util/log';\nimport { getContainer } from '../use/use-core';\nimport { runWatch, WatchFlags } from '../watch/watch.public';\nimport { createSubscriptionManager } from '../object/q-object';\nimport { then } from '../util/promises';\n/**\n * Mark component for rendering.\n *\n * Use `notifyRender` method to mark a component for rendering at some later point in time.\n * This method uses `getPlatform(doc).queueRender` for scheduling of the rendering. The\n * default implementation of the method is to use `requestAnimationFrame` to do actual rendering.\n *\n * The method is intended to coalesce multiple calls into `notifyRender` into a single call for\n * rendering.\n *\n * @param hostElement - Host-element of the component to re-render.\n * @returns A promise which is resolved when the component has been rendered.\n * @public\n */\nexport async function notifyRender(hostElement) {\n    assertDefined(hostElement.getAttribute(QHostAttr));\n    const containerEl = getContainer(hostElement);\n    assertDefined(containerEl);\n    const state = getContainerState(containerEl);\n    if (state.platform.isServer && !qTest) {\n        logWarn('Can not rerender in server platform');\n        return undefined;\n    }\n    resumeIfNeeded(containerEl);\n    const ctx = getContext(hostElement);\n    assertDefined(ctx.renderQrl);\n    if (ctx.dirty) {\n        return state.renderPromise;\n    }\n    ctx.dirty = true;\n    const activeRendering = state.hostsRendering !== undefined;\n    if (activeRendering) {\n        state.hostsStaging.add(hostElement);\n        return state.renderPromise.then((ctx) => {\n            if (state.hostsNext.has(hostElement)) {\n                // TODO\n                return state.renderPromise;\n            }\n            else {\n                return ctx;\n            }\n        });\n    }\n    else {\n        state.hostsNext.add(hostElement);\n        return scheduleFrame(containerEl, state);\n    }\n}\nexport function scheduleFrame(containerEl, containerState) {\n    if (containerState.renderPromise === undefined) {\n        containerState.renderPromise = containerState.platform.nextTick(() => renderMarked(containerEl, containerState));\n    }\n    return containerState.renderPromise;\n}\nconst CONTAINER_STATE = Symbol('ContainerState');\nexport function getContainerState(containerEl) {\n    let set = containerEl[CONTAINER_STATE];\n    if (!set) {\n        containerEl[CONTAINER_STATE] = set = {\n            proxyMap: new WeakMap(),\n            subsManager: createSubscriptionManager(),\n            platform: getPlatform(containerEl),\n            watchNext: new Set(),\n            watchStaging: new Set(),\n            hostsNext: new Set(),\n            hostsStaging: new Set(),\n            renderPromise: undefined,\n            hostsRendering: undefined,\n        };\n    }\n    return set;\n}\nexport async function renderMarked(containerEl, containerState) {\n    const hostsRendering = (containerState.hostsRendering = new Set(containerState.hostsNext));\n    containerState.hostsNext.clear();\n    await executeWatches(containerState, (watch) => {\n        return (watch.f & WatchFlags.IsWatch) !== 0;\n    });\n    containerState.hostsStaging.forEach((host) => {\n        hostsRendering.add(host);\n    });\n    containerState.hostsStaging.clear();\n    const doc = getDocument(containerEl);\n    const platform = containerState.platform;\n    const renderingQueue = Array.from(hostsRendering);\n    sortNodes(renderingQueue);\n    const ctx = {\n        doc,\n        containerState,\n        hostElements: new Set(),\n        operations: [],\n        roots: [],\n        containerEl,\n        components: [],\n        perf: {\n            visited: 0,\n            timing: [],\n        },\n    };\n    for (const el of renderingQueue) {\n        if (!ctx.hostElements.has(el)) {\n            ctx.roots.push(el);\n            try {\n                await renderComponent(ctx, getContext(el));\n            }\n            catch (e) {\n                logError('Render error', e);\n            }\n        }\n    }\n    // Early exist, no dom operations\n    if (ctx.operations.length === 0) {\n        if (qDev) {\n            if (typeof window !== 'undefined' && window.document != null) {\n                printRenderStats(ctx);\n            }\n        }\n        postRendering(containerEl, containerState, ctx);\n        return ctx;\n    }\n    return platform.raf(() => {\n        executeContextWithSlots(ctx);\n        if (qDev) {\n            if (typeof window !== 'undefined' && window.document != null) {\n                printRenderStats(ctx);\n            }\n        }\n        postRendering(containerEl, containerState, ctx);\n        return ctx;\n    });\n}\nasync function postRendering(containerEl, containerState, ctx) {\n    await executeWatches(containerState, (watch, stage) => {\n        if ((watch.f & WatchFlags.IsEffect) === 0) {\n            return false;\n        }\n        if (stage) {\n            return ctx.hostElements.has(watch.el);\n        }\n        return true;\n    });\n    // Clear staging\n    containerState.hostsStaging.forEach((el) => {\n        containerState.hostsNext.add(el);\n    });\n    containerState.hostsStaging.clear();\n    containerState.hostsRendering = undefined;\n    containerState.renderPromise = undefined;\n    if (containerState.hostsNext.size + containerState.watchNext.size > 0) {\n        scheduleFrame(containerEl, containerState);\n    }\n}\nasync function executeWatches(containerState, watchPred) {\n    const watchPromises = [];\n    containerState.watchNext.forEach((watch) => {\n        if (watchPred(watch, false)) {\n            watchPromises.push(then(watch.qrl.resolveIfNeeded(watch.el), () => watch));\n            containerState.watchNext.delete(watch);\n        }\n    });\n    do {\n        // Run staging effected\n        containerState.watchStaging.forEach((watch) => {\n            if (watchPred(watch, true)) {\n                watchPromises.push(then(watch.qrl.resolveIfNeeded(watch.el), () => watch));\n            }\n            else {\n                containerState.watchNext.add(watch);\n            }\n        });\n        containerState.watchStaging.clear();\n        // Wait for all promises\n        if (watchPromises.length > 0) {\n            const watches = await Promise.all(watchPromises);\n            sortWatches(watches);\n            await Promise.all(watches.map((watch) => {\n                return runWatch(watch, containerState);\n            }));\n            watchPromises.length = 0;\n        }\n    } while (containerState.watchStaging.size > 0);\n}\nfunction sortNodes(elements) {\n    elements.sort((a, b) => (a.compareDocumentPosition(b) & 2 ? 1 : -1));\n}\nfunction sortWatches(watches) {\n    watches.sort((a, b) => {\n        if (a.el === b.el) {\n            return a.i < b.i ? -1 : 1;\n        }\n        return (a.el.compareDocumentPosition(b.el) & 2) !== 0 ? 1 : -1;\n    });\n}\n//# sourceMappingURL=data:application/json;base64,","import { assertEqual } from '../assert/assert';\nimport { QError, qError } from '../error/error';\nimport { isQrl } from '../import/qrl-class';\nimport { getContainerState, notifyRender, scheduleFrame, } from '../render/notify-render';\nimport { getContainer, tryGetInvokeContext } from '../use/use-core';\nimport { isDocument, isElement, isNode } from '../util/element';\nimport { logWarn } from '../util/log';\nimport { qDev, qTest } from '../util/qdev';\nimport { debugStringify } from '../util/stringify';\nimport { WatchFlags } from '../watch/watch.public';\nimport { unwrapSubscriber } from '../use/use-subscriber';\nimport { tryGetContext } from '../props/props';\nimport { RenderEvent } from '../util/markers';\nimport { getProxyTarget } from './store';\nexport function qObject(obj, proxyMap) {\n    assertEqual(unwrapProxy(obj), obj, 'Unexpected proxy at this location');\n    if (obj == null || typeof obj !== 'object') {\n        // TODO(misko): centralize\n        throw new Error(`Q-ERROR: Only objects can be wrapped in 'QObject', got ` + debugStringify(obj));\n    }\n    if (obj.constructor !== Object) {\n        throw new Error(`Q-ERROR: Only objects literals can be wrapped in 'QObject', got ` + debugStringify(obj));\n    }\n    return readWriteProxy(obj, proxyMap);\n}\nexport function _restoreQObject(obj, containerState, subs) {\n    return readWriteProxy(obj, containerState, subs);\n}\n/**\n * Creates a proxy which notifies of any writes.\n */\nexport function readWriteProxy(target, containerState, subs) {\n    if (!target || typeof target !== 'object')\n        return target;\n    const proxyMap = containerState.proxyMap;\n    let proxy = proxyMap.get(target);\n    if (proxy)\n        return proxy;\n    const manager = containerState.subsManager.getLocal(target, subs);\n    proxy = new Proxy(target, new ReadWriteProxyHandler(containerState, manager));\n    proxyMap.set(target, proxy);\n    return proxy;\n}\nexport const QOjectTargetSymbol = ':target:';\nexport const QOjectAllSymbol = ':all:';\nexport const QOjectSubsSymbol = ':subs:';\nexport const QOjectOriginalProxy = ':proxy:';\nexport const SetSubscriber = Symbol('SetSubscriber');\n/**\n * @alpha\n */\nexport function unwrapProxy(proxy) {\n    return getProxyTarget(proxy) ?? proxy;\n}\nexport function wrap(value, containerState) {\n    if (value && typeof value === 'object') {\n        if (isQrl(value)) {\n            return value;\n        }\n        if (Object.isFrozen(value)) {\n            return value;\n        }\n        const nakedValue = unwrapProxy(value);\n        if (nakedValue !== value) {\n            // already a proxy return;\n            return value;\n        }\n        if (isNode(nakedValue)) {\n            return value;\n        }\n        if (!shouldSerialize(nakedValue)) {\n            return value;\n        }\n        if (qDev) {\n            verifySerializable(value);\n        }\n        const proxy = containerState.proxyMap.get(value);\n        return proxy ? proxy : readWriteProxy(value, containerState);\n    }\n    else {\n        return value;\n    }\n}\nexport const createSubscriptionManager = () => {\n    const objToSubs = new Map();\n    const subsToObjs = new Map();\n    function clearSub(sub) {\n        const subs = subsToObjs.get(sub);\n        if (subs) {\n            subs.forEach((s) => {\n                s.delete(sub);\n            });\n            subsToObjs.delete(sub);\n            subs.clear();\n        }\n    }\n    function tryGetLocal(obj) {\n        assertEqual(getProxyTarget(obj), undefined);\n        return objToSubs.get(obj);\n    }\n    function trackSubToObj(subscriber, map) {\n        let set = subsToObjs.get(subscriber);\n        if (!set) {\n            subsToObjs.set(subscriber, (set = new Set()));\n        }\n        set.add(map);\n    }\n    function getLocal(obj, initialMap) {\n        let local = tryGetLocal(obj);\n        if (!local) {\n            const map = !initialMap ? new Map() : initialMap;\n            map.forEach((_, key) => {\n                trackSubToObj(key, map);\n            });\n            objToSubs.set(obj, (local = {\n                subs: map,\n                addSub(subscriber, key) {\n                    if (key == null) {\n                        map.set(subscriber, null);\n                    }\n                    else {\n                        let sub = map.get(subscriber);\n                        if (sub === undefined) {\n                            map.set(subscriber, (sub = new Set()));\n                        }\n                        if (sub) {\n                            sub.add(key);\n                        }\n                    }\n                    trackSubToObj(subscriber, map);\n                },\n                notifySubs(key) {\n                    map.forEach((value, subscriber) => {\n                        if (value === null || !key) {\n                            notifyChange(subscriber);\n                        }\n                        else if (value.has(key)) {\n                            notifyChange(subscriber);\n                        }\n                    });\n                },\n            }));\n        }\n        return local;\n    }\n    return {\n        tryGetLocal,\n        getLocal,\n        clearSub,\n    };\n};\nclass ReadWriteProxyHandler {\n    constructor(containerState, manager) {\n        this.containerState = containerState;\n        this.manager = manager;\n    }\n    get(target, prop) {\n        let subscriber = this.subscriber;\n        this.subscriber = undefined;\n        if (typeof prop === 'symbol') {\n            return target[prop];\n        }\n        if (prop === QOjectTargetSymbol)\n            return target;\n        if (prop === QOjectSubsSymbol)\n            return this.manager.subs;\n        if (prop === QOjectOriginalProxy)\n            return this.containerState.proxyMap.get(target);\n        const invokeCtx = tryGetInvokeContext();\n        if (invokeCtx) {\n            if (invokeCtx.subscriber === null) {\n                subscriber = undefined;\n            }\n            else if (!subscriber) {\n                subscriber = invokeCtx.subscriber;\n            }\n        }\n        else if (qDev && !qTest && !subscriber) {\n            // logWarn(`State assigned outside invocation context. Getting prop \"${prop}\" of:`, target);\n        }\n        if (prop === QOjectAllSymbol) {\n            if (subscriber) {\n                this.manager.addSub(subscriber);\n            }\n            return target;\n        }\n        const value = target[prop];\n        if (typeof prop === 'symbol') {\n            return value;\n        }\n        if (subscriber) {\n            const isArray = Array.isArray(target);\n            this.manager.addSub(subscriber, isArray ? undefined : prop);\n        }\n        return wrap(value, this.containerState);\n    }\n    set(target, prop, newValue) {\n        if (typeof prop === 'symbol') {\n            if (prop === SetSubscriber) {\n                this.subscriber = newValue;\n            }\n            else {\n                target[prop] = newValue;\n            }\n            return true;\n        }\n        const unwrappedNewValue = unwrapProxy(newValue);\n        if (qDev) {\n            verifySerializable(unwrappedNewValue);\n            const invokeCtx = tryGetInvokeContext();\n            if (invokeCtx && invokeCtx.event === RenderEvent) {\n                logWarn('State mutation inside render function. Move mutation to useWatch(), useClientEffect() or useServerMount()', invokeCtx.hostElement, prop);\n            }\n        }\n        const isArray = Array.isArray(target);\n        if (isArray) {\n            target[prop] = unwrappedNewValue;\n            this.manager.notifySubs();\n            return true;\n        }\n        const oldValue = target[prop];\n        if (oldValue !== unwrappedNewValue) {\n            target[prop] = unwrappedNewValue;\n            this.manager.notifySubs(prop);\n        }\n        return true;\n    }\n    has(target, property) {\n        if (property === QOjectTargetSymbol)\n            return true;\n        if (property === QOjectSubsSymbol)\n            return true;\n        return Object.prototype.hasOwnProperty.call(target, property);\n    }\n    ownKeys(target) {\n        let subscriber = this.subscriber;\n        const invokeCtx = tryGetInvokeContext();\n        if (invokeCtx) {\n            if (invokeCtx.subscriber === null) {\n                subscriber = undefined;\n            }\n            else if (!subscriber) {\n                subscriber = invokeCtx.subscriber;\n            }\n        }\n        else if (qDev && !qTest && !subscriber) {\n            // logWarn(`State assigned outside invocation context. OwnKeys of:`, target);\n        }\n        if (subscriber) {\n            this.manager.addSub(subscriber);\n        }\n        return Object.getOwnPropertyNames(target);\n    }\n}\nexport function removeSub(obj, subscriber) {\n    if (obj && typeof obj === 'object') {\n        const subs = obj[QOjectSubsSymbol];\n        if (subs) {\n            subs.delete(subscriber);\n        }\n    }\n}\nexport function notifyChange(subscriber) {\n    if (isElement(subscriber)) {\n        notifyRender(subscriber);\n    }\n    else {\n        notifyWatch(subscriber);\n    }\n}\nexport function notifyWatch(watch) {\n    const containerEl = getContainer(watch.el);\n    const state = getContainerState(containerEl);\n    watch.f |= WatchFlags.IsDirty;\n    const activeRendering = state.hostsRendering !== undefined;\n    if (activeRendering) {\n        state.watchStaging.add(watch);\n    }\n    else {\n        state.watchNext.add(watch);\n        scheduleFrame(containerEl, state);\n    }\n}\nfunction verifySerializable(value) {\n    if (value == null) {\n        return null;\n    }\n    if (shouldSerialize(value)) {\n        const type = typeof value;\n        if (type === 'object') {\n            if (Array.isArray(value))\n                return;\n            if (Object.getPrototypeOf(value) === Object.prototype)\n                return;\n            if (isQrl(value))\n                return;\n            if (isElement(value))\n                return;\n            if (isDocument(value))\n                return;\n        }\n        if (['boolean', 'string', 'number'].includes(type)) {\n            return;\n        }\n        throw qError(QError.TODO, 'Only primitive and object literals can be serialized', value);\n    }\n}\nconst noSerializeSet = /*#__PURE__*/ new WeakSet();\nexport function shouldSerialize(obj) {\n    if (obj !== null && (typeof obj == 'object' || typeof obj === 'function')) {\n        return !noSerializeSet.has(obj);\n    }\n    return true;\n}\n// <docs markdown=\"../readme.md#noSerialize\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#noSerialize instead)\n/**\n * @alpha\n */\n// </docs>\nexport function noSerialize(input) {\n    noSerializeSet.add(input);\n    return input;\n}\n/**\n * @alpha\n */\nexport function immutable(input) {\n    return Object.freeze(input);\n}\n/**\n * @alpha\n */\nexport function mutable(v) {\n    return {\n        [MUTABLE]: true,\n        v: unwrapSubscriber(v),\n    };\n}\nexport function isConnected(sub) {\n    if (isElement(sub)) {\n        return !!tryGetContext(sub) || sub.isConnected;\n    }\n    else {\n        return isConnected(sub.el);\n    }\n}\nconst MUTABLE = Symbol('mutable');\nexport const isMutable = (v) => {\n    return v && typeof v === 'object' && v[MUTABLE] === true;\n};\n//# sourceMappingURL=data:application/json;base64,","import { QOjectOriginalProxy, QOjectTargetSymbol, SetSubscriber } from '../object/q-object';\n/**\n * @alpha\n */\nexport function wrapSubscriber(obj, subscriber) {\n    if (obj && typeof obj === 'object') {\n        const target = obj[QOjectTargetSymbol];\n        if (!target) {\n            return obj;\n        }\n        return new Proxy(obj, {\n            get(target, prop) {\n                if (prop === QOjectOriginalProxy) {\n                    return target;\n                }\n                target[SetSubscriber] = subscriber;\n                return target[prop];\n            },\n            ownKeys(target) {\n                target[SetSubscriber] = subscriber;\n                return Reflect.ownKeys(target);\n            },\n        });\n    }\n    return obj;\n}\n/**\n * @alpha\n */\nexport function unwrapSubscriber(obj) {\n    if (obj && typeof obj === 'object') {\n        const proxy = obj[QOjectOriginalProxy];\n        if (proxy) {\n            return proxy;\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLXN1YnNjcmliZXIuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL3F3aWsvc3JjL2NvcmUvdXNlL3VzZS1zdWJzY3JpYmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxrQkFBa0IsRUFBRSxhQUFhLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQVE1Rjs7R0FFRztBQUNILE1BQU0sVUFBVSxjQUFjLENBQWUsR0FBTSxFQUFFLFVBQXNCO0lBQ3pFLElBQUksR0FBRyxJQUFJLE9BQU8sR0FBRyxLQUFLLFFBQVEsRUFBRTtRQUNsQyxNQUFNLE1BQU0sR0FBSSxHQUFXLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUNoRCxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ1gsT0FBTyxHQUFHLENBQUM7U0FDWjtRQUNELE9BQU8sSUFBSSxLQUFLLENBQU0sR0FBRyxFQUFFO1lBQ3pCLEdBQUcsQ0FBQyxNQUFNLEVBQUUsSUFBSTtnQkFDZCxJQUFJLElBQUksS0FBSyxtQkFBbUIsRUFBRTtvQkFDaEMsT0FBTyxNQUFNLENBQUM7aUJBQ2Y7Z0JBQ0QsTUFBTSxDQUFDLGFBQWEsQ0FBQyxHQUFHLFVBQVUsQ0FBQztnQkFDbkMsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDdEIsQ0FBQztZQUNELE9BQU8sQ0FBQyxNQUFNO2dCQUNaLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBRyxVQUFVLENBQUM7Z0JBQ25DLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUNqQyxDQUFDO1NBQ0YsQ0FBQyxDQUFDO0tBQ0o7SUFDRCxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUM7QUFFRDs7R0FFRztBQUNILE1BQU0sVUFBVSxnQkFBZ0IsQ0FBZSxHQUFNO0lBQ25ELElBQUksR0FBRyxJQUFJLE9BQU8sR0FBRyxLQUFLLFFBQVEsRUFBRTtRQUNsQyxNQUFNLEtBQUssR0FBSSxHQUFXLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUNoRCxJQUFJLEtBQUssRUFBRTtZQUNULE9BQU8sS0FBSyxDQUFDO1NBQ2Q7S0FDRjtJQUNELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFFPamVjdE9yaWdpbmFsUHJveHksIFFPamVjdFRhcmdldFN5bWJvbCwgU2V0U3Vic2NyaWJlciB9IGZyb20gJy4uL29iamVjdC9xLW9iamVjdCc7XG5pbXBvcnQgdHlwZSB7IFdhdGNoRGVzY3JpcHRvciB9IGZyb20gJy4uL3dhdGNoL3dhdGNoLnB1YmxpYyc7XG5cbi8qKlxuICogQGFscGhhXG4gKi9cbmV4cG9ydCB0eXBlIFN1YnNjcmliZXIgPSBXYXRjaERlc2NyaXB0b3IgfCBFbGVtZW50O1xuXG4vKipcbiAqIEBhbHBoYVxuICovXG5leHBvcnQgZnVuY3Rpb24gd3JhcFN1YnNjcmliZXI8VCBleHRlbmRzIHt9PihvYmo6IFQsIHN1YnNjcmliZXI6IFN1YnNjcmliZXIpIHtcbiAgaWYgKG9iaiAmJiB0eXBlb2Ygb2JqID09PSAnb2JqZWN0Jykge1xuICAgIGNvbnN0IHRhcmdldCA9IChvYmogYXMgYW55KVtRT2plY3RUYXJnZXRTeW1ib2xdO1xuICAgIGlmICghdGFyZ2V0KSB7XG4gICAgICByZXR1cm4gb2JqO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFByb3h5PGFueT4ob2JqLCB7XG4gICAgICBnZXQodGFyZ2V0LCBwcm9wKSB7XG4gICAgICAgIGlmIChwcm9wID09PSBRT2plY3RPcmlnaW5hbFByb3h5KSB7XG4gICAgICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICAgICAgfVxuICAgICAgICB0YXJnZXRbU2V0U3Vic2NyaWJlcl0gPSBzdWJzY3JpYmVyO1xuICAgICAgICByZXR1cm4gdGFyZ2V0W3Byb3BdO1xuICAgICAgfSxcbiAgICAgIG93bktleXModGFyZ2V0KSB7XG4gICAgICAgIHRhcmdldFtTZXRTdWJzY3JpYmVyXSA9IHN1YnNjcmliZXI7XG4gICAgICAgIHJldHVybiBSZWZsZWN0Lm93bktleXModGFyZ2V0KTtcbiAgICAgIH0sXG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIG9iajtcbn1cblxuLyoqXG4gKiBAYWxwaGFcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVud3JhcFN1YnNjcmliZXI8VCBleHRlbmRzIHt9PihvYmo6IFQpIHtcbiAgaWYgKG9iaiAmJiB0eXBlb2Ygb2JqID09PSAnb2JqZWN0Jykge1xuICAgIGNvbnN0IHByb3h5ID0gKG9iaiBhcyBhbnkpW1FPamVjdE9yaWdpbmFsUHJveHldO1xuICAgIGlmIChwcm94eSkge1xuICAgICAgcmV0dXJuIHByb3h5O1xuICAgIH1cbiAgfVxuICByZXR1cm4gb2JqO1xufVxuIl19","import { EMPTY_ARRAY } from '../util/flyweight';\nimport { isQrl, QRLInternal } from './qrl-class';\nimport { assertEqual } from '../assert/assert';\nimport { getDocument } from '../util/dom';\nimport { logError } from '../util/log';\nimport { then } from '../util/promises';\nimport { getPlatform } from '../platform/platform';\nimport { unwrapSubscriber } from '../use/use-subscriber';\nimport { tryGetInvokeContext } from '../use/use-core';\nlet runtimeSymbolId = 0;\nconst RUNTIME_QRL = '/runtimeQRL';\nconst INLINED_QRL = '/inlinedQRL';\n// https://regexr.com/68v72\nconst EXTRACT_IMPORT_PATH = /\\(\\s*(['\"])([^\\1]+)\\1\\s*\\)/;\n// https://regexr.com/690ds\nconst EXTRACT_SELF_IMPORT = /Promise\\s*\\.\\s*resolve/;\n// https://regexr.com/6a83h\nconst EXTRACT_FILE_NAME = /[\\\\/(]([\\w\\d.\\-_]+\\.(js|ts)x?):/;\nexport function toInternalQRL(qrl) {\n    assertEqual(isQrl(qrl), true);\n    return qrl;\n}\n/**\n * Lazy-load a `QRL` symbol and return the lazy-loaded value.\n *\n * @see `QRL`\n *\n * @param element - Location of the URL to resolve against. This is needed to take `q:base` into\n * account.\n * @param qrl - QRL to load.\n * @returns A resolved QRL value as a Promise.\n */\nexport function qrlImport(element, qrl) {\n    const qrl_ = toInternalQRL(qrl);\n    if (qrl_.symbolRef)\n        return qrl_.symbolRef;\n    if (qrl_.symbolFn) {\n        return (qrl_.symbolRef = qrl_\n            .symbolFn()\n            .then((module) => (qrl_.symbolRef = module[qrl_.symbol])));\n    }\n    else {\n        if (!element) {\n            throw new Error(`QRL '${qrl_.chunk}#${qrl_.symbol || 'default'}' does not have an attached container`);\n        }\n        const symbol = getPlatform(element).importSymbol(element, qrl_.chunk, qrl_.symbol);\n        return (qrl_.symbolRef = then(symbol, (ref) => {\n            return (qrl_.symbolRef = ref);\n        }));\n    }\n}\n// <docs markdown=\"../readme.md#qrl\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#qrl instead)\n/**\n * Used by Qwik Optimizer to point to lazy-loaded resources.\n *\n * This function should be used by the Qwik Optimizer only. The function should not be directly\n * referred to in the source code of the application.\n *\n * @see `QRL`, `$(...)`\n *\n * @param chunkOrFn - Chunk name (or function which is stringified to extract chunk name)\n * @param symbol - Symbol to lazy load\n * @param lexicalScopeCapture - a set of lexically scoped variables to capture.\n * @alpha\n */\n// </docs>\nexport function qrl(chunkOrFn, symbol, lexicalScopeCapture = EMPTY_ARRAY) {\n    let chunk;\n    let symbolFn = null;\n    if (typeof chunkOrFn === 'string') {\n        chunk = chunkOrFn;\n    }\n    else if (typeof chunkOrFn === 'function') {\n        symbolFn = chunkOrFn;\n        let match;\n        const srcCode = String(chunkOrFn);\n        if ((match = srcCode.match(EXTRACT_IMPORT_PATH)) && match[2]) {\n            chunk = match[2];\n        }\n        else if ((match = srcCode.match(EXTRACT_SELF_IMPORT))) {\n            const ref = 'QWIK-SELF';\n            const frames = new Error(ref).stack.split('\\n');\n            const start = frames.findIndex((f) => f.includes(ref));\n            const frame = frames[start + 2];\n            match = frame.match(EXTRACT_FILE_NAME);\n            if (!match) {\n                chunk = 'main';\n            }\n            else {\n                chunk = match[1];\n            }\n        }\n        else {\n            throw new Error('Q-ERROR: Dynamic import not found: ' + srcCode);\n        }\n    }\n    else {\n        throw new Error('Q-ERROR: Unknown type argument: ' + chunkOrFn);\n    }\n    // Unwrap subscribers\n    unwrapLexicalScope(lexicalScopeCapture);\n    const qrl = new QRLInternal(chunk, symbol, null, symbolFn, null, lexicalScopeCapture);\n    const ctx = tryGetInvokeContext();\n    if (ctx && ctx.element) {\n        qrl.setContainer(ctx.element);\n    }\n    return qrl;\n}\nexport function runtimeQrl(symbol, lexicalScopeCapture = EMPTY_ARRAY) {\n    return new QRLInternal(RUNTIME_QRL, 's' + runtimeSymbolId++, symbol, null, null, lexicalScopeCapture);\n}\n/**\n * @alpha\n */\nexport function inlinedQrl(symbol, symbolName, lexicalScopeCapture = EMPTY_ARRAY) {\n    // Unwrap subscribers\n    return new QRLInternal(INLINED_QRL, symbolName, symbol, null, null, unwrapLexicalScope(lexicalScopeCapture));\n}\nfunction unwrapLexicalScope(lexicalScope) {\n    if (Array.isArray(lexicalScope)) {\n        for (let i = 0; i < lexicalScope.length; i++) {\n            lexicalScope[i] = unwrapSubscriber(lexicalScope[i]);\n        }\n    }\n    return lexicalScope;\n}\nexport function stringifyQRL(qrl, opts = {}) {\n    const qrl_ = toInternalQRL(qrl);\n    let symbol = qrl_.symbol;\n    let chunk = qrl_.chunk;\n    const refSymbol = qrl_.refSymbol ?? symbol;\n    const platform = opts.platform;\n    const element = opts.element;\n    if (platform) {\n        const result = platform.chunkForSymbol(refSymbol);\n        if (result) {\n            chunk = result[1];\n            if (!qrl_.refSymbol) {\n                symbol = result[0];\n            }\n        }\n    }\n    const parts = [chunk];\n    if (symbol && symbol !== 'default') {\n        parts.push('#', symbol);\n    }\n    const capture = qrl_.capture;\n    const captureRef = qrl_.captureRef;\n    if (opts.getObjId) {\n        if (captureRef && captureRef.length) {\n            const capture = captureRef.map(opts.getObjId);\n            parts.push(`[${capture.join(' ')}]`);\n        }\n    }\n    else if (capture && capture.length > 0) {\n        parts.push(`[${capture.join(' ')}]`);\n    }\n    const qrlString = parts.join('');\n    if (qrl_.chunk === RUNTIME_QRL && element) {\n        const qrls = element.__qrls__ || (element.__qrls__ = new Set());\n        qrls.add(qrl);\n    }\n    return qrlString;\n}\nexport function qrlToUrl(element, qrl) {\n    return new URL(stringifyQRL(qrl), getDocument(element).baseURI);\n}\n/**\n * `./chunk#symbol|symbol.propA.propB|[captures]\n */\nexport function parseQRL(qrl, el) {\n    const endIdx = qrl.length;\n    const hashIdx = indexOf(qrl, 0, '#');\n    const captureIdx = indexOf(qrl, hashIdx, '[');\n    const chunkEndIdx = Math.min(hashIdx, captureIdx);\n    const chunk = qrl.substring(0, chunkEndIdx);\n    const symbolStartIdx = hashIdx == endIdx ? hashIdx : hashIdx + 1;\n    const symbolEndIdx = captureIdx;\n    const symbol = symbolStartIdx == symbolEndIdx ? 'default' : qrl.substring(symbolStartIdx, symbolEndIdx);\n    const captureStartIdx = captureIdx;\n    const captureEndIdx = endIdx;\n    const capture = captureStartIdx === captureEndIdx\n        ? EMPTY_ARRAY\n        : qrl.substring(captureStartIdx + 1, captureEndIdx - 1).split(' ');\n    if (chunk === RUNTIME_QRL) {\n        logError(`Q-ERROR: '${qrl}' is runtime but no instance found on element.`);\n    }\n    const iQrl = new QRLInternal(chunk, symbol, null, null, capture, null);\n    if (el) {\n        iQrl.setContainer(el);\n    }\n    return iQrl;\n}\nfunction indexOf(text, startIdx, char) {\n    const endIdx = text.length;\n    const charIdx = text.indexOf(char, startIdx == endIdx ? 0 : startIdx);\n    return charIdx == -1 ? endIdx : charIdx;\n}\nexport function toQrlOrError(symbolOrQrl) {\n    if (!isQrl(symbolOrQrl)) {\n        if (typeof symbolOrQrl == 'function' || typeof symbolOrQrl == 'string') {\n            symbolOrQrl = runtimeQrl(symbolOrQrl);\n        }\n        else {\n            // TODO(misko): centralize\n            throw new Error(`Q-ERROR Only 'function's and 'string's are supported.`);\n        }\n    }\n    return symbolOrQrl;\n}\n//# sourceMappingURL=data:application/json;base64,","import { toQrlOrError } from '../import/qrl';\nimport { $, implicit$FirstArg } from '../import/qrl.public';\nimport { qPropWriteQRL } from '../props/props-on';\nimport { useWaitOn } from '../use/use-core';\nimport { useHostElement } from '../use/use-host-element.public';\nimport { ComponentScopedStyles, OnRenderProp } from '../util/markers';\nimport { styleKey } from './qrl-styles';\nimport { getContext } from '../props/props';\nimport { jsx } from '../render/jsx/jsx-runtime';\nimport { useSequentialScope } from '../use/use-store.public';\nimport { WatchFlags } from '../watch/watch.public';\n// <docs markdown=\"../readme.md#useCleanup\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useCleanup instead)\n/**\n * A lazy-loadable reference to a component's cleanup hook.\n *\n * Invoked when the component is destroyed (removed from render tree), or paused as part of the\n * SSR serialization.\n *\n * Can be used to release resouces, abort network requets, stop timers...\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   useCleanup$(() => {\n *     // Executed after SSR (pause) or when the component gets removed from the DOM.\n *     // Can be used to release resouces, abort network requets, stop timers...\n *     console.log('component is destroyed');\n *   });\n *   return <div>Hello world</div>;\n * });\n * ```\n *\n * @alpha\n */\n// </docs>\nexport function useCleanupQrl(unmountFn) {\n    const [watch, setWatch, i] = useSequentialScope();\n    if (!watch) {\n        const el = useHostElement();\n        const watch = {\n            qrl: unmountFn,\n            el,\n            f: WatchFlags.IsCleanup,\n            i,\n        };\n        setWatch(true);\n        getContext(el).watches.push(watch);\n    }\n}\n// <docs markdown=\"../readme.md#useCleanup\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useCleanup instead)\n/**\n * A lazy-loadable reference to a component's cleanup hook.\n *\n * Invoked when the component is destroyed (removed from render tree), or paused as part of the\n * SSR serialization.\n *\n * Can be used to release resouces, abort network requets, stop timers...\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   useCleanup$(() => {\n *     // Executed after SSR (pause) or when the component gets removed from the DOM.\n *     // Can be used to release resouces, abort network requets, stop timers...\n *     console.log('component is destroyed');\n *   });\n *   return <div>Hello world</div>;\n * });\n * ```\n *\n * @alpha\n */\n// </docs>\nexport const useCleanup$ = implicit$FirstArg(useCleanupQrl);\n// <docs markdown=\"../readme.md#useResume\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useResume instead)\n/**\n * A lazy-loadable reference to a component's on resume hook.\n *\n * The hook is eagerly invoked when the application resumes on the client. Because it is called\n * eagerly, this allows the component to resume even if no user interaction has taken place.\n *\n * Only called in the client.\n * Only called once.\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   useResume$(() => {\n *     // Eagerly invoked when the application resumes on the client\n *     console.log('called once in client');\n *   });\n *   return <div>Hello world</div>;\n * });\n * ```\n *\n * @see `useVisible`, `useClientEffect`\n *\n * @alpha\n */\n// </docs>\nexport function useResumeQrl(resumeFn) {\n    useOn('qinit', resumeFn);\n}\n// <docs markdown=\"../readme.md#useResume\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useResume instead)\n/**\n * A lazy-loadable reference to a component's on resume hook.\n *\n * The hook is eagerly invoked when the application resumes on the client. Because it is called\n * eagerly, this allows the component to resume even if no user interaction has taken place.\n *\n * Only called in the client.\n * Only called once.\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   useResume$(() => {\n *     // Eagerly invoked when the application resumes on the client\n *     console.log('called once in client');\n *   });\n *   return <div>Hello world</div>;\n * });\n * ```\n *\n * @see `useVisible`, `useClientEffect`\n *\n * @alpha\n */\n// </docs>\nexport const useResume$ = implicit$FirstArg(useResumeQrl);\n// <docs markdown=\"../readme.md#useVisible\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useVisible instead)\n/**\n * A lazy-loadable reference to a component's on visible hook.\n *\n * The hook is lazily invoked when the component becomes visible in the browser viewport.\n *\n * Only called in the client.\n * Only called once.\n *\n * @see `useResume`, `useClientEffect`\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   const store = useStore({\n *     isVisible: false,\n *   });\n *   useVisible$(() => {\n *     // Invoked once when the component is visible in the browser's viewport\n *     console.log('called once in client when visible');\n *     store.isVisible = true;\n *   });\n *   return <div>{store.isVisible}</div>;\n * });\n * ```\n *\n * @alpha\n */\n// </docs>\nexport function useVisibleQrl(resumeFn) {\n    useOn('qvisible', resumeFn);\n}\n// <docs markdown=\"../readme.md#useVisible\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useVisible instead)\n/**\n * A lazy-loadable reference to a component's on visible hook.\n *\n * The hook is lazily invoked when the component becomes visible in the browser viewport.\n *\n * Only called in the client.\n * Only called once.\n *\n * @see `useResume`, `useClientEffect`\n *\n * ```tsx\n * const Cmp = component$(() => {\n *   const store = useStore({\n *     isVisible: false,\n *   });\n *   useVisible$(() => {\n *     // Invoked once when the component is visible in the browser's viewport\n *     console.log('called once in client when visible');\n *     store.isVisible = true;\n *   });\n *   return <div>{store.isVisible}</div>;\n * });\n * ```\n *\n * @alpha\n */\n// </docs>\nexport const useVisible$ = implicit$FirstArg(useVisibleQrl);\n// <docs markdown=\"../readme.md#useOn\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useOn instead)\n/**\n * Register a listener on the current component's host element.\n *\n * Used to programmatically add event listeners. Useful from custom `use*` methods, which do not\n * have access to the JSX. Otherwise it's adding a JSX listener in the `<Host>` is a better idea.\n *\n * @see `useOn`, `useOnWindow`, `useOnDocument`.\n *\n * @alpha\n */\n// </docs>\nexport function useOn(event, eventFn) {\n    const el = useHostElement();\n    const ctx = getContext(el);\n    qPropWriteQRL(undefined, ctx, `on:${event}`, eventFn);\n}\n// <docs markdown=\"../readme.md#useOnDocument\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useOnDocument instead)\n/**\n * Register a listener on `document`.\n *\n * Used to programmatically add event listeners. Useful from custom `use*` methods, which do not\n * have access to the JSX.\n *\n * @see `useOn`, `useOnWindow`, `useOnDocument`.\n *\n * ```tsx\n * function useScroll() {\n *   useOnDocument(\n *     'scroll',\n *     $(() => {\n *       console.log('body scrolled');\n *     })\n *   );\n * }\n *\n * const Cmp = component$(() => {\n *   useScroll();\n *   return <Host>Profit!</Host>;\n * });\n * ```\n *\n * @alpha\n */\n// </docs>\nexport function useOnDocument(event, eventQrl) {\n    const el = useHostElement();\n    const ctx = getContext(el);\n    qPropWriteQRL(undefined, ctx, `on-document:${event}`, eventQrl);\n}\n// <docs markdown=\"../readme.md#useOnWindow\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useOnWindow instead)\n/**\n * Register a listener on `window`.\n *\n * Used to programmatically add event listeners. Useful from custom `use*` methods, which do not\n * have access to the JSX.\n *\n * @see `useOn`, `useOnWindow`, `useOnDocument`.\n *\n * ```tsx\n * function useAnalytics() {\n *   useOnWindow(\n *     'popstate',\n *     $(() => {\n *       console.log('navigation happened');\n *       // report to analytics\n *     })\n *   );\n * }\n *\n * const Cmp = component$(() => {\n *   useAnalytics();\n *   return <Host>Profit!</Host>;\n * });\n * ```\n *\n * @alpha\n */\n// </docs>\nexport function useOnWindow(event, eventFn) {\n    const el = useHostElement();\n    const ctx = getContext(el);\n    qPropWriteQRL(undefined, ctx, `on-window:${event}`, eventFn);\n}\n// <docs markdown=\"../readme.md#useStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useStyles instead)\n/**\n * A lazy-loadable reference to a component's styles.\n *\n * Component styles allow Qwik to lazy load the style information for the component only when\n * needed. (And avoid double loading it in case of SSR hydration.)\n *\n * ```tsx\n * import styles from './code-block.css?inline';\n *\n * export const CmpStyles = component$(() => {\n *   useStyles$(styles);\n *\n *   return <Host>Some text</Host>;\n * });\n * ```\n *\n * @see `useScopedStyles`.\n *\n * @public\n */\n// </docs>\nexport function useStylesQrl(styles) {\n    _useStyles(styles, false);\n}\n// <docs markdown=\"../readme.md#useStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useStyles instead)\n/**\n * A lazy-loadable reference to a component's styles.\n *\n * Component styles allow Qwik to lazy load the style information for the component only when\n * needed. (And avoid double loading it in case of SSR hydration.)\n *\n * ```tsx\n * import styles from './code-block.css?inline';\n *\n * export const CmpStyles = component$(() => {\n *   useStyles$(styles);\n *\n *   return <Host>Some text</Host>;\n * });\n * ```\n *\n * @see `useScopedStyles`.\n *\n * @public\n */\n// </docs>\nexport const useStyles$ = implicit$FirstArg(useStylesQrl);\n// <docs markdown=\"../readme.md#useScopedStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useScopedStyles instead)\n/**\n * @see `useStyles`.\n *\n * @alpha\n */\n// </docs>\nexport function useScopedStylesQrl(styles) {\n    _useStyles(styles, true);\n}\n// <docs markdown=\"../readme.md#useScopedStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#useScopedStyles instead)\n/**\n * @see `useStyles`.\n *\n * @alpha\n */\n// </docs>\nexport const useScopedStyles$ = implicit$FirstArg(useScopedStylesQrl);\n// <docs markdown=\"../readme.md#component\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#component instead)\n/**\n * Declare a Qwik component that can be used to create UI.\n *\n * Use `component$` to declare a Qwik component. A Qwik component is a special kind of component\n * that allows the Qwik framework to lazy load and execute the component independently of other\n * Qwik components as well as lazy load the component's life-cycle hooks and event handlers.\n *\n * Side note: You can also declare regular (standard JSX) components that will have standard\n * synchronous behavior.\n *\n * Qwik component is a facade that describes how the component should be used without forcing the\n * implementation of the component to be eagerly loaded. A minimum Qwik definition consists of:\n *\n * ### Example:\n *\n * An example showing how to create a counter component:\n *\n * ```tsx\n * export interface CounterProps {\n *   initialValue?: number;\n *   step?: number;\n * }\n * export const Counter = component$((props: CounterProps) => {\n *   const state = useStore({ count: props.initialValue || 0 });\n *   return (\n *     <div>\n *       <span>{state.count}</span>\n *       <button onClick$={() => (state.count += props.step || 1)}>+</button>\n *     </div>\n *   );\n * });\n * ```\n *\n * - `component$` is how a component gets declared.\n * - `{ value?: number; step?: number }` declares the public (props) interface of the component.\n * - `{ count: number }` declares the private (state) interface of the component.\n *\n * The above can then be used like so:\n *\n * ```tsx\n * export const OtherComponent = component$(() => {\n *   return <Counter initialValue={100} />;\n * });\n * ```\n *\n * See also: `component`, `useCleanup`, `onResume`, `onPause`, `useOn`, `useOnDocument`,\n * `useOnWindow`, `useStyles`, `useScopedStyles`\n *\n * @public\n */\n// </docs>\nexport function componentQrl(onRenderQrl, options = {}) {\n    const tagName = options.tagName ?? 'div';\n    // Return a QComponent Factory function.\n    return function QSimpleComponent(props, key) {\n        const finalKey = onRenderQrl.getCanonicalSymbol() + ':' + (key ? key : '');\n        return jsx(tagName, { [OnRenderProp]: onRenderQrl, ...props }, finalKey);\n    };\n}\n// <docs markdown=\"../readme.md#component\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit ../readme.md#component instead)\n/**\n * Declare a Qwik component that can be used to create UI.\n *\n * Use `component$` to declare a Qwik component. A Qwik component is a special kind of component\n * that allows the Qwik framework to lazy load and execute the component independently of other\n * Qwik components as well as lazy load the component's life-cycle hooks and event handlers.\n *\n * Side note: You can also declare regular (standard JSX) components that will have standard\n * synchronous behavior.\n *\n * Qwik component is a facade that describes how the component should be used without forcing the\n * implementation of the component to be eagerly loaded. A minimum Qwik definition consists of:\n *\n * ### Example:\n *\n * An example showing how to create a counter component:\n *\n * ```tsx\n * export interface CounterProps {\n *   initialValue?: number;\n *   step?: number;\n * }\n * export const Counter = component$((props: CounterProps) => {\n *   const state = useStore({ count: props.initialValue || 0 });\n *   return (\n *     <div>\n *       <span>{state.count}</span>\n *       <button onClick$={() => (state.count += props.step || 1)}>+</button>\n *     </div>\n *   );\n * });\n * ```\n *\n * - `component$` is how a component gets declared.\n * - `{ value?: number; step?: number }` declares the public (props) interface of the component.\n * - `{ count: number }` declares the private (state) interface of the component.\n *\n * The above can then be used like so:\n *\n * ```tsx\n * export const OtherComponent = component$(() => {\n *   return <Counter initialValue={100} />;\n * });\n * ```\n *\n * See also: `component`, `useCleanup`, `onResume`, `onPause`, `useOn`, `useOnDocument`,\n * `useOnWindow`, `useStyles`, `useScopedStyles`\n *\n * @public\n */\n// </docs>\nexport function component$(onMount, options) {\n    return componentQrl($(onMount), options);\n}\nfunction _useStyles(styles, scoped) {\n    const [style, setStyle] = useSequentialScope();\n    if (style === true) {\n        return;\n    }\n    setStyle(true);\n    const styleQrl = toQrlOrError(styles);\n    const styleId = styleKey(styleQrl);\n    const hostElement = useHostElement();\n    if (scoped) {\n        hostElement.setAttribute(ComponentScopedStyles, styleId);\n    }\n    useWaitOn(styleQrl.resolve(hostElement).then((styleText) => {\n        const task = {\n            type: 'style',\n            styleId,\n            content: scoped ? styleText.replace(/�/g, styleId) : styleText,\n        };\n        return task;\n    }));\n}\n//# sourceMappingURL=data:application/json;base64,","/* eslint-disable */\nimport { flattenArray } from '../../util/array';\nimport { EMPTY_ARRAY } from '../../util/flyweight';\nimport { JSXNodeImpl } from './jsx-runtime';\n/**\n * @public\n */\nexport function h(type, props, ...children) {\n    // Using legacy h() jsx transform and morphing it\n    // so it can use the modern vdom structure\n    // https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html\n    // https://www.typescriptlang.org/tsconfig#jsxImportSource\n    const normalizedProps = {\n        children: arguments.length > 2 ? flattenArray(children) : EMPTY_ARRAY,\n    };\n    let key;\n    let i;\n    for (i in props) {\n        if (i == 'key')\n            key = props[i];\n        else\n            normalizedProps[i] = props[i];\n    }\n    return new JSXNodeImpl(type, normalizedProps, key);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvcXdpay9zcmMvY29yZS9yZW5kZXIvanN4L2ZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDbkQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUk1Qzs7R0FFRztBQUNILE1BQU0sVUFBVSxDQUFDLENBQ2YsSUFBdUMsRUFDdkMsS0FBbUIsRUFDbkIsR0FBRyxRQUFlO0lBRWxCLGlEQUFpRDtJQUNqRCwwQ0FBMEM7SUFDMUMsNkVBQTZFO0lBQzdFLDBEQUEwRDtJQUUxRCxNQUFNLGVBQWUsR0FBUTtRQUMzQixRQUFRLEVBQUUsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVztLQUN0RSxDQUFDO0lBRUYsSUFBSSxHQUFRLENBQUM7SUFDYixJQUFJLENBQU0sQ0FBQztJQUVYLEtBQUssQ0FBQyxJQUFJLEtBQUssRUFBRTtRQUNmLElBQUksQ0FBQyxJQUFJLEtBQUs7WUFBRSxHQUFHLEdBQUksS0FBNkIsQ0FBQyxDQUFDLENBQUMsQ0FBQzs7WUFDbkQsZUFBZSxDQUFDLENBQUMsQ0FBQyxHQUFJLEtBQTZCLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDN0Q7SUFFRCxPQUFPLElBQUksV0FBVyxDQUFDLElBQUksRUFBRSxlQUFlLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFDckQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlICovXG5pbXBvcnQgeyBmbGF0dGVuQXJyYXkgfSBmcm9tICcuLi8uLi91dGlsL2FycmF5JztcbmltcG9ydCB7IEVNUFRZX0FSUkFZIH0gZnJvbSAnLi4vLi4vdXRpbC9mbHl3ZWlnaHQnO1xuaW1wb3J0IHsgSlNYTm9kZUltcGwgfSBmcm9tICcuL2pzeC1ydW50aW1lJztcbmltcG9ydCB0eXBlIHsgUXdpa0pTWCB9IGZyb20gJy4vdHlwZXMvanN4LXF3aWsnO1xuaW1wb3J0IHR5cGUgeyBGdW5jdGlvbkNvbXBvbmVudCwgSlNYTm9kZSB9IGZyb20gJy4vdHlwZXMvanN4LW5vZGUnO1xuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGg8UFJPUFMgZXh0ZW5kcyB7fSA9IHt9PihcbiAgdHlwZTogc3RyaW5nIHwgRnVuY3Rpb25Db21wb25lbnQ8UFJPUFM+LFxuICBwcm9wczogUFJPUFMgfCBudWxsLFxuICAuLi5jaGlsZHJlbjogYW55W11cbik6IEpTWE5vZGUge1xuICAvLyBVc2luZyBsZWdhY3kgaCgpIGpzeCB0cmFuc2Zvcm0gYW5kIG1vcnBoaW5nIGl0XG4gIC8vIHNvIGl0IGNhbiB1c2UgdGhlIG1vZGVybiB2ZG9tIHN0cnVjdHVyZVxuICAvLyBodHRwczovL3JlYWN0anMub3JnL2Jsb2cvMjAyMC8wOS8yMi9pbnRyb2R1Y2luZy10aGUtbmV3LWpzeC10cmFuc2Zvcm0uaHRtbFxuICAvLyBodHRwczovL3d3dy50eXBlc2NyaXB0bGFuZy5vcmcvdHNjb25maWcjanN4SW1wb3J0U291cmNlXG5cbiAgY29uc3Qgbm9ybWFsaXplZFByb3BzOiBhbnkgPSB7XG4gICAgY2hpbGRyZW46IGFyZ3VtZW50cy5sZW5ndGggPiAyID8gZmxhdHRlbkFycmF5KGNoaWxkcmVuKSA6IEVNUFRZX0FSUkFZLFxuICB9O1xuXG4gIGxldCBrZXk6IGFueTtcbiAgbGV0IGk6IGFueTtcblxuICBmb3IgKGkgaW4gcHJvcHMpIHtcbiAgICBpZiAoaSA9PSAna2V5Jykga2V5ID0gKHByb3BzIGFzIFJlY29yZDxzdHJpbmcsIGFueT4pW2ldO1xuICAgIGVsc2Ugbm9ybWFsaXplZFByb3BzW2ldID0gKHByb3BzIGFzIFJlY29yZDxzdHJpbmcsIGFueT4pW2ldO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBKU1hOb2RlSW1wbCh0eXBlLCBub3JtYWxpemVkUHJvcHMsIGtleSk7XG59XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgZGVjbGFyZSBuYW1lc3BhY2UgaCB7XG4gIGV4cG9ydCBmdW5jdGlvbiBoKHR5cGU6IGFueSk6IEpTWE5vZGU8YW55PjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGgodHlwZTogTm9kZSwgZGF0YTogYW55KTogSlNYTm9kZTxhbnk+O1xuICBleHBvcnQgZnVuY3Rpb24gaCh0eXBlOiBhbnksIHRleHQ6IHN0cmluZyk6IEpTWE5vZGU8YW55PjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGgodHlwZTogYW55LCBjaGlsZHJlbjogQXJyYXk8YW55Pik6IEpTWE5vZGU8YW55PjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGgodHlwZTogYW55LCBkYXRhOiBhbnksIHRleHQ6IHN0cmluZyk6IEpTWE5vZGU8YW55PjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGgoXG4gICAgdHlwZTogYW55LFxuICAgIGRhdGE6IGFueSxcbiAgICBjaGlsZHJlbjogQXJyYXk8SlNYTm9kZTxhbnk+IHwgdW5kZWZpbmVkIHwgbnVsbD5cbiAgKTogSlNYTm9kZTxhbnk+O1xuICBleHBvcnQgZnVuY3Rpb24gaChzZWw6IGFueSwgZGF0YTogYW55IHwgbnVsbCwgY2hpbGRyZW46IEpTWE5vZGU8YW55Pik6IEpTWE5vZGU8YW55PjtcblxuICBleHBvcnQgbmFtZXNwYWNlIEpTWCB7XG4gICAgZXhwb3J0IGludGVyZmFjZSBFbGVtZW50IGV4dGVuZHMgUXdpa0pTWC5FbGVtZW50IHt9XG4gICAgZXhwb3J0IGludGVyZmFjZSBJbnRyaW5zaWNBdHRyaWJ1dGVzIGV4dGVuZHMgUXdpa0pTWC5JbnRyaW5zaWNBdHRyaWJ1dGVzIHt9XG4gICAgZXhwb3J0IGludGVyZmFjZSBJbnRyaW5zaWNFbGVtZW50cyBleHRlbmRzIFF3aWtKU1guSW50cmluc2ljRWxlbWVudHMge31cbiAgICBleHBvcnQgaW50ZXJmYWNlIEVsZW1lbnRDaGlsZHJlbkF0dHJpYnV0ZSB7XG4gICAgICBjaGlsZHJlbj86IGFueTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==","import { jsx } from './jsx-runtime';\n/**\n * @public\n */\nexport const Slot = (props) => {\n    const hasChildren = props.children || (Array.isArray(props.children) && props.children.length > 0);\n    const newChildrem = !hasChildren\n        ? []\n        : jsx('q:fallback', {\n            children: props.children,\n        });\n    return jsx('q:slot', {\n        name: props.name,\n        children: newChildrem,\n    }, props.name);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xvdC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL3F3aWsvc3JjL2NvcmUvcmVuZGVyL2pzeC9zbG90LnB1YmxpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBR3BDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sSUFBSSxHQUdaLENBQUMsS0FBSyxFQUFFLEVBQUU7SUFDYixNQUFNLFdBQVcsR0FDZixLQUFLLENBQUMsUUFBUSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLElBQUksS0FBSyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDakYsTUFBTSxXQUFXLEdBQUcsQ0FBQyxXQUFXO1FBQzlCLENBQUMsQ0FBQyxFQUFFO1FBQ0osQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUU7WUFDaEIsUUFBUSxFQUFFLEtBQUssQ0FBQyxRQUFRO1NBQ3pCLENBQUMsQ0FBQztJQUVQLE9BQU8sR0FBRyxDQUNSLFFBQVEsRUFDUjtRQUNFLElBQUksRUFBRSxLQUFLLENBQUMsSUFBSTtRQUNoQixRQUFRLEVBQUUsV0FBVztLQUN0QixFQUNELEtBQUssQ0FBQyxJQUFJLENBQ1gsQ0FBQztBQUNKLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGpzeCB9IGZyb20gJy4vanN4LXJ1bnRpbWUnO1xuaW1wb3J0IHR5cGUgeyBGdW5jdGlvbkNvbXBvbmVudCB9IGZyb20gJy4vdHlwZXMvanN4LW5vZGUnO1xuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGNvbnN0IFNsb3Q6IEZ1bmN0aW9uQ29tcG9uZW50PHtcbiAgbmFtZT86IHN0cmluZztcbiAgY2hpbGRyZW4/OiBhbnk7XG59PiA9IChwcm9wcykgPT4ge1xuICBjb25zdCBoYXNDaGlsZHJlbiA9XG4gICAgcHJvcHMuY2hpbGRyZW4gfHwgKEFycmF5LmlzQXJyYXkocHJvcHMuY2hpbGRyZW4pICYmIHByb3BzLmNoaWxkcmVuLmxlbmd0aCA+IDApO1xuICBjb25zdCBuZXdDaGlsZHJlbSA9ICFoYXNDaGlsZHJlblxuICAgID8gW11cbiAgICA6IGpzeCgncTpmYWxsYmFjaycsIHtcbiAgICAgICAgY2hpbGRyZW46IHByb3BzLmNoaWxkcmVuLFxuICAgICAgfSk7XG5cbiAgcmV0dXJuIGpzeChcbiAgICAncTpzbG90JyxcbiAgICB7XG4gICAgICBuYW1lOiBwcm9wcy5uYW1lLFxuICAgICAgY2hpbGRyZW46IG5ld0NoaWxkcmVtLFxuICAgIH0sXG4gICAgcHJvcHMubmFtZVxuICApO1xufTtcbiJdfQ==","/**\n * QWIK_VERSION\n * @public\n */\nexport const version = globalThis.QWIK_VERSION;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVyc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvcXdpay9zcmMvY29yZS92ZXJzaW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRztBQUNILE1BQU0sQ0FBQyxNQUFNLE9BQU8sR0FBSSxVQUFrQixDQUFDLFlBQXNCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFFXSUtfVkVSU0lPTlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgY29uc3QgdmVyc2lvbiA9IChnbG9iYWxUaGlzIGFzIGFueSkuUVdJS19WRVJTSU9OIGFzIHN0cmluZztcbiJdfQ==","import { isDocument } from '../util/element';\nimport { executeContext, printRenderStats } from './cursor';\nimport { isJSXNode, jsx, processNode } from './jsx/jsx-runtime';\nimport { visitJsxNode } from './render';\nimport { getContainerState } from './notify-render';\nimport { getDocument } from '../util/dom';\nimport { qDev, qTest } from '../util/qdev';\nimport { version } from '../version';\nimport { QContainerAttr } from '../util/markers';\nimport { logError } from '../util/log';\nimport { runWatch, WatchFlags } from '../watch/watch.public';\nimport { appendQwikDevTools, getContext } from '../props/props';\n/**\n * Render JSX.\n *\n * Use this method to render JSX. This function does reconciling which means\n * it always tries to reuse what is already in the DOM (rather then destroy and\n * recrate content.)\n *\n * @param parent - Element which will act as a parent to `jsxNode`. When\n *     possible the rendering will try to reuse existing nodes.\n * @param jsxNode - JSX to render\n * @alpha\n */\nexport async function render(parent, jsxNode) {\n    // If input is not JSX, convert it\n    if (!isJSXNode(jsxNode)) {\n        jsxNode = jsx(jsxNode, null);\n    }\n    const doc = getDocument(parent);\n    const containerEl = getElement(parent);\n    if (qDev && containerEl.hasAttribute('q:container')) {\n        logError('You can render over a existing q:container. Skipping render().');\n        return;\n    }\n    injectQContainer(containerEl);\n    const containerState = getContainerState(containerEl);\n    const ctx = {\n        doc,\n        containerState,\n        hostElements: new Set(),\n        operations: [],\n        roots: [parent],\n        components: [],\n        containerEl,\n        perf: {\n            visited: 0,\n            timing: [],\n        },\n    };\n    await visitJsxNode(ctx, parent, processNode(jsxNode), false);\n    executeContext(ctx);\n    if (!qTest) {\n        injectQwikSlotCSS(parent);\n    }\n    if (qDev) {\n        appendQwikDevTools(containerEl);\n        if (typeof window !== 'undefined' && window.document != null) {\n            printRenderStats(ctx);\n        }\n    }\n    const promises = [];\n    ctx.hostElements.forEach((host) => {\n        const elCtx = getContext(host);\n        elCtx.watches.forEach((watch) => {\n            if (watch.f & WatchFlags.IsDirty) {\n                promises.push(runWatch(watch, containerState));\n            }\n        });\n    });\n    await Promise.all(promises);\n    return ctx;\n}\nexport function injectQwikSlotCSS(docOrElm) {\n    const doc = getDocument(docOrElm);\n    const element = isDocument(docOrElm) ? docOrElm.head : docOrElm;\n    const style = doc.createElement('style');\n    style.setAttribute('id', 'qwik/base-styles');\n    style.textContent = `q\\\\:slot{display:contents}q\\\\:fallback{display:none}q\\\\:fallback:last-child{display:contents}`;\n    element.insertBefore(style, element.firstChild);\n}\nexport function getElement(docOrElm) {\n    return isDocument(docOrElm) ? docOrElm.documentElement : docOrElm;\n}\nexport function injectQContainer(containerEl) {\n    containerEl.setAttribute('q:version', version || '');\n    containerEl.setAttribute(QContainerAttr, 'resumed');\n}\n//# sourceMappingURL=data:application/json;base64,","import { getInvokeContext } from './use-core';\nimport { useSequentialScope } from './use-store.public';\nimport { setAttribute } from '../render/cursor';\nimport { fromCamelToKebabCase } from '../util/case';\nimport { getContext } from '../props/props';\nimport { unwrapSubscriber, wrapSubscriber } from './use-subscriber';\nimport { useHostElement } from './use-host-element.public';\nimport { QCtxAttr } from '../util/markers';\n/**\n * @alpha\n */\nexport function createContext(name) {\n    return Object.freeze({\n        id: fromCamelToKebabCase(name),\n    });\n}\n/**\n * @alpha\n */\nexport function useContextProvider(context, newValue) {\n    const [value, setValue] = useSequentialScope();\n    if (value) {\n        return;\n    }\n    const invokeContext = getInvokeContext();\n    const hostElement = invokeContext.hostElement;\n    const renderCtx = invokeContext.renderCtx;\n    const ctx = getContext(hostElement);\n    let contexts = ctx.contexts;\n    if (!contexts) {\n        ctx.contexts = contexts = new Map();\n    }\n    newValue = unwrapSubscriber(newValue);\n    contexts.set(context.id, newValue);\n    const serializedContexts = [];\n    contexts.forEach((_, key) => {\n        serializedContexts.push(`${key}`);\n    });\n    setAttribute(renderCtx, hostElement, QCtxAttr, serializedContexts.join(' '));\n    setValue(true);\n}\n/**\n * @alpha\n */\nexport function useContext(context) {\n    const value = _useContext(context);\n    return wrapSubscriber(value, useHostElement());\n}\nexport function _useContext(context) {\n    const [value, setValue] = useSequentialScope();\n    if (!value) {\n        const invokeContext = getInvokeContext();\n        let hostElement = invokeContext.hostElement;\n        const components = invokeContext.renderCtx.components;\n        for (let i = components.length - 1; i >= 0; i--) {\n            hostElement = components[i].hostElement;\n            const ctx = getContext(components[i].hostElement);\n            if (ctx.contexts) {\n                const found = ctx.contexts.get(context.id);\n                if (found) {\n                    setValue(found);\n                    return found;\n                }\n            }\n        }\n        const foundEl = hostElement.closest(`[q\\\\:ctx*=\"${context.id}\"]`);\n        if (foundEl) {\n            const value = getContext(foundEl).contexts.get(context.id);\n            if (value) {\n                setValue(value);\n                return value;\n            }\n        }\n        throw new Error(`not found state for useContext: ${context.id}`);\n    }\n    return value;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWNvbnRleHQuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInBhY2thZ2VzL3F3aWsvc3JjL2NvcmUvdXNlL3VzZS1jb250ZXh0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUM5QyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ3BELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM1QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDcEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzNELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQVUzQzs7R0FFRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQXVCLElBQVk7SUFDOUQsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDO1FBQ25CLEVBQUUsRUFBRSxvQkFBb0IsQ0FBQyxJQUFJLENBQUM7S0FDeEIsQ0FBQyxDQUFDO0FBQ1osQ0FBQztBQUVEOztHQUVHO0FBQ0gsTUFBTSxVQUFVLGtCQUFrQixDQUF1QixPQUF1QixFQUFFLFFBQWU7SUFDL0YsTUFBTSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsR0FBRyxrQkFBa0IsRUFBRSxDQUFDO0lBQy9DLElBQUksS0FBSyxFQUFFO1FBQ1QsT0FBTztLQUNSO0lBQ0QsTUFBTSxhQUFhLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQztJQUN6QyxNQUFNLFdBQVcsR0FBRyxhQUFhLENBQUMsV0FBWSxDQUFDO0lBQy9DLE1BQU0sU0FBUyxHQUFHLGFBQWEsQ0FBQyxTQUFVLENBQUM7SUFD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ZS1jb3JlJztcbmltcG9ydCB7IHVzZVNlcXVlbnRpYWxTY29wZSB9IGZyb20gJy4vdXNlLXN0b3JlLnB1YmxpYyc7XG5pbXBvcnQgeyBzZXRBdHRyaWJ1dGUgfSBmcm9tICcuLi9yZW5kZXIvY3Vyc29yJztcbmltcG9ydCB7IGZyb21DYW1lbFRvS2ViYWJDYXNlIH0gZnJvbSAnLi4vdXRpbC9jYXNlJztcbmltcG9ydCB7IGdldENvbnRleHQgfSBmcm9tICcuLi9wcm9wcy9wcm9wcyc7XG5pbXBvcnQgeyB1bndyYXBTdWJzY3JpYmVyLCB3cmFwU3Vic2NyaWJlciB9IGZyb20gJy4vdXNlLXN1YnNjcmliZXInO1xuaW1wb3J0IHsgdXNlSG9zdEVsZW1lbnQgfSBmcm9tICcuL3VzZS1ob3N0LWVsZW1lbnQucHVibGljJztcbmltcG9ydCB7IFFDdHhBdHRyIH0gZnJvbSAnLi4vdXRpbC9tYXJrZXJzJztcblxuLyoqXG4gKiBAYWxwaGFcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBDb250ZXh0PFNUQVRFIGV4dGVuZHMgb2JqZWN0PiB7XG4gIHJlYWRvbmx5IGlkOiBzdHJpbmc7XG4gIHJlYWRvbmx5IF92YWx1ZTogU1RBVEU7XG59XG5cbi8qKlxuICogQGFscGhhXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb250ZXh0PFNUQVRFIGV4dGVuZHMgb2JqZWN0PihuYW1lOiBzdHJpbmcpOiBDb250ZXh0PFNUQVRFPiB7XG4gIHJldHVybiBPYmplY3QuZnJlZXplKHtcbiAgICBpZDogZnJvbUNhbWVsVG9LZWJhYkNhc2UobmFtZSksXG4gIH0gYXMgYW55KTtcbn1cblxuLyoqXG4gKiBAYWxwaGFcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUNvbnRleHRQcm92aWRlcjxTVEFURSBleHRlbmRzIG9iamVjdD4oY29udGV4dDogQ29udGV4dDxTVEFURT4sIG5ld1ZhbHVlOiBTVEFURSkge1xuICBjb25zdCBbdmFsdWUsIHNldFZhbHVlXSA9IHVzZVNlcXVlbnRpYWxTY29wZSgpO1xuICBpZiAodmFsdWUpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgaW52b2tlQ29udGV4dCA9IGdldEludm9rZUNvbnRleHQoKTtcbiAgY29uc3QgaG9zdEVsZW1lbnQgPSBpbnZva2VDb250ZXh0Lmhvc3RFbGVtZW50ITtcbiAgY29uc3QgcmVuZGVyQ3R4ID0gaW52b2tlQ29udGV4dC5yZW5kZXJDdHghO1xuICBjb25zdCBjdHggPSBnZXRDb250ZXh0KGhvc3RFbGVtZW50KTtcbiAgbGV0IGNvbnRleHRzID0gY3R4LmNvbnRleHRzO1xuICBpZiAoIWNvbnRleHRzKSB7XG4gICAgY3R4LmNvbnRleHRzID0gY29udGV4dHMgPSBuZXcgTWFwKCk7XG4gIH1cbiAgbmV3VmFsdWUgPSB1bndyYXBTdWJzY3JpYmVyKG5ld1ZhbHVlKTtcbiAgY29udGV4dHMuc2V0KGNvbnRleHQuaWQsIG5ld1ZhbHVlKTtcblxuICBjb25zdCBzZXJpYWxpemVkQ29udGV4dHM6IHN0cmluZ1tdID0gW107XG4gIGNvbnRleHRzLmZvckVhY2goKF8sIGtleSkgPT4ge1xuICAgIHNlcmlhbGl6ZWRDb250ZXh0cy5wdXNoKGAke2tleX1gKTtcbiAgfSk7XG4gIHNldEF0dHJpYnV0ZShyZW5kZXJDdHgsIGhvc3RFbGVtZW50LCBRQ3R4QXR0ciwgc2VyaWFsaXplZENvbnRleHRzLmpvaW4oJyAnKSk7XG4gIHNldFZhbHVlKHRydWUpO1xufVxuXG4vKipcbiAqIEBhbHBoYVxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlQ29udGV4dDxTVEFURSBleHRlbmRzIG9iamVjdD4oY29udGV4dDogQ29udGV4dDxTVEFURT4pOiBTVEFURSB7XG4gIGNvbnN0IHZhbHVlID0gX3VzZUNvbnRleHQoY29udGV4dCk7XG4gIHJldHVybiB3cmFwU3Vic2NyaWJlcih2YWx1ZSwgdXNlSG9zdEVsZW1lbnQoKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBfdXNlQ29udGV4dDxTVEFURSBleHRlbmRzIG9iamVjdD4oY29udGV4dDogQ29udGV4dDxTVEFURT4pOiBTVEFURSB7XG4gIGNvbnN0IFt2YWx1ZSwgc2V0VmFsdWVdID0gdXNlU2VxdWVudGlhbFNjb3BlKCk7XG4gIGlmICghdmFsdWUpIHtcbiAgICBjb25zdCBpbnZva2VDb250ZXh0ID0gZ2V0SW52b2tlQ29udGV4dCgpO1xuICAgIGxldCBob3N0RWxlbWVudCA9IGludm9rZUNvbnRleHQuaG9zdEVsZW1lbnQhO1xuICAgIGNvbnN0IGNvbXBvbmVudHMgPSBpbnZva2VDb250ZXh0LnJlbmRlckN0eCEuY29tcG9uZW50cztcbiAgICBmb3IgKGxldCBpID0gY29tcG9uZW50cy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgaG9zdEVsZW1lbnQgPSBjb21wb25lbnRzW2ldLmhvc3RFbGVtZW50O1xuICAgICAgY29uc3QgY3R4ID0gZ2V0Q29udGV4dChjb21wb25lbnRzW2ldLmhvc3RFbGVtZW50KTtcbiAgICAgIGlmIChjdHguY29udGV4dHMpIHtcbiAgICAgICAgY29uc3QgZm91bmQgPSBjdHguY29udGV4dHMuZ2V0KGNvbnRleHQuaWQpO1xuICAgICAgICBpZiAoZm91bmQpIHtcbiAgICAgICAgICBzZXRWYWx1ZShmb3VuZCk7XG4gICAgICAgICAgcmV0dXJuIGZvdW5kO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGZvdW5kRWwgPSBob3N0RWxlbWVudC5jbG9zZXN0KGBbcVxcXFw6Y3R4Kj1cIiR7Y29udGV4dC5pZH1cIl1gKTtcbiAgICBpZiAoZm91bmRFbCkge1xuICAgICAgY29uc3QgdmFsdWUgPSBnZXRDb250ZXh0KGZvdW5kRWwpLmNvbnRleHRzIS5nZXQoY29udGV4dC5pZCk7XG4gICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgc2V0VmFsdWUodmFsdWUpO1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICB9XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihgbm90IGZvdW5kIHN0YXRlIGZvciB1c2VDb250ZXh0OiAke2NvbnRleHQuaWR9YCk7XG4gIH1cbiAgcmV0dXJuIHZhbHVlO1xufVxuIl19"],"names":["isNode"],"mappings":"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AAE;AACjC,IAAI,OAAOA,QAAM,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,QAAQ,KAAK,CAAC,CAAC;AACjD;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,CAAC,CAAC,UAAU,EAAE;AAC9B,IAAI,OAAO,UAAU,CAAC,UAAU,CAAC,CAAC;AAClC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,iBAAiB,CAAC,EAAE,EAAE;AACtC,IAAI,OAAO,UAAU,KAAK,EAAE,GAAG,IAAI,EAAE;AACrC,QAAQ,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;AAChD,KAAK,CAAC;AACN;;AC1HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,cAAc,GAAG;AACjC,IAAI,MAAM,GAAG,GAAG,gBAAgB,EAAE,CAAC;AACnC,IAAI,WAAW,CAAC,GAAG,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AACxC,IAA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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,gBAAgB,GAAG,iBAAiB,CAAC,kBAAkB,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,iBAAiB,CAAC,QAAQ,EAAE;AAC5C,IAAI,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,kBAAkB,EAAE,CAAC;AACnD,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,QAAQ,QAAQ,CAAC,IAAI,CAAC,CAAC;AACvB,QAAQ,MAAM,QAAQ,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,QAAQ,CAAC;AAC7D,QAAQ,IAAI,QAAQ,EAAE;AACtB,YAAY,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;AACzC,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,eAAe,GAAG,iBAAiB,CAAC,iBAAiB,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,iBAAiB,CAAC,QAAQ,EAAE;AAC5C,IAAI,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,kBAAkB,EAAE,CAAC;AAC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CL,IAAI,OAAO,WAAW,CAAC;AACvB;;ACxMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,aAAa,CAAC,SAAS,EAAE;AACzC,IAAI,MAAM,CAAC,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC,GAAG,kBAAkB,EAAE,CAAC;AACtD,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,QAAQ,MAAM,EAAE,GAAG,cAAc,EAAE,CAAC;AACpC,QAAQ,MAAM,KAAK,GAAG;AACtB,YAAY,GAAG,EAAE,SAAS;AAC1B,YAAY,EAAE;AACd,YAAY,CAAC,EAAE,UAAU,CAAC,SAAS;AACnC,YAAY,CAAC;AACb,SAAS,CAAC;AACV,QAAQ,QAAQ,CAAC,IAAI,CAAC,CAAC;AACvB,QAAQ,UAAU,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC3C,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,WAAW,GAAG,iBAAiB,CAAC,aAAa,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,YAAY,CAAC,QAAQ,EAAE;AACvC,IAAI,KAAK,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AAC7B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,UAAU,GAAG,iBAAiB,CAAC,YAAY,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,aAAa,CAAC,QAAQ,EAAE;AACxC,IAAI,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AAChC,CAAC;AAgCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,KAAK,CAAC,KAAK,EAAE,OAAO,EAAE;AACtC,IAAI,MAAM,EAAE,GAAG,cAAc,EAAE,CAAC;AAChC,IAAI,MAAM,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;AAC/B,IAAI,aAAa,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;AAC1D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,aAAa,CAAC,KAAK,EAAE,QAAQ,EAAE;AAC/C,IAAI,MAAM,EAAE,GAAG,cAAc,EAAE,CAAC;AAChC,IAAI,MAAM,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;AAC/B,IAAI,aAAa,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;AACpE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,WAAW,CAAC,KAAK,EAAE,OAAO,EAAE;AAC5C,IAAI,MAAM,EAAE,GAAG,cAAc,EAAE,CAAC;AAChC,IAAI,MAAM,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;AAC/B,IAAI,aAAa,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;AACjE,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,YAAY,CAAC,MAAM,EAAE;AACrC,IAAI,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC9B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,UAAU,GAAG,iBAAiB,CAAC,YAAY,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,kBAAkB,CAAC,MAAM,EAAE;AAC3C,IAAI,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC7B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,gBAAgB,GAAG,iBAAiB,CAAC,kBAAkB,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,YAAY,CAAC,WAAW,EAAE,OAAO,GAAG,EAAE,EAAE;AACxD,IAAI,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,KAAK,CAAC;AAC7C;AACA,IAAI,OAAO,SAAS,gBAAgB,CAAC,KAAK,EAAE,GAAG,EAAE;AACjD,QAAQ,MAAM,QAAQ,GAAG,WAAW,CAAC,kBAAkB,EAAE,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CA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"}