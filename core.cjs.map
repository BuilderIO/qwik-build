{"version":3,"file":"core.cjs","sources":["../tsc-out/src/core/util/qdev.js","../tsc-out/src/core/util/flyweight.js","../tsc-out/src/core/import/qrl-class.js","../tsc-out/src/core/util/log.js","../tsc-out/src/core/assert/assert.js","../tsc-out/src/core/util/dom.js","../tsc-out/src/core/import/qrl.js","../tsc-out/src/core/util/markers.js","../tsc-out/src/core/util/types.js","../tsc-out/src/core/util/element.js","../tsc-out/src/core/platform/platform.js","../tsc-out/src/core/import/qrl.public.js","../tsc-out/src/core/error/stringify.js","../tsc-out/src/core/error/error.js","../tsc-out/src/core/json/q-json.js","../tsc-out/src/core/use/use-core.js","../tsc-out/src/core/util/case.js","../tsc-out/src/core/util/array.js","../tsc-out/src/core/util/promises.js","../tsc-out/src/core/util/stringify.js","../tsc-out/src/core/render/render.js","../tsc-out/src/core/util/hash_code.js","../tsc-out/src/core/component/qrl-styles.js","../tsc-out/src/core/render/jsx/host.public.js","../tsc-out/src/core/render/jsx/jsx-runtime.js","../tsc-out/src/core/component/component-ctx.js","../tsc-out/src/core/object/store.js","../tsc-out/src/core/render/cursor.js","../tsc-out/src/core/render/notify-render.js","../tsc-out/src/core/object/q-object.js","../tsc-out/src/core/props/props-obj-map.js","../tsc-out/src/core/props/props.js","../tsc-out/src/core/watch/watch.js","../tsc-out/src/core/util/event.js","../tsc-out/src/core/props/props-on.js","../tsc-out/src/core/use/use-host-element.public.js","../tsc-out/src/core/component/component.public.js","../tsc-out/src/core/event/bubble.js","../tsc-out/src/core/event/bubble.public.js","../tsc-out/src/core/object/store.public.js","../tsc-out/src/core/use/use-props.public.js","../tsc-out/src/core/watch/watch.public.js","../tsc-out/src/core/render/jsx/async.public.js","../tsc-out/src/core/render/jsx/factory.js","../tsc-out/src/core/render/jsx/slot.public.js","../tsc-out/src/core/render/render.public.js","../tsc-out/src/core/use/use-document.public.js","../tsc-out/src/core/use/use-event.public.js","../tsc-out/src/core/use/use-url.public.js","../tsc-out/src/core/use/use-lexical-scope.public.js","../tsc-out/src/core/use/use-store.public.js","../tsc-out/src/core/index.js"],"sourcesContent":["/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\n/*@__PURE__*/ ((gbl) => {\n    // ensures unit tests have globalThis on Node10\n    // this will be removed from production builds\n    if (typeof globalThis === 'undefined') {\n        gbl.globalThis = gbl;\n    }\n})(typeof global !== 'undefined'\n    ? global\n    : typeof window !== 'undefined'\n        ? window\n        : typeof self !== 'undefined'\n            ? self\n            : {});\n// minification can replace the `globalThis.qDev` with `false`\n// which will remove all dev code within from the build\nexport const qDev = globalThis.qDev !== false;\nexport const qTest = globalThis.describe !== undefined;\nexport const qGlobal = globalThis;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicWRldi5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXRpbC9xZGV2LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVILGFBQWEsQ0FBQyxDQUFDLENBQUMsR0FBUSxFQUFFLEVBQUU7SUFDMUIsK0NBQStDO0lBQy9DLDhDQUE4QztJQUM5QyxJQUFJLE9BQU8sVUFBVSxLQUFLLFdBQVcsRUFBRTtRQUNyQyxHQUFHLENBQUMsVUFBVSxHQUFHLEdBQUcsQ0FBQztLQUN0QjtBQUNILENBQUMsQ0FBQyxDQUNBLE9BQU8sTUFBTSxLQUFLLFdBQVc7SUFDM0IsQ0FBQyxDQUFDLE1BQU07SUFDUixDQUFDLENBQUMsT0FBTyxNQUFNLEtBQUssV0FBVztRQUMvQixDQUFDLENBQUMsTUFBTTtRQUNSLENBQUMsQ0FBQyxPQUFPLElBQUksS0FBSyxXQUFXO1lBQzdCLENBQUMsQ0FBQyxJQUFJO1lBQ04sQ0FBQyxDQUFDLEVBQUUsQ0FDUCxDQUFDO0FBRUYsOERBQThEO0FBQzlELHVEQUF1RDtBQUN2RCxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUksVUFBa0IsQ0FBQyxJQUFJLEtBQUssS0FBSyxDQUFDO0FBQ3ZELE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBSSxVQUFrQixDQUFDLFFBQVEsS0FBSyxTQUFTLENBQUM7QUFDaEUsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLFVBQWlCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQnVpbGRlci5pbywgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9CdWlsZGVySU8vcXdpay9ibG9iL21haW4vTElDRU5TRVxuICovXG5cbi8qQF9fUFVSRV9fKi8gKChnYmw6IGFueSkgPT4ge1xuICAvLyBlbnN1cmVzIHVuaXQgdGVzdHMgaGF2ZSBnbG9iYWxUaGlzIG9uIE5vZGUxMFxuICAvLyB0aGlzIHdpbGwgYmUgcmVtb3ZlZCBmcm9tIHByb2R1Y3Rpb24gYnVpbGRzXG4gIGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBnYmwuZ2xvYmFsVGhpcyA9IGdibDtcbiAgfVxufSkoXG4gIHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnXG4gICAgPyBnbG9iYWxcbiAgICA6IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnXG4gICAgPyB3aW5kb3dcbiAgICA6IHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJ1xuICAgID8gc2VsZlxuICAgIDoge31cbik7XG5cbi8vIG1pbmlmaWNhdGlvbiBjYW4gcmVwbGFjZSB0aGUgYGdsb2JhbFRoaXMucURldmAgd2l0aCBgZmFsc2VgXG4vLyB3aGljaCB3aWxsIHJlbW92ZSBhbGwgZGV2IGNvZGUgd2l0aGluIGZyb20gdGhlIGJ1aWxkXG5leHBvcnQgY29uc3QgcURldiA9IChnbG9iYWxUaGlzIGFzIGFueSkucURldiAhPT0gZmFsc2U7XG5leHBvcnQgY29uc3QgcVRlc3QgPSAoZ2xvYmFsVGhpcyBhcyBhbnkpLmRlc2NyaWJlICE9PSB1bmRlZmluZWQ7XG5leHBvcnQgY29uc3QgcUdsb2JhbCA9IGdsb2JhbFRoaXMgYXMgYW55O1xuIl19","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { qDev } from './qdev';\nexport const EMPTY_ARRAY = [];\nexport const EMPTY_OBJ = {};\nif (qDev) {\n    Object.freeze(EMPTY_ARRAY);\n    Object.freeze(EMPTY_OBJ);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmx5d2VpZ2h0LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS91dGlsL2ZseXdlaWdodC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFFSCxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBRTlCLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxFQUFFLENBQUM7QUFDOUIsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLEVBQUUsQ0FBQztBQUU1QixJQUFJLElBQUksRUFBRTtJQUNSLE1BQU0sQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDM0IsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztDQUMxQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBCdWlsZGVyLmlvLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL0J1aWxkZXJJTy9xd2lrL2Jsb2IvbWFpbi9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgcURldiB9IGZyb20gJy4vcWRldic7XG5cbmV4cG9ydCBjb25zdCBFTVBUWV9BUlJBWSA9IFtdO1xuZXhwb3J0IGNvbnN0IEVNUFRZX09CSiA9IHt9O1xuXG5pZiAocURldikge1xuICBPYmplY3QuZnJlZXplKEVNUFRZX0FSUkFZKTtcbiAgT2JqZWN0LmZyZWV6ZShFTVBUWV9PQkopO1xufVxuIl19","export function isQrl(value) {\n    return value instanceof QRLInternal;\n}\nclass QRL {\n    constructor(chunk, symbol, symbolRef, symbolFn, capture, captureRef, guard) {\n        this.chunk = chunk;\n        this.symbol = symbol;\n        this.symbolRef = symbolRef;\n        this.symbolFn = symbolFn;\n        this.capture = capture;\n        this.captureRef = captureRef;\n        this.guard = guard;\n        this.canonicalChunk = chunk.replace(FIND_EXT, '');\n    }\n}\nexport const QRLInternal = QRL;\n// https://regexr.com/6enjv\nconst FIND_EXT = /\\.[\\w?=&]+$/;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXJsLWNsYXNzLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9pbXBvcnQvcXJsLWNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBLE1BQU0sVUFBVSxLQUFLLENBQUMsS0FBVTtJQUM5QixPQUFPLEtBQUssWUFBWSxXQUFXLENBQUM7QUFDdEMsQ0FBQztBQUVELE1BQU0sR0FBRztJQUdQLFlBQ1MsS0FBYSxFQUNiLE1BQWMsRUFDZCxTQUFzQyxFQUN0QyxRQUFxRCxFQUNyRCxPQUF3QixFQUN4QixVQUF3QixFQUN4QixLQUFtQztRQU5uQyxVQUFLLEdBQUwsS0FBSyxDQUFRO1FBQ2IsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUNkLGNBQVMsR0FBVCxTQUFTLENBQTZCO1FBQ3RDLGFBQVEsR0FBUixRQUFRLENBQTZDO1FBQ3JELFlBQU8sR0FBUCxPQUFPLENBQWlCO1FBQ3hCLGVBQVUsR0FBVixVQUFVLENBQWM7UUFDeEIsVUFBSyxHQUFMLEtBQUssQ0FBOEI7UUFFMUMsSUFBSSxDQUFDLGNBQWMsR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNwRCxDQUFDO0NBQ0Y7QUFHRCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQWUsR0FBRyxDQUFDO0FBRTNDLDJCQUEyQjtBQUMzQixNQUFNLFFBQVEsR0FBRyxhQUFhLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFZhbHVlT3JQcm9taXNlIH0gZnJvbSAnLi4vdXRpbC90eXBlcyc7XG5pbXBvcnQgdHlwZSB7IFFSTCBhcyBJUVJMIH0gZnJvbSAnLi9xcmwucHVibGljJztcblxuZXhwb3J0IGZ1bmN0aW9uIGlzUXJsKHZhbHVlOiBhbnkpOiB2YWx1ZSBpcyBRUkxJbnRlcm5hbCB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFFSTEludGVybmFsO1xufVxuXG5jbGFzcyBRUkw8VFlQRSA9IGFueT4gaW1wbGVtZW50cyBJUVJMPFRZUEU+IHtcbiAgX19icmFuZF9fUVJMX18hOiBUWVBFO1xuICBjYW5vbmljYWxDaHVuazogc3RyaW5nO1xuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgY2h1bms6IHN0cmluZyxcbiAgICBwdWJsaWMgc3ltYm9sOiBzdHJpbmcsXG4gICAgcHVibGljIHN5bWJvbFJlZjogbnVsbCB8IFZhbHVlT3JQcm9taXNlPFRZUEU+LFxuICAgIHB1YmxpYyBzeW1ib2xGbjogbnVsbCB8ICgoKSA9PiBQcm9taXNlPFJlY29yZDxzdHJpbmcsIGFueT4+KSxcbiAgICBwdWJsaWMgY2FwdHVyZTogbnVsbCB8IG51bWJlcltdLFxuICAgIHB1YmxpYyBjYXB0dXJlUmVmOiBudWxsIHwgYW55W10sXG4gICAgcHVibGljIGd1YXJkOiBudWxsIHwgTWFwPHN0cmluZywgc3RyaW5nW10+XG4gICkge1xuICAgIHRoaXMuY2Fub25pY2FsQ2h1bmsgPSBjaHVuay5yZXBsYWNlKEZJTkRfRVhULCAnJyk7XG4gIH1cbn1cblxuZXhwb3J0IHR5cGUgUVJMSW50ZXJuYWw8VCA9IGFueT4gPSBRUkw8VD47XG5leHBvcnQgY29uc3QgUVJMSW50ZXJuYWw6IHR5cGVvZiBRUkwgPSBRUkw7XG5cbi8vIGh0dHBzOi8vcmVnZXhyLmNvbS82ZW5qdlxuY29uc3QgRklORF9FWFQgPSAvXFwuW1xcdz89Jl0rJC87XG4iXX0=","import { qDev } from './qdev';\nconst STYLE = qDev\n    ? `background: #564CE0; color: white; padding: 2px 3px; border-radius: 2px; font-size: 0.8em;`\n    : '';\nexport const logError = (message, ...optionalParams) => {\n    // eslint-disable-next-line no-console\n    console.error('%cQWIK ERROR', STYLE, message, ...optionalParams);\n};\nexport const logWarn = (message, ...optionalParams) => {\n    // eslint-disable-next-line no-console\n    console.warn('%cQWIK WARN', STYLE, message, ...optionalParams);\n};\nexport const logDebug = (message, ...optionalParams) => {\n    // eslint-disable-next-line no-console\n    console.debug('%cQWIK', STYLE, message, ...optionalParams);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS91dGlsL2xvZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBRTlCLE1BQU0sS0FBSyxHQUFHLElBQUk7SUFDaEIsQ0FBQyxDQUFDLDRGQUE0RjtJQUM5RixDQUFDLENBQUMsRUFBRSxDQUFDO0FBRVAsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHLENBQUMsT0FBYSxFQUFFLEdBQUcsY0FBcUIsRUFBRSxFQUFFO0lBQ2xFLHNDQUFzQztJQUN0QyxPQUFPLENBQUMsS0FBSyxDQUFDLGNBQWMsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLEdBQUcsY0FBYyxDQUFDLENBQUM7QUFDbkUsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLENBQUMsT0FBYSxFQUFFLEdBQUcsY0FBcUIsRUFBRSxFQUFFO0lBQ2pFLHNDQUFzQztJQUN0QyxPQUFPLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLEdBQUcsY0FBYyxDQUFDLENBQUM7QUFDakUsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHLENBQUMsT0FBYSxFQUFFLEdBQUcsY0FBcUIsRUFBRSxFQUFFO0lBQ2xFLHNDQUFzQztJQUN0QyxPQUFPLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLEdBQUcsY0FBYyxDQUFDLENBQUM7QUFDN0QsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcURldiB9IGZyb20gJy4vcWRldic7XG5cbmNvbnN0IFNUWUxFID0gcURldlxuICA/IGBiYWNrZ3JvdW5kOiAjNTY0Q0UwOyBjb2xvcjogd2hpdGU7IHBhZGRpbmc6IDJweCAzcHg7IGJvcmRlci1yYWRpdXM6IDJweDsgZm9udC1zaXplOiAwLjhlbTtgXG4gIDogJyc7XG5cbmV4cG9ydCBjb25zdCBsb2dFcnJvciA9IChtZXNzYWdlPzogYW55LCAuLi5vcHRpb25hbFBhcmFtczogYW55W10pID0+IHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgY29uc29sZS5lcnJvcignJWNRV0lLIEVSUk9SJywgU1RZTEUsIG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbn07XG5cbmV4cG9ydCBjb25zdCBsb2dXYXJuID0gKG1lc3NhZ2U/OiBhbnksIC4uLm9wdGlvbmFsUGFyYW1zOiBhbnlbXSkgPT4ge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICBjb25zb2xlLndhcm4oJyVjUVdJSyBXQVJOJywgU1RZTEUsIG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbn07XG5cbmV4cG9ydCBjb25zdCBsb2dEZWJ1ZyA9IChtZXNzYWdlPzogYW55LCAuLi5vcHRpb25hbFBhcmFtczogYW55W10pID0+IHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgY29uc29sZS5kZWJ1ZygnJWNRV0lLJywgU1RZTEUsIG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbn07XG4iXX0=","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { logError } from '../util/log';\nimport { qDev } from '../util/qdev';\nexport function assertDefined(value, text) {\n    if (qDev) {\n        if (value != null)\n            return;\n        throw newError(text || 'Expected defined value.');\n    }\n}\nexport function assertNotPromise(value, text) {\n    if (qDev) {\n        if (!(value instanceof Promise))\n            return;\n        throw newError(text || 'Expected defined value.');\n    }\n}\nexport function assertDefinedAndNotPromise(value, text) {\n    if (qDev) {\n        assertDefined(value, text);\n        assertNotPromise(value, text);\n    }\n}\nexport function assertInstanceOf(value, type, text) {\n    if (qDev) {\n        if (value instanceof type)\n            return;\n        throw newError(text || `Expected value '${value}' to be instance of '${type}' but was '${typeOf(value)}'.`);\n    }\n}\nexport function assertString(value, text) {\n    if (qDev) {\n        if (typeof value === 'string')\n            return;\n        throw newError(text || `Expected value '${value}' to be 'string' but was '${typeOf(value)}'.`);\n    }\n}\nexport function assertNotEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 !== value2)\n            return;\n        throw newError(text || `Expected '${value1}' !== '${value2}'.`);\n    }\n}\nexport function assertEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 === value2)\n            return;\n        throw newError(text || `Expected '${value1}' === '${value2}'.`);\n    }\n}\nexport function assertLessOrEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 <= value2)\n            return;\n        throw newError(text || `Expected '${value1}' <= '${value2}'.`);\n    }\n}\nexport function assertLess(value1, value2, text) {\n    if (qDev) {\n        if (value1 < value2)\n            return;\n        throw newError(text || `Expected '${value1}' < '${value2}'.`);\n    }\n}\nexport function assertGreaterOrEqual(value1, value2, text) {\n    if (qDev) {\n        if (value1 >= value2)\n            return;\n        throw newError(text || `Expected '${value1}' >= '${value2}'.`);\n    }\n}\nexport function assertGreater(value1, value2, text) {\n    if (qDev) {\n        if (value1 > value2)\n            return;\n        throw newError(text || `Expected '${value1}' > '${value2}'.`);\n    }\n}\nfunction typeOf(value) {\n    var _a;\n    if (value === null)\n        return 'null';\n    const type = typeof value;\n    if (type === 'object') {\n        return ((_a = value === null || value === void 0 ? void 0 : value.constructor) === null || _a === void 0 ? void 0 : _a.name) || '<unknown>';\n    }\n    else {\n        return type;\n    }\n}\nfunction newError(text) {\n    debugger; // eslint-disable-line no-debugger\n    const error = new Error(text);\n    logError(error); // eslint-disable-line no-console\n    return error;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXJ0LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9hc3NlcnQvYXNzZXJ0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUNILE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDdkMsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUVwQyxNQUFNLFVBQVUsYUFBYSxDQUFDLEtBQVUsRUFBRSxJQUFhO0lBQ3JELElBQUksSUFBSSxFQUFFO1FBQ1IsSUFBSSxLQUFLLElBQUksSUFBSTtZQUFFLE9BQU87UUFDMUIsTUFBTSxRQUFRLENBQUMsSUFBSSxJQUFJLHlCQUF5QixDQUFDLENBQUM7S0FDbkQ7QUFDSCxDQUFDO0FBRUQsTUFBTSxVQUFVLGdCQUFnQixDQUFDLEtBQVUsRUFBRSxJQUFhO0lBQ3hELElBQUksSUFBSSxFQUFFO1FBQ1IsSUFBSSxDQUFDLENBQUMsS0FBSyxZQUFZLE9BQU8sQ0FBQztZQUFFLE9BQU87UUFDeEMsTUFBTSxRQUFRLENBQUMsSUFBSSxJQUFJLHlCQUF5QixDQUFDLENBQUM7S0FDbkQ7QUFDSCxDQUFDO0FBRUQsTUFBTSxVQUFVLDBCQUEwQixDQUFDLEtBQVUsRUFBRSxJQUFhO0lBQ2xFLElBQUksSUFBSSxFQUFFO1FBQ1IsYUFBYSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQztRQUMzQixnQkFBZ0IsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7S0FDL0I7QUFDSCxDQUFDO0FBRUQsTUFBTSxVQUFVLGdCQUFnQixDQUFDLEtBQVUsRUFBRSxJQUFTLEVBQUUsSUFBYTtJQUNuRSxJQUFJLElBQUksRUFBRTtRQUNSLElBQUksS0FBSyxZQUFZLElBQUk7WUFBRSxPQUFPO1FBQ2xDLE1BQU0sUUFBUSxDQUNaLElBQUksSUFBSSxtQkFBbUIsS0FBSyx3QkFBd0IsSUFBSSxjQUFjLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFB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Q2YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBCdWlsZGVyLmlvLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL0J1aWxkZXJJTy9xd2lrL2Jsb2IvbWFpbi9MSUNFTlNFXG4gKi9cbmltcG9ydCB7IGxvZ0Vycm9yIH0gZnJvbSAnLi4vdXRpbC9sb2cnO1xuaW1wb3J0IHsgcURldiB9IGZyb20gJy4uL3V0aWwvcWRldic7XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnREZWZpbmVkKHZhbHVlOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAodmFsdWUgIT0gbnVsbCkgcmV0dXJuO1xuICAgIHRocm93IG5ld0Vycm9yKHRleHQgfHwgJ0V4cGVjdGVkIGRlZmluZWQgdmFsdWUuJyk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydE5vdFByb21pc2UodmFsdWU6IGFueSwgdGV4dD86IHN0cmluZykge1xuICBpZiAocURldikge1xuICAgIGlmICghKHZhbHVlIGluc3RhbmNlb2YgUHJvbWlzZSkpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8ICdFeHBlY3RlZCBkZWZpbmVkIHZhbHVlLicpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnREZWZpbmVkQW5kTm90UHJvbWlzZSh2YWx1ZTogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgYXNzZXJ0RGVmaW5lZCh2YWx1ZSwgdGV4dCk7XG4gICAgYXNzZXJ0Tm90UHJvbWlzZSh2YWx1ZSwgdGV4dCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydEluc3RhbmNlT2YodmFsdWU6IGFueSwgdHlwZTogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgdHlwZSkgcmV0dXJuO1xuICAgIHRocm93IG5ld0Vycm9yKFxuICAgICAgdGV4dCB8fCBgRXhwZWN0ZWQgdmFsdWUgJyR7dmFsdWV9JyB0byBiZSBpbnN0YW5jZSBvZiAnJHt0eXBlfScgYnV0IHdhcyAnJHt0eXBlT2YodmFsdWUpfScuYFxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydFN0cmluZyh2YWx1ZTogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8IGBFeHBlY3RlZCB2YWx1ZSAnJHt2YWx1ZX0nIHRvIGJlICdzdHJpbmcnIGJ1dCB3YXMgJyR7dHlwZU9mKHZhbHVlKX0nLmApO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnROb3RFcXVhbCh2YWx1ZTE6IGFueSwgdmFsdWUyOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAodmFsdWUxICE9PSB2YWx1ZTIpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8IGBFeHBlY3RlZCAnJHt2YWx1ZTF9JyAhPT0gJyR7dmFsdWUyfScuYCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydEVxdWFsKHZhbHVlMTogYW55LCB2YWx1ZTI6IGFueSwgdGV4dD86IHN0cmluZykge1xuICBpZiAocURldikge1xuICAgIGlmICh2YWx1ZTEgPT09IHZhbHVlMikgcmV0dXJuO1xuICAgIHRocm93IG5ld0Vycm9yKHRleHQgfHwgYEV4cGVjdGVkICcke3ZhbHVlMX0nID09PSAnJHt2YWx1ZTJ9Jy5gKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0TGVzc09yRXF1YWwodmFsdWUxOiBhbnksIHZhbHVlMjogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKHZhbHVlMSA8PSB2YWx1ZTIpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8IGBFeHBlY3RlZCAnJHt2YWx1ZTF9JyA8PSAnJHt2YWx1ZTJ9Jy5gKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0TGVzcyh2YWx1ZTE6IGFueSwgdmFsdWUyOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAodmFsdWUxIDwgdmFsdWUyKSByZXR1cm47XG4gICAgdGhyb3cgbmV3RXJyb3IodGV4dCB8fCBgRXhwZWN0ZWQgJyR7dmFsdWUxfScgPCAnJHt2YWx1ZTJ9Jy5gKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0R3JlYXRlck9yRXF1YWwodmFsdWUxOiBhbnksIHZhbHVlMjogYW55LCB0ZXh0Pzogc3RyaW5nKSB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKHZhbHVlMSA+PSB2YWx1ZTIpIHJldHVybjtcbiAgICB0aHJvdyBuZXdFcnJvcih0ZXh0IHx8IGBFeHBlY3RlZCAnJHt2YWx1ZTF9JyA+PSAnJHt2YWx1ZTJ9Jy5gKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0R3JlYXRlcih2YWx1ZTE6IGFueSwgdmFsdWUyOiBhbnksIHRleHQ/OiBzdHJpbmcpIHtcbiAgaWYgKHFEZXYpIHtcbiAgICBpZiAodmFsdWUxID4gdmFsdWUyKSByZXR1cm47XG4gICAgdGhyb3cgbmV3RXJyb3IodGV4dCB8fCBgRXhwZWN0ZWQgJyR7dmFsdWUxfScgPiAnJHt2YWx1ZTJ9Jy5gKTtcbiAgfVxufVxuXG5mdW5jdGlvbiB0eXBlT2YodmFsdWU6IGFueSkge1xuICBpZiAodmFsdWUgPT09IG51bGwpIHJldHVybiAnbnVsbCc7XG4gIGNvbnN0IHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gIGlmICh0eXBlID09PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiB2YWx1ZT8uY29uc3RydWN0b3I/Lm5hbWUgfHwgJzx1bmtub3duPic7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHR5cGU7XG4gIH1cbn1cblxuZnVuY3Rpb24gbmV3RXJyb3IodGV4dDogc3RyaW5nKSB7XG4gIGRlYnVnZ2VyOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWRlYnVnZ2VyXG4gIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKHRleHQpO1xuICBsb2dFcnJvcihlcnJvcik7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZVxuICByZXR1cm4gZXJyb3I7XG59XG4iXX0=","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { assertDefined } from '../assert/assert';\nexport function getDocument(node) {\n    if (typeof document !== 'undefined') {\n        return document;\n    }\n    let doc = node.ownerDocument;\n    while (doc && doc.nodeType !== 9) {\n        doc = doc.parentNode;\n    }\n    assertDefined(doc);\n    return doc;\n}\nexport function getParentElement(node) {\n    return node.parentElement || previousParent.get(node) || null;\n}\nexport const previousParent = new WeakMap();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9tLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS91dGlsL2RvbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFFSCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFakQsTUFBTSxVQUFVLFdBQVcsQ0FBQyxJQUFVO0lBQ3BDLElBQUksT0FBTyxRQUFRLEtBQUssV0FBVyxFQUFFO1FBQ25DLE9BQU8sUUFBUSxDQUFDO0tBQ2pCO0lBQ0QsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQztJQUM3QixPQUFPLEdBQUcsSUFBSSxHQUFHLENBQUMsUUFBUSxLQUFLLENBQUMsRUFBRTtRQUNoQyxHQUFHLEdBQUcsR0FBRyxDQUFDLFVBQWlCLENBQUM7S0FDN0I7SUFDRCxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDbkIsT0FBTyxHQUFJLENBQUM7QUFDZCxDQUFDO0FBRUQsTUFBTSxVQUFVLGdCQUFnQixDQUFDLElBQVU7SUFDekMsT0FBTyxJQUFJLENBQUMsYUFBYSxJQUFJLGNBQWMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDO0FBQ2hFLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsSUFBSSxPQUFPLEVBQWlCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQnVpbGRlci5pbywgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9CdWlsZGVySU8vcXdpay9ibG9iL21haW4vTElDRU5TRVxuICovXG5cbmltcG9ydCB7IGFzc2VydERlZmluZWQgfSBmcm9tICcuLi9hc3NlcnQvYXNzZXJ0JztcblxuZXhwb3J0IGZ1bmN0aW9uIGdldERvY3VtZW50KG5vZGU6IE5vZGUpOiBEb2N1bWVudCB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIGRvY3VtZW50O1xuICB9XG4gIGxldCBkb2MgPSBub2RlLm93bmVyRG9jdW1lbnQ7XG4gIHdoaWxlIChkb2MgJiYgZG9jLm5vZGVUeXBlICE9PSA5KSB7XG4gICAgZG9jID0gZG9jLnBhcmVudE5vZGUgYXMgYW55O1xuICB9XG4gIGFzc2VydERlZmluZWQoZG9jKTtcbiAgcmV0dXJuIGRvYyE7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRQYXJlbnRFbGVtZW50KG5vZGU6IE5vZGUpOiBFbGVtZW50IHwgbnVsbCB7XG4gIHJldHVybiBub2RlLnBhcmVudEVsZW1lbnQgfHwgcHJldmlvdXNQYXJlbnQuZ2V0KG5vZGUpIHx8IG51bGw7XG59XG5cbmV4cG9ydCBjb25zdCBwcmV2aW91c1BhcmVudCA9IG5ldyBXZWFrTWFwPE5vZGUsIEVsZW1lbnQ+KCk7XG4iXX0=","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { EMPTY_ARRAY } from '../util/flyweight';\nimport { isQrl, QRLInternal } from './qrl-class';\nimport { assertEqual } from '../assert/assert';\nimport { getDocument } from '../util/dom';\nimport { logError } from '../util/log';\nlet runtimeSymbolId = 0;\nconst RUNTIME_QRL = '/runtimeQRL';\n// https://regexr.com/68v72\nconst EXTRACT_IMPORT_PATH = /\\(\\s*(['\"])([^\\1]+)\\1\\s*\\)/;\n// https://regexr.com/690ds\nconst EXTRACT_SELF_IMPORT = /Promise\\s*\\.\\s*resolve/;\n// https://regexr.com/6a83h\nconst EXTRACT_FILE_NAME = /[\\\\/(]([\\w\\d.\\-_]+\\.(js|ts)x?):/;\nexport function toInternalQRL(qrl) {\n    assertEqual(isQrl(qrl), true);\n    return qrl;\n}\nexport function staticQrl(chunkOrFn, symbol, lexicalScopeCapture = EMPTY_ARRAY) {\n    let chunk;\n    let symbolFn = null;\n    if (typeof chunkOrFn === 'string') {\n        chunk = chunkOrFn;\n    }\n    else if (typeof chunkOrFn === 'function') {\n        symbolFn = chunkOrFn;\n        let match;\n        const srcCode = String(chunkOrFn);\n        if ((match = srcCode.match(EXTRACT_IMPORT_PATH)) && match[2]) {\n            chunk = match[2];\n        }\n        else if ((match = srcCode.match(EXTRACT_SELF_IMPORT))) {\n            const ref = 'QWIK-SELF';\n            const frames = new Error(ref).stack.split('\\n');\n            const start = frames.findIndex((f) => f.includes(ref));\n            const frame = frames[start + 2];\n            match = frame.match(EXTRACT_FILE_NAME);\n            if (!match) {\n                chunk = 'main';\n            }\n            else {\n                chunk = match[1];\n            }\n        }\n        else {\n            throw new Error('Q-ERROR: Dynamic import not found: ' + srcCode);\n        }\n    }\n    else {\n        throw new Error('Q-ERROR: Unknown type argument: ' + chunkOrFn);\n    }\n    return new QRLInternal(chunk, symbol, null, symbolFn, null, lexicalScopeCapture, null);\n}\nexport function runtimeQrl(symbol, lexicalScopeCapture = EMPTY_ARRAY) {\n    return new QRLInternal(RUNTIME_QRL, 's' + runtimeSymbolId++, symbol, null, null, lexicalScopeCapture, null);\n}\nexport function stringifyQRL(qrl, platform, element) {\n    var _a;\n    const qrl_ = toInternalQRL(qrl);\n    const symbol = qrl_.symbol;\n    const chunk = platform ? (_a = platform.chunkForSymbol(symbol)) !== null && _a !== void 0 ? _a : qrl_.chunk : qrl_.chunk;\n    const parts = [chunk];\n    if (symbol && symbol !== 'default') {\n        parts.push('#', symbol);\n    }\n    const guard = qrl_.guard;\n    guard === null || guard === void 0 ? void 0 : guard.forEach((value, key) => parts.push('|', key, value && value.length ? '.' + value.join('.') : ''));\n    const capture = qrl_.capture;\n    if (capture && capture.length > 0) {\n        parts.push(JSON.stringify(capture));\n    }\n    const qrlString = parts.join('');\n    if (qrl_.chunk === RUNTIME_QRL && element) {\n        const qrls = element.__qrls__ || (element.__qrls__ = new Set());\n        qrls.add(qrl);\n    }\n    return qrlString;\n}\nexport function qrlToUrl(element, qrl) {\n    return new URL(stringifyQRL(qrl), getDocument(element).baseURI);\n}\n/**\n * `./chunk#symbol|symbol.propA.propB|[captures]\n */\nexport function parseQRL(qrl, element) {\n    if (element) {\n        const qrls = element.__qrls__;\n        if (qrls) {\n            for (const runtimeQrl of qrls) {\n                if (stringifyQRL(runtimeQrl) == qrl) {\n                    return runtimeQrl;\n                }\n            }\n        }\n    }\n    const endIdx = qrl.length;\n    const hashIdx = indexOf(qrl, 0, '#');\n    const guardIdx = indexOf(qrl, hashIdx, '|');\n    const captureIdx = indexOf(qrl, guardIdx, '[');\n    const chunkEndIdx = Math.min(hashIdx, guardIdx, captureIdx);\n    const chunk = qrl.substring(0, chunkEndIdx);\n    const symbolStartIdx = hashIdx == endIdx ? hashIdx : hashIdx + 1;\n    const symbolEndIdx = Math.min(guardIdx, captureIdx);\n    const symbol = symbolStartIdx == symbolEndIdx ? 'default' : qrl.substring(symbolStartIdx, symbolEndIdx);\n    const guardStartIdx = guardIdx;\n    const guardEndIdx = captureIdx;\n    const guard = guardStartIdx < guardEndIdx ? parseGuard(qrl.substring(guardStartIdx, guardEndIdx)) : null;\n    const captureStartIdx = captureIdx;\n    const captureEndIdx = endIdx;\n    const capture = captureStartIdx === captureEndIdx\n        ? EMPTY_ARRAY\n        : JSONparse(qrl.substring(captureStartIdx, captureEndIdx));\n    if (chunk === RUNTIME_QRL) {\n        logError(`Q-ERROR: '${qrl}' is runtime but no instance found on element.`);\n    }\n    return new QRLInternal(chunk, symbol, null, null, capture, null, guard);\n}\nfunction JSONparse(json) {\n    try {\n        return JSON.parse(json);\n    }\n    catch (e) {\n        logError('JSON:', json);\n        throw e;\n    }\n}\nfunction parseGuard(text) {\n    let map = null;\n    if (text) {\n        text.split('|').forEach((obj) => {\n            if (obj) {\n                const parts = obj.split('.');\n                const id = parts.shift();\n                if (!map)\n                    map = new Map();\n                map.set(id, parts);\n            }\n        });\n    }\n    return map;\n}\nfunction indexOf(text, startIdx, char) {\n    const endIdx = text.length;\n    const charIdx = text.indexOf(char, startIdx == endIdx ? 0 : startIdx);\n    return charIdx == -1 ? endIdx : charIdx;\n}\nexport function toQrlOrError(symbolOrQrl) {\n    if (!isQrl(symbolOrQrl)) {\n        if (typeof symbolOrQrl == 'function' || typeof symbolOrQrl == 'string') {\n            symbolOrQrl = runtimeQrl(symbolOrQrl);\n        }\n        else {\n            // TODO(misko): centralize\n            throw new Error(`Q-ERROR Only 'function's and 'string's are supported.`);\n        }\n    }\n    return symbolOrQrl;\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright Builder.io; Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\n/**\n * State factory of the component.\n */\nexport const OnMount = 'on:q-mount';\n/**\n * State factory of the component.\n */\nexport const QHostAttr = 'q:host';\nexport const OnRenderProp = 'on:qRender';\n/**\n * State factory of the component.\n */\nexport const OnRenderSelector = '[q\\\\:host]';\n/**\n * State factory of the component.\n */\nexport const OnUnmount = 'on:q-unmount';\n/**\n * State factory of the component.\n */\nexport const OnResume = 'on:q-resume';\n/**\n * Component Styles.\n */\nexport const ComponentScopedStyles = 'q:sstyle';\n/**\n * Unscoped Component Styles.\n */\nexport const ComponentUnscopedStyles = 'q:ustyle';\n/**\n * Component style host prefix\n */\nexport const ComponentStylesPrefixHost = '📦';\n/**\n * Component style content prefix\n */\nexport const ComponentStylesPrefixContent = '🏷️';\n/**\n * Prefix used to identify on listeners.\n */\nexport const EventPrefix = 'on:';\n/**\n * Attribute used to mark that an event listener is attached.\n */\nexport const EventAny = 'on:.';\n/**\n * Tag name used for projection.\n */\nexport const QSlot = 'Q:SLOT';\nexport const QSlotSelector = 'Q\\\\:SLOT';\n/**\n * `<some-element q:slot=\"...\">`\n */\nexport const QSlotAttr = 'q:slot';\nexport const QObjAttr = 'q:obj';\nexport const QObjSelector = '[q\\\\:obj]';\n/**\n * `<q:slot name=\"...\">`\n */\nexport const QSlotName = 'name';\nexport const QSlotInertName = '\\u0000';\nexport const ELEMENT_ID = 'q:id';\nexport const ELEMENT_ID_SELECTOR = '[q\\\\:id]';\nexport const ELEMENT_ID_PREFIX = '#';\nexport const ELEMENT_ID_Q_PROPS_PREFIX = '&';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFya2Vycy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXRpbC9tYXJrZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVIOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLFlBQVksQ0FBQztBQUVwQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxRQUFRLENBQUM7QUFDbEMsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLFlBQVksQ0FBQztBQUV6Qzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLFlBQVksQ0FBQztBQUU3Qzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxjQUFjLENBQUM7QUFFeEM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsYUFBYSxDQUFDO0FBRXRDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUcsVUFBVSxDQUFDO0FBRWhEOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQUcsVUFBVSxDQUFDO0FBRWxEOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDO0FBRTlDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQUcsS0FBSyxDQUFDO0FBRWxEOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLEtBQUssQ0FBQztBQUVqQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUM7QUFFL0I7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxLQUFLLEdBQUcsUUFBUSxDQUFDO0FBQzlCLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxVQUFVLENBQUM7QUFFeEM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDO0FBRWxDLE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBRyxPQUFPLENBQUM7QUFFaEMsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLFdBQVcsQ0FBQztBQUV4Qzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxNQUFNLENBQUM7QUFDaEMsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLFFBQVEsQ0FBQztBQUV2QyxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsTUFBTSxDQUFDO0FBQ2pDLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLFVBQVUsQ0FBQztBQUM5QyxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxHQUFHLENBQUM7QUFDckMsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQUcsR0FBRyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEJ1aWxkZXIuaW87IEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vQnVpbGRlcklPL3F3aWsvYmxvYi9tYWluL0xJQ0VOU0VcbiAqL1xuXG4vKipcbiAqIFN0YXRlIGZhY3Rvcnkgb2YgdGhlIGNvbXBvbmVudC5cbiAqL1xuZXhwb3J0IGNvbnN0IE9uTW91bnQgPSAnb246cS1tb3VudCc7XG5cbi8qKlxuICogU3RhdGUgZmFjdG9yeSBvZiB0aGUgY29tcG9uZW50LlxuICovXG5leHBvcnQgY29uc3QgUUhvc3RBdHRyID0gJ3E6aG9zdCc7XG5leHBvcnQgY29uc3QgT25SZW5kZXJQcm9wID0gJ29uOnFSZW5kZXInO1xuXG4vKipcbiAqIFN0YXRlIGZhY3Rvcnkgb2YgdGhlIGNvbXBvbmVudC5cbiAqL1xuZXhwb3J0IGNvbnN0IE9uUmVuZGVyU2VsZWN0b3IgPSAnW3FcXFxcOmhvc3RdJztcblxuLyoqXG4gKiBTdGF0ZSBmYWN0b3J5IG9mIHRoZSBjb21wb25lbnQuXG4gKi9cbmV4cG9ydCBjb25zdCBPblVubW91bnQgPSAnb246cS11bm1vdW50JztcblxuLyoqXG4gKiBTdGF0ZSBmYWN0b3J5IG9mIHRoZSBjb21wb25lbnQuXG4gKi9cbmV4cG9ydCBjb25zdCBPblJlc3VtZSA9ICdvbjpxLXJlc3VtZSc7XG5cbi8qKlxuICogQ29tcG9uZW50IFN0eWxlcy5cbiAqL1xuZXhwb3J0IGNvbnN0IENvbXBvbmVudFNjb3BlZFN0eWxlcyA9ICdxOnNzdHlsZSc7XG5cbi8qKlxuICogVW5zY29wZWQgQ29tcG9uZW50IFN0eWxlcy5cbiAqL1xuZXhwb3J0IGNvbnN0IENvbXBvbmVudFVuc2NvcGVkU3R5bGVzID0gJ3E6dXN0eWxlJztcblxuLyoqXG4gKiBDb21wb25lbnQgc3R5bGUgaG9zdCBwcmVmaXhcbiAqL1xuZXhwb3J0IGNvbnN0IENvbXBvbmVudFN0eWxlc1ByZWZpeEhvc3QgPSAn8J+Tpic7XG5cbi8qKlxuICogQ29tcG9uZW50IHN0eWxlIGNvbnRlbnQgcHJlZml4XG4gKi9cbmV4cG9ydCBjb25zdCBDb21wb25lbnRTdHlsZXNQcmVmaXhDb250ZW50ID0gJ/Cfj7fvuI8nO1xuXG4vKipcbiAqIFByZWZpeCB1c2VkIHRvIGlkZW50aWZ5IG9uIGxpc3RlbmVycy5cbiAqL1xuZXhwb3J0IGNvbnN0IEV2ZW50UHJlZml4ID0gJ29uOic7XG5cbi8qKlxuICogQXR0cmlidXRlIHVzZWQgdG8gbWFyayB0aGF0IGFuIGV2ZW50IGxpc3RlbmVyIGlzIGF0dGFjaGVkLlxuICovXG5leHBvcnQgY29uc3QgRXZlbnRBbnkgPSAnb246Lic7XG5cbi8qKlxuICogVGFnIG5hbWUgdXNlZCBmb3IgcHJvamVjdGlvbi5cbiAqL1xuZXhwb3J0IGNvbnN0IFFTbG90ID0gJ1E6U0xPVCc7XG5leHBvcnQgY29uc3QgUVNsb3RTZWxlY3RvciA9ICdRXFxcXDpTTE9UJztcblxuLyoqXG4gKiBgPHNvbWUtZWxlbWVudCBxOnNsb3Q9XCIuLi5cIj5gXG4gKi9cbmV4cG9ydCBjb25zdCBRU2xvdEF0dHIgPSAncTpzbG90JztcblxuZXhwb3J0IGNvbnN0IFFPYmpBdHRyID0gJ3E6b2JqJztcblxuZXhwb3J0IGNvbnN0IFFPYmpTZWxlY3RvciA9ICdbcVxcXFw6b2JqXSc7XG5cbi8qKlxuICogYDxxOnNsb3QgbmFtZT1cIi4uLlwiPmBcbiAqL1xuZXhwb3J0IGNvbnN0IFFTbG90TmFtZSA9ICduYW1lJztcbmV4cG9ydCBjb25zdCBRU2xvdEluZXJ0TmFtZSA9ICdcXHUwMDAwJztcblxuZXhwb3J0IGNvbnN0IEVMRU1FTlRfSUQgPSAncTppZCc7XG5leHBvcnQgY29uc3QgRUxFTUVOVF9JRF9TRUxFQ1RPUiA9ICdbcVxcXFw6aWRdJztcbmV4cG9ydCBjb25zdCBFTEVNRU5UX0lEX1BSRUZJWCA9ICcjJztcbmV4cG9ydCBjb25zdCBFTEVNRU5UX0lEX1FfUFJPUFNfUFJFRklYID0gJyYnO1xuIl19","import { QHostAttr, QSlotAttr } from './markers';\n/**\n * Returns true if the `node` is `Element` and of the right `tagName`.\n *\n * @param node\n * @private\n */\nexport function isDomElementWithTagName(node, tagName) {\n    return isHtmlElement(node) && node.tagName.toUpperCase() == tagName.toUpperCase();\n}\n/**\n * @private\n */\nexport function isTemplateElement(node) {\n    return isDomElementWithTagName(node, 'template');\n}\n/**\n * @private\n */\nexport function isQSLotTemplateElement(node) {\n    return isTemplateElement(node) && node.hasAttribute(QSlotAttr);\n}\n/**\n * @private\n */\nexport function isComponentElement(node) {\n    return isHtmlElement(node) && node.hasAttribute(QHostAttr);\n}\n/**\n * @private\n */\nexport function isHtmlElement(node) {\n    return node ? node.nodeType === NodeType.ELEMENT_NODE : false;\n}\n/**\n * `Node.type` enumeration\n */\nexport var NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"ELEMENT_NODE\"] = 1] = \"ELEMENT_NODE\";\n    NodeType[NodeType[\"ATTRIBUTE_NODE\"] = 2] = \"ATTRIBUTE_NODE\";\n    NodeType[NodeType[\"TEXT_NODE\"] = 3] = \"TEXT_NODE\";\n    NodeType[NodeType[\"CDATA_SECTION_NODE\"] = 4] = \"CDATA_SECTION_NODE\";\n    NodeType[NodeType[\"PROCESSING_INSTRUCTION_NODE\"] = 7] = \"PROCESSING_INSTRUCTION_NODE\";\n    // document, such as <?xml-stylesheet … ?>.\n    NodeType[NodeType[\"COMMENT_NODE\"] = 8] = \"COMMENT_NODE\";\n    NodeType[NodeType[\"DOCUMENT_NODE\"] = 9] = \"DOCUMENT_NODE\";\n    NodeType[NodeType[\"DOCUMENT_TYPE_NODE\"] = 10] = \"DOCUMENT_TYPE_NODE\";\n    NodeType[NodeType[\"DOCUMENT_FRAGMENT_NODE\"] = 11] = \"DOCUMENT_FRAGMENT_NODE\";\n})(NodeType || (NodeType = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3V0aWwvdHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFFakQ7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsdUJBQXVCLENBQ3JDLElBQTZCLEVBQzdCLE9BQWU7SUFFZixPQUFPLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxJQUFJLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQztBQUNwRixDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQUMsSUFBNkI7SUFDN0QsT0FBTyx1QkFBdUIsQ0FBQyxJQUFJLEVBQUUsVUFBVSxDQUFDLENBQUM7QUFDbkQsQ0FBQztBQUVEOztHQUVHO0FBQ0gsTUFBTSxVQUFVLHNCQUFzQixDQUFDLElBQTZCO0lBQ2xFLE9BQU8saUJBQWlCLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUNqRSxDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsa0JBQWtCLENBQUMsSUFBNkI7SUFDOUQsT0FBTyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUM3RCxDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsYUFBYSxDQUFDLElBQVM7SUFDckMsT0FBTyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLEtBQUssUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0FBQ2hFLENBQUM7QUFRRDs7R0FFRztBQUNILE1BQU0sQ0FBTixJQUFrQixRQVdqQjtBQVhELFdBQWtCLFFBQVE7SUFDeEIsdURBQWdCLENBQUE7SUFDaEIsMkRBQWtCLENBQUE7SUFDbEIsaURBQWEsQ0FBQTtJQUNiLG1FQUFzQixDQUFBO0lBQ3RCLHFGQUErQixDQUFBO0lBQy9CLDJDQUEyQztJQUMzQyx1REFBZ0IsQ0FBQTtJQUNoQix5REFBaUIsQ0FBQTtJQUNqQixvRUFBdUIsQ0FBQTtJQUN2Qiw0RUFBMkIsQ0FBQTtBQUM3QixDQUFDLEVBWGlCLFFBQVEsS0FBUixRQUFRLFFBV3pCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUUhvc3RBdHRyLCBRU2xvdEF0dHIgfSBmcm9tICcuL21hcmtlcnMnO1xuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgYG5vZGVgIGlzIGBFbGVtZW50YCBhbmQgb2YgdGhlIHJpZ2h0IGB0YWdOYW1lYC5cbiAqXG4gKiBAcGFyYW0gbm9kZVxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzRG9tRWxlbWVudFdpdGhUYWdOYW1lKFxuICBub2RlOiBOb2RlIHwgbnVsbCB8IHVuZGVmaW5lZCxcbiAgdGFnTmFtZTogc3RyaW5nXG4pOiBub2RlIGlzIEVsZW1lbnQge1xuICByZXR1cm4gaXNIdG1sRWxlbWVudChub2RlKSAmJiBub2RlLnRhZ05hbWUudG9VcHBlckNhc2UoKSA9PSB0YWdOYW1lLnRvVXBwZXJDYXNlKCk7XG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVGVtcGxhdGVFbGVtZW50KG5vZGU6IE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkKTogbm9kZSBpcyBIVE1MVGVtcGxhdGVFbGVtZW50IHtcbiAgcmV0dXJuIGlzRG9tRWxlbWVudFdpdGhUYWdOYW1lKG5vZGUsICd0ZW1wbGF0ZScpO1xufVxuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1FTTG90VGVtcGxhdGVFbGVtZW50KG5vZGU6IE5vZGUgfCBudWxsIHwgdW5kZWZpbmVkKTogbm9kZSBpcyBIVE1MVGVtcGxhdGVFbGVtZW50IHtcbiAgcmV0dXJuIGlzVGVtcGxhdGVFbGVtZW50KG5vZGUpICYmIG5vZGUuaGFzQXR0cmlidXRlKFFTbG90QXR0cik7XG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzQ29tcG9uZW50RWxlbWVudChub2RlOiBOb2RlIHwgbnVsbCB8IHVuZGVmaW5lZCk6IG5vZGUgaXMgSFRNTEVsZW1lbnQge1xuICByZXR1cm4gaXNIdG1sRWxlbWVudChub2RlKSAmJiBub2RlLmhhc0F0dHJpYnV0ZShRSG9zdEF0dHIpO1xufVxuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0h0bWxFbGVtZW50KG5vZGU6IGFueSk6IG5vZGUgaXMgRWxlbWVudCB7XG4gIHJldHVybiBub2RlID8gbm9kZS5ub2RlVHlwZSA9PT0gTm9kZVR5cGUuRUxFTUVOVF9OT0RFIDogZmFsc2U7XG59XG5cbi8qKlxuICogVHlwZSByZXByZXNlbnRpbmcgYSB2YWx1ZSB3aGljaCBpcyBlaXRoZXIgcmVzb2x2ZSBvciBhIHByb21pc2UuXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCB0eXBlIFZhbHVlT3JQcm9taXNlPFQ+ID0gVCB8IFByb21pc2U8VD47XG5cbi8qKlxuICogYE5vZGUudHlwZWAgZW51bWVyYXRpb25cbiAqL1xuZXhwb3J0IGNvbnN0IGVudW0gTm9kZVR5cGUge1xuICBFTEVNRU5UX05PREUgPSAxLCAvLyBBbiBFbGVtZW50IG5vZGUgbGlrZSA8cD4gb3IgPGRpdj4uXG4gIEFUVFJJQlVURV9OT0RFID0gMiwgLy8gQW4gQXR0cmlidXRlIG9mIGFuIEVsZW1lbnQuXG4gIFRFWFRfTk9ERSA9IDMsIC8vIFRoZSBhY3R1YWwgVGV4dCBpbnNpZGUgYW4gRWxlbWVudCBvciBBdHRyLlxuICBDREFUQV9TRUNUSU9OX05PREUgPSA0LCAvLyBBIENEQVRBU2VjdGlvbiwgc3VjaCBhcyA8IUNEQVRBW1sg4oCmIF1dPi5cbiAgUFJPQ0VTU0lOR19JTlNUUlVDVElPTl9OT0RFID0gNywgLy8gQSBQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24gb2YgYW4gWE1MXG4gIC8vIGRvY3VtZW50LCBzdWNoIGFzIDw/eG1sLXN0eWxlc2hlZXQg4oCmID8+LlxuICBDT01NRU5UX05PREUgPSA4LCAvLyBBIENvbW1lbnQgbm9kZSwgc3VjaCBhcyA8IS0tIOKApiAtLT4uXG4gIERPQ1VNRU5UX05PREUgPSA5LCAvLyBBIERvY3VtZW50IG5vZGUuXG4gIERPQ1VNRU5UX1RZUEVfTk9ERSA9IDEwLCAvLyBBIERvY3VtZW50VHlwZSBub2RlLCBzdWNoIGFzIDwhRE9DVFlQRSBodG1sPi5cbiAgRE9DVU1FTlRfRlJBR01FTlRfTk9ERSA9IDExLCAvLyBBIERvY3VtZW50RnJhZ21lbnQgbm9kZS5cbn1cbiJdfQ==","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { NodeType } from './types';\nexport function isNode(value) {\n    return value && typeof value.nodeType == 'number';\n}\nexport function isDocument(value) {\n    return value && value.nodeType == NodeType.DOCUMENT_NODE;\n}\nexport function isElement(value) {\n    return isNode(value) && value.nodeType == NodeType.ELEMENT_NODE;\n}\nexport function isText(value) {\n    return isNode(value) && value.nodeType == NodeType.TEXT_NODE;\n}\nexport function isComment(value) {\n    return isNode(value) && value.nodeType == NodeType.COMMENT_NODE;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWxlbWVudC5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXRpbC9lbGVtZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVILE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFbkMsTUFBTSxVQUFVLE1BQU0sQ0FBQyxLQUFVO0lBQy9CLE9BQU8sS0FBSyxJQUFJLE9BQU8sS0FBSyxDQUFDLFFBQVEsSUFBSSxRQUFRLENBQUM7QUFDcEQsQ0FBQztBQUNELE1BQU0sVUFBVSxVQUFVLENBQUMsS0FBVTtJQUNuQyxPQUFPLEtBQUssSUFBSSxLQUFLLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxhQUFhLENBQUM7QUFDM0QsQ0FBQztBQUNELE1BQU0sVUFBVSxTQUFTLENBQUMsS0FBVTtJQUNsQyxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxZQUFZLENBQUM7QUFDbEUsQ0FBQztBQUNELE1BQU0sVUFBVSxNQUFNLENBQUMsS0FBVTtJQUMvQixPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxTQUFTLENBQUM7QUFDL0QsQ0FBQztBQUNELE1BQU0sVUFBVSxTQUFTLENBQUMsS0FBVTtJQUNsQyxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxZQUFZLENBQUM7QUFDbEUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBCdWlsZGVyLmlvLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL0J1aWxkZXJJTy9xd2lrL2Jsb2IvbWFpbi9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgTm9kZVR5cGUgfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGlzTm9kZSh2YWx1ZTogYW55KTogdmFsdWUgaXMgTm9kZSB7XG4gIHJldHVybiB2YWx1ZSAmJiB0eXBlb2YgdmFsdWUubm9kZVR5cGUgPT0gJ251bWJlcic7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNEb2N1bWVudCh2YWx1ZTogYW55KTogdmFsdWUgaXMgRG9jdW1lbnQge1xuICByZXR1cm4gdmFsdWUgJiYgdmFsdWUubm9kZVR5cGUgPT0gTm9kZVR5cGUuRE9DVU1FTlRfTk9ERTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0VsZW1lbnQodmFsdWU6IGFueSk6IHZhbHVlIGlzIEhUTUxFbGVtZW50IHtcbiAgcmV0dXJuIGlzTm9kZSh2YWx1ZSkgJiYgdmFsdWUubm9kZVR5cGUgPT0gTm9kZVR5cGUuRUxFTUVOVF9OT0RFO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzVGV4dCh2YWx1ZTogYW55KTogdmFsdWUgaXMgVGV4dCB7XG4gIHJldHVybiBpc05vZGUodmFsdWUpICYmIHZhbHVlLm5vZGVUeXBlID09IE5vZGVUeXBlLlRFWFRfTk9ERTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0NvbW1lbnQodmFsdWU6IGFueSk6IHZhbHVlIGlzIENvbW1lbnQge1xuICByZXR1cm4gaXNOb2RlKHZhbHVlKSAmJiB2YWx1ZS5ub2RlVHlwZSA9PSBOb2RlVHlwZS5DT01NRU5UX05PREU7XG59XG4iXX0=","import { getDocument } from '../util/dom';\nimport { isDocument } from '../util/element';\nexport const createPlatform = (doc) => {\n    const moduleCache = new Map();\n    return {\n        importSymbol(element, url, symbolName) {\n            const urlDoc = toUrl(doc, element, url).toString();\n            const urlCopy = new URL(urlDoc);\n            urlCopy.hash = '';\n            urlCopy.search = '';\n            const importURL = urlCopy.href;\n            const mod = moduleCache.get(importURL);\n            if (mod) {\n                return mod[symbolName];\n            }\n            return import(/* @vite-ignore */ importURL).then((mod) => {\n                moduleCache.set(importURL, mod);\n                return mod[symbolName];\n            });\n        },\n        raf: (fn) => {\n            return new Promise((resolve) => {\n                requestAnimationFrame(() => {\n                    resolve(fn());\n                });\n            });\n        },\n        nextTick: (fn) => {\n            return new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(fn());\n                });\n            });\n        },\n        chunkForSymbol() {\n            return undefined;\n        },\n    };\n};\n/**\n * Convert relative base URI and relative URL into a fully qualified URL.\n *\n * @param base -`QRL`s are relative, and therefore they need a base for resolution.\n *    - `Element` use `base.ownerDocument.baseURI`\n *    - `Document` use `base.baseURI`\n *    - `string` use `base` as is\n *    - `QConfig` use `base.baseURI`\n * @param url - relative URL\n * @returns fully qualified URL.\n */\nexport function toUrl(doc, element, url) {\n    let _url;\n    let _base = undefined;\n    if (url === undefined) {\n        //  recursive call\n        if (element) {\n            _url = element.getAttribute('q:base');\n            _base = toUrl(doc, element.parentNode && element.parentNode.closest('[q\\\\:base]'));\n        }\n        else {\n            _url = doc.baseURI;\n        }\n    }\n    else if (url) {\n        (_url = url), (_base = toUrl(doc, element.closest('[q\\\\:base]')));\n    }\n    else {\n        throw new Error('INTERNAL ERROR');\n    }\n    return new URL(String(_url), _base);\n}\n/**\n * @public\n */\nexport const setPlatform = (doc, plt) => (doc[DocumentPlatform] = plt);\n/**\n * @public\n */\nexport const getPlatform = (docOrNode) => {\n    const doc = (isDocument(docOrNode) ? docOrNode : getDocument(docOrNode));\n    return doc[DocumentPlatform] || (doc[DocumentPlatform] = createPlatform(doc));\n};\nconst DocumentPlatform = /*@__PURE__*/ Symbol();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhdGZvcm0uanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3BsYXRmb3JtL3BsYXRmb3JtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDMUMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRzdDLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxDQUFDLEdBQWEsRUFBZ0IsRUFBRTtJQUM1RCxNQUFNLFdBQVcsR0FBRyxJQUFJLEdBQUcsRUFBcUMsQ0FBQztJQUNqRSxPQUFPO1FBQ0wsWUFBWSxDQUFDLE9BQU8sRUFBRSxHQUFHLEVBQUUsVUFBVTtZQUNuQyxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLE9BQU8sRUFBRSxHQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUVuRCxNQUFNLE9BQU8sR0FBRyxJQUFJLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUNoQyxPQUFPLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztZQUNsQixPQUFPLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztZQUNwQixNQUFNLFNBQVMsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDO1lBQy9CLE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDdkMsSUFBSSxHQUFHLEVBQUU7Z0JBQ1AsT0FBTyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7YUFDeEI7WUFDRCxPQUFPLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtnQkFDdkQsV0FBVyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQ2hDLE9BQU8sR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ3pCLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUNELEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO1lBQ1YsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFO2dCQUM3QixxQkFBcUIsQ0FBQyxHQUFHLEVBQUU7b0JBQ3pCLE9BQU8sQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO2dCQUNoQixDQUFDLENBQUMsQ0FBQztZQUNMLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUNELFFBQVEsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO1lBQ2YsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFO2dCQUM3QixVQUFVLENBQUMsR0FBRyxFQUFFO29CQUNkLE9BQU8sQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO2dCQUNoQixDQUFDLENBQUMsQ0FBQztZQUNMLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUNELGNBQWM7WUFDWixPQUFPLFNBQVMsQ0FBQztRQUNuQixDQUFDO0tBQ0YsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGOzs7Ozs7Ozs7O0dBVUc7QUFDSCxNQUFNLFVBQVUsS0FBSyxDQUFDLEdBQWEsRUFBRSxPQUF1QixFQUFFLEdBQWtCO0lBQzlFLElBQUksSUFBa0IsQ0FBQztJQUN2QixJQUFJLEtBQUssR0FBNkIsU0FBUyxDQUFDO0lBRWhELElBQUksR0FBRyxLQUFLLFNBQVMsRUFBRTtRQUNyQixrQkFBa0I7UUFDbEIsSUFBSSxPQUFPLEVBQUU7WUFDWCxJQUFJLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUUsQ0FBQztZQUN2QyxLQUFLLEdBQUcsS0FBSyxDQUNYLEdBQUcsRUFDSCxPQUFPLENBQUMsVUFBVSxJQUFLLE9BQU8sQ0FBQyxVQUEwQixDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FDaEYsQ0FBQztTQUNIO2FBQU07WUFDTCxJQUFJLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQztTQUNwQjtLQUNGO1NBQU0sSUFBSSxHQUFHLEVBQUU7UUFDZCxDQUFDLElBQUksR0FBRyxHQUFHLENBQUMsRUFBRSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsR0FBRyxFQUFFLE9BQVEsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ3BFO1NBQU07UUFDTCxNQUFNLElBQUksS0FBSyxDQUFDLGdCQUFnQixDQUFDLENBQUM7S0FDbkM7SUFDRCxPQUFPLElBQUksR0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztBQUN0QyxDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsQ0FBQyxHQUFhLEVBQUUsR0FBaUIsRUFBRSxFQUFFLENBQzlELENBQUUsR0FBd0IsQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO0FBRXREOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLENBQUMsU0FBMEIsRUFBRSxFQUFFO0lBQ3hELE1BQU0sR0FBRyxHQUFHLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUUsQ0FBcUIsQ0FBQztJQUM5RixPQUFPLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLEdBQUcsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7QUFDaEYsQ0FBQyxDQUFDO0FBRUYsTUFBTSxnQkFBZ0IsR0FBRyxhQUFhLENBQUMsTUFBTSxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXREb2N1bWVudCB9IGZyb20gJy4uL3V0aWwvZG9tJztcbmltcG9ydCB7IGlzRG9jdW1lbnQgfSBmcm9tICcuLi91dGlsL2VsZW1lbnQnO1xuaW1wb3J0IHR5cGUgeyBDb3JlUGxhdGZvcm0gfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVBsYXRmb3JtID0gKGRvYzogRG9jdW1lbnQpOiBDb3JlUGxhdGZvcm0gPT4ge1xuICBjb25zdCBtb2R1bGVDYWNoZSA9IG5ldyBNYXA8c3RyaW5nLCB7IFtzeW1ib2w6IHN0cmluZ106IGFueSB9PigpO1xuICByZXR1cm4ge1xuICAgIGltcG9ydFN5bWJvbChlbGVtZW50LCB1cmwsIHN5bWJvbE5hbWUpIHtcbiAgICAgIGNvbnN0IHVybERvYyA9IHRvVXJsKGRvYywgZWxlbWVudCwgdXJsKS50b1N0cmluZygpO1xuXG4gICAgICBjb25zdCB1cmxDb3B5ID0gbmV3IFVSTCh1cmxEb2MpO1xuICAgICAgdXJsQ29weS5oYXNoID0gJyc7XG4gICAgICB1cmxDb3B5LnNlYXJjaCA9ICcnO1xuICAgICAgY29uc3QgaW1wb3J0VVJMID0gdXJsQ29weS5ocmVmO1xuICAgICAgY29uc3QgbW9kID0gbW9kdWxlQ2FjaGUuZ2V0KGltcG9ydFVSTCk7XG4gICAgICBpZiAobW9kKSB7XG4gICAgICAgIHJldHVybiBtb2Rbc3ltYm9sTmFtZV07XG4gICAgICB9XG4gICAgICByZXR1cm4gaW1wb3J0KC8qIEB2aXRlLWlnbm9yZSAqLyBpbXBvcnRVUkwpLnRoZW4oKG1vZCkgPT4ge1xuICAgICAgICBtb2R1bGVDYWNoZS5zZXQoaW1wb3J0VVJMLCBtb2QpO1xuICAgICAgICByZXR1cm4gbW9kW3N5bWJvbE5hbWVdO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICByYWY6IChmbikgPT4ge1xuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICAgICAgcmVzb2x2ZShmbigpKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIG5leHRUaWNrOiAoZm4pID0+IHtcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICByZXNvbHZlKGZuKCkpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgY2h1bmtGb3JTeW1ib2woKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH0sXG4gIH07XG59O1xuXG4vKipcbiAqIENvbnZlcnQgcmVsYXRpdmUgYmFzZSBVUkkgYW5kIHJlbGF0aXZlIFVSTCBpbnRvIGEgZnVsbHkgcXVhbGlmaWVkIFVSTC5cbiAqXG4gKiBAcGFyYW0gYmFzZSAtYFFSTGBzIGFyZSByZWxhdGl2ZSwgYW5kIHRoZXJlZm9yZSB0aGV5IG5lZWQgYSBiYXNlIGZvciByZXNvbHV0aW9uLlxuICogICAgLSBgRWxlbWVudGAgdXNlIGBiYXNlLm93bmVyRG9jdW1lbnQuYmFzZVVSSWBcbiAqICAgIC0gYERvY3VtZW50YCB1c2UgYGJhc2UuYmFzZVVSSWBcbiAqICAgIC0gYHN0cmluZ2AgdXNlIGBiYXNlYCBhcyBpc1xuICogICAgLSBgUUNvbmZpZ2AgdXNlIGBiYXNlLmJhc2VVUklgXG4gKiBAcGFyYW0gdXJsIC0gcmVsYXRpdmUgVVJMXG4gKiBAcmV0dXJucyBmdWxseSBxdWFsaWZpZWQgVVJMLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9VcmwoZG9jOiBEb2N1bWVudCwgZWxlbWVudDogRWxlbWVudCB8IG51bGwsIHVybD86IHN0cmluZyB8IFVSTCk6IFVSTCB7XG4gIGxldCBfdXJsOiBzdHJpbmcgfCBVUkw7XG4gIGxldCBfYmFzZTogc3RyaW5nIHwgVVJMIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkO1xuXG4gIGlmICh1cmwgPT09IHVuZGVmaW5lZCkge1xuICAgIC8vICByZWN1cnNpdmUgY2FsbFxuICAgIGlmIChlbGVtZW50KSB7XG4gICAgICBfdXJsID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ3E6YmFzZScpITtcbiAgICAgIF9iYXNlID0gdG9VcmwoXG4gICAgICAgIGRvYyxcbiAgICAgICAgZWxlbWVudC5wYXJlbnROb2RlICYmIChlbGVtZW50LnBhcmVudE5vZGUgYXMgSFRNTEVsZW1lbnQpLmNsb3Nlc3QoJ1txXFxcXDpiYXNlXScpXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICBfdXJsID0gZG9jLmJhc2VVUkk7XG4gICAgfVxuICB9IGVsc2UgaWYgKHVybCkge1xuICAgIChfdXJsID0gdXJsKSwgKF9iYXNlID0gdG9VcmwoZG9jLCBlbGVtZW50IS5jbG9zZXN0KCdbcVxcXFw6YmFzZV0nKSkpO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcignSU5URVJOQUwgRVJST1InKTtcbiAgfVxuICByZXR1cm4gbmV3IFVSTChTdHJpbmcoX3VybCksIF9iYXNlKTtcbn1cblxuLyoqXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBjb25zdCBzZXRQbGF0Zm9ybSA9IChkb2M6IERvY3VtZW50LCBwbHQ6IENvcmVQbGF0Zm9ybSkgPT5cbiAgKChkb2MgYXMgUGxhdGZvcm1Eb2N1bWVudClbRG9jdW1lbnRQbGF0Zm9ybV0gPSBwbHQpO1xuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGNvbnN0IGdldFBsYXRmb3JtID0gKGRvY09yTm9kZTogRG9jdW1lbnQgfCBOb2RlKSA9PiB7XG4gIGNvbnN0IGRvYyA9IChpc0RvY3VtZW50KGRvY09yTm9kZSkgPyBkb2NPck5vZGUgOiBnZXREb2N1bWVudChkb2NPck5vZGUpISkgYXMgUGxhdGZvcm1Eb2N1bWVudDtcbiAgcmV0dXJuIGRvY1tEb2N1bWVudFBsYXRmb3JtXSB8fCAoZG9jW0RvY3VtZW50UGxhdGZvcm1dID0gY3JlYXRlUGxhdGZvcm0oZG9jKSk7XG59O1xuXG5jb25zdCBEb2N1bWVudFBsYXRmb3JtID0gLypAX19QVVJFX18qLyBTeW1ib2woKTtcblxuaW50ZXJmYWNlIFBsYXRmb3JtRG9jdW1lbnQgZXh0ZW5kcyBEb2N1bWVudCB7XG4gIFtEb2N1bWVudFBsYXRmb3JtXT86IENvcmVQbGF0Zm9ybTtcbn1cbiJdfQ==","import { runtimeQrl, staticQrl, toInternalQRL } from './qrl';\nimport { getPlatform } from '../platform/platform';\nimport { getDocument } from '../util/dom';\n// <docs markdown=\"https://hackmd.io/m5DzCi5MTa26LuUj5t3HpQ#qrlImport\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fm5DzCi5MTa26LuUj5t3HpQ%3Fboth#qrlImport instead)\n/**\n * Lazy-load a `QRL` symbol and return the lazy-loaded value.\n *\n * See: `QRL`\n *\n * @param element - Location of the URL to resolve against. This is needed to take `q:base` into\n * account.\n * @param qrl - QRL to load.\n * @returns A resolved QRL value as a Promise.\n * @public\n */\n// </docs>\nexport async function qrlImport(element, qrl) {\n    const qrl_ = toInternalQRL(qrl);\n    if (qrl_.symbolRef)\n        return qrl_.symbolRef;\n    if (qrl_.symbolFn) {\n        return (qrl_.symbolRef = qrl_.symbolFn().then((module) => module[qrl_.symbol]));\n    }\n    else {\n        return (qrl_.symbolRef = await getPlatform(getDocument(element)).importSymbol(element, qrl_.chunk, qrl_.symbol));\n    }\n}\n// <docs markdown=\"https://hackmd.io/m5DzCi5MTa26LuUj5t3HpQ#$\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fm5DzCi5MTa26LuUj5t3HpQ%3Fboth#$ instead)\n/**\n * Qwik Optimizer marker function.\n *\n * Use `$(...)` to tell Qwik Optimizer to extract the expression in `$(...)` into a lazy-loadable\n * resource referenced by `QRL`.\n *\n * See: `implicit$FirstArg` for additional `____$(...)` rules.\n *\n * In this example `$(...)` is used to capture the callback function of `onmousemove` into\n * lazy-loadable reference. This allows the code to refer to the function without actually\n * loading the function. In this example, the callback function does not get loaded until\n * `mousemove` event fires.\n *\n * ```typescript\n * onDocument(\n *   'mousemove',\n *   $(() => console.log('mousemove'))\n * );\n * ```\n *\n * In this code the Qwik Optimizer detects `$(...)` and transforms the code into:\n *\n * ```typescript\n * // FILE: <current file>\n * onDocument('mousemove', qrl('./chunk-abc.js', 'onMousemove'));\n *\n * // FILE: chunk-abc.js\n * export const onMousemove = () => console.log('mousemove');\n * ```\n *\n * ## Special Rules\n *\n * The Qwik Optimizer places special rules on functions that can be lazy-loaded.\n *\n * 1. The expression of the `$(expression)` function must be importable by the system.\n * (expression shows up in `import` or has `export`)\n * 2. If inlined function then all lexically captured values must be:\n *    - importable (vars shows up in `import` or has `export`)\n *    - const (The capturing process differs from JS capturing in that writing to captured\n * variables does not update them, and therefore writes are forbidden. The best practice is that\n * all captured variables are constants.)\n *    - Must be runtime serializable.\n *\n * ```typescript\n * import { importedFn } from './example';\n *\n * export const greet = () => console.log('greet');\n * function topLevelFn() {}\n *\n * function myCode() {\n *   const store = useStore({});\n *   function localFn() {}\n *   // Valid Examples\n *   $(greet); // greet is importable\n *   $(importedFn); // importedFn is importable\n *   $(() => greet()); // greet is importable;\n *   $(() => importedFn()); // importedFn is importable\n *   $(() => console.log(store)); // store is serializable.\n *\n *   // Compile time errors\n *   $(topLevelFn); // ERROR: `topLevelFn` not importable\n *   $(() => topLevelFn()); // ERROR: `topLevelFn` not importable\n *\n *   // Runtime errors\n *   $(localFn); // ERROR: `localFn` fails serialization\n *   $(() => localFn()); // ERROR: `localFn` fails serialization\n * }\n *\n * ```\n *\n * @param expression - Expression which should be lazy loaded\n * @public\n */\n// </docs>\nexport function $(expression) {\n    return runtimeQrl(expression);\n}\n// <docs markdown=\"https://hackmd.io/m5DzCi5MTa26LuUj5t3HpQ#implicit$FirstArg\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fm5DzCi5MTa26LuUj5t3HpQ%3Fboth#implicit$FirstArg instead)\n/**\n * Create a `____$(...)` convenience method from `___(...)`.\n *\n * It is very common for functions to take a lazy-loadable resource as a first argument. For this\n * reason, the Qwik Optimizer automatically extracts the first argument from any function which\n * ends in `$`.\n *\n * This means that `foo$(arg0)` and `foo($(arg0))` are equivalent with respect to Qwik Optimizer.\n * The former is just a shorthand for the latter.\n *\n * For example these function call are equivalent:\n *\n * - `component$(() => {...})` is same as `onRender($(() => {...}))`\n *\n * ```typescript\n * export function myApi(callback: QRL<() => void>): void {\n *   // ...\n * }\n *\n * export const myApi$ = implicit$FirstArg(myApi);\n * // type of myApi$: (callback: () => void): void\n *\n * // can be used as:\n * myApi$(() => console.log('callback'));\n *\n * // will be transpiled to:\n * // FILE: <current file>\n * myApi(qrl('./chunk-abc.js', 'callback'));\n *\n * // FILE: chunk-abc.js\n * export const callback = () => console.log('callback');\n * ```\n *\n * @param fn - function that should have its first argument automatically `$`.\n * @public\n */\n// </docs>\nexport function implicit$FirstArg(fn) {\n    return function (first, ...rest) {\n        return fn.call(null, $(first), ...rest);\n    };\n}\n// <docs markdown=\"https://hackmd.io/m5DzCi5MTa26LuUj5t3HpQ#qrl\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fm5DzCi5MTa26LuUj5t3HpQ%3Fboth#qrl instead)\n/**\n * Used by Qwik Optimizer to point to lazy-loaded resources.\n *\n * This function should be used by the Qwik Optimizer only. The function should not be directly\n * referred to in the source code of the application.\n *\n * See: `QRL`, `$(...)`\n *\n * @param chunkOrFn - Chunk name (or function which is stringified to extract chunk name)\n * @param symbol - Symbol to lazy load\n * @param lexicalScopeCapture - a set of lexically scoped variables to capture.\n * @public\n */\n// </docs>\nexport const qrl = staticQrl;\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { isHtmlElement } from '../util/types';\nexport function stringifyDebug(value) {\n    if (value == null)\n        return String(value);\n    if (typeof value === 'function')\n        return value.name;\n    if (isHtmlElement(value))\n        return stringifyElement(value);\n    if (value instanceof URL)\n        return String(value);\n    if (typeof value === 'object')\n        return JSON.stringify(value, function (key, value) {\n            if (isHtmlElement(value))\n                return stringifyElement(value);\n            return value;\n        });\n    return String(value);\n}\nexport function stringifyElement(element) {\n    let html = '<' + element.localName;\n    const attributes = element.attributes;\n    const names = [];\n    for (let i = 0; i < attributes.length; i++) {\n        names.push(attributes[i].name);\n    }\n    names.sort();\n    for (let i = 0; i < names.length; i++) {\n        const name = names[i];\n        let value = element.getAttribute(name);\n        if (value === null || value === void 0 ? void 0 : value.startsWith('file:/')) {\n            value = value.replace(/(file:\\/\\/).*(\\/.*)$/, (all, protocol, file) => protocol + '...' + file);\n        }\n        html +=\n            ' ' + name + (value == null || value == '' ? '' : \"='\" + value.replace(\"'\", '&apos;') + \"'\");\n    }\n    return html + '>';\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaW5naWZ5LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9lcnJvci9zdHJpbmdpZnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUgsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU5QyxNQUFNLFVBQVUsY0FBYyxDQUFDLEtBQVU7SUFDdkMsSUFBSSxLQUFLLElBQUksSUFBSTtRQUFFLE9BQU8sTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLElBQUksT0FBTyxLQUFLLEtBQUssVUFBVTtRQUFFLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQztJQUNuRCxJQUFJLGFBQWEsQ0FBQyxLQUFLLENBQUM7UUFBRSxPQUFPLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3pELElBQUksS0FBSyxZQUFZLEdBQUc7UUFBRSxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMvQyxJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVE7UUFDM0IsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxVQUFxQixHQUFXLEVBQUUsS0FBVTtZQUN2RSxJQUFJLGFBQWEsQ0FBQyxLQUFLLENBQUM7Z0JBQUUsT0FBTyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN6RCxPQUFPLEtBQUssQ0FBQztRQUNmLENBQUMsQ0FBQyxDQUFDO0lBQ0wsT0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDdkIsQ0FBQztBQUVELE1BQU0sVUFBVSxnQkFBZ0IsQ0FBQyxPQUFnQjtJQUMvQyxJQUFJLElBQUksR0FBRyxHQUFHLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQztJQUNuQyxNQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDO0lBQ3RDLE1BQU0sS0FBSyxHQUFHLEVBQUUsQ0FBQztJQUNqQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsVUFBVSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUMxQyxLQUFLLENBQUMsSUFBSSxDQUFFLFVBQVUsQ0FBQyxDQUFDLENBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUMxQztJQUNELEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNiLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ3JDLE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QixJQUFJLEtBQUssR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZDLElBQUksS0FBSyxhQUFMLEtBQUssdUJBQUwsS0FBSyxDQUFFLFVBQVUsQ0FBQyxRQUFRLENBQUMsRUFBRTtZQUMvQixLQUFLLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FDbkIsc0JBQXNCLEVBQ3RCLENBQUMsR0FBRyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLFFBQVEsR0FBRyxLQUFLLEdBQUcsSUFBSSxDQUNqRCxDQUFDO1NBQ0g7UUFDRCxJQUFJO1lBQ0YsR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEtBQUssSUFBSSxJQUFJLElBQUksS0FBSyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7S0FDaEc7SUFDRCxPQUFPLElBQUksR0FBRyxHQUFHLENBQUM7QUFDcEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBCdWlsZGVyLmlvLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL0J1aWxkZXJJTy9xd2lrL2Jsb2IvbWFpbi9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgaXNIdG1sRWxlbWVudCB9IGZyb20gJy4uL3V0aWwvdHlwZXMnO1xuXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5naWZ5RGVidWcodmFsdWU6IGFueSk6IHN0cmluZyB8IG51bGwge1xuICBpZiAodmFsdWUgPT0gbnVsbCkgcmV0dXJuIFN0cmluZyh2YWx1ZSk7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdmdW5jdGlvbicpIHJldHVybiB2YWx1ZS5uYW1lO1xuICBpZiAoaXNIdG1sRWxlbWVudCh2YWx1ZSkpIHJldHVybiBzdHJpbmdpZnlFbGVtZW50KHZhbHVlKTtcbiAgaWYgKHZhbHVlIGluc3RhbmNlb2YgVVJMKSByZXR1cm4gU3RyaW5nKHZhbHVlKTtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpXG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHZhbHVlLCBmdW5jdGlvbiAodGhpczogYW55LCBrZXk6IHN0cmluZywgdmFsdWU6IGFueSkge1xuICAgICAgaWYgKGlzSHRtbEVsZW1lbnQodmFsdWUpKSByZXR1cm4gc3RyaW5naWZ5RWxlbWVudCh2YWx1ZSk7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSk7XG4gIHJldHVybiBTdHJpbmcodmFsdWUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5naWZ5RWxlbWVudChlbGVtZW50OiBFbGVtZW50KTogc3RyaW5nIHtcbiAgbGV0IGh0bWwgPSAnPCcgKyBlbGVtZW50LmxvY2FsTmFtZTtcbiAgY29uc3QgYXR0cmlidXRlcyA9IGVsZW1lbnQuYXR0cmlidXRlcztcbiAgY29uc3QgbmFtZXMgPSBbXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBhdHRyaWJ1dGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgbmFtZXMucHVzaCgoYXR0cmlidXRlc1tpXSBhcyBBdHRyKS5uYW1lKTtcbiAgfVxuICBuYW1lcy5zb3J0KCk7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbmFtZXMubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBuYW1lID0gbmFtZXNbaV07XG4gICAgbGV0IHZhbHVlID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUobmFtZSk7XG4gICAgaWYgKHZhbHVlPy5zdGFydHNXaXRoKCdmaWxlOi8nKSkge1xuICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKFxuICAgICAgICAvKGZpbGU6XFwvXFwvKS4qKFxcLy4qKSQvLFxuICAgICAgICAoYWxsLCBwcm90b2NvbCwgZmlsZSkgPT4gcHJvdG9jb2wgKyAnLi4uJyArIGZpbGVcbiAgICAgICk7XG4gICAgfVxuICAgIGh0bWwgKz1cbiAgICAgICcgJyArIG5hbWUgKyAodmFsdWUgPT0gbnVsbCB8fCB2YWx1ZSA9PSAnJyA/ICcnIDogXCI9J1wiICsgdmFsdWUucmVwbGFjZShcIidcIiwgJyZhcG9zOycpICsgXCInXCIpO1xuICB9XG4gIHJldHVybiBodG1sICsgJz4nO1xufVxuIl19","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { stringifyDebug } from './stringify';\nimport { qDev } from '../util/qdev';\nexport var QError;\n(function (QError) {\n    // core 000-099\n    QError[QError[\"TODO\"] = 0] = \"TODO\";\n    QError[QError[\"Core_qConfigNotFound_path\"] = 1] = \"Core_qConfigNotFound_path\";\n    QError[QError[\"Core_unrecognizedStack_frame\"] = 2] = \"Core_unrecognizedStack_frame\";\n    QError[QError[\"Core_noAttribute_atr1_element\"] = 3] = \"Core_noAttribute_atr1_element\";\n    QError[QError[\"Core_noAttribute_atr1_attr2_element\"] = 4] = \"Core_noAttribute_atr1_attr2_element\";\n    QError[QError[\"Core_missingProperty_name_props\"] = 5] = \"Core_missingProperty_name_props\";\n    QError[QError[\"Core_missingExport_name_url_props\"] = 6] = \"Core_missingExport_name_url_props\";\n    // QRL 100-199\n    QError[QError[\"QRL_expectFunction_url_actual\"] = 100] = \"QRL_expectFunction_url_actual\";\n    // Injection 200-299\n    QError[QError[\"Injector_noHost_element\"] = 200] = \"Injector_noHost_element\";\n    QError[QError[\"Injector_expectedSpecificInjector_expected_actual\"] = 201] = \"Injector_expectedSpecificInjector_expected_actual\";\n    QError[QError[\"Injector_notElement_arg\"] = 202] = \"Injector_notElement_arg\";\n    QError[QError[\"Injector_wrongMethodThis_expected_actual\"] = 203] = \"Injector_wrongMethodThis_expected_actual\";\n    QError[QError[\"Injector_missingSerializedState_entityKey_element\"] = 204] = \"Injector_missingSerializedState_entityKey_element\";\n    QError[QError[\"Injector_notFound_element\"] = 206] = \"Injector_notFound_element\";\n    QError[QError[\"Injector_eventInjectorNotSerializable\"] = 207] = \"Injector_eventInjectorNotSerializable\";\n    // Entities 300-399\n    QError[QError[\"Entity_notValidKey_key\"] = 300] = \"Entity_notValidKey_key\";\n    QError[QError[\"Entity_keyAlreadyExists_key\"] = 301] = \"Entity_keyAlreadyExists_key\";\n    QError[QError[\"Entity_invalidAttribute_name\"] = 303] = \"Entity_invalidAttribute_name\";\n    QError[QError[\"Entity_missingExpandoOrState_attrName\"] = 304] = \"Entity_missingExpandoOrState_attrName\";\n    QError[QError[\"Entity_elementMissingEntityAttr_element_attr\"] = 305] = \"Entity_elementMissingEntityAttr_element_attr\";\n    QError[QError[\"Entity_noState_entity_props\"] = 306] = \"Entity_noState_entity_props\";\n    QError[QError[\"Entity_expected_obj\"] = 307] = \"Entity_expected_obj\";\n    QError[QError[\"Entity_overridesConstructor_entity\"] = 308] = \"Entity_overridesConstructor_entity\";\n    QError[QError[\"Entity_keyMissingParts_key_key\"] = 309] = \"Entity_keyMissingParts_key_key\";\n    QError[QError[\"Entity_no$type_entity\"] = 310] = \"Entity_no$type_entity\";\n    QError[QError[\"Entity_no$keyProps_entity\"] = 311] = \"Entity_no$keyProps_entity\";\n    QError[QError[\"Entity_no$qrl_entity\"] = 312] = \"Entity_no$qrl_entity\";\n    QError[QError[\"Entity_nameCollision_name_currentQrl_expectedQrl\"] = 313] = \"Entity_nameCollision_name_currentQrl_expectedQrl\";\n    QError[QError[\"Entity_keyTooManyParts_entity_parts_key\"] = 314] = \"Entity_keyTooManyParts_entity_parts_key\";\n    QError[QError[\"Entity_keyNameMismatch_key_name_entity_name\"] = 315] = \"Entity_keyNameMismatch_key_name_entity_name\";\n    QError[QError[\"Entity_stateMissingKey_state\"] = 316] = \"Entity_stateMissingKey_state\";\n    // Component 400-499\n    QError[QError[\"Component_bindNeedsKey\"] = 400] = \"Component_bindNeedsKey\";\n    QError[QError[\"Component_bindNeedsValue\"] = 401] = \"Component_bindNeedsValue\";\n    QError[QError[\"Component_needsState\"] = 402] = \"Component_needsState\";\n    QError[QError[\"Component_needsInjectionContext_constructor\"] = 403] = \"Component_needsInjectionContext_constructor\";\n    QError[QError[\"Component_noProperty_propName_props_host\"] = 404] = \"Component_noProperty_propName_props_host\";\n    QError[QError[\"Component_notFound_component\"] = 405] = \"Component_notFound_component\";\n    QError[QError[\"Component_doesNotMatch_component_actual\"] = 406] = \"Component_doesNotMatch_component_actual\";\n    QError[QError[\"Component_noState_component_props\"] = 408] = \"Component_noState_component_props\";\n    // Provider 500-599\n    QError[QError[\"Provider_unrecognizedFormat_value\"] = 500] = \"Provider_unrecognizedFormat_value\";\n    // Render 600-699\n    QError[QError[\"Render_unexpectedJSXNodeType_type\"] = 600] = \"Render_unexpectedJSXNodeType_type\";\n    QError[QError[\"Render_unsupportedFormat_obj_attr\"] = 601] = \"Render_unsupportedFormat_obj_attr\";\n    QError[QError[\"Render_expectingEntity_entity\"] = 602] = \"Render_expectingEntity_entity\";\n    QError[QError[\"Render_expectingEntityArray_obj\"] = 603] = \"Render_expectingEntityArray_obj\";\n    QError[QError[\"Render_expectingEntityOrComponent_obj\"] = 604] = \"Render_expectingEntityOrComponent_obj\";\n    QError[QError[\"Render_stateMachineStuck\"] = 699] = \"Render_stateMachineStuck\";\n    // Event\n    QError[QError[\"Event_emitEventRequiresName_url\"] = 700] = \"Event_emitEventRequiresName_url\";\n    QError[QError[\"Event_emitEventCouldNotFindListener_event_element\"] = 701] = \"Event_emitEventCouldNotFindListener_event_element\";\n})(QError || (QError = {}));\nexport function qError(code, ...args) {\n    if (qDev) {\n        const text = codeToText(code);\n        const parts = text.split('{}');\n        const error = parts\n            .map((value, index) => {\n            return value + (index === parts.length - 1 ? '' : stringifyDebug(args[index]));\n        })\n            .join('');\n        debugger; // eslint-disable-line no-debugger\n        return new Error(error);\n    }\n    else {\n        return new Error(`QError ` + code);\n    }\n}\nfunction codeToText(code) {\n    const area = {\n        0: 'ERROR',\n        1: 'QRL-ERROR',\n        2: 'INJECTOR-ERROR',\n        3: 'SERVICE-ERROR',\n        4: 'COMPONENT-ERROR',\n        5: 'PROVIDER-ERROR',\n        6: 'RENDER-ERROR',\n        7: 'EVENT-ERROR',\n    }[Math.floor(code / 100)];\n    const text = {\n        [QError.TODO]: '{}',\n        [QError.Core_qConfigNotFound_path]: \"QConfig not found in path '{}'.\",\n        [QError.Core_unrecognizedStack_frame]: \"Unrecognized stack format '{}'\",\n        [QError.Core_noAttribute_atr1_element]: \"Could not find entity state '{}' at '{}' or any of it's parents.\",\n        [QError.Core_noAttribute_atr1_attr2_element]: \"Could not find entity state '{}' ( or entity provider '{}') at '{}' or any of it's parents.\",\n        [QError.Core_missingProperty_name_props]: \"Missing property '{}' in props '{}'.\",\n        [QError.Core_missingExport_name_url_props]: \"Missing export '{}' from '{}'. Exported symbols are: {}\",\n        //////////////\n        [QError.QRL_expectFunction_url_actual]: \"QRL '${}' should point to function, was '{}'.\",\n        //////////////\n        [QError.Injector_noHost_element]: \"Can't find host element above '{}'.\",\n        [QError.Injector_expectedSpecificInjector_expected_actual]: \"Provider is expecting '{}' but got '{}'.\",\n        [QError.Injector_notElement_arg]: \"Expected 'Element' was '{}'.\",\n        [QError.Injector_wrongMethodThis_expected_actual]: \"Expected injection 'this' to be of type '{}', but was of type '{}'.\",\n        [QError.Injector_missingSerializedState_entityKey_element]: \"Entity key '{}' is found on '{}' but does not contain state. Was 'serializeState()' not run during dehydration?\",\n        [QError.Injector_notFound_element]: \"No injector can be found starting at '{}'.\",\n        [QError.Injector_eventInjectorNotSerializable]: 'EventInjector does not support serialization.',\n        //////////////\n        [QError.Entity_notValidKey_key]: \"Data key '{}' is not a valid key.\\n\" +\n            '  - Data key can only contain characters (preferably lowercase) or number\\n' +\n            '  - Data key is prefixed with entity name\\n' +\n            \"  - Data key is made up from parts that are separated with ':'.\",\n        [QError.Entity_keyAlreadyExists_key]: \"A entity with key '{}' already exists.\",\n        [QError.Entity_invalidAttribute_name]: \"'{}' is not a valid attribute. \" +\n            \"Attributes can only contain 'a-z' (lowercase), '0-9', '-' and '_'.\",\n        [QError.Entity_missingExpandoOrState_attrName]: \"Found '{}' but expando did not have entity and attribute did not have state.\",\n        [QError.Entity_elementMissingEntityAttr_element_attr]: \"Element '{}' is missing entity attribute definition '{}'.\",\n        [QError.Entity_noState_entity_props]: \"Unable to create state for entity '{}' with props '{}' because no state found and '$newState()' method was not defined on entity.\",\n        [QError.Entity_expected_obj]: \"'{}' is not an instance of 'Entity'.\",\n        [QError.Entity_overridesConstructor_entity]: \"'{}' overrides 'constructor' property preventing 'EntityType' retrieval.\",\n        [QError.Entity_no$keyProps_entity]: \"Entity '{}' does not define '$keyProps'.\",\n        [QError.Entity_no$type_entity]: \"Entity '{}' must have static '$type' property defining the name of the entity.\",\n        [QError.Entity_no$qrl_entity]: \"Entity '{}' must have static '$qrl' property defining the import location of the entity.\",\n        [QError.Entity_nameCollision_name_currentQrl_expectedQrl]: \"Name collision. Already have entity named '{}' with QRL '{}' but expected QRL '{}'.\",\n        [QError.Entity_keyMissingParts_key_key]: \"Entity key '{}' is missing values. Expecting '{}:someValue'.\",\n        [QError.Entity_keyTooManyParts_entity_parts_key]: \"Entity '{}' defines '$keyProps' as  '{}'. Actual key '{}' has more parts than entity defines.\",\n        [QError.Entity_keyNameMismatch_key_name_entity_name]: \"Key '{}' belongs to entity named '{}', but expected entity '{}' with name '{}'.\",\n        [QError.Entity_stateMissingKey_state]: \"Entity state is missing '$key'. Are you sure you passed in state? Got '{}'.\",\n        //////////////\n        [QError.Component_bindNeedsKey]: \"'bind:' must have an key. (Example: 'bind:key=\\\"propertyName\\\"').\",\n        [QError.Component_bindNeedsValue]: \"'bind:id' must have a property name. (Example: 'bind:key=\\\"propertyName\\\"').\",\n        [QError.Component_needsState]: \"Can't find state on host element.\",\n        [QError.Component_needsInjectionContext_constructor]: \"Components must be instantiated inside an injection context. Use '{}.new(...)' for creation.\",\n        [QError.Component_noProperty_propName_props_host]: \"Property '{}' not found in '{}' on component '{}'.\",\n        [QError.Component_notFound_component]: \"Unable to find '{}' component.\",\n        [QError.Component_doesNotMatch_component_actual]: \"Requesting component type '{}' does not match existing component instance '{}'.\",\n        [QError.Component_noState_component_props]: \"Unable to create state for component '{}' with props '{}' because no state found and '$newState()' method was not defined on component.\",\n        //////////////\n        [QError.Provider_unrecognizedFormat_value]: \"Unrecognized expression format '{}'.\",\n        //////////////\n        [QError.Render_unexpectedJSXNodeType_type]: 'Unexpected JSXNode<{}> type.',\n        [QError.Render_unsupportedFormat_obj_attr]: \"Value '{}' can't be written into '{}' attribute.\",\n        [QError.Render_expectingEntity_entity]: \"Expecting entity object, got '{}'.\",\n        [QError.Render_expectingEntityArray_obj]: \"Expecting array of entities, got '{}'.\",\n        [QError.Render_expectingEntityOrComponent_obj]: \"Expecting Entity or Component got '{}'.\",\n        [QError.Render_stateMachineStuck]: 'Render state machine did not advance.',\n        //////////////\n        [QError.Event_emitEventRequiresName_url]: \"Missing '$type' attribute in the '{}' url.\",\n        [QError.Event_emitEventCouldNotFindListener_event_element]: \"Re-emitting event '{}' but no listener found at '{}' or any of its parents.\",\n    }[code];\n    let textCode = '000' + code;\n    textCode = textCode.substr(textCode.length - 3);\n    return `${area}(Q-${textCode}): ${text}`;\n}\n//# sourceMappingURL=data:application/json;base64,","// TODO(misko): need full object parsing /serializing\nimport { assertEqual } from '../assert/assert';\nexport function qDeflate(obj, hostCtx) {\n    return hostCtx.refMap.add(obj);\n}\nexport function qInflate(ref, hostCtx) {\n    const obj = hostCtx.refMap.get(ref);\n    assertEqual(hostCtx.refMap.array.length > ref, true);\n    return obj;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicS1qc29uLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9qc29uL3EtanNvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxREFBcUQ7QUFDckQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRy9DLE1BQU0sVUFBVSxRQUFRLENBQUMsR0FBUSxFQUFFLE9BQWlCO0lBQ2xELE9BQU8sT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDakMsQ0FBQztBQUVELE1BQU0sVUFBVSxRQUFRLENBQUMsR0FBVyxFQUFFLE9BQWlCO0lBQ3JELE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3BDLFdBQVcsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3JELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRPRE8obWlza28pOiBuZWVkIGZ1bGwgb2JqZWN0IHBhcnNpbmcgL3NlcmlhbGl6aW5nXG5pbXBvcnQgeyBhc3NlcnRFcXVhbCB9IGZyb20gJy4uL2Fzc2VydC9hc3NlcnQnO1xuaW1wb3J0IHR5cGUgeyBRQ29udGV4dCB9IGZyb20gJy4uL3Byb3BzL3Byb3BzJztcblxuZXhwb3J0IGZ1bmN0aW9uIHFEZWZsYXRlKG9iajogYW55LCBob3N0Q3R4OiBRQ29udGV4dCk6IG51bWJlciB7XG4gIHJldHVybiBob3N0Q3R4LnJlZk1hcC5hZGQob2JqKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHFJbmZsYXRlKHJlZjogbnVtYmVyLCBob3N0Q3R4OiBRQ29udGV4dCk6IGFueSB7XG4gIGNvbnN0IG9iaiA9IGhvc3RDdHgucmVmTWFwLmdldChyZWYpO1xuICBhc3NlcnRFcXVhbChob3N0Q3R4LnJlZk1hcC5hcnJheS5sZW5ndGggPiByZWYsIHRydWUpO1xuICByZXR1cm4gb2JqO1xufVxuIl19","import { assertDefined } from '../assert/assert';\nimport { QHostAttr } from '../util/markers';\nlet _context;\nexport function tryGetInvokeContext() {\n    if (!_context) {\n        const context = typeof document !== 'undefined' && document && document.__q_context__;\n        if (!context) {\n            return undefined;\n        }\n        if (Array.isArray(context)) {\n            const element = context[0];\n            const hostElement = getHostElement(element);\n            assertDefined(element);\n            return (document.__q_context__ = newInvokeContext(hostElement, element, context[1], context[2]));\n        }\n        return context;\n    }\n    return _context;\n}\nexport function getInvokeContext() {\n    const ctx = tryGetInvokeContext();\n    if (!ctx) {\n        throw new Error(\"Q-ERROR: invoking 'use*()' method outside of invocation context.\");\n    }\n    return ctx;\n}\nexport function useInvoke(context, fn, ...args) {\n    const previousContext = _context;\n    let returnValue;\n    try {\n        _context = context;\n        returnValue = fn.apply(null, args);\n    }\n    finally {\n        const currentCtx = _context;\n        _context = previousContext;\n        if (currentCtx.waitOn && currentCtx.waitOn.length > 0) {\n            // eslint-disable-next-line no-unsafe-finally\n            return Promise.all(currentCtx.waitOn).then(() => returnValue);\n        }\n    }\n    return returnValue;\n}\nexport function newInvokeContext(hostElement, element, event, url) {\n    return {\n        hostElement,\n        element,\n        event: event,\n        url: url || null,\n        qrl: undefined,\n        subscriptions: event === 'qRender',\n    };\n}\n/**\n * @private\n */\nexport function useWaitOn(promise) {\n    const ctx = getInvokeContext();\n    (ctx.waitOn || (ctx.waitOn = [])).push(promise);\n}\nexport function getHostElement(el) {\n    let foundSlot = false;\n    let node = el;\n    while (node) {\n        const isHost = node.hasAttribute(QHostAttr);\n        const isSlot = node.tagName === 'Q:SLOT';\n        if (isHost) {\n            if (!foundSlot) {\n                break;\n            }\n            else {\n                foundSlot = false;\n            }\n        }\n        if (isSlot) {\n            foundSlot = true;\n        }\n        node = node.parentElement;\n    }\n    return node;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWNvcmUuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3VzZS91c2UtY29yZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFHakQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBZ0I1QyxJQUFJLFFBQW1DLENBQUM7QUFFeEMsTUFBTSxVQUFVLG1CQUFtQjtJQUNqQyxJQUFJLENBQUMsUUFBUSxFQUFFO1FBQ2IsTUFBTSxPQUFPLEdBQUcsT0FBTyxRQUFRLEtBQUssV0FBVyxJQUFJLFFBQVEsSUFBSSxRQUFRLENBQUMsYUFBYSxDQUFDO1FBQ3RGLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDWixPQUFPLFNBQVMsQ0FBQztTQUNsQjtRQUNELElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUMxQixNQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDM0IsTUFBTSxXQUFXLEdBQUcsY0FBYyxDQUFDLE9BQU8sQ0FBRSxDQUFDO1lBQzdDLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUN2QixPQUFPLENBQUMsUUFBUSxDQUFDLGFBQWEsR0FBRyxnQkFBZ0IsQ0FDL0MsV0FBVyxFQUNYLE9BQU8sRUFDUCxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQ1YsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUNYLENBQUMsQ0FBQztTQUNKO1FBQ0QsT0FBTyxPQUF3QixDQUFDO0tBQ2pDO0lBQ0QsT0FBTyxRQUFRLENBQUM7QUFDbEIsQ0FBQztBQUVELE1BQU0sVUFBVSxnQkFBZ0I7SUFDOUIsTUFBTSxHQUFHLEdBQUcsbUJBQW1CLEVBQUUsQ0FBQztJQUNsQyxJQUFJLENBQUMsR0FBRyxFQUFFO1FBQ1IsTUFBTSxJQUFJLEtBQUssQ0FBQyxrRUFBa0UsQ0FBQyxDQUFDO0tBQ3JGO0lBQ0QsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDO0FBRUQsTUFBTSxVQUFVLFNBQVMsQ0FDdkIsT0FBc0IsRUFDdEIsRUFBMEIsRUFDMUIsR0FBRyxJQUFVO0lBRWIsTUFBTSxlQUFlLEdBQUcsUUFBUSxDQUFDO0lBQ2pDLElBQUksV0FBZ0IsQ0FBQztJQUNyQixJQUFJO1FBQ0YsUUFBUSxHQUFHLE9BQU8sQ0FBQztRQUNuQixXQUFXLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7S0FDcEM7WUFBUztRQUNSLE1BQU0sVUFBVSxHQUFHLFFBQVMsQ0FBQztRQUM3QixRQUFRLEdBQUcsZUFBZSxDQUFDO1FBQzNCLElBQUksVUFBVSxDQUFDLE1BQU0sSUFBSSxVQUFVLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDckQsNkNBQTZDO1lBQzdDLE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1NBQy9EO0tBQ0Y7SUFDRCxPQUFPLFdBQVcsQ0FBQztBQUNyQixDQUFDO0FBQ0QsTUFBTSxVQUFVLGdCQUFnQixDQUM5QixXQUFvQixFQUNwQixPQUFnQixFQUNoQixLQUFXLEVBQ1gsR0FBUztJQUVULE9BQU87UUFDTCxXQUFXO1FBQ1gsT0FBTztRQUNQLEtBQUssRUFBRSxLQUFLO1FBQ1osR0FBRyxFQUFFLEdBQUcsSUFBSSxJQUFJO1FBQ2hCLEdBQUcsRUFBRSxTQUFTO1FBQ2QsYUFBYSxFQUFFLEtBQUssS0FBSyxTQUFTO0tBQ25DLENBQUM7QUFDSixDQUFDO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLFVBQVUsU0FBUyxDQUFDLE9BQXFCO0lBQzdDLE1BQU0sR0FBRyxHQUFHLGdCQUFnQixFQUFFLENBQUM7SUFDL0IsQ0FBQyxHQUFHLENBQUMsTUFBTSxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUNsRCxDQUFDO0FBRUQsTUFBTSxVQUFVLGNBQWMsQ0FBQyxFQUFXO0lBQ3hDLElBQUksU0FBUyxHQUFHLEtBQUssQ0FBQztJQUN0QixJQUFJLElBQUksR0FBbUIsRUFBRSxDQUFDO0lBQzlCLE9BQU8sSUFBSSxFQUFFO1FBQ1gsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUM1QyxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsT0FBTyxLQUFLLFFBQVEsQ0FBQztRQUN6QyxJQUFJLE1BQU0sRUFBRTtZQUNWLElBQUksQ0FBQyxTQUFTLEVBQUU7Z0JBQ2QsTUFBTTthQUNQO2lCQUFNO2dCQUNMLFNBQVMsR0FBRyxLQUFLLENBQUM7YUFDbkI7U0FDRjtRQUNELElBQUksTUFBTSxFQUFFO1lBQ1YsU0FBUyxHQUFHLElBQUksQ0FBQztTQUNsQjtRQUNELElBQUksR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDO0tBQzNCO0lBQ0QsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBQcm9wcywgVmFsdWVPclByb21pc2UgfSBmcm9tICcuLi9pbmRleCc7XG5pbXBvcnQgeyBhc3NlcnREZWZpbmVkIH0gZnJvbSAnLi4vYXNzZXJ0L2Fzc2VydCc7XG5pbXBvcnQgdHlwZSB7IFF3aWtEb2N1bWVudCB9IGZyb20gJy4uL2RvY3VtZW50JztcbmltcG9ydCB0eXBlIHsgUVJMSW50ZXJuYWwgfSBmcm9tICcuLi9pbXBvcnQvcXJsLWNsYXNzJztcbmltcG9ydCB7IFFIb3N0QXR0ciB9IGZyb20gJy4uL3V0aWwvbWFya2Vycyc7XG5cbmRlY2xhcmUgY29uc3QgZG9jdW1lbnQ6IFF3aWtEb2N1bWVudDtcblxuaW50ZXJmYWNlIEludm9rZUNvbnRleHQge1xuICBob3N0RWxlbWVudDogRWxlbWVudDtcbiAgZWxlbWVudDogRWxlbWVudDtcbiAgZXZlbnQ6IGFueTtcbiAgdXJsOiBVUkwgfCBudWxsO1xuICBxcmw/OiBRUkxJbnRlcm5hbDtcbiAgc3Vic2NyaXB0aW9uczogYm9vbGVhbjtcbiAgd2FpdE9uPzogUHJvbWlzZTxhbnk+W107XG4gIHByb3BzPzogUHJvcHM7XG4gIHFybEd1YXJkPzogKHFybDogUVJMSW50ZXJuYWwpID0+IGJvb2xlYW47XG59XG5cbmxldCBfY29udGV4dDogSW52b2tlQ29udGV4dCB8IHVuZGVmaW5lZDtcblxuZXhwb3J0IGZ1bmN0aW9uIHRyeUdldEludm9rZUNvbnRleHQoKTogSW52b2tlQ29udGV4dCB8IHVuZGVmaW5lZCB7XG4gIGlmICghX2NvbnRleHQpIHtcbiAgICBjb25zdCBjb250ZXh0ID0gdHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5fX3FfY29udGV4dF9fO1xuICAgIGlmICghY29udGV4dCkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoY29udGV4dCkpIHtcbiAgICAgIGNvbnN0IGVsZW1lbnQgPSBjb250ZXh0WzBdO1xuICAgICAgY29uc3QgaG9zdEVsZW1lbnQgPSBnZXRIb3N0RWxlbWVudChlbGVtZW50KSE7XG4gICAgICBhc3NlcnREZWZpbmVkKGVsZW1lbnQpO1xuICAgICAgcmV0dXJuIChkb2N1bWVudC5fX3FfY29udGV4dF9fID0gbmV3SW52b2tlQ29udGV4dChcbiAgICAgICAgaG9zdEVsZW1lbnQsXG4gICAgICAgIGVsZW1lbnQsXG4gICAgICAgIGNvbnRleHRbMV0sXG4gICAgICAgIGNvbnRleHRbMl1cbiAgICAgICkpO1xuICAgIH1cbiAgICByZXR1cm4gY29udGV4dCBhcyBJbnZva2VDb250ZXh0O1xuICB9XG4gIHJldHVybiBfY29udGV4dDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEludm9rZUNvbnRleHQoKTogSW52b2tlQ29udGV4dCB7XG4gIGNvbnN0IGN0eCA9IHRyeUdldEludm9rZUNvbnRleHQoKTtcbiAgaWYgKCFjdHgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJRLUVSUk9SOiBpbnZva2luZyAndXNlKigpJyBtZXRob2Qgb3V0c2lkZSBvZiBpbnZvY2F0aW9uIGNvbnRleHQuXCIpO1xuICB9XG4gIHJldHVybiBjdHg7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VJbnZva2U8QVJHUyBleHRlbmRzIGFueVtdID0gYW55W10sIFJFVCA9IGFueT4oXG4gIGNvbnRleHQ6IEludm9rZUNvbnRleHQsXG4gIGZuOiAoLi4uYXJnczogQVJHUykgPT4gUkVULFxuICAuLi5hcmdzOiBBUkdTXG4pOiBWYWx1ZU9yUHJvbWlzZTxSRVQ+IHtcbiAgY29uc3QgcHJldmlvdXNDb250ZXh0ID0gX2NvbnRleHQ7XG4gIGxldCByZXR1cm5WYWx1ZTogUkVUO1xuICB0cnkge1xuICAgIF9jb250ZXh0ID0gY29udGV4dDtcbiAgICByZXR1cm5WYWx1ZSA9IGZuLmFwcGx5KG51bGwsIGFyZ3MpO1xuICB9IGZpbmFsbHkge1xuICAgIGNvbnN0IGN1cnJlbnRDdHggPSBfY29udGV4dCE7XG4gICAgX2NvbnRleHQgPSBwcmV2aW91c0NvbnRleHQ7XG4gICAgaWYgKGN1cnJlbnRDdHgud2FpdE9uICYmIGN1cnJlbnRDdHgud2FpdE9uLmxlbmd0aCA+IDApIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnNhZmUtZmluYWxseVxuICAgICAgcmV0dXJuIFByb21pc2UuYWxsKGN1cnJlbnRDdHgud2FpdE9uKS50aGVuKCgpID0+IHJldHVyblZhbHVlKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJldHVyblZhbHVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG5ld0ludm9rZUNvbnRleHQoXG4gIGhvc3RFbGVtZW50OiBFbGVtZW50LFxuICBlbGVtZW50OiBFbGVtZW50LFxuICBldmVudD86IGFueSxcbiAgdXJsPzogVVJMXG4pOiBJbnZva2VDb250ZXh0IHtcbiAgcmV0dXJuIHtcbiAgICBob3N0RWxlbWVudCxcbiAgICBlbGVtZW50LFxuICAgIGV2ZW50OiBldmVudCxcbiAgICB1cmw6IHVybCB8fCBudWxsLFxuICAgIHFybDogdW5kZWZpbmVkLFxuICAgIHN1YnNjcmlwdGlvbnM6IGV2ZW50ID09PSAncVJlbmRlcicsXG4gIH07XG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZVdhaXRPbihwcm9taXNlOiBQcm9taXNlPGFueT4pOiB2b2lkIHtcbiAgY29uc3QgY3R4ID0gZ2V0SW52b2tlQ29udGV4dCgpO1xuICAoY3R4LndhaXRPbiB8fCAoY3R4LndhaXRPbiA9IFtdKSkucHVzaChwcm9taXNlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEhvc3RFbGVtZW50KGVsOiBFbGVtZW50KTogRWxlbWVudCB8IG51bGwge1xuICBsZXQgZm91bmRTbG90ID0gZmFsc2U7XG4gIGxldCBub2RlOiBFbGVtZW50IHwgbnVsbCA9IGVsO1xuICB3aGlsZSAobm9kZSkge1xuICAgIGNvbnN0IGlzSG9zdCA9IG5vZGUuaGFzQXR0cmlidXRlKFFIb3N0QXR0cik7XG4gICAgY29uc3QgaXNTbG90ID0gbm9kZS50YWdOYW1lID09PSAnUTpTTE9UJztcbiAgICBpZiAoaXNIb3N0KSB7XG4gICAgICBpZiAoIWZvdW5kU2xvdCkge1xuICAgICAgICBicmVhaztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZvdW5kU2xvdCA9IGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoaXNTbG90KSB7XG4gICAgICBmb3VuZFNsb3QgPSB0cnVlO1xuICAgIH1cbiAgICBub2RlID0gbm9kZS5wYXJlbnRFbGVtZW50O1xuICB9XG4gIHJldHVybiBub2RlO1xufVxuIl19","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nexport function fromCamelToKebabCase(text) {\n    return text.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\nexport function fromKebabToCamelCase(text) {\n    return text.replace(/-./g, (x) => x[1].toUpperCase());\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FzZS5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXRpbC9jYXNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVILE1BQU0sVUFBVSxvQkFBb0IsQ0FBQyxJQUFZO0lBQy9DLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsRUFBRSxPQUFPLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztBQUNoRSxDQUFDO0FBRUQsTUFBTSxVQUFVLG9CQUFvQixDQUFDLElBQVk7SUFDL0MsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7QUFDeEQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBCdWlsZGVyLmlvLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL0J1aWxkZXJJTy9xd2lrL2Jsb2IvbWFpbi9MSUNFTlNFXG4gKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGZyb21DYW1lbFRvS2ViYWJDYXNlKHRleHQ6IHN0cmluZyk6IHN0cmluZyB7XG4gIHJldHVybiB0ZXh0LnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csICckMS0kMicpLnRvTG93ZXJDYXNlKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmcm9tS2ViYWJUb0NhbWVsQ2FzZSh0ZXh0OiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gdGV4dC5yZXBsYWNlKC8tLi9nLCAoeCkgPT4geFsxXS50b1VwcGVyQ2FzZSgpKTtcbn1cbiJdfQ==","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nexport function flattenArray(array, dst) {\n    // Yes this function is just Array.flat, but we need to run on old versions of Node.\n    if (!dst)\n        dst = [];\n    for (const item of array) {\n        if (Array.isArray(item)) {\n            flattenArray(item, dst);\n        }\n        else {\n            dst.push(item);\n        }\n    }\n    return dst;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJyYXkuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3V0aWwvYXJyYXkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUgsTUFBTSxVQUFVLFlBQVksQ0FBSSxLQUFrQixFQUFFLEdBQVM7SUFDM0Qsb0ZBQW9GO0lBQ3BGLElBQUksQ0FBQyxHQUFHO1FBQUUsR0FBRyxHQUFHLEVBQUUsQ0FBQztJQUNuQixLQUFLLE1BQU0sSUFBSSxJQUFJLEtBQUssRUFBRTtRQUN4QixJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDdkIsWUFBWSxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQztTQUN6QjthQUFNO1lBQ0wsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNoQjtLQUNGO0lBQ0QsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEJ1aWxkZXIuaW8sIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vQnVpbGRlcklPL3F3aWsvYmxvYi9tYWluL0xJQ0VOU0VcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gZmxhdHRlbkFycmF5PFQ+KGFycmF5OiAoVCB8IFRbXSlbXSwgZHN0PzogVFtdKTogVFtdIHtcbiAgLy8gWWVzIHRoaXMgZnVuY3Rpb24gaXMganVzdCBBcnJheS5mbGF0LCBidXQgd2UgbmVlZCB0byBydW4gb24gb2xkIHZlcnNpb25zIG9mIE5vZGUuXG4gIGlmICghZHN0KSBkc3QgPSBbXTtcbiAgZm9yIChjb25zdCBpdGVtIG9mIGFycmF5KSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoaXRlbSkpIHtcbiAgICAgIGZsYXR0ZW5BcnJheShpdGVtLCBkc3QpO1xuICAgIH0gZWxzZSB7XG4gICAgICBkc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGRzdDtcbn1cbiJdfQ==","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { flattenArray } from './array';\n/**\n * Converts a tree of Promises into a flat array of resolved promise values.\n *\n * @param tree - array of arrays of values or promises of values.\n * @returns a `Promise` of array of values.\n */\nexport function flattenPromiseTree(tree) {\n    return Promise.all(tree).then((values) => {\n        const flatArray = flattenArray(values);\n        for (let i = 0; i < flatArray.length; i++) {\n            if (isPromise(flatArray[i])) {\n                return flattenPromiseTree(flatArray);\n            }\n        }\n        return flatArray;\n    });\n}\nexport function isPromise(value) {\n    return value instanceof Promise;\n}\nexport const then = (promise, thenFn) => {\n    return isPromise(promise) ? promise.then(thenFn) : thenFn(promise);\n};\nexport const promiseAll = (promises) => {\n    const hasPromise = promises.some(isPromise);\n    if (hasPromise) {\n        return Promise.all(promises);\n    }\n    return promises;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvbWlzZXMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3V0aWwvcHJvbWlzZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBR0gsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUl2Qzs7Ozs7R0FLRztBQUNILE1BQU0sVUFBVSxrQkFBa0IsQ0FBSSxJQUFvQjtJQUN4RCxPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBVyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBYSxFQUFFLEVBQUU7UUFDckQsTUFBTSxTQUFTLEdBQUcsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3pDLElBQUksU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO2dCQUMzQixPQUFPLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxDQUFDO2FBQ3RDO1NBQ0Y7UUFDRCxPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUM7QUFFRCxNQUFNLFVBQVUsU0FBUyxDQUFDLEtBQVU7SUFDbEMsT0FBTyxLQUFLLFlBQVksT0FBTyxDQUFDO0FBQ2xDLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUcsQ0FDbEIsT0FBMEIsRUFDMUIsTUFBcUMsRUFDbEIsRUFBRTtJQUNyQixPQUFPLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ3JFLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxDQUFrQixRQUFXLEVBQXFCLEVBQUU7SUFDNUUsTUFBTSxVQUFVLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM1QyxJQUFJLFVBQVUsRUFBRTtRQUNkLE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztLQUM5QjtJQUNELE9BQU8sUUFBUSxDQUFDO0FBQ2xCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBCdWlsZGVyLmlvLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL0J1aWxkZXJJTy9xd2lrL2Jsb2IvbWFpbi9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHR5cGUgeyBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJy4uJztcbmltcG9ydCB7IGZsYXR0ZW5BcnJheSB9IGZyb20gJy4vYXJyYXknO1xuXG5leHBvcnQgdHlwZSBQcm9taXNlVHJlZTxUPiA9IFQgfCBQcm9taXNlPFQ+IHwgUHJvbWlzZTxUW10+IHwgQXJyYXk8UHJvbWlzZVRyZWU8VD4+O1xuXG4vKipcbiAqIENvbnZlcnRzIGEgdHJlZSBvZiBQcm9taXNlcyBpbnRvIGEgZmxhdCBhcnJheSBvZiByZXNvbHZlZCBwcm9taXNlIHZhbHVlcy5cbiAqXG4gKiBAcGFyYW0gdHJlZSAtIGFycmF5IG9mIGFycmF5cyBvZiB2YWx1ZXMgb3IgcHJvbWlzZXMgb2YgdmFsdWVzLlxuICogQHJldHVybnMgYSBgUHJvbWlzZWAgb2YgYXJyYXkgb2YgdmFsdWVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZmxhdHRlblByb21pc2VUcmVlPFQ+KHRyZWU6IFByb21pc2VUcmVlPFQ+KTogUHJvbWlzZTxUW10+IHtcbiAgcmV0dXJuIFByb21pc2UuYWxsKHRyZWUgYXMgVFtdKS50aGVuKCh2YWx1ZXM6IGFueVtdKSA9PiB7XG4gICAgY29uc3QgZmxhdEFycmF5ID0gZmxhdHRlbkFycmF5KHZhbHVlcyk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBmbGF0QXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChpc1Byb21pc2UoZmxhdEFycmF5W2ldKSkge1xuICAgICAgICByZXR1cm4gZmxhdHRlblByb21pc2VUcmVlKGZsYXRBcnJheSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmbGF0QXJyYXk7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNQcm9taXNlKHZhbHVlOiBhbnkpOiB2YWx1ZSBpcyBQcm9taXNlPGFueT4ge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQcm9taXNlO1xufVxuXG5leHBvcnQgY29uc3QgdGhlbiA9IDxULCBCPihcbiAgcHJvbWlzZTogVmFsdWVPclByb21pc2U8VD4sXG4gIHRoZW5GbjogKGFyZzogVCkgPT4gVmFsdWVPclByb21pc2U8Qj5cbik6IFZhbHVlT3JQcm9taXNlPEI+ID0+IHtcbiAgcmV0dXJuIGlzUHJvbWlzZShwcm9taXNlKSA/IHByb21pc2UudGhlbih0aGVuRm4pIDogdGhlbkZuKHByb21pc2UpO1xufTtcblxuZXhwb3J0IGNvbnN0IHByb21pc2VBbGwgPSA8VCBleHRlbmRzIGFueVtdPihwcm9taXNlczogVCk6IFZhbHVlT3JQcm9taXNlPFQ+ID0+IHtcbiAgY29uc3QgaGFzUHJvbWlzZSA9IHByb21pc2VzLnNvbWUoaXNQcm9taXNlKTtcbiAgaWYgKGhhc1Byb21pc2UpIHtcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwocHJvbWlzZXMpO1xuICB9XG4gIHJldHVybiBwcm9taXNlcztcbn07XG4iXX0=","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nexport function stringify(value) {\n    return value == null ? null : String(value);\n}\nexport function debugStringify(value) {\n    if (value != null && typeof value == 'object') {\n        return String(value.constructor.name) + '\\n' + safeJSONStringify(value);\n    }\n    return String(value);\n}\nfunction safeJSONStringify(value) {\n    try {\n        return JSON.stringify(value, null, '  ');\n    }\n    catch (e) {\n        return String(e);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaW5naWZ5LmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS91dGlsL3N0cmluZ2lmeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFFSCxNQUFNLFVBQVUsU0FBUyxDQUFDLEtBQVU7SUFDbEMsT0FBTyxLQUFLLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUM5QyxDQUFDO0FBRUQsTUFBTSxVQUFVLGNBQWMsQ0FBQyxLQUFVO0lBQ3ZDLElBQUksS0FBSyxJQUFJLElBQUksSUFBSSxPQUFPLEtBQUssSUFBSSxRQUFRLEVBQUU7UUFDN0MsT0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLEdBQUcsaUJBQWlCLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDekU7SUFDRCxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUN2QixDQUFDO0FBRUQsU0FBUyxpQkFBaUIsQ0FBQyxLQUFVO0lBQ25DLElBQUk7UUFDRixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztLQUMxQztJQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ1YsT0FBTyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDbEI7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEJ1aWxkZXIuaW8sIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vQnVpbGRlcklPL3F3aWsvYmxvYi9tYWluL0xJQ0VOU0VcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5naWZ5KHZhbHVlOiBhbnkpOiBzdHJpbmcgfCBudWxsIHtcbiAgcmV0dXJuIHZhbHVlID09IG51bGwgPyBudWxsIDogU3RyaW5nKHZhbHVlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRlYnVnU3RyaW5naWZ5KHZhbHVlOiBhbnkpOiBzdHJpbmcge1xuICBpZiAodmFsdWUgIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gU3RyaW5nKHZhbHVlLmNvbnN0cnVjdG9yLm5hbWUpICsgJ1xcbicgKyBzYWZlSlNPTlN0cmluZ2lmeSh2YWx1ZSk7XG4gIH1cbiAgcmV0dXJuIFN0cmluZyh2YWx1ZSk7XG59XG5cbmZ1bmN0aW9uIHNhZmVKU09OU3RyaW5naWZ5KHZhbHVlOiBhbnkpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkodmFsdWUsIG51bGwsICcgICcpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIFN0cmluZyhlKTtcbiAgfVxufVxuIl19","import { Host } from '../index';\nimport { getContext } from '../props/props';\nimport { smartUpdateChildren, updateProperties } from './cursor';\nexport function visitJsxNode(ctx, elm, jsxNode, isSvg) {\n    if (jsxNode === undefined) {\n        return smartUpdateChildren(ctx, elm, [], 'root', isSvg);\n    }\n    if (Array.isArray(jsxNode)) {\n        return smartUpdateChildren(ctx, elm, jsxNode.flat(), 'root', isSvg);\n    }\n    else if (jsxNode.type === Host) {\n        updateProperties(ctx, getContext(elm), jsxNode.props, isSvg);\n        return smartUpdateChildren(ctx, elm, jsxNode.children || [], 'root', isSvg);\n    }\n    else {\n        return smartUpdateChildren(ctx, elm, [jsxNode], 'root', isSvg);\n    }\n}\nexport function whileResolvingRender(...args) {\n    throw new Error('Function not implemented.' + args);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVuZGVyLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9yZW5kZXIvcmVuZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDaEMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTVDLE9BQU8sRUFBaUIsbUJBQW1CLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFJaEYsTUFBTSxVQUFVLFlBQVksQ0FDMUIsR0FBa0IsRUFDbEIsR0FBWSxFQUNaLE9BQXdDLEVBQ3hDLEtBQWM7SUFFZCxJQUFJLE9BQU8sS0FBSyxTQUFTLEVBQUU7UUFDekIsT0FBTyxtQkFBbUIsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7S0FDekQ7SUFDRCxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUU7UUFDMUIsT0FBTyxtQkFBbUIsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLE9BQU8sQ0FBQyxJQUFJLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7S0FDckU7U0FBTSxJQUFJLE9BQU8sQ0FBQyxJQUFJLEtBQUssSUFBSSxFQUFFO1FBQ2hDLGdCQUFnQixDQUFDLEdBQUcsRUFBRSxVQUFVLENBQUMsR0FBRyxDQUFDLEVBQUUsT0FBTyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztRQUM3RCxPQUFPLG1CQUFtQixDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsT0FBTyxDQUFDLFFBQVEsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0tBQzdFO1NBQU07UUFDTCxPQUFPLG1CQUFtQixDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsRUFBRSxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7S0FDaEU7QUFDSCxDQUFDO0FBRUQsTUFBTSxVQUFVLG9CQUFvQixDQUNsQyxHQUFHLElBQXVEO0lBRTFELE1BQU0sSUFBSSxLQUFLLENBQUMsMkJBQTJCLEdBQUcsSUFBSSxDQUFDLENBQUM7QUFDdEQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEhvc3QgfSBmcm9tICcuLi9pbmRleCc7XG5pbXBvcnQgeyBnZXRDb250ZXh0IH0gZnJvbSAnLi4vcHJvcHMvcHJvcHMnO1xuaW1wb3J0IHR5cGUgeyBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJy4uL3V0aWwvdHlwZXMnO1xuaW1wb3J0IHsgUmVuZGVyQ29udGV4dCwgc21hcnRVcGRhdGVDaGlsZHJlbiwgdXBkYXRlUHJvcGVydGllcyB9IGZyb20gJy4vY3Vyc29yJztcbmltcG9ydCB0eXBlIHsgSlNYTm9kZSB9IGZyb20gJy4vanN4L3R5cGVzL2pzeC1ub2RlJztcbmV4cG9ydCB0eXBlIENvbXBvbmVudFJlbmRlclF1ZXVlID0gUHJvbWlzZTxIVE1MRWxlbWVudFtdPltdO1xuXG5leHBvcnQgZnVuY3Rpb24gdmlzaXRKc3hOb2RlKFxuICBjdHg6IFJlbmRlckNvbnRleHQsXG4gIGVsbTogRWxlbWVudCxcbiAganN4Tm9kZTogSlNYTm9kZSB8IEpTWE5vZGVbXSB8IHVuZGVmaW5lZCxcbiAgaXNTdmc6IGJvb2xlYW5cbik6IFZhbHVlT3JQcm9taXNlPHZvaWQ+IHtcbiAgaWYgKGpzeE5vZGUgPT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiBzbWFydFVwZGF0ZUNoaWxkcmVuKGN0eCwgZWxtLCBbXSwgJ3Jvb3QnLCBpc1N2Zyk7XG4gIH1cbiAgaWYgKEFycmF5LmlzQXJyYXkoanN4Tm9kZSkpIHtcbiAgICByZXR1cm4gc21hcnRVcGRhdGVDaGlsZHJlbihjdHgsIGVsbSwganN4Tm9kZS5mbGF0KCksICdyb290JywgaXNTdmcpO1xuICB9IGVsc2UgaWYgKGpzeE5vZGUudHlwZSA9PT0gSG9zdCkge1xuICAgIHVwZGF0ZVByb3BlcnRpZXMoY3R4LCBnZXRDb250ZXh0KGVsbSksIGpzeE5vZGUucHJvcHMsIGlzU3ZnKTtcbiAgICByZXR1cm4gc21hcnRVcGRhdGVDaGlsZHJlbihjdHgsIGVsbSwganN4Tm9kZS5jaGlsZHJlbiB8fCBbXSwgJ3Jvb3QnLCBpc1N2Zyk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHNtYXJ0VXBkYXRlQ2hpbGRyZW4oY3R4LCBlbG0sIFtqc3hOb2RlXSwgJ3Jvb3QnLCBpc1N2Zyk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHdoaWxlUmVzb2x2aW5nUmVuZGVyPEFSR1MgZXh0ZW5kcyBhbnlbXSwgUkVUPihcbiAgLi4uYXJnczogWy4uLkFSR1MsICguLi5hcmdzOiBSZXNvbHZlZFZhbHVlczxBUkdTPikgPT4gUkVUXVxuKTogUkVUIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdGdW5jdGlvbiBub3QgaW1wbGVtZW50ZWQuJyArIGFyZ3MpO1xufVxuXG5leHBvcnQgdHlwZSBSZXNvbHZlZFZhbHVlczxBUkdTIGV4dGVuZHMgYW55W10+ID0ge1xuICBbSyBpbiBrZXlvZiBBUkdTXTogQVJHU1tLXSBleHRlbmRzIFZhbHVlT3JQcm9taXNlPGluZmVyIFU+ID8gVSA6IEFSR1NbS107XG59O1xuIl19","export function hashCode(text, hash = 0) {\n    if (text.length === 0)\n        return hash;\n    for (let i = 0; i < text.length; i++) {\n        const chr = text.charCodeAt(i);\n        hash = (hash << 5) - hash + chr;\n        hash |= 0; // Convert to 32bit integer\n    }\n    return Number(Math.abs(hash)).toString(36);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFzaF9jb2RlLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS91dGlsL2hhc2hfY29kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLFVBQVUsUUFBUSxDQUFDLElBQVksRUFBRSxPQUFlLENBQUM7SUFDckQsSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLENBQUM7UUFBRSxPQUFPLElBQUksQ0FBQztJQUNuQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNwQyxNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQy9CLElBQUksR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLEdBQUcsR0FBRyxDQUFDO1FBQ2hDLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQywyQkFBMkI7S0FDdkM7SUFDRCxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQzdDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaGFzaENvZGUodGV4dDogc3RyaW5nLCBoYXNoOiBudW1iZXIgPSAwKSB7XG4gIGlmICh0ZXh0Lmxlbmd0aCA9PT0gMCkgcmV0dXJuIGhhc2g7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdGV4dC5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGNociA9IHRleHQuY2hhckNvZGVBdChpKTtcbiAgICBoYXNoID0gKGhhc2ggPDwgNSkgLSBoYXNoICsgY2hyO1xuICAgIGhhc2ggfD0gMDsgLy8gQ29udmVydCB0byAzMmJpdCBpbnRlZ2VyXG4gIH1cbiAgcmV0dXJuIE51bWJlcihNYXRoLmFicyhoYXNoKSkudG9TdHJpbmcoMzYpO1xufVxuIl19","import { ComponentStylesPrefixContent, ComponentStylesPrefixHost } from '../util/markers';\nimport { hashCode } from '../util/hash_code';\nexport function styleKey(qStyles) {\n    return qStyles && String(hashCode(qStyles.symbol));\n}\nexport function styleHost(styleId) {\n    return styleId && ComponentStylesPrefixHost + styleId;\n}\nexport function styleContent(styleId) {\n    return styleId && ComponentStylesPrefixContent + styleId;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXJsLXN0eWxlcy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvY29tcG9uZW50L3FybC1zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLDRCQUE0QixFQUFFLHlCQUF5QixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDMUYsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBTzdDLE1BQU0sVUFBVSxRQUFRLENBQUMsT0FBbUM7SUFDMUQsT0FBTyxPQUFPLElBQUksTUFBTSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztBQUNyRCxDQUFDO0FBT0QsTUFBTSxVQUFVLFNBQVMsQ0FBQyxPQUEyQjtJQUNuRCxPQUFPLE9BQU8sSUFBSSx5QkFBeUIsR0FBRyxPQUFPLENBQUM7QUFDeEQsQ0FBQztBQU9ELE1BQU0sVUFBVSxZQUFZLENBQUMsT0FBMkI7SUFDdEQsT0FBTyxPQUFPLElBQUksNEJBQTRCLEdBQUcsT0FBTyxDQUFDO0FBQzNELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFFSTEludGVybmFsIH0gZnJvbSAnLi4vaW1wb3J0L3FybC1jbGFzcyc7XG5pbXBvcnQgeyBDb21wb25lbnRTdHlsZXNQcmVmaXhDb250ZW50LCBDb21wb25lbnRTdHlsZXNQcmVmaXhIb3N0IH0gZnJvbSAnLi4vdXRpbC9tYXJrZXJzJztcbmltcG9ydCB7IGhhc2hDb2RlIH0gZnJvbSAnLi4vdXRpbC9oYXNoX2NvZGUnO1xuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlS2V5KHFTdHlsZXM6IFFSTEludGVybmFsPHN0cmluZz4pOiBzdHJpbmc7XG5leHBvcnQgZnVuY3Rpb24gc3R5bGVLZXkocVN0eWxlczogUVJMSW50ZXJuYWw8c3RyaW5nPiB8IG51bGwpOiBzdHJpbmcgfCBudWxsO1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlS2V5KHFTdHlsZXM6IFFSTEludGVybmFsPHN0cmluZz4gfCBudWxsKTogc3RyaW5nIHwgbnVsbCB7XG4gIHJldHVybiBxU3R5bGVzICYmIFN0cmluZyhoYXNoQ29kZShxU3R5bGVzLnN5bWJvbCkpO1xufVxuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlSG9zdChzdHlsZUlkOiBzdHJpbmcpOiBzdHJpbmc7XG5leHBvcnQgZnVuY3Rpb24gc3R5bGVIb3N0KHN0eWxlSWQ6IHN0cmluZyB8IHVuZGVmaW5lZCk6IHN0cmluZyB8IHVuZGVmaW5lZDtcbmV4cG9ydCBmdW5jdGlvbiBzdHlsZUhvc3Qoc3R5bGVJZDogc3RyaW5nIHwgdW5kZWZpbmVkKTogc3RyaW5nIHwgdW5kZWZpbmVkIHtcbiAgcmV0dXJuIHN0eWxlSWQgJiYgQ29tcG9uZW50U3R5bGVzUHJlZml4SG9zdCArIHN0eWxlSWQ7XG59XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgZnVuY3Rpb24gc3R5bGVDb250ZW50KHN0eWxlSWQ6IHN0cmluZyk6IHN0cmluZztcbmV4cG9ydCBmdW5jdGlvbiBzdHlsZUNvbnRlbnQoc3R5bGVJZDogc3RyaW5nIHwgdW5kZWZpbmVkKTogc3RyaW5nIHwgdW5kZWZpbmVkO1xuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlQ29udGVudChzdHlsZUlkOiBzdHJpbmcgfCB1bmRlZmluZWQpOiBzdHJpbmcgfCB1bmRlZmluZWQge1xuICByZXR1cm4gc3R5bGVJZCAmJiBDb21wb25lbnRTdHlsZXNQcmVmaXhDb250ZW50ICsgc3R5bGVJZDtcbn1cbiJdfQ==","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\n/**\n * Place at the root of the component View to allow binding of attributes on the Host element.\n *\n * ```\n * <Host someAttr={someExpr} someAttrStatic=\"value\">\n *   View content implementation.\n * </Host>\n * ```\n *\n * Qwik requires that components have [docs/HOST_ELEMENTS.ts] so that it is possible to have\n * asynchronous loading point. Host element is not owned by the component. At times it is\n * desirable for the component to render additional attributes on the host element. `<Host>`\n * servers that purpose.\n * @public\n */\nexport const Host = { __brand__: 'host' };\n/**\n * @public\n */\nexport const SkipRerender = { __brand__: 'skip' };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG9zdC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3JlbmRlci9qc3gvaG9zdC5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBSUg7Ozs7Ozs7Ozs7Ozs7O0dBY0c7QUFDSCxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQTJDLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBUyxDQUFDO0FBRXpGOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUEwQixFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQVMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBCdWlsZGVyLmlvLCBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL0J1aWxkZXJJTy9xd2lrL2Jsb2IvbWFpbi9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHR5cGUgeyBGdW5jdGlvbkNvbXBvbmVudCB9IGZyb20gJy4vdHlwZXMvanN4LW5vZGUnO1xuXG4vKipcbiAqIFBsYWNlIGF0IHRoZSByb290IG9mIHRoZSBjb21wb25lbnQgVmlldyB0byBhbGxvdyBiaW5kaW5nIG9mIGF0dHJpYnV0ZXMgb24gdGhlIEhvc3QgZWxlbWVudC5cbiAqXG4gKiBgYGBcbiAqIDxIb3N0IHNvbWVBdHRyPXtzb21lRXhwcn0gc29tZUF0dHJTdGF0aWM9XCJ2YWx1ZVwiPlxuICogICBWaWV3IGNvbnRlbnQgaW1wbGVtZW50YXRpb24uXG4gKiA8L0hvc3Q+XG4gKiBgYGBcbiAqXG4gKiBRd2lrIHJlcXVpcmVzIHRoYXQgY29tcG9uZW50cyBoYXZlIFtkb2NzL0hPU1RfRUxFTUVOVFMudHNdIHNvIHRoYXQgaXQgaXMgcG9zc2libGUgdG8gaGF2ZVxuICogYXN5bmNocm9ub3VzIGxvYWRpbmcgcG9pbnQuIEhvc3QgZWxlbWVudCBpcyBub3Qgb3duZWQgYnkgdGhlIGNvbXBvbmVudC4gQXQgdGltZXMgaXQgaXNcbiAqIGRlc2lyYWJsZSBmb3IgdGhlIGNvbXBvbmVudCB0byByZW5kZXIgYWRkaXRpb25hbCBhdHRyaWJ1dGVzIG9uIHRoZSBob3N0IGVsZW1lbnQuIGA8SG9zdD5gXG4gKiBzZXJ2ZXJzIHRoYXQgcHVycG9zZS5cbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGNvbnN0IEhvc3Q6IEZ1bmN0aW9uQ29tcG9uZW50PFJlY29yZDxzdHJpbmcsIGFueT4+ID0geyBfX2JyYW5kX186ICdob3N0JyB9IGFzIGFueTtcblxuLyoqXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBjb25zdCBTa2lwUmVyZW5kZXI6IEZ1bmN0aW9uQ29tcG9uZW50PHt9PiA9IHsgX19icmFuZF9fOiAnc2tpcCcgfSBhcyBhbnk7XG4iXX0=","import { qDev } from '../../util/qdev';\nimport { Host, SkipRerender } from './host.public';\nimport { EMPTY_ARRAY } from '../../util/flyweight';\nimport { logWarn } from '../../util/log';\n/**\n * @public\n */\nexport function jsx(type, props, key) {\n    return new JSXNodeImpl(type, props, key);\n}\nexport class JSXNodeImpl {\n    constructor(type, props, key = null) {\n        this.type = type;\n        this.props = props;\n        this.children = EMPTY_ARRAY;\n        this.text = undefined;\n        this.key = null;\n        if (key != null) {\n            this.key = String(key);\n        }\n        if (props) {\n            const children = processNode(props.children);\n            if (children !== undefined) {\n                if (Array.isArray(children)) {\n                    this.children = children;\n                }\n                else {\n                    this.children = [children];\n                }\n            }\n        }\n    }\n}\nexport function processNode(node) {\n    if (node == null || typeof node === 'boolean') {\n        return undefined;\n    }\n    if (isJSXNode(node)) {\n        if (node.type === Host || node.type === SkipRerender) {\n            return node;\n        }\n        else if (typeof node.type === 'function') {\n            return processNode(node.type(Object.assign(Object.assign({}, node.props), { children: node.children }), node.key));\n        }\n        else {\n            return node;\n        }\n    }\n    else if (Array.isArray(node)) {\n        return node.flatMap(processNode).filter((e) => e != null);\n    }\n    else if (typeof node === 'string' || typeof node === 'number' || typeof node === 'boolean') {\n        const newNode = new JSXNodeImpl('#text', null, null);\n        newNode.text = String(node);\n        return newNode;\n    }\n    else {\n        logWarn('Unvalid node, skipping');\n        return undefined;\n    }\n}\nexport const isJSXNode = (n) => {\n    if (qDev) {\n        if (n instanceof JSXNodeImpl) {\n            return true;\n        }\n        if (n && typeof n === 'object' && n.constructor.name === JSXNodeImpl.name) {\n            throw new Error(`Duplicate implementations of \"JSXNodeImpl\" found`);\n        }\n        return false;\n    }\n    else {\n        return n instanceof JSXNodeImpl;\n    }\n};\n/**\n * @public\n */\nexport const Fragment = (props) => props.children;\nexport { jsx as jsxs, jsx as jsxDEV };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianN4LXJ1bnRpbWUuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3JlbmRlci9qc3gvanN4LXJ1bnRpbWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFekM7O0dBRUc7QUFDSCxNQUFNLFVBQVUsR0FBRyxDQUNqQixJQUFPLEVBQ1AsS0FBWSxFQUNaLEdBQXFCO0lBRXJCLE9BQU8sSUFBSSxXQUFXLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxHQUFHLENBQVEsQ0FBQztBQUNsRCxDQUFDO0FBRUQsTUFBTSxPQUFPLFdBQVc7SUFLdEIsWUFDUyxJQUFPLEVBQ1AsS0FBaUMsRUFDeEMsTUFBOEIsSUFBSTtRQUYzQixTQUFJLEdBQUosSUFBSSxDQUFHO1FBQ1AsVUFBSyxHQUFMLEtBQUssQ0FBNEI7UUFOMUMsYUFBUSxHQUFjLFdBQVcsQ0FBQztRQUNsQyxTQUFJLEdBQXdCLFNBQVMsQ0FBQztRQUN0QyxRQUFHLEdBQWtCLElBQUksQ0FBQztRQU94QixJQUFJLEdBQUcsSUFBSSxJQUFJLEVBQUU7WUFDZixJQUFJLENBQUMsR0FBRyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUN4QjtRQUNELElBQUksS0FBSyxFQUFFO1lBQ1QsTUFBTSxRQUFRLEdBQUcsV0FBVyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUM3QyxJQUFJLFFBQVEsS0FBSyxTQUFTLEVBQUU7Z0JBQzFCLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRTtvQkFDM0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7aUJBQzFCO3FCQUFNO29CQUNMLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztpQkFDNUI7YUFDRjtTQUNGO0lBQ0gsQ0FBQztDQUNGO0FBRUQsTUFBTSxVQUFVLFdBQVcsQ0FBQyxJQUFTO0lBQ25DLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxPQUFPLElBQUksS0FBSyxTQUFTLEVBQUU7UUFDN0MsT0FBTyxTQUFTLENBQUM7S0FDbEI7SUFDRCxJQUFJLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUNuQixJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssWUFBWSxFQUFFO1lBQ3BELE9BQU8sSUFBSSxDQUFDO1NBQ2I7YUFBTSxJQUFJLE9BQU8sSUFBSSxDQUFDLElBQUksS0FBSyxVQUFVLEVBQUU7WUFDMUMsT0FBTyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksaUNBQU0sSUFBSSxDQUFDLEtBQUssS0FBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsS0FBSSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztTQUNyRjthQUFNO1lBQ0wsT0FBTyxJQUFJLENBQUM7U0FDYjtLQUNGO1NBQU0sSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQzlCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsSUFBSSxJQUFJLENBQWMsQ0FBQztLQUN4RTtTQUFNLElBQUksT0FBTyxJQUFJLEtBQUssUUFBUSxJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsSUFBSSxPQUFPLElBQUksS0FBSyxTQUFTLEVBQUU7UUFDNUYsTUFBTSxPQUFPLEdBQUcsSUFBSSxXQUFXLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNyRCxPQUFPLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM1QixPQUFPLE9BQU8sQ0FBQztLQUNoQjtTQUFNO1FBQ0wsT0FBTyxDQUFDLHdCQUF3QixDQUFDLENBQUM7UUFDbEMsT0FBTyxTQUFTLENBQUM7S0FDbEI7QUFDSCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLENBQUMsQ0FBTSxFQUF5QixFQUFFO0lBQ3pELElBQUksSUFBSSxFQUFFO1FBQ1IsSUFBSSxDQUFDLFlBQVksV0FBVyxFQUFFO1lBQzVCLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFDRCxJQUFJLENBQUMsSUFBSSxPQUFPLENBQUMsS0FBSyxRQUFRLElBQUksQ0FBQyxDQUFDLFdBQVcsQ0FBQyxJQUFJLEtBQUssV0FBVyxDQUFDLElBQUksRUFBRTtZQUN6RSxNQUFNLElBQUksS0FBSyxDQUFDLGtEQUFrRCxDQUFDLENBQUM7U0FDckU7UUFDRCxPQUFPLEtBQUssQ0FBQztLQUNkO1NBQU07UUFDTCxPQUFPLENBQUMsWUFBWSxXQUFXLENBQUM7S0FDakM7QUFDSCxDQUFDLENBQUM7QUFFRjs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBMEMsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxRQUFlLENBQUM7QUFJaEcsT0FBTyxFQUFFLEdBQUcsSUFBSSxJQUFJLEVBQUUsR0FBRyxJQUFJLE1BQU0sRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBGdW5jdGlvbkNvbXBvbmVudCwgSlNYTm9kZSB9IGZyb20gJy4vdHlwZXMvanN4LW5vZGUnO1xuaW1wb3J0IHR5cGUgeyBRd2lrSlNYIH0gZnJvbSAnLi90eXBlcy9qc3gtcXdpayc7XG5pbXBvcnQgeyBxRGV2IH0gZnJvbSAnLi4vLi4vdXRpbC9xZGV2JztcbmltcG9ydCB7IEhvc3QsIFNraXBSZXJlbmRlciB9IGZyb20gJy4vaG9zdC5wdWJsaWMnO1xuaW1wb3J0IHsgRU1QVFlfQVJSQVkgfSBmcm9tICcuLi8uLi91dGlsL2ZseXdlaWdodCc7XG5pbXBvcnQgeyBsb2dXYXJuIH0gZnJvbSAnLi4vLi4vdXRpbC9sb2cnO1xuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGpzeDxUIGV4dGVuZHMgc3RyaW5nIHwgRnVuY3Rpb25Db21wb25lbnQ8UFJPUFM+LCBQUk9QUz4oXG4gIHR5cGU6IFQsXG4gIHByb3BzOiBQUk9QUyxcbiAga2V5Pzogc3RyaW5nIHwgbnVtYmVyXG4pOiBKU1hOb2RlPFQ+IHtcbiAgcmV0dXJuIG5ldyBKU1hOb2RlSW1wbCh0eXBlLCBwcm9wcywga2V5KSBhcyBhbnk7XG59XG5cbmV4cG9ydCBjbGFzcyBKU1hOb2RlSW1wbDxUPiBpbXBsZW1lbnRzIEpTWE5vZGU8VD4ge1xuICBjaGlsZHJlbjogSlNYTm9kZVtdID0gRU1QVFlfQVJSQVk7XG4gIHRleHQ/OiBzdHJpbmcgfCB1bmRlZmluZWQgPSB1bmRlZmluZWQ7XG4gIGtleTogc3RyaW5nIHwgbnVsbCA9IG51bGw7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHR5cGU6IFQsXG4gICAgcHVibGljIHByb3BzOiBSZWNvcmQ8c3RyaW5nLCBhbnk+IHwgbnVsbCxcbiAgICBrZXk6IHN0cmluZyB8IG51bWJlciB8IG51bGwgPSBudWxsXG4gICkge1xuICAgIGlmIChrZXkgIT0gbnVsbCkge1xuICAgICAgdGhpcy5rZXkgPSBTdHJpbmcoa2V5KTtcbiAgICB9XG4gICAgaWYgKHByb3BzKSB7XG4gICAgICBjb25zdCBjaGlsZHJlbiA9IHByb2Nlc3NOb2RlKHByb3BzLmNoaWxkcmVuKTtcbiAgICAgIGlmIChjaGlsZHJlbiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkcmVuKSkge1xuICAgICAgICAgIHRoaXMuY2hpbGRyZW4gPSBjaGlsZHJlbjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmNoaWxkcmVuID0gW2NoaWxkcmVuXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcHJvY2Vzc05vZGUobm9kZTogYW55KTogSlNYTm9kZVtdIHwgSlNYTm9kZSB8IHVuZGVmaW5lZCB7XG4gIGlmIChub2RlID09IG51bGwgfHwgdHlwZW9mIG5vZGUgPT09ICdib29sZWFuJykge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cbiAgaWYgKGlzSlNYTm9kZShub2RlKSkge1xuICAgIGlmIChub2RlLnR5cGUgPT09IEhvc3QgfHwgbm9kZS50eXBlID09PSBTa2lwUmVyZW5kZXIpIHtcbiAgICAgIHJldHVybiBub2RlO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIG5vZGUudHlwZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmV0dXJuIHByb2Nlc3NOb2RlKG5vZGUudHlwZSh7IC4uLm5vZGUucHJvcHMsIGNoaWxkcmVuOiBub2RlLmNoaWxkcmVuIH0sIG5vZGUua2V5KSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBub2RlO1xuICAgIH1cbiAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KG5vZGUpKSB7XG4gICAgcmV0dXJuIG5vZGUuZmxhdE1hcChwcm9jZXNzTm9kZSkuZmlsdGVyKChlKSA9PiBlICE9IG51bGwpIGFzIEpTWE5vZGVbXTtcbiAgfSBlbHNlIGlmICh0eXBlb2Ygbm9kZSA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIG5vZGUgPT09ICdudW1iZXInIHx8IHR5cGVvZiBub2RlID09PSAnYm9vbGVhbicpIHtcbiAgICBjb25zdCBuZXdOb2RlID0gbmV3IEpTWE5vZGVJbXBsKCcjdGV4dCcsIG51bGwsIG51bGwpO1xuICAgIG5ld05vZGUudGV4dCA9IFN0cmluZyhub2RlKTtcbiAgICByZXR1cm4gbmV3Tm9kZTtcbiAgfSBlbHNlIHtcbiAgICBsb2dXYXJuKCdVbnZhbGlkIG5vZGUsIHNraXBwaW5nJyk7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgaXNKU1hOb2RlID0gKG46IGFueSk6IG4gaXMgSlNYTm9kZTx1bmtub3duPiA9PiB7XG4gIGlmIChxRGV2KSB7XG4gICAgaWYgKG4gaW5zdGFuY2VvZiBKU1hOb2RlSW1wbCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmIChuICYmIHR5cGVvZiBuID09PSAnb2JqZWN0JyAmJiBuLmNvbnN0cnVjdG9yLm5hbWUgPT09IEpTWE5vZGVJbXBsLm5hbWUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRHVwbGljYXRlIGltcGxlbWVudGF0aW9ucyBvZiBcIkpTWE5vZGVJbXBsXCIgZm91bmRgKTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBuIGluc3RhbmNlb2YgSlNYTm9kZUltcGw7XG4gIH1cbn07XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgY29uc3QgRnJhZ21lbnQ6IEZ1bmN0aW9uQ29tcG9uZW50PHsgY2hpbGRyZW4/OiBhbnkgfT4gPSAocHJvcHMpID0+IHByb3BzLmNoaWxkcmVuIGFzIGFueTtcblxuZXhwb3J0IHR5cGUgeyBRd2lrSlNYIGFzIEpTWCB9O1xuXG5leHBvcnQgeyBqc3ggYXMganN4cywganN4IGFzIGpzeERFViB9O1xuIl19","import { assertDefined } from '../assert/assert';\nimport { visitJsxNode } from '../render/render';\nimport { ComponentScopedStyles, OnRenderProp, QHostAttr } from '../util/markers';\nimport { then } from '../util/promises';\nimport { styleContent, styleHost } from './qrl-styles';\nimport { newInvokeContext, useInvoke } from '../use/use-core';\nimport { getEvent } from '../props/props';\nimport { processNode } from '../render/jsx/jsx-runtime';\nexport const firstRenderComponent = (rctx, ctx) => {\n    ctx.element.setAttribute(QHostAttr, '');\n    const result = renderComponent(rctx, ctx);\n    // if (ctx.component?.styleHostClass) {\n    //   classlistAdd(rctx, ctx.element, ctx.component.styleHostClass);\n    // }\n    return result;\n};\nexport const renderComponent = (rctx, ctx) => {\n    const hostElement = ctx.element;\n    const onRender = getEvent(ctx, OnRenderProp);\n    assertDefined(onRender);\n    // Component is not dirty any more\n    ctx.dirty = false;\n    rctx.globalState.hostsStaging.delete(hostElement);\n    // Invoke render hook\n    const promise = useInvoke(newInvokeContext(hostElement, hostElement, 'qRender'), onRender);\n    return then(promise, (jsxNode) => {\n        var _a;\n        // Types are wrong here\n        jsxNode = jsxNode[0];\n        rctx.hostElements.add(hostElement);\n        let componentCtx = ctx.component;\n        if (!componentCtx) {\n            componentCtx = ctx.component = {\n                hostElement,\n                slots: [],\n                styleHostClass: undefined,\n                styleClass: undefined,\n                styleId: undefined,\n            };\n            const scopedStyleId = (_a = hostElement.getAttribute(ComponentScopedStyles)) !== null && _a !== void 0 ? _a : undefined;\n            if (scopedStyleId) {\n                componentCtx.styleId = scopedStyleId;\n                componentCtx.styleHostClass = styleHost(scopedStyleId);\n                componentCtx.styleClass = styleContent(scopedStyleId);\n                hostElement.classList.add(componentCtx.styleHostClass);\n            }\n        }\n        componentCtx.slots = [];\n        const newCtx = Object.assign(Object.assign({}, rctx), { component: componentCtx });\n        return visitJsxNode(newCtx, hostElement, processNode(jsxNode), false);\n    });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LWN0eC5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvY29tcG9uZW50L2NvbXBvbmVudC1jdHgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRWpELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2pGLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUN4QyxPQUFPLEVBQUUsWUFBWSxFQUFFLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUN2RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsU0FBUyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDOUQsT0FBTyxFQUFFLFFBQVEsRUFBWSxNQUFNLGdCQUFnQixDQUFDO0FBRXBELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUV4RCxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxDQUFDLElBQW1CLEVBQUUsR0FBYSxFQUFFLEVBQUU7SUFDekUsR0FBRyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsU0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3hDLE1BQU0sTUFBTSxHQUFHLGVBQWUsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDMUMsdUNBQXVDO0lBQ3ZDLG1FQUFtRTtJQUNuRSxJQUFJO0lBQ0osT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLENBQUMsSUFBbUIsRUFBRSxHQUFhLEVBQUUsRUFBRTtJQUNwRSxNQUFNLFdBQVcsR0FBRyxHQUFHLENBQUMsT0FBc0IsQ0FBQztJQUMvQyxNQUFNLFFBQVEsR0FBRyxRQUFRLENBQUMsR0FBRyxFQUFFLFlBQVksQ0FBeUIsQ0FBQztJQUNyRSxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7SUFFeEIsa0NBQWtDO0lBQ2xDLEdBQUcsQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQ2xCLElBQUksQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUVsRCxxQkFBcUI7SUFDckIsTUFBTSxPQUFPLEdBQUcsU0FBUyxDQUFDLGdCQUFnQixDQUFDLFdBQVcsRUFBRSxXQUFXLEVBQUUsU0FBUyxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFFM0YsT0FBTyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsT0FBTyxFQUFFLEVBQUU7O1FBQy9CLHVCQUF1QjtRQUN2QixPQUFPLEdBQUksT0FBZSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzlCLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ25DLElBQUksWUFBWSxHQUFHLEdBQUcsQ0FBQyxTQUFTLENBQUM7UUFDakMsSUFBSSxDQUFDLFlBQVksRUFBRTtZQUNqQixZQUFZLEdBQUcsR0FBRyxDQUFDLFNBQVMsR0FBRztnQkFDN0IsV0FBVztnQkFDWCxLQUFLLEVBQUUsRUFBRTtnQkFDVCxjQUFjLEVBQUUsU0FBUztnQkFDekIsVUFBVSxFQUFFLFNBQVM7Z0JBQ3JCLE9BQU8sRUFBRSxTQUFTO2FBQ25CLENBQUM7WUFDRixNQUFNLGFBQWEsR0FBRyxNQUFBLFdBQVcsQ0FBQyxZQUFZLENBQUMscUJBQXFCLENBQUMsbUNBQUksU0FBUyxDQUFDO1lBQ25GLElBQUksYUFBYSxFQUFFO2dCQUNqQixZQUFZLENBQUMsT0FBTyxHQUFHLGFBQWEsQ0FBQztnQkFDckMsWUFBWSxDQUFDLGNBQWMsR0FBRyxTQUFTLENBQUMsYUFBYSxDQUFDLENBQUM7Z0JBQ3ZELFlBQVksQ0FBQyxVQUFVLEdBQUcsWUFBWSxDQUFDLGFBQWEsQ0FBQyxDQUFDO2dCQUN0RCxXQUFXLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsY0FBYyxDQUFDLENBQUM7YUFDeEQ7U0FDRjtRQUNELFlBQVksQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO1FBRXhCLE1BQU0sTUFBTSxtQ0FDUCxJQUFJLEtBQ1AsU0FBUyxFQUFFLFlBQVksR0FDeEIsQ0FBQztRQUNGLE9BQU8sWUFBWSxDQUFDLE1BQU0sRUFBRSxXQUFXLEVBQUUsV0FBVyxDQUFDLE9BQU8sQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3hFLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXNzZXJ0RGVmaW5lZCB9IGZyb20gJy4uL2Fzc2VydC9hc3NlcnQnO1xuaW1wb3J0IHR5cGUgeyBSZW5kZXJDb250ZXh0IH0gZnJvbSAnLi4vcmVuZGVyL2N1cnNvcic7XG5pbXBvcnQgeyB2aXNpdEpzeE5vZGUgfSBmcm9tICcuLi9yZW5kZXIvcmVuZGVyJztcbmltcG9ydCB7IENvbXBvbmVudFNjb3BlZFN0eWxlcywgT25SZW5kZXJQcm9wLCBRSG9zdEF0dHIgfSBmcm9tICcuLi91dGlsL21hcmtlcnMnO1xuaW1wb3J0IHsgdGhlbiB9IGZyb20gJy4uL3V0aWwvcHJvbWlzZXMnO1xuaW1wb3J0IHsgc3R5bGVDb250ZW50LCBzdHlsZUhvc3QgfSBmcm9tICcuL3FybC1zdHlsZXMnO1xuaW1wb3J0IHsgbmV3SW52b2tlQ29udGV4dCwgdXNlSW52b2tlIH0gZnJvbSAnLi4vdXNlL3VzZS1jb3JlJztcbmltcG9ydCB7IGdldEV2ZW50LCBRQ29udGV4dCB9IGZyb20gJy4uL3Byb3BzL3Byb3BzJztcbmltcG9ydCB0eXBlIHsgSlNYTm9kZSB9IGZyb20gJy4uJztcbmltcG9ydCB7IHByb2Nlc3NOb2RlIH0gZnJvbSAnLi4vcmVuZGVyL2pzeC9qc3gtcnVudGltZSc7XG5cbmV4cG9ydCBjb25zdCBmaXJzdFJlbmRlckNvbXBvbmVudCA9IChyY3R4OiBSZW5kZXJDb250ZXh0LCBjdHg6IFFDb250ZXh0KSA9PiB7XG4gIGN0eC5lbGVtZW50LnNldEF0dHJpYnV0ZShRSG9zdEF0dHIsICcnKTtcbiAgY29uc3QgcmVzdWx0ID0gcmVuZGVyQ29tcG9uZW50KHJjdHgsIGN0eCk7XG4gIC8vIGlmIChjdHguY29tcG9uZW50Py5zdHlsZUhvc3RDbGFzcykge1xuICAvLyAgIGNsYXNzbGlzdEFkZChyY3R4LCBjdHguZWxlbWVudCwgY3R4LmNvbXBvbmVudC5zdHlsZUhvc3RDbGFzcyk7XG4gIC8vIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbmV4cG9ydCBjb25zdCByZW5kZXJDb21wb25lbnQgPSAocmN0eDogUmVuZGVyQ29udGV4dCwgY3R4OiBRQ29udGV4dCkgPT4ge1xuICBjb25zdCBob3N0RWxlbWVudCA9IGN0eC5lbGVtZW50IGFzIEhUTUxFbGVtZW50O1xuICBjb25zdCBvblJlbmRlciA9IGdldEV2ZW50KGN0eCwgT25SZW5kZXJQcm9wKSBhcyBhbnkgYXMgKCkgPT4gSlNYTm9kZTtcbiAgYXNzZXJ0RGVmaW5lZChvblJlbmRlcik7XG5cbiAgLy8gQ29tcG9uZW50IGlzIG5vdCBkaXJ0eSBhbnkgbW9yZVxuICBjdHguZGlydHkgPSBmYWxzZTtcbiAgcmN0eC5nbG9iYWxTdGF0ZS5ob3N0c1N0YWdpbmcuZGVsZXRlKGhvc3RFbGVtZW50KTtcblxuICAvLyBJbnZva2UgcmVuZGVyIGhvb2tcbiAgY29uc3QgcHJvbWlzZSA9IHVzZUludm9rZShuZXdJbnZva2VDb250ZXh0KGhvc3RFbGVtZW50LCBob3N0RWxlbWVudCwgJ3FSZW5kZXInKSwgb25SZW5kZXIpO1xuXG4gIHJldHVybiB0aGVuKHByb21pc2UsIChqc3hOb2RlKSA9PiB7XG4gICAgLy8gVHlwZXMgYXJlIHdyb25nIGhlcmVcbiAgICBqc3hOb2RlID0gKGpzeE5vZGUgYXMgYW55KVswXTtcbiAgICByY3R4Lmhvc3RFbGVtZW50cy5hZGQoaG9zdEVsZW1lbnQpO1xuICAgIGxldCBjb21wb25lbnRDdHggPSBjdHguY29tcG9uZW50O1xuICAgIGlmICghY29tcG9uZW50Q3R4KSB7XG4gICAgICBjb21wb25lbnRDdHggPSBjdHguY29tcG9uZW50ID0ge1xuICAgICAgICBob3N0RWxlbWVudCxcbiAgICAgICAgc2xvdHM6IFtdLFxuICAgICAgICBzdHlsZUhvc3RDbGFzczogdW5kZWZpbmVkLFxuICAgICAgICBzdHlsZUNsYXNzOiB1bmRlZmluZWQsXG4gICAgICAgIHN0eWxlSWQ6IHVuZGVmaW5lZCxcbiAgICAgIH07XG4gICAgICBjb25zdCBzY29wZWRTdHlsZUlkID0gaG9zdEVsZW1lbnQuZ2V0QXR0cmlidXRlKENvbXBvbmVudFNjb3BlZFN0eWxlcykgPz8gdW5kZWZpbmVkO1xuICAgICAgaWYgKHNjb3BlZFN0eWxlSWQpIHtcbiAgICAgICAgY29tcG9uZW50Q3R4LnN0eWxlSWQgPSBzY29wZWRTdHlsZUlkO1xuICAgICAgICBjb21wb25lbnRDdHguc3R5bGVIb3N0Q2xhc3MgPSBzdHlsZUhvc3Qoc2NvcGVkU3R5bGVJZCk7XG4gICAgICAgIGNvbXBvbmVudEN0eC5zdHlsZUNsYXNzID0gc3R5bGVDb250ZW50KHNjb3BlZFN0eWxlSWQpO1xuICAgICAgICBob3N0RWxlbWVudC5jbGFzc0xpc3QuYWRkKGNvbXBvbmVudEN0eC5zdHlsZUhvc3RDbGFzcyk7XG4gICAgICB9XG4gICAgfVxuICAgIGNvbXBvbmVudEN0eC5zbG90cyA9IFtdO1xuXG4gICAgY29uc3QgbmV3Q3R4OiBSZW5kZXJDb250ZXh0ID0ge1xuICAgICAgLi4ucmN0eCxcbiAgICAgIGNvbXBvbmVudDogY29tcG9uZW50Q3R4LFxuICAgIH07XG4gICAgcmV0dXJuIHZpc2l0SnN4Tm9kZShuZXdDdHgsIGhvc3RFbGVtZW50LCBwcm9jZXNzTm9kZShqc3hOb2RlKSwgZmFsc2UpO1xuICB9KTtcbn07XG4iXX0=","import { getPlatform } from '../index';\nimport { assertDefined, assertEqual } from '../assert/assert';\nimport { parseQRL, stringifyQRL } from '../import/qrl';\nimport { isQrl } from '../import/qrl-class';\nimport { getContext } from '../props/props';\nimport { getDocument } from '../util/dom';\nimport { isDocument, isElement } from '../util/element';\nimport { logError, logWarn } from '../util/log';\nimport { ELEMENT_ID, ELEMENT_ID_PREFIX, QHostAttr, QObjAttr } from '../util/markers';\nimport { qDev } from '../util/qdev';\nimport { getProxyMap, QOjectSubsSymbol, QOjectTargetSymbol, shouldSerialize, _restoreQObject, } from './q-object';\nexport const UNDEFINED_PREFIX = '\\u0010';\nexport const QRL_PREFIX = '\\u0011';\nexport function resume(elmOrDoc) {\n    const parentElm = isDocument(elmOrDoc) ? elmOrDoc.documentElement : elmOrDoc;\n    if (!isRoot(parentElm)) {\n        // logWarn('Skipping hydration because parent element is not q:container');\n        return;\n    }\n    const doc = isDocument(elmOrDoc) ? elmOrDoc : getDocument(elmOrDoc);\n    const isDoc = isDocument(elmOrDoc) || elmOrDoc === doc.documentElement;\n    const parentJSON = isDoc ? doc.body : parentElm;\n    const script = getQwikJSON(parentJSON);\n    if (!script) {\n        logWarn('Skipping hydration qwik/json metadata was not found.');\n        return;\n    }\n    script.remove();\n    const map = getProxyMap(doc);\n    const meta = JSON.parse(script.textContent || '{}');\n    // Collect all elements\n    const elements = new Map();\n    getNodesInScope(parentElm, hasQId).forEach((el) => {\n        const id = el.getAttribute(ELEMENT_ID);\n        elements.set(ELEMENT_ID_PREFIX + id, el);\n    });\n    // Revive proxies with subscriptions into the proxymap\n    reviveValues(meta.objs, meta.subs, elements, map);\n    // Rebuild target objects\n    for (const obj of meta.objs) {\n        reviveNestedObjects(obj, elements, meta.objs, map);\n    }\n    // Walk all elements with q:obj and resume their state\n    getNodesInScope(parentElm, hasQObj).forEach((el) => {\n        const qobj = el.getAttribute(QObjAttr);\n        const host = el.getAttribute(QHostAttr);\n        const ctx = getContext(el);\n        qobj.split(' ').forEach((part) => {\n            if (part !== '') {\n                const obj = getObject(part, elements, meta.objs, map);\n                ctx.refMap.add(obj);\n            }\n            else if (qDev) {\n                logError('QObj contains empty ref');\n            }\n        });\n        if (host) {\n            const [props, events] = host.split(' ').map(strToInt);\n            assertDefined(props);\n            assertDefined(events);\n            ctx.props = ctx.refMap.get(props);\n            ctx.events = ctx.refMap.get(events);\n        }\n    });\n}\nexport function snapshotState(elmOrDoc) {\n    const doc = isDocument(elmOrDoc) ? elmOrDoc : getDocument(elmOrDoc);\n    const parentElm = isDocument(elmOrDoc) ? elmOrDoc.documentElement : elmOrDoc;\n    const proxyMap = getProxyMap(doc);\n    const objSet = new Set();\n    const platform = getPlatform(doc);\n    const elementToIndex = new Map();\n    // Collect all qObjected around the DOM\n    const elements = getNodesInScope(parentElm, hasQObj);\n    elements.forEach((node) => {\n        const props = getContext(node);\n        const qMap = props.refMap;\n        qMap.array.forEach((v) => {\n            collectQObjects(v, objSet, platform);\n            objSet.add(normalizeObj(v, platform)); // Add root elements\n        });\n    });\n    // Convert objSet to array\n    const objs = Array.from(objSet);\n    objs.sort((a, b) => {\n        const isProxyA = proxyMap.has(a) ? 0 : 1;\n        const isProxyB = proxyMap.has(b) ? 0 : 1;\n        return isProxyA - isProxyB;\n    });\n    const objToId = new Map();\n    let count = 0;\n    for (const obj of objs) {\n        objToId.set(obj, count);\n        count++;\n    }\n    function getElementID(el) {\n        let id = elementToIndex.get(el);\n        if (id === undefined) {\n            if (el.isConnected) {\n                id = intToStr(elementToIndex.size);\n                el.setAttribute(ELEMENT_ID, id);\n                id = ELEMENT_ID_PREFIX + id;\n            }\n            else {\n                id = null;\n            }\n            elementToIndex.set(el, id);\n        }\n        return id;\n    }\n    function getObjId(obj) {\n        if (obj !== null && typeof obj === 'object') {\n            const target = obj[QOjectTargetSymbol];\n            const id = objToId.get(normalizeObj(target !== null && target !== void 0 ? target : obj, platform));\n            if (id !== undefined) {\n                const proxySuffix = target ? '!' : '';\n                return intToStr(id) + proxySuffix;\n            }\n            if (!target && isElement(obj)) {\n                return getElementID(obj);\n            }\n        }\n        else {\n            const id = objToId.get(normalizeObj(obj, platform));\n            if (id !== undefined) {\n                return intToStr(id);\n            }\n        }\n        return null;\n    }\n    const subs = objs\n        .map((obj) => {\n        var _a;\n        const subs = (_a = proxyMap.get(obj)) === null || _a === void 0 ? void 0 : _a[QOjectSubsSymbol];\n        if (subs) {\n            return Object.fromEntries(Array.from(subs.entries()).map(([el, set]) => {\n                const id = getElementID(el);\n                if (id !== null) {\n                    return [id, Array.from(set)];\n                }\n                else {\n                    return [undefined, undefined];\n                }\n            }));\n        }\n        else {\n            return null;\n        }\n    })\n        .filter((a) => !!a);\n    const serialize = (value) => {\n        var _a;\n        return (_a = getObjId(value)) !== null && _a !== void 0 ? _a : value;\n    };\n    const convertedObjs = objs.map((obj) => {\n        if (Array.isArray(obj)) {\n            return obj.map(serialize);\n        }\n        else if (obj && typeof obj === 'object') {\n            const output = {};\n            Object.entries(obj).forEach(([key, value]) => {\n                output[key] = serialize(value);\n            });\n            return output;\n        }\n        return obj;\n    });\n    // Write back to the dom\n    elements.forEach((node) => {\n        const ctx = getContext(node);\n        const props = ctx.props;\n        const events = ctx.events;\n        const attribute = ctx.refMap.array\n            .map((obj) => {\n            const id = getObjId(obj);\n            assertDefined(id);\n            return id;\n        })\n            .join(' ');\n        node.setAttribute(QObjAttr, attribute);\n        if (props) {\n            const objs = [props];\n            if (events) {\n                objs.push(events);\n            }\n            node.setAttribute(QHostAttr, objs.map((obj) => ctx.refMap.indexOf(obj)).join(' '));\n        }\n    });\n    // Sanity check of serialized element\n    if (qDev) {\n        elementToIndex.forEach((value, el) => {\n            if (getDocument(el) !== doc) {\n                logWarn('element from different document', value, el.tagName);\n            }\n            if (!value) {\n                logWarn('unconnected element', el.tagName, '\\n');\n            }\n        });\n    }\n    return {\n        objs: convertedObjs,\n        subs,\n    };\n}\nexport function getQwikJSON(parentElm) {\n    let child = parentElm.lastElementChild;\n    while (child) {\n        if (child.tagName === 'SCRIPT' && child.getAttribute('type') === 'qwik/json') {\n            return child;\n        }\n        child = child.previousElementSibling;\n    }\n    return undefined;\n}\nexport function getNodesInScope(parent, predicate) {\n    const nodes = [];\n    walkNodes(nodes, parent, predicate);\n    return nodes;\n}\nexport function walkNodes(nodes, parent, predicate) {\n    let child = parent.firstElementChild;\n    while (child) {\n        if (!isRoot(child)) {\n            if (predicate(child)) {\n                nodes.push(child);\n            }\n            walkNodes(nodes, child, predicate);\n        }\n        child = child.nextElementSibling;\n    }\n}\nfunction reviveValues(objs, subs, elementMap, map) {\n    for (let i = 0; i < objs.length; i++) {\n        const value = objs[i];\n        if (typeof value === 'string') {\n            if (value === UNDEFINED_PREFIX) {\n                objs[i] = undefined;\n            }\n            else if (value.startsWith(QRL_PREFIX)) {\n                objs[i] = parseQRL(value.slice(1));\n            }\n        }\n        else {\n            const sub = subs[i];\n            if (sub) {\n                const converted = new Map();\n                Object.entries(sub).forEach((entry) => {\n                    const el = elementMap.get(entry[0]);\n                    if (!el) {\n                        logWarn('QWIK can not revive subscriptions because of missing element ID', entry, value);\n                        return;\n                    }\n                    const set = new Set(entry[1]);\n                    converted.set(el, set);\n                });\n                _restoreQObject(value, map, converted);\n            }\n        }\n    }\n}\nfunction reviveNestedObjects(obj, elements, objs, map) {\n    if (obj && typeof obj == 'object') {\n        if (Array.isArray(obj)) {\n            for (let i = 0; i < obj.length; i++) {\n                const value = obj[i];\n                if (typeof value == 'string') {\n                    obj[i] = getObject(value, elements, objs, map);\n                }\n                else {\n                    reviveNestedObjects(value, elements, objs, map);\n                }\n            }\n        }\n        else if (Object.getPrototypeOf(obj) === Object.prototype) {\n            for (const key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    const value = obj[key];\n                    if (typeof value == 'string') {\n                        obj[key] = getObject(value, elements, objs, map);\n                    }\n                    else {\n                        reviveNestedObjects(value, elements, objs, map);\n                    }\n                }\n            }\n        }\n    }\n}\nfunction getObject(id, elements, objs, map) {\n    if (id[0] === ELEMENT_ID_PREFIX) {\n        assertEqual(elements.has(id), true);\n        return elements.get(id);\n    }\n    const index = strToInt(id);\n    assertEqual(objs.length > index, true);\n    const obj = objs[index];\n    const needsProxy = id[id.length - 1] === '!';\n    if (needsProxy) {\n        const finalObj = map.get(obj);\n        assertDefined(finalObj);\n        return finalObj;\n    }\n    return obj;\n}\nfunction normalizeObj(obj, platform) {\n    var _a;\n    if (obj === undefined || !shouldSerialize(obj)) {\n        return UNDEFINED_PREFIX;\n    }\n    if (obj && typeof obj === 'object') {\n        const value = (_a = obj[QOjectTargetSymbol]) !== null && _a !== void 0 ? _a : obj;\n        if (isQrl(value)) {\n            return QRL_PREFIX + stringifyQRL(obj, platform);\n        }\n        return value;\n    }\n    return obj;\n}\nfunction collectQObjects(obj, seen, platform) {\n    if (obj != null) {\n        if (typeof obj === 'object') {\n            if (!obj[QOjectTargetSymbol] && isElement(obj)) {\n                return;\n            }\n            obj = normalizeObj(obj, platform);\n        }\n        if (typeof obj === 'object') {\n            if (seen.has(obj))\n                return;\n            seen.add(obj);\n            if (Array.isArray(obj)) {\n                for (let i = 0; i < obj.length; i++) {\n                    collectQObjects(obj[i], seen, platform);\n                }\n            }\n            else {\n                for (const key in obj) {\n                    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                        collectQObjects(obj[key], seen, platform);\n                    }\n                }\n            }\n        }\n        if (typeof obj === 'string') {\n            seen.add(obj);\n        }\n    }\n}\nexport function isProxy(obj) {\n    return obj !== null && typeof obj === 'object' && QOjectTargetSymbol in obj;\n}\nfunction isRoot(el) {\n    return el.hasAttribute('q:container');\n}\nfunction hasQObj(el) {\n    return el.hasAttribute(QObjAttr);\n}\nfunction hasQId(el) {\n    return el.hasAttribute(ELEMENT_ID);\n}\nexport const intToStr = (nu) => {\n    return nu.toString(36);\n};\nexport const strToInt = (nu) => {\n    return parseInt(nu, 36);\n};\n//# sourceMappingURL=data:application/json;base64,","import { OnRenderProp, QSlotAttr } from '../util/markers';\nimport { getContext, getProps, setEvent } from '../props/props';\nimport { isOn$Prop, isOnProp } from '../props/props-on';\nexport const SVG_NS = 'http://www.w3.org/2000/svg';\nimport { $, Host } from '../index';\nimport { firstRenderComponent, renderComponent } from '../component/component-ctx';\nimport { promiseAll, then } from '../util/promises';\nimport { assertDefined, assertEqual } from '../assert/assert';\nimport { NodeType } from '../util/types';\nimport { intToStr } from '../object/store';\nimport { EMPTY_ARRAY } from '../util/flyweight';\nimport { SkipRerender } from './jsx/host.public';\nimport { logDebug, logError, logWarn } from '../util/log';\nimport { qDev } from '../util/qdev';\nimport { qError, QError } from '../error/error';\nimport { fromCamelToKebabCase } from '../util/case';\nexport function smartUpdateChildren(ctx, elm, ch, mode, isSvg) {\n    if (ch.length === 1 && ch[0].type === SkipRerender) {\n        if (elm.firstChild !== null) {\n            return;\n        }\n        ch = ch[0].children;\n    }\n    const oldCh = getChildren(elm, mode);\n    if (oldCh.length > 0 && ch.length > 0) {\n        return updateChildren(ctx, elm, oldCh, ch, isSvg);\n    }\n    else if (ch.length > 0) {\n        return addVnodes(ctx, elm, undefined, ch, 0, ch.length - 1, isSvg);\n    }\n    else if (oldCh.length > 0) {\n        return removeVnodes(ctx, elm, oldCh, 0, oldCh.length - 1);\n    }\n}\nexport function updateChildren(ctx, parentElm, oldCh, newCh, isSvg) {\n    let oldStartIdx = 0;\n    let newStartIdx = 0;\n    let oldEndIdx = oldCh.length - 1;\n    let oldStartVnode = oldCh[0];\n    let oldEndVnode = oldCh[oldEndIdx];\n    let newEndIdx = newCh.length - 1;\n    let newStartVnode = newCh[0];\n    let newEndVnode = newCh[newEndIdx];\n    let oldKeyToIdx;\n    let idxInOld;\n    let elmToMove;\n    const results = [];\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (oldStartVnode == null) {\n            oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left\n        }\n        else if (oldEndVnode == null) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (newStartVnode == null) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (newEndVnode == null) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldStartVnode, newStartVnode)) {\n            results.push(patchVnode(ctx, oldStartVnode, newStartVnode, isSvg));\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (sameVnode(oldEndVnode, newEndVnode)) {\n            results.push(patchVnode(ctx, oldEndVnode, newEndVnode, isSvg));\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldStartVnode, newEndVnode)) {\n            // Vnode moved right\n            results.push(patchVnode(ctx, oldStartVnode, newEndVnode, isSvg));\n            insertBefore(ctx, parentElm, oldStartVnode, oldEndVnode.nextSibling);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (sameVnode(oldEndVnode, newStartVnode)) {\n            // Vnode moved left\n            results.push(patchVnode(ctx, oldEndVnode, newStartVnode, isSvg));\n            insertBefore(ctx, parentElm, oldEndVnode, oldStartVnode);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            if (oldKeyToIdx === undefined) {\n                oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n            }\n            idxInOld = oldKeyToIdx[newStartVnode.key];\n            if (idxInOld === undefined) {\n                // New element\n                const newElm = createElm(ctx, newStartVnode, isSvg);\n                results.push(then(newElm, (newElm) => {\n                    insertBefore(ctx, parentElm, newElm, oldStartVnode);\n                }));\n            }\n            else {\n                elmToMove = oldCh[idxInOld];\n                if (elmToMove.nodeName !== newStartVnode.type) {\n                    const newElm = createElm(ctx, newStartVnode, isSvg);\n                    results.push(then(newElm, (newElm) => {\n                        insertBefore(ctx, parentElm, newElm, oldStartVnode);\n                    }));\n                }\n                else {\n                    results.push(patchVnode(ctx, elmToMove, newStartVnode, isSvg));\n                    oldCh[idxInOld] = undefined;\n                    insertBefore(ctx, parentElm, elmToMove, oldStartVnode);\n                }\n            }\n            newStartVnode = newCh[++newStartIdx];\n        }\n    }\n    if (newStartIdx <= newEndIdx) {\n        const before = newCh[newEndIdx + 1] == null ? undefined : newCh[newEndIdx + 1].elm;\n        results.push(addVnodes(ctx, parentElm, before, newCh, newStartIdx, newEndIdx, isSvg));\n    }\n    let wait = promiseAll(results);\n    if (oldStartIdx <= oldEndIdx) {\n        wait = then(wait, () => {\n            removeVnodes(ctx, parentElm, oldCh, oldStartIdx, oldEndIdx);\n        });\n    }\n    return wait;\n}\nfunction isComponentNode(node) {\n    return node.props && OnRenderProp in node.props;\n}\nfunction getCh(elm) {\n    return Array.from(elm.childNodes).filter(isNode);\n}\nexport function getChildren(elm, mode) {\n    switch (mode) {\n        case 'default':\n            return getCh(elm);\n        case 'slot':\n            return getCh(elm).filter(isChildSlot);\n        case 'root':\n            return getCh(elm).filter(isChildComponent);\n        case 'fallback':\n            return getCh(elm).filter(isFallback);\n    }\n}\nexport function isNode(elm) {\n    return elm.nodeType === 1 || elm.nodeType === 3;\n}\nfunction isFallback(node) {\n    return node.nodeName === 'Q:FALLBACK';\n}\nfunction isChildSlot(node) {\n    return node.nodeName !== 'Q:FALLBACK' && isChildComponent(node);\n}\nfunction isSlotTemplate(node) {\n    return node.nodeName === 'TEMPLATE' && node.hasAttribute(QSlotAttr);\n}\nfunction isChildComponent(node) {\n    return node.nodeName !== 'TEMPLATE' || !node.hasAttribute(QSlotAttr);\n}\nfunction splitBy(input, condition) {\n    var _a;\n    const output = {};\n    for (const item of input) {\n        const key = condition(item);\n        const array = (_a = output[key]) !== null && _a !== void 0 ? _a : (output[key] = []);\n        array.push(item);\n    }\n    return output;\n}\nexport function patchVnode(rctx, elm, vnode, isSvg) {\n    rctx.perf.visited++;\n    vnode.elm = elm;\n    const tag = vnode.type;\n    if (tag === '#text') {\n        if (elm.data !== vnode.text) {\n            setProperty(rctx, elm, 'data', vnode.text);\n        }\n        return;\n    }\n    if (tag === Host || tag === SkipRerender) {\n        return;\n    }\n    if (!isSvg) {\n        isSvg = tag === 'svg';\n    }\n    let promise;\n    const props = vnode.props;\n    const ctx = getContext(elm);\n    const dirty = updateProperties(rctx, ctx, props, isSvg);\n    const isSlot = tag === 'q:slot';\n    if (isSvg && vnode.type === 'foreignObject') {\n        isSvg = false;\n    }\n    else if (isSlot) {\n        rctx.component.slots.push(vnode);\n    }\n    const isComponent = isComponentNode(vnode);\n    if (dirty) {\n        promise = renderComponent(rctx, ctx);\n    }\n    const ch = vnode.children;\n    if (isComponent) {\n        return then(promise, () => {\n            const slotMaps = getSlots(ctx.component, elm);\n            const splittedChidren = splitBy(ch, getSlotName);\n            const promises = [];\n            // Mark empty slots and remove content\n            Object.entries(slotMaps.slots).forEach(([key, slotEl]) => {\n                if (slotEl && !splittedChidren[key]) {\n                    const oldCh = getChildren(slotEl, 'slot');\n                    if (oldCh.length > 0) {\n                        removeVnodes(rctx, slotEl, oldCh, 0, oldCh.length - 1);\n                    }\n                }\n            });\n            // Render into slots\n            Object.entries(splittedChidren).forEach(([key, ch]) => {\n                const slotElm = getSlotElement(rctx, slotMaps, elm, key);\n                promises.push(smartUpdateChildren(rctx, slotElm, ch, 'slot', isSvg));\n            });\n            return then(promiseAll(promises), () => {\n                removeTemplates(rctx, slotMaps);\n            });\n        });\n    }\n    const setsInnerHTML = checkInnerHTML(props);\n    if (setsInnerHTML) {\n        if (qDev && ch.length > 0) {\n            logWarn('Node can not have children when innerHTML is set');\n        }\n        return;\n    }\n    return then(promise, () => {\n        const mode = isSlot ? 'fallback' : 'default';\n        return smartUpdateChildren(rctx, elm, ch, mode, isSvg);\n    });\n}\nfunction addVnodes(ctx, parentElm, before, vnodes, startIdx, endIdx, isSvg) {\n    const promises = [];\n    for (; startIdx <= endIdx; ++startIdx) {\n        const ch = vnodes[startIdx];\n        assertDefined(ch);\n        promises.push(createElm(ctx, ch, isSvg));\n    }\n    return then(promiseAll(promises), (children) => {\n        for (const child of children) {\n            insertBefore(ctx, parentElm, child, before);\n        }\n    });\n}\nfunction removeVnodes(ctx, parentElm, nodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n        const ch = nodes[startIdx];\n        assertDefined(ch);\n        removeNode(ctx, ch);\n    }\n}\nlet refCount = 0;\nconst RefSymbol = Symbol();\nfunction setSlotRef(ctx, hostElm, slotEl) {\n    var _a;\n    let ref = (_a = hostElm[RefSymbol]) !== null && _a !== void 0 ? _a : hostElm.getAttribute('q:sref');\n    if (ref === null) {\n        ref = intToStr(refCount++);\n        hostElm[RefSymbol] = ref;\n        setAttribute(ctx, hostElm, 'q:sref', ref);\n    }\n    slotEl.setAttribute('q:sref', ref);\n}\nfunction getSlotElement(ctx, slotMaps, parentEl, slotName) {\n    const slotEl = slotMaps.slots[slotName];\n    if (slotEl) {\n        return slotEl;\n    }\n    const templateEl = slotMaps.templates[slotName];\n    if (templateEl) {\n        return templateEl.content;\n    }\n    const template = createTemplate(ctx, slotName);\n    prepend(ctx, parentEl, template);\n    slotMaps.templates[slotName] = template;\n    return template.content;\n}\nfunction createTemplate(ctx, slotName) {\n    const template = createElement(ctx, 'template', false);\n    template.setAttribute(QSlotAttr, slotName);\n    return template;\n}\nfunction removeTemplates(ctx, slotMaps) {\n    Object.keys(slotMaps.templates).forEach((key) => {\n        const template = slotMaps.templates[key];\n        if (template && slotMaps.slots[key] !== undefined) {\n            removeNode(ctx, template);\n            slotMaps.templates[key] = undefined;\n        }\n    });\n}\nexport function resolveSlotProjection(ctx, hostElm, before, after) {\n    Object.entries(before.slots).forEach(([key, slotEl]) => {\n        if (slotEl && !after.slots[key]) {\n            // Slot removed\n            // Move slot to template\n            const template = createTemplate(ctx, key);\n            const slotChildren = getChildren(slotEl, 'slot');\n            template.content.append(...slotChildren);\n            hostElm.insertBefore(template, hostElm.firstChild);\n            ctx.operations.push({\n                el: template,\n                operation: 'slot-to-template',\n                args: slotChildren,\n                fn: () => { },\n            });\n        }\n    });\n    Object.entries(after.slots).forEach(([key, slotEl]) => {\n        if (slotEl && !before.slots[key]) {\n            // Slot created\n            // Move template to slot\n            const template = before.templates[key];\n            if (template) {\n                slotEl.appendChild(template.content);\n                template.remove();\n                ctx.operations.push({\n                    el: slotEl,\n                    operation: 'template-to-slot',\n                    args: [template],\n                    fn: () => { },\n                });\n            }\n        }\n    });\n}\nfunction getSlotName(node) {\n    var _a, _b;\n    return (_b = (_a = node.props) === null || _a === void 0 ? void 0 : _a['q:slot']) !== null && _b !== void 0 ? _b : '';\n}\nfunction createElm(rctx, vnode, isSvg) {\n    rctx.perf.visited++;\n    const tag = vnode.type;\n    if (tag === '#text') {\n        return (vnode.elm = createTextNode(rctx, vnode.text));\n    }\n    if (!isSvg) {\n        isSvg = tag === 'svg';\n    }\n    const props = vnode.props;\n    const elm = (vnode.elm = createElement(rctx, tag, isSvg));\n    const isComponent = isComponentNode(vnode);\n    const ctx = getContext(elm);\n    setKey(elm, vnode.key);\n    updateProperties(rctx, ctx, props, isSvg);\n    if (isSvg && tag === 'foreignObject') {\n        isSvg = false;\n    }\n    const currentComponent = rctx.component;\n    if (currentComponent) {\n        const styleTag = currentComponent.styleClass;\n        if (styleTag) {\n            classlistAdd(rctx, elm, styleTag);\n        }\n        if (tag === 'q:slot') {\n            setSlotRef(rctx, currentComponent.hostElement, elm);\n            rctx.component.slots.push(vnode);\n        }\n    }\n    let wait;\n    if (isComponent) {\n        wait = firstRenderComponent(rctx, ctx);\n    }\n    else {\n        const setsInnerHTML = checkInnerHTML(props);\n        if (setsInnerHTML) {\n            if (qDev && vnode.children.length > 0) {\n                logWarn('Node can not have children when innerHTML is set');\n            }\n            return elm;\n        }\n    }\n    return then(wait, () => {\n        let children = vnode.children;\n        if (children.length > 0) {\n            if (children.length === 1 && children[0].type === SkipRerender) {\n                children = children[0].children;\n            }\n            const slotMap = isComponent ? getSlots(ctx.component, elm) : undefined;\n            const promises = children.map((ch) => createElm(rctx, ch, isSvg));\n            return then(promiseAll(promises), () => {\n                let parent = elm;\n                for (const node of children) {\n                    if (slotMap) {\n                        parent = getSlotElement(rctx, slotMap, elm, getSlotName(node));\n                    }\n                    parent.appendChild(node.elm);\n                }\n                return elm;\n            });\n        }\n        return elm;\n    });\n}\nconst getSlots = (componentCtx, hostElm) => {\n    var _a, _b, _c, _d, _e;\n    const slots = {};\n    const templates = {};\n    const slotRef = hostElm.getAttribute('q:sref');\n    const existingSlots = Array.from(hostElm.querySelectorAll(`q\\\\:slot[q\\\\:sref=\"${slotRef}\"]`));\n    const newSlots = (_a = componentCtx === null || componentCtx === void 0 ? void 0 : componentCtx.slots) !== null && _a !== void 0 ? _a : EMPTY_ARRAY;\n    const t = Array.from(hostElm.childNodes).filter(isSlotTemplate);\n    // Map slots\n    for (const elm of existingSlots) {\n        slots[(_b = elm.getAttribute('name')) !== null && _b !== void 0 ? _b : ''] = elm;\n    }\n    // Map virtual slots\n    for (const vnode of newSlots) {\n        slots[(_d = (_c = vnode.props) === null || _c === void 0 ? void 0 : _c.name) !== null && _d !== void 0 ? _d : ''] = vnode.elm;\n    }\n    // Map templates\n    for (const elm of t) {\n        templates[(_e = elm.getAttribute('name')) !== null && _e !== void 0 ? _e : ''] = elm;\n    }\n    return { slots, templates };\n};\nconst handleStyle = (ctx, elm, _, newValue) => {\n    setAttribute(ctx, elm, 'style', stringifyClassOrStyle(newValue, false));\n    return true;\n};\nconst handleClass = (ctx, elm, _, newValue) => {\n    setAttribute(ctx, elm, 'class', stringifyClassOrStyle(newValue, true));\n    return true;\n};\nconst checkBeforeAssign = (ctx, elm, prop, newValue) => {\n    if (prop in elm) {\n        if (elm[prop] !== newValue) {\n            setProperty(ctx, elm, prop, newValue);\n        }\n    }\n    return true;\n};\nconst dangerouslySetInnerHTML = 'dangerouslySetInnerHTML';\nconst setInnerHTML = (ctx, elm, _, newValue) => {\n    if (dangerouslySetInnerHTML in elm) {\n        setProperty(ctx, elm, dangerouslySetInnerHTML, newValue);\n    }\n    else if ('innerHTML' in elm) {\n        setProperty(ctx, elm, 'innerHTML', newValue);\n    }\n    return true;\n};\nconst PROP_HANDLER_MAP = {\n    style: handleStyle,\n    class: handleClass,\n    className: handleClass,\n    value: checkBeforeAssign,\n    checked: checkBeforeAssign,\n    [dangerouslySetInnerHTML]: setInnerHTML,\n};\nconst ALLOWS_PROPS = ['class', 'className', 'style', 'id', 'q:slot'];\nexport function updateProperties(rctx, ctx, expectProps, isSvg) {\n    if (!expectProps) {\n        return false;\n    }\n    const elm = ctx.element;\n    const qwikProps = OnRenderProp in expectProps ? getProps(ctx) : undefined;\n    // TODO\n    // when a proper disappears, we cant reset the value\n    for (let key of Object.keys(expectProps)) {\n        if (key === 'children') {\n            continue;\n        }\n        const newValue = expectProps[key];\n        if (isOnProp(key)) {\n            setEvent(rctx, ctx, key, newValue);\n            continue;\n        }\n        if (isOn$Prop(key)) {\n            setEvent(rctx, ctx, key.replace('$', ''), $(newValue));\n            continue;\n        }\n        // Early exit if value didnt change\n        const oldValue = ctx.cache.get(key);\n        if (newValue === oldValue) {\n            continue;\n        }\n        ctx.cache.set(key, newValue);\n        // Check of data- or aria-\n        if (key.startsWith('data-') || key.startsWith('aria-')) {\n            setAttribute(rctx, elm, key, newValue);\n            continue;\n        }\n        if (qwikProps) {\n            const skipProperty = ALLOWS_PROPS.includes(key);\n            const hPrefixed = key.startsWith('h:');\n            if (!skipProperty && !hPrefixed) {\n                // Qwik props\n                qwikProps[key] = newValue;\n                continue;\n            }\n            if (hPrefixed) {\n                key = key.slice(2);\n            }\n        }\n        // Check if its an exception\n        const exception = PROP_HANDLER_MAP[key];\n        if (exception) {\n            if (exception(rctx, elm, key, newValue, oldValue)) {\n                continue;\n            }\n        }\n        // Check if property in prototype\n        if (!isSvg && key in elm) {\n            setProperty(rctx, elm, key, newValue);\n            continue;\n        }\n        // Fallback to render attribute\n        setAttribute(rctx, elm, key, newValue);\n    }\n    return ctx.dirty;\n}\nexport const startEvent = (ctx, name) => {\n    const event = {\n        name,\n        timeStart: performance.now(),\n        timeEnd: 0,\n    };\n    ctx.perf.timing.push(event);\n    return () => {\n        event.timeEnd = performance.now();\n    };\n};\nexport function setAttribute(ctx, el, prop, value) {\n    const fn = () => {\n        if (value == null) {\n            el.removeAttribute(prop);\n        }\n        else {\n            el.setAttribute(prop, String(value));\n        }\n    };\n    ctx.operations.push({\n        el,\n        operation: 'set-attribute',\n        args: [prop, value],\n        fn,\n    });\n}\nexport function classlistAdd(ctx, el, hostStyleTag) {\n    const fn = () => {\n        el.classList.add(hostStyleTag);\n    };\n    ctx.operations.push({\n        el,\n        operation: 'classlist-add',\n        args: [hostStyleTag],\n        fn,\n    });\n}\nfunction setProperty(ctx, node, key, value) {\n    const fn = () => {\n        try {\n            node[key] = value;\n        }\n        catch (err) {\n            logError('Set property', { node, key, value }, err);\n        }\n    };\n    ctx.operations.push({\n        el: node,\n        operation: 'set-property',\n        args: [key, value],\n        fn,\n    });\n}\nfunction createElement(ctx, expectTag, isSvg) {\n    const el = isSvg ? ctx.doc.createElementNS(SVG_NS, expectTag) : ctx.doc.createElement(expectTag);\n    ctx.operations.push({\n        el,\n        operation: 'create-element',\n        args: [expectTag],\n        fn: () => { },\n    });\n    return el;\n}\nfunction insertBefore(ctx, parent, newChild, refChild) {\n    const fn = () => {\n        parent.insertBefore(newChild, refChild ? refChild : null);\n    };\n    ctx.operations.push({\n        el: parent,\n        operation: 'insert-before',\n        args: [newChild, refChild],\n        fn,\n    });\n    return newChild;\n}\nfunction prepend(ctx, parent, newChild) {\n    const fn = () => {\n        parent.insertBefore(newChild, parent.firstChild);\n    };\n    ctx.operations.push({\n        el: parent,\n        operation: 'prepend',\n        args: [newChild],\n        fn,\n    });\n}\nfunction removeNode(ctx, el) {\n    const fn = () => {\n        const parent = el.parentNode;\n        if (parent) {\n            parent.removeChild(el);\n        }\n        else if (qDev) {\n            logWarn('Trying to remove component already removed', el);\n        }\n    };\n    ctx.operations.push({\n        el: el,\n        operation: 'remove',\n        args: [],\n        fn,\n    });\n}\nfunction createTextNode(ctx, text) {\n    return ctx.doc.createTextNode(text);\n}\nexport function executeContextWithSlots(ctx) {\n    const before = ctx.roots.map((elm) => getSlots(undefined, elm));\n    executeContext(ctx);\n    const after = ctx.roots.map((elm) => getSlots(undefined, elm));\n    assertEqual(before.length, after.length);\n    for (let i = 0; i < before.length; i++) {\n        resolveSlotProjection(ctx, ctx.roots[i], before[i], after[i]);\n    }\n}\nexport function executeContext(ctx) {\n    for (const op of ctx.operations) {\n        op.fn();\n    }\n}\nexport function printRenderStats(ctx) {\n    var _a;\n    const byOp = {};\n    for (const op of ctx.operations) {\n        byOp[op.operation] = ((_a = byOp[op.operation]) !== null && _a !== void 0 ? _a : 0) + 1;\n    }\n    const affectedElements = Array.from(new Set(ctx.operations.map((a) => a.el)));\n    const stats = {\n        byOp,\n        roots: ctx.roots,\n        hostElements: Array.from(ctx.hostElements),\n        affectedElements,\n        visitedNodes: ctx.perf.visited,\n        operations: ctx.operations.map((v) => [v.operation, v.el, ...v.args]),\n    };\n    logDebug('Render stats', stats);\n    return stats;\n}\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n    const map = {};\n    for (let i = beginIdx; i <= endIdx; ++i) {\n        const child = children[i];\n        if (child.nodeType == NodeType.ELEMENT_NODE) {\n            const key = getKey(child);\n            if (key !== undefined) {\n                map[key] = i;\n            }\n        }\n    }\n    return map;\n}\nconst KEY_SYMBOL = Symbol('vnode key');\nfunction getKey(el) {\n    let key = el[KEY_SYMBOL];\n    if (key === undefined) {\n        key = el[KEY_SYMBOL] = el.getAttribute('q:key');\n    }\n    return key;\n}\nfunction setKey(el, key) {\n    if (typeof key === 'string') {\n        el.setAttribute('q:key', key);\n    }\n    el[KEY_SYMBOL] = key;\n}\nfunction sameVnode(vnode1, vnode2) {\n    const isSameSel = vnode1.nodeName.toLowerCase() === vnode2.type;\n    const isSameKey = vnode1.nodeType === NodeType.ELEMENT_NODE ? getKey(vnode1) === vnode2.key : true;\n    return isSameSel && isSameKey;\n}\nfunction checkInnerHTML(props) {\n    return props && ('innerHTML' in props || dangerouslySetInnerHTML in props);\n}\nexport function stringifyClassOrStyle(obj, isClass) {\n    if (obj == null)\n        return '';\n    if (typeof obj == 'object') {\n        let text = '';\n        let sep = '';\n        if (Array.isArray(obj)) {\n            if (!isClass) {\n                throw qError(QError.Render_unsupportedFormat_obj_attr, obj, 'style');\n            }\n            for (let i = 0; i < obj.length; i++) {\n                text += sep + obj[i];\n                sep = ' ';\n            }\n        }\n        else {\n            for (const key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    const value = obj[key];\n                    text += isClass\n                        ? value\n                            ? sep + key\n                            : ''\n                        : sep + fromCamelToKebabCase(key) + ':' + value;\n                    sep = isClass ? ' ' : ';';\n                }\n            }\n        }\n        return text;\n    }\n    return String(obj);\n}\n//# sourceMappingURL=data:application/json;base64,","import { assertDefined } from '../assert/assert';\nimport { QHostAttr } from '../util/markers';\nimport { executeContextWithSlots, printRenderStats } from './cursor';\nimport { getContext, resumeIfNeeded } from '../props/props';\nimport { qDev } from '../util/qdev';\nimport { getPlatform } from '../index';\nimport { getDocument } from '../util/dom';\nimport { renderComponent } from '../component/component-ctx';\nimport { logDebug } from '../util/log';\n/**\n * Mark component for rendering.\n *\n * Use `notifyRender` method to mark a component for rendering at some later point in time.\n * This method uses `getPlatform(doc).queueRender` for scheduling of the rendering. The\n * default implementation of the method is to use `requestAnimationFrame` to do actual rendering.\n *\n * The method is intended to coalesce multiple calls into `notifyRender` into a single call for\n * rendering.\n *\n * @param hostElement - Host-element of the component to re-render.\n * @returns A promise which is resolved when the component has been rendered.\n * @public\n */\n// TODO(misko): tests\n// TODO(misko): this should take QComponent as well.\nexport function notifyRender(hostElement) {\n    assertDefined(hostElement.getAttribute(QHostAttr));\n    const doc = getDocument(hostElement);\n    resumeIfNeeded(hostElement);\n    const ctx = getContext(hostElement);\n    const state = getRenderingState(doc);\n    if (ctx.dirty) {\n        // TODO\n        return state.renderPromise;\n    }\n    ctx.dirty = true;\n    const activeRendering = state.hostsRendering !== undefined;\n    if (activeRendering) {\n        state.hostsStaging.add(hostElement);\n        return state.renderPromise.then((ctx) => {\n            if (state.hostsNext.has(hostElement)) {\n                // TODO\n                return state.renderPromise;\n            }\n            else {\n                return ctx;\n            }\n        });\n    }\n    else {\n        state.hostsNext.add(hostElement);\n        return scheduleFrame(doc, state);\n    }\n}\nexport function scheduleFrame(doc, state) {\n    if (state.renderPromise === undefined) {\n        state.renderPromise = getPlatform(doc).nextTick(() => renderMarked(doc, state));\n    }\n    return state.renderPromise;\n}\nconst SCHEDULE = Symbol('Render state');\nexport function getRenderingState(doc) {\n    let set = doc[SCHEDULE];\n    if (!set) {\n        doc[SCHEDULE] = set = {\n            hostsNext: new Set(),\n            hostsStaging: new Set(),\n            renderPromise: undefined,\n            hostsRendering: undefined,\n        };\n    }\n    return set;\n}\nexport async function renderMarked(doc, state) {\n    state.hostsRendering = new Set(state.hostsNext);\n    state.hostsNext.clear();\n    const platform = getPlatform(doc);\n    const renderingQueue = Array.from(state.hostsRendering);\n    sortNodes(renderingQueue);\n    const ctx = {\n        doc,\n        globalState: state,\n        hostElements: new Set(),\n        operations: [],\n        roots: [],\n        component: undefined,\n        perf: {\n            visited: 0,\n            timing: [],\n        },\n    };\n    for (const el of renderingQueue) {\n        if (!ctx.hostElements.has(el)) {\n            ctx.roots.push(el);\n            await renderComponent(ctx, getContext(el));\n        }\n    }\n    // Early exist, no dom operations\n    if (ctx.operations.length === 0) {\n        if (qDev) {\n            if (typeof window !== 'undefined' && window.document != null) {\n                logDebug('Render skipped. No operations.');\n                printRenderStats(ctx);\n            }\n        }\n        postRendering(doc, state);\n        return ctx;\n    }\n    return platform.raf(() => {\n        executeContextWithSlots(ctx);\n        if (qDev) {\n            if (typeof window !== 'undefined' && window.document != null) {\n                printRenderStats(ctx);\n            }\n        }\n        postRendering(doc, state);\n        return ctx;\n    });\n}\nfunction postRendering(doc, state) {\n    // Move elements from staging to nextRender\n    state.hostsStaging.forEach((el) => {\n        state.hostsNext.add(el);\n    });\n    // Clear staging\n    state.hostsStaging.clear();\n    state.hostsRendering = undefined;\n    state.renderPromise = undefined;\n    if (state.hostsNext.size > 0) {\n        scheduleFrame(doc, state);\n    }\n}\nfunction sortNodes(elements) {\n    elements.sort((a, b) => (a.compareDocumentPosition(b) & 2 ? 1 : -1));\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZ5LXJlbmRlci5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvcmVuZGVyL25vdGlmeS1yZW5kZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUM1QyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsZ0JBQWdCLEVBQWlCLE1BQU0sVUFBVSxDQUFDO0FBQ3BGLE9BQU8sRUFBRSxVQUFVLEVBQUUsY0FBYyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUNwQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDMUMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzdELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFFdkM7Ozs7Ozs7Ozs7Ozs7R0FhRztBQUNILHFCQUFxQjtBQUNyQixvREFBb0Q7QUFDcEQsTUFBTSxVQUFVLFlBQVksQ0FBQyxXQUFvQjtJQUMvQyxhQUFhLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO0lBQ25ELE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNyQyxjQUFjLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDNUIsTUFBTSxHQUFHLEdBQUcsVUFBVSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3BDLE1BQU0sS0FBSyxHQUFHLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3JDLElBQUksR0FBRyxDQUFDLEtBQUssRUFBRTtRQUNiLE9BQU87UUFDUCxPQUFPLEtBQUssQ0FBQyxhQUFj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QUMsYUFBYSxHQUFHLFNBQVMsQ0FBQztJQUVoQyxJQUFJLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSSxHQUFHLENBQUMsRUFBRTtRQUM1QixhQUFhLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO0tBQzNCO0FBQ0gsQ0FBQztBQUVELFNBQVMsU0FBUyxDQUFDLFFBQW1CO0lBQ3BDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3ZFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnREZWZpbmVkIH0gZnJvbSAnLi4vYXNzZXJ0L2Fzc2VydCc7XG5pbXBvcnQgeyBRSG9zdEF0dHIgfSBmcm9tICcuLi91dGlsL21hcmtlcnMnO1xuaW1wb3J0IHsgZXhlY3V0ZUNvbnRleHRXaXRoU2xvdHMsIHByaW50UmVuZGVyU3RhdHMsIFJlbmRlckNvbnRleHQgfSBmcm9tICcuL2N1cnNvcic7XG5pbXBvcnQgeyBnZXRDb250ZXh0LCByZXN1bWVJZk5lZWRlZCB9IGZyb20gJy4uL3Byb3BzL3Byb3BzJztcbmltcG9ydCB7IHFEZXYgfSBmcm9tICcuLi91dGlsL3FkZXYnO1xuaW1wb3J0IHsgZ2V0UGxhdGZvcm0gfSBmcm9tICcuLi9pbmRleCc7XG5pbXBvcnQgeyBnZXREb2N1bWVudCB9IGZyb20gJy4uL3V0aWwvZG9tJztcbmltcG9ydCB7IHJlbmRlckNvbXBvbmVudCB9IGZyb20gJy4uL2NvbXBvbmVudC9jb21wb25lbnQtY3R4JztcbmltcG9ydCB7IGxvZ0RlYnVnIH0gZnJvbSAnLi4vdXRpbC9sb2cnO1xuXG4vKipcbiAqIE1hcmsgY29tcG9uZW50IGZvciByZW5kZXJpbmcuXG4gKlxuICogVXNlIGBub3RpZnlSZW5kZXJgIG1ldGhvZCB0byBtYXJrIGEgY29tcG9uZW50IGZvciByZW5kZXJpbmcgYXQgc29tZSBsYXRlciBwb2ludCBpbiB0aW1lLlxuICogVGhpcyBtZXRob2QgdXNlcyBgZ2V0UGxhdGZvcm0oZG9jKS5xdWV1ZVJlbmRlcmAgZm9yIHNjaGVkdWxpbmcgb2YgdGhlIHJlbmRlcmluZy4gVGhlXG4gKiBkZWZhdWx0IGltcGxlbWVudGF0aW9uIG9mIHRoZSBtZXRob2QgaXMgdG8gdXNlIGByZXF1ZXN0QW5pbWF0aW9uRnJhbWVgIHRvIGRvIGFjdHVhbCByZW5kZXJpbmcuXG4gKlxuICogVGhlIG1ldGhvZCBpcyBpbnRlbmRlZCB0byBjb2FsZXNjZSBtdWx0aXBsZSBjYWxscyBpbnRvIGBub3RpZnlSZW5kZXJgIGludG8gYSBzaW5nbGUgY2FsbCBmb3JcbiAqIHJlbmRlcmluZy5cbiAqXG4gKiBAcGFyYW0gaG9zdEVsZW1lbnQgLSBIb3N0LWVsZW1lbnQgb2YgdGhlIGNvbXBvbmVudCB0byByZS1yZW5kZXIuXG4gKiBAcmV0dXJucyBBIHByb21pc2Ugd2hpY2ggaXMgcmVzb2x2ZWQgd2hlbiB0aGUgY29tcG9uZW50IGhhcyBiZWVuIHJlbmRlcmVkLlxuICogQHB1YmxpY1xuICovXG4vLyBUT0RPKG1pc2tvKTogdGVzdHNcbi8vIFRPRE8obWlza28pOiB0aGlzIHNob3VsZCB0YWtlIFFDb21wb25lbnQgYXMgd2VsbC5cbmV4cG9ydCBmdW5jdGlvbiBub3RpZnlSZW5kZXIoaG9zdEVsZW1lbnQ6IEVsZW1lbnQpOiBQcm9taXNlPFJlbmRlckNvbnRleHQ+IHtcbiAgYXNzZXJ0RGVmaW5lZChob3N0RWxlbWVudC5nZXRBdHRyaWJ1dGUoUUhvc3RBdHRyKSk7XG4gIGNvbnN0IGRvYyA9IGdldERvY3VtZW50KGhvc3RFbGVtZW50KTtcbiAgcmVzdW1lSWZOZWVkZWQoaG9zdEVsZW1lbnQpO1xuICBjb25zdCBjdHggPSBnZXRDb250ZXh0KGhvc3RFbGVtZW50KTtcbiAgY29uc3Qgc3RhdGUgPSBnZXRSZW5kZXJpbmdTdGF0ZShkb2MpO1xuICBpZiAoY3R4LmRpcnR5KSB7XG4gICAgLy8gVE9ET1xuICAgIHJldHVybiBzdGF0ZS5yZW5kZXJQcm9taXNlITtcbiAgfVxuICBjdHguZGlydHkgPSB0cnVlO1xuICBjb25zdCBhY3RpdmVSZW5kZXJpbmcgPSBzdGF0ZS5ob3N0c1JlbmRlcmluZyAhPT0gdW5kZWZpbmVkO1xuICBpZiAoYWN0aXZlUmVuZGVyaW5nKSB7XG4gICAgc3RhdGUuaG9zdHNTdGFnaW5nLmFkZChob3N0RWxlbWVudCk7XG4gICAgcmV0dXJuIHN0YXRlLnJlbmRlclByb21pc2UhLnRoZW4oKGN0eCkgPT4ge1xuICAgICAgaWYgKHN0YXRlLmhvc3RzTmV4dC5oYXMoaG9zdEVsZW1lbnQpKSB7XG4gICAgICAgIC8vIFRPRE9cbiAgICAgICAgcmV0dXJuIHN0YXRlLnJlbmRlclByb21pc2UhO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGN0eDtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBzdGF0ZS5ob3N0c05leHQuYWRkKGhvc3RFbGVtZW50KTtcbiAgICByZXR1cm4gc2NoZWR1bGVGcmFtZShkb2MsIHN0YXRlKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc2NoZWR1bGVGcmFtZShkb2M6IERvY3VtZW50LCBzdGF0ZTogUmVuZGVyaW5nU3RhdGUpOiBQcm9taXNlPFJlbmRlckNvbnRleHQ+IHtcbiAgaWYgKHN0YXRlLnJlbmRlclByb21pc2UgPT09IHVuZGVmaW5lZCkge1xuICAgIHN0YXRlLnJlbmRlclByb21pc2UgPSBnZXRQbGF0Zm9ybShkb2MpLm5leHRUaWNrKCgpID0+IHJlbmRlck1hcmtlZChkb2MsIHN0YXRlKSk7XG4gIH1cbiAgcmV0dXJuIHN0YXRlLnJlbmRlclByb21pc2U7XG59XG5cbmNvbnN0IFNDSEVEVUxFID0gU3ltYm9sKCdSZW5kZXIgc3RhdGUnKTtcblxuZXhwb3J0IGludGVyZmFjZSBSZW5kZXJpbmdTdGF0ZSB7XG4gIGhvc3RzTmV4dDogU2V0PEVsZW1lbnQ+O1xuICBob3N0c1N0YWdpbmc6IFNldDxFbGVtZW50PjtcbiAgaG9zdHNSZW5kZXJpbmc6IFNldDxFbGVtZW50PiB8IHVuZGVmaW5lZDtcbiAgcmVuZGVyUHJvbWlzZTogUHJvbWlzZTxSZW5kZXJDb250ZXh0PiB8IHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFJlbmRlcmluZ1N0YXRlKGRvYzogRG9jdW1lbnQpOiBSZW5kZXJpbmdTdGF0ZSB7XG4gIGxldCBzZXQgPSAoZG9jIGFzIGFueSlbU0NIRURVTEVdIGFzIFJlbmRlcmluZ1N0YXRlO1xuICBpZiAoIXNldCkge1xuICAgIChkb2MgYXMgYW55KVtTQ0hFRFVMRV0gPSBzZXQgPSB7XG4gICAgICBob3N0c05leHQ6IG5ldyBTZXQoKSxcbiAgICAgIGhvc3RzU3RhZ2luZzogbmV3IFNldCgpLFxuICAgICAgcmVuZGVyUHJvbWlzZTogdW5kZWZpbmVkLFxuICAgICAgaG9zdHNSZW5kZXJpbmc6IHVuZGVmaW5lZCxcbiAgICB9O1xuICB9XG4gIHJldHVybiBzZXQ7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZW5kZXJNYXJrZWQoZG9jOiBEb2N1bWVudCwgc3RhdGU6IFJlbmRlcmluZ1N0YXRlKTogUHJvbWlzZTxSZW5kZXJDb250ZXh0PiB7XG4gIHN0YXRlLmhvc3RzUmVuZGVyaW5nID0gbmV3IFNldChzdGF0ZS5ob3N0c05leHQpO1xuICBzdGF0ZS5ob3N0c05leHQuY2xlYXIoKTtcblxuICBjb25zdCBwbGF0Zm9ybSA9IGdldFBsYXRmb3JtKGRvYyk7XG4gIGNvbnN0IHJlbmRlcmluZ1F1ZXVlID0gQXJyYXkuZnJvbShzdGF0ZS5ob3N0c1JlbmRlcmluZyk7XG4gIHNvcnROb2RlcyhyZW5kZXJpbmdRdWV1ZSk7XG5cbiAgY29uc3QgY3R4OiBSZW5kZXJDb250ZXh0ID0ge1xuICAgIGRvYyxcbiAgICBnbG9iYWxTdGF0ZTogc3RhdGUsXG4gICAgaG9zdEVsZW1lbnRzOiBuZXcgU2V0KCksXG4gICAgb3BlcmF0aW9uczogW10sXG4gICAgcm9vdHM6IFtdLFxuICAgIGNvbXBvbmVudDogdW5kZWZpbmVkLFxuICAgIHBlcmY6IHtcbiAgICAgIHZpc2l0ZWQ6IDAsXG4gICAgICB0aW1pbmc6IFtdLFxuICAgIH0sXG4gIH07XG5cbiAgZm9yIChjb25zdCBlbCBvZiByZW5kZXJpbmdRdWV1ZSkge1xuICAgIGlmICghY3R4Lmhvc3RFbGVtZW50cy5oYXMoZWwpKSB7XG4gICAgICBjdHgucm9vdHMucHVzaChlbCk7XG4gICAgICBhd2FpdCByZW5kZXJDb21wb25lbnQoY3R4LCBnZXRDb250ZXh0KGVsKSk7XG4gICAgfVxuICB9XG5cbiAgLy8gRWFybHkgZXhpc3QsIG5vIGRvbSBvcGVyYXRpb25zXG4gIGlmIChjdHgub3BlcmF0aW9ucy5sZW5ndGggPT09IDApIHtcbiAgICBpZiAocURldikge1xuICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAhPSBudWxsKSB7XG4gICAgICAgIGxvZ0RlYnVnKCdSZW5kZXIgc2tpcHBlZC4gTm8gb3BlcmF0aW9ucy4nKTtcbiAgICAgICAgcHJpbnRSZW5kZXJTdGF0cyhjdHgpO1xuICAgICAgfVxuICAgIH1cbiAgICBwb3N0UmVuZGVyaW5nKGRvYywgc3RhdGUpO1xuICAgIHJldHVybiBjdHg7XG4gIH1cblxuICByZXR1cm4gcGxhdGZvcm0ucmFmKCgpID0+IHtcbiAgICBleGVjdXRlQ29udGV4dFdpdGhTbG90cyhjdHgpO1xuICAgIGlmIChxRGV2KSB7XG4gICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRvY3VtZW50ICE9IG51bGwpIHtcbiAgICAgICAgcHJpbnRSZW5kZXJTdGF0cyhjdHgpO1xuICAgICAgfVxuICAgIH1cbiAgICBwb3N0UmVuZGVyaW5nKGRvYywgc3RhdGUpO1xuICAgIHJldHVybiBjdHg7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBwb3N0UmVuZGVyaW5nKGRvYzogRG9jdW1lbnQsIHN0YXRlOiBSZW5kZXJpbmdTdGF0ZSkge1xuICAvLyBNb3ZlIGVsZW1lbnRzIGZyb20gc3RhZ2luZyB0byBuZXh0UmVuZGVyXG4gIHN0YXRlLmhvc3RzU3RhZ2luZy5mb3JFYWNoKChlbCkgPT4ge1xuICAgIHN0YXRlLmhvc3RzTmV4dC5hZGQoZWwpO1xuICB9KTtcblxuICAvLyBDbGVhciBzdGFnaW5nXG4gIHN0YXRlLmhvc3RzU3RhZ2luZy5jbGVhcigpO1xuICBzdGF0ZS5ob3N0c1JlbmRlcmluZyA9IHVuZGVmaW5lZDtcbiAgc3RhdGUucmVuZGVyUHJvbWlzZSA9IHVuZGVmaW5lZDtcblxuICBpZiAoc3RhdGUuaG9zdHNOZXh0LnNpemUgPiAwKSB7XG4gICAgc2NoZWR1bGVGcmFtZShkb2MsIHN0YXRlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzb3J0Tm9kZXMoZWxlbWVudHM6IEVsZW1lbnRbXSkge1xuICBlbGVtZW50cy5zb3J0KChhLCBiKSA9PiAoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSAmIDIgPyAxIDogLTEpKTtcbn1cbiJdfQ==","import { assertEqual } from '../assert/assert';\nimport { QError, qError } from '../error/error';\nimport { notifyRender } from '../render/notify-render';\nimport { tryGetInvokeContext } from '../use/use-core';\nimport { logWarn } from '../util/log';\nimport { qDev, qTest } from '../util/qdev';\nimport { debugStringify } from '../util/stringify';\nconst ProxyMapSymbol = Symbol('ProxyMapSymbol');\nexport function getProxyMap(doc) {\n    let map = doc[ProxyMapSymbol];\n    if (!map) {\n        map = doc[ProxyMapSymbol] = new WeakMap();\n    }\n    return map;\n}\nexport function qObject(obj, proxyMap) {\n    assertEqual(unwrapProxy(obj), obj, 'Unexpected proxy at this location');\n    if (obj == null || typeof obj !== 'object') {\n        // TODO(misko): centralize\n        throw new Error(`Q-ERROR: Only objects can be wrapped in 'QObject', got ` + debugStringify(obj));\n    }\n    if (obj.constructor !== Object) {\n        throw new Error(`Q-ERROR: Only objects literals can be wrapped in 'QObject', got ` + debugStringify(obj));\n    }\n    return readWriteProxy(obj, proxyMap);\n}\nexport function _restoreQObject(obj, map, subs) {\n    return readWriteProxy(obj, map, subs);\n}\n/**\n * Creates a proxy which notifies of any writes.\n */\nexport function readWriteProxy(target, proxyMap, subs) {\n    if (!target || typeof target !== 'object')\n        return target;\n    let proxy = proxyMap.get(target);\n    if (proxy)\n        return proxy;\n    proxy = new Proxy(target, new ReadWriteProxyHandler(proxyMap, subs));\n    proxyMap.set(target, proxy);\n    return proxy;\n}\nexport const QOjectTargetSymbol = ':target:';\nexport const QOjectSubsSymbol = ':subs:';\nexport function unwrapProxy(proxy) {\n    if (proxy && typeof proxy == 'object') {\n        const value = proxy[QOjectTargetSymbol];\n        if (value)\n            return value;\n    }\n    return proxy;\n}\nexport function wrap(value, proxyMap) {\n    if (value && typeof value === 'object') {\n        const nakedValue = unwrapProxy(value);\n        if (nakedValue !== value) {\n            // already a proxy return;\n            return value;\n        }\n        if (qDev) {\n            verifySerializable(value);\n        }\n        const proxy = proxyMap.get(value);\n        return proxy ? proxy : readWriteProxy(value, proxyMap);\n    }\n    else {\n        return value;\n    }\n}\nclass ReadWriteProxyHandler {\n    constructor(proxy, subs = new Map()) {\n        this.proxy = proxy;\n        this.subs = subs;\n    }\n    getSub(el) {\n        let sub = this.subs.get(el);\n        if (!sub) {\n            this.subs.set(el, (sub = new Set()));\n        }\n        return sub;\n    }\n    get(target, prop) {\n        if (prop === QOjectTargetSymbol)\n            return target;\n        if (prop === QOjectSubsSymbol)\n            return this.subs;\n        const value = target[prop];\n        if (typeof prop === 'symbol') {\n            return value;\n        }\n        const invokeCtx = tryGetInvokeContext();\n        if (qDev && !invokeCtx && !qTest) {\n            logWarn(`State assigned outside invocation context. Getting prop \"${prop}\" of:`, target);\n        }\n        if (invokeCtx && invokeCtx.subscriptions) {\n            const isArray = Array.isArray(target);\n            const sub = this.getSub(invokeCtx.hostElement);\n            if (!isArray) {\n                sub.add(prop);\n            }\n        }\n        return wrap(value, this.proxy);\n    }\n    set(target, prop, newValue) {\n        if (typeof prop === 'symbol') {\n            target[prop] = newValue;\n            return true;\n        }\n        const unwrappedNewValue = unwrapProxy(newValue);\n        verifySerializable(unwrappedNewValue);\n        const isArray = Array.isArray(target);\n        if (isArray) {\n            target[prop] = unwrappedNewValue;\n            this.subs.forEach((_, el) => notifyRender(el));\n            return true;\n        }\n        const oldValue = target[prop];\n        if (oldValue !== unwrappedNewValue) {\n            target[prop] = unwrappedNewValue;\n            this.subs.forEach((propSets, el) => {\n                if (propSets.has(prop)) {\n                    notifyRender(el);\n                }\n            });\n        }\n        return true;\n    }\n    has(target, property) {\n        if (property === QOjectTargetSymbol)\n            return true;\n        if (property === QOjectSubsSymbol)\n            return true;\n        return Object.prototype.hasOwnProperty.call(target, property);\n    }\n    ownKeys(target) {\n        return Object.getOwnPropertyNames(target);\n    }\n}\nfunction verifySerializable(value) {\n    if (shouldSerialize(value) && typeof value == 'object' && value !== null) {\n        if (Array.isArray(value))\n            return;\n        if (Object.getPrototypeOf(value) !== Object.prototype) {\n            throw qError(QError.TODO, 'Only primitive and object literals can be serialized.');\n        }\n    }\n}\nconst NOSERIALIZE = Symbol('NoSerialize');\nexport function shouldSerialize(obj) {\n    if (obj !== null && (typeof obj == 'object' || typeof obj === 'function')) {\n        const noSerialize = obj[NOSERIALIZE] === true;\n        return !noSerialize;\n    }\n    return true;\n}\n/**\n * @alpha\n */\nexport function noSerialize(input) {\n    input[NOSERIALIZE] = true;\n    return input;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicS1vYmplY3QuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL29iamVjdC9xLW9iamVjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDL0MsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdEQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN0QyxPQUFPLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUMzQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFLbkQsTUFBTSxjQUFjLEdBQUcsTUFBTSxDQUFDLGdCQUFnQixDQUFDLENBQUM7QUFFaEQsTUFBTSxVQUFVLFdBQVcsQ0FBQyxHQUFhO0lBQ3ZDLElBQUksR0FBRyxHQUFJLEdBQVcsQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUN2QyxJQUFJLENBQUMsR0FBRyxFQUFFO1FBQ1IsR0FBRyxHQUFJLEdBQVcsQ0FBQyxjQUFjLENBQUMsR0FBRyxJQUFJLE9BQU8sRUFBRSxDQUFDO0tBQ3BEO0lBQ0QsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDO0FBRUQsTUFBTSxVQUFVLE9BQU8sQ0FBbUIsR0FBTSxFQUFFLFFBQXVCO0lBQ3ZFLFdBQVcsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxFQUFFLG1DQUFtQyxDQUFDLENBQUM7SUFDeEUsSUFBSSxHQUFHLElBQUksSUFBSSxJQUFJLE9BQU8sR0FBRyxLQUFLLFFBQVEsRUFBRTtRQUMxQywwQkFBMEI7UUFDMUIsTUFBTSxJQUFJLEtBQUssQ0FDYix5REFBeUQsR0FBRyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQ2hGLENBQUM7S0FDSDtJQUNELElBQUksR0FBRyxDQUFDLFdBQVcsS0FBSyxNQUFNLEVBQUU7UUFDOUIsTUFBTSxJQUFJLEtBQUssQ0FDYixrRUFBa0UsR0FBRyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQ3pGLENBQUM7S0FDSDtJQUNELE9BQU8sY0FBYyxDQUFDLEdBQXdCLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFDNUQsQ0FBQztBQUVELE1BQU0sVUFBVSxlQUFlLENBQUksR0FBTSxFQUFFLEdBQWtCLEVBQUUsSUFBK0I7SUFDNUYsT0FBTyxjQUFjLENBQUMsR0FBd0IsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDN0QsQ0FBQztBQUVEOztHQUVHO0FBQ0gsTUFBTSxVQUFVLGNBQWMsQ0FDNUIsTUFBUyxFQUNULFFBQXVCLEVBQ3ZCLElBQWdDO0lBRWhDLElBQUksQ0FBQyxNQUFNLElBQUksT0FBTyxNQUFNLEtBQUssUUFBUTtRQUFFLE9BQU8sTUFBTSxDQUFDO0lBQ3pELElBQUksS0FBSyxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDakMsSUFBSSxLQUFLO1FBQUUsT0FBTyxLQUFLLENBQUM7SUFDeEIsS0FBSyxHQUFHLElBQUksS0FBSyxDQUFDLE1BQU0sRUFBRSxJQUFJLHFCQUFxQixDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBYSxDQUFDO0lBQ2pGLFFBQVEsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQzVCLE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHLFVBQVUsQ0FBQztBQUM3QyxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxRQUFRLENBQUM7QUFFekMsTUFBTSxVQUFVLFdBQVcsQ0FBSSxLQUFRO0lBQ3JDLElBQUksS0FBSyxJQUFJLE9BQU8sS0FBSyxJQUFJLFFBQVEsRUFBRTtRQUNyQyxNQUFNLEtBQUssR0FBSSxLQUFhLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUNqRCxJQUFJLEtBQUs7WUFBRSxPQUFPLEtBQUssQ0FBQztLQUN6QjtJQUNELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQUVELE1BQU0sVUFBVSxJQUFJLENBQUksS0FBUSxFQUFFLFFBQXVCO0lBQ3ZELElBQUksS0FBSyxJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsRUFBRTtRQUN0QyxNQUFNLFVBQVUsR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDdEMsSUFBSSxVQUFVLEtBQUssS0FBSyxFQUFFO1lBQ3hCLDBCQUEwQjtZQUMxQixPQUFPLEtBQUssQ0FBQztTQUNkO1FBQ0QsSUFBSSxJQUFJLEVBQUU7WUFDUixrQkFBa0IsQ0FBSSxLQUFLLENBQUMsQ0FBQztTQUM5QjtRQUNELE1BQU0sS0FBSyxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDbEMsT0FBTyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLEtBQVksRUFBRSxRQUFRLENBQUMsQ0FBQztLQUMvRDtTQUFNO1FBQ0wsT0FBTyxLQUFLLENBQUM7S0FDZDtBQUNILENBQUM7QUFJRCxNQUFNLHFCQUFxQjtJQUN6QixZQUFvQixLQUFvQixFQUFVLE9BQU8sSUFBSSxHQUFHLEVBQXdCO1FBQXBFLFVBQUssR0FBTCxLQUFLLENBQWU7UUFBVSxTQUFJLEdBQUosSUFBSSxDQUFrQztJQUFHLENBQUM7SUFFNUYsTUFBTSxDQUFDLEVBQVc7UUFDaEIsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDNUIsSUFBSSxDQUFDLEdBQUcsRUFBRTtZQUNSLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxDQUFDLEdBQUcsR0FBRyxJQUFJLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztTQUN0QztRQUNELE9BQU8sR0FBRyxDQUFDO0lBQ2IsQ0FBQztJQUVELEdBQUcsQ0FBQyxNQUFrQixFQUFFLElBQXFCO1FBQzNDLElBQUksSUFBSSxLQUFLLGtCQUFrQjtZQUFFLE9BQU8sTUFBTSxDQUFDO1FBQy9DLElBQUksSUFBSSxLQUFLLGdCQUFnQjtZQUFFLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQztRQUNoRCxNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDM0IsSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLEVBQUU7WUFDNUIsT0FBTyxLQUFLLENBQUM7U0FDZDtRQUNELE1BQU0sU0FBUyxHQUFHLG1CQUFtQixFQUFFLENBQUM7UUFDeEMsSUFBSSxJQUFJLElBQUksQ0FBQyxTQUFTLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDaEMsT0FBTyxDQUFDLDREQUE0RCxJQUFJLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQztTQUMxRjtRQUNELElBQUksU0FBUyxJQUFJLFNBQVMsQ0FBQyxhQUFhLEVBQUU7WUFDeEMsTUFBTSxPQUFPLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN0QyxNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUMvQyxJQUFJLENBQUMsT0FBTyxFQUFFO2dCQUNaLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDZjtTQUNGO1FBQ0QsT0FBTyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBRUQsR0FBRyxDQUFDLE1BQWtCLEVBQUUsSUFBcUIsRUFBRSxRQUFhO1FBQzFELElBQUksT0FBTyxJQUFJLEtBQUssUUFBUSxFQUFFO1lBQzVCLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxRQUFRLENBQUM7WUFDeEIsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELE1BQU0saUJBQWlCLEdBQUcsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2hELGtCQUFrQixDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDdEMsTUFBTSxPQUFPLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN0QyxJQUFJLE9BQU8sRUFBRTtZQUNYLE1BQU0sQ0FBQyxJQUFXLENBQUMsR0FBRyxpQkFBaUIsQ0FBQztZQUN4QyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQy9DLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFDRCxNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUIsSUFBSSxRQUFRLEtBQUssaUJBQWlCLEVBQUU7WUFDbEMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLGlCQUFpQixDQUFDO1lBQ2pDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUUsRUFBRSxFQUFFO2dCQUNqQyxJQUFJLFFBQVEsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUU7b0JBQ3RCLFlBQVksQ0FBQyxFQUFFLENBQUMsQ0FBQztpQkFDbEI7WUFDSCxDQUFDLENBQUMsQ0FBQztTQUNKO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsR0FBRyxDQUFDLE1BQWtCLEVBQUUsUUFBeUI7UUFDL0MsSUFBSSxRQUFRLEtBQUssa0JBQWtCO1lBQUUsT0FBTyxJQUFJLENBQUM7UUFDakQsSUFBSSxRQUFRLEtBQUssZ0JBQWdCO1lBQUUsT0FBTyxJQUFJLENBQUM7UUFFL0MsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ2hFLENBQUM7SUFFRCxPQUFPLENBQUMsTUFBa0I7UUFDeEIsT0FBTyxNQUFNLENBQUMsbUJBQW1CLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDNUMsQ0FBQztDQUNGO0FBRUQsU0FBUyxrQkFBa0IsQ0FBSSxLQUFRO0lBQ3JDLElBQUksZUFBZSxDQUFDLEtBQUssQ0FBQyxJQUFJLE9BQU8sS0FBSyxJQUFJLFFBQVEsSUFBSSxLQUFLLEtBQUssSUFBSSxFQUFFO1FBQ3hFLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7WUFBRSxPQUFPO1FBQ2pDLElBQUksTUFBTSxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsS0FBSyxNQUFNLENBQUMsU0FBUyxFQUFFO1lBQ3JELE1BQU0sTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsdURBQXVELENBQUMsQ0FBQztTQUNwRjtLQUNGO0FBQ0gsQ0FBQztBQUVELE1BQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUUxQyxNQUFNLFVBQVUsZUFBZSxDQUFDLEdBQVE7SUFDdEMsSUFBSSxHQUFHLEtBQUssSUFBSSxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksUUFBUSxJQUFJLE9BQU8sR0FBRyxLQUFLLFVBQVUsQ0FBQyxFQUFFO1FBQ3pFLE1BQU0sV0FBVyxHQUFJLEdBQVcsQ0FBQyxXQUFXLENBQUMsS0FBSyxJQUFJLENBQUM7UUFDdkQsT0FBTyxDQUFDLFdBQVcsQ0FBQztLQUNyQjtJQUNELE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQztBQU9EOztHQUVHO0FBQ0gsTUFBTSxVQUFVLFdBQVcsQ0FBZSxLQUFRO0lBQy9DLEtBQWEsQ0FBQyxXQUFXLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDbkMsT0FBTyxLQUFZLENBQUM7QUFDdEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzc2VydEVxdWFsIH0gZnJvbSAnLi4vYXNzZXJ0L2Fzc2VydCc7XG5pbXBvcnQgeyBRRXJyb3IsIHFFcnJvciB9IGZyb20gJy4uL2Vycm9yL2Vycm9yJztcbmltcG9ydCB7IG5vdGlmeVJlbmRlciB9IGZyb20gJy4uL3JlbmRlci9ub3RpZnktcmVuZGVyJztcbmltcG9ydCB7IHRyeUdldEludm9rZUNvbnRleHQgfSBmcm9tICcuLi91c2UvdXNlLWNvcmUnO1xuaW1wb3J0IHsgbG9nV2FybiB9IGZyb20gJy4uL3V0aWwvbG9nJztcbmltcG9ydCB7IHFEZXYsIHFUZXN0IH0gZnJvbSAnLi4vdXRpbC9xZGV2JztcbmltcG9ydCB7IGRlYnVnU3RyaW5naWZ5IH0gZnJvbSAnLi4vdXRpbC9zdHJpbmdpZnknO1xuXG5leHBvcnQgdHlwZSBPYmpUb1Byb3h5TWFwID0gV2Vha01hcDxhbnksIGFueT47XG5leHBvcnQgdHlwZSBRT2JqZWN0PFQgZXh0ZW5kcyB7fT4gPSBUICYgeyBfX2JyYW5kX186ICdRT2JqZWN0JyB9O1xuXG5jb25zdCBQcm94eU1hcFN5bWJvbCA9IFN5bWJvbCgnUHJveHlNYXBTeW1ib2wnKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFByb3h5TWFwKGRvYzogRG9jdW1lbnQpOiBPYmpUb1Byb3h5TWFwIHtcbiAgbGV0IG1hcCA9IChkb2MgYXMgYW55KVtQcm94eU1hcFN5bWJvbF07XG4gIGlmICghbWFwKSB7XG4gICAgbWFwID0gKGRvYyBhcyBhbnkpW1Byb3h5TWFwU3ltYm9sXSA9IG5ldyBXZWFrTWFwKCk7XG4gIH1cbiAgcmV0dXJuIG1hcDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHFPYmplY3Q8VCBleHRlbmRzIE9iamVjdD4ob2JqOiBULCBwcm94eU1hcDogT2JqVG9Qcm94eU1hcCk6IFQge1xuICBhc3NlcnRFcXVhbCh1bndyYXBQcm94eShvYmopLCBvYmosICdVbmV4cGVjdGVkIHByb3h5IGF0IHRoaXMgbG9jYXRpb24nKTtcbiAgaWYgKG9iaiA9PSBudWxsIHx8IHR5cGVvZiBvYmogIT09ICdvYmplY3QnKSB7XG4gICAgLy8gVE9ETyhtaXNrbyk6IGNlbnRyYWxpemVcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgUS1FUlJPUjogT25seSBvYmplY3RzIGNhbiBiZSB3cmFwcGVkIGluICdRT2JqZWN0JywgZ290IGAgKyBkZWJ1Z1N0cmluZ2lmeShvYmopXG4gICAgKTtcbiAgfVxuICBpZiAob2JqLmNvbnN0cnVjdG9yICE9PSBPYmplY3QpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgUS1FUlJPUjogT25seSBvYmplY3RzIGxpdGVyYWxzIGNhbiBiZSB3cmFwcGVkIGluICdRT2JqZWN0JywgZ290IGAgKyBkZWJ1Z1N0cmluZ2lmeShvYmopXG4gICAgKTtcbiAgfVxuICByZXR1cm4gcmVhZFdyaXRlUHJveHkob2JqIGFzIGFueSBhcyBRT2JqZWN0PFQ+LCBwcm94eU1hcCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBfcmVzdG9yZVFPYmplY3Q8VD4ob2JqOiBULCBtYXA6IE9ialRvUHJveHlNYXAsIHN1YnM6IE1hcDxFbGVtZW50LCBTZXQ8c3RyaW5nPj4pOiBUIHtcbiAgcmV0dXJuIHJlYWRXcml0ZVByb3h5KG9iaiBhcyBhbnkgYXMgUU9iamVjdDxUPiwgbWFwLCBzdWJzKTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgcHJveHkgd2hpY2ggbm90aWZpZXMgb2YgYW55IHdyaXRlcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlYWRXcml0ZVByb3h5PFQgZXh0ZW5kcyBvYmplY3Q+KFxuICB0YXJnZXQ6IFQsXG4gIHByb3h5TWFwOiBPYmpUb1Byb3h5TWFwLFxuICBzdWJzPzogTWFwPEVsZW1lbnQsIFNldDxzdHJpbmc+PlxuKTogVCB7XG4gIGlmICghdGFyZ2V0IHx8IHR5cGVvZiB0YXJnZXQgIT09ICdvYmplY3QnKSByZXR1cm4gdGFyZ2V0O1xuICBsZXQgcHJveHkgPSBwcm94eU1hcC5nZXQodGFyZ2V0KTtcbiAgaWYgKHByb3h5KSByZXR1cm4gcHJveHk7XG4gIHByb3h5ID0gbmV3IFByb3h5KHRhcmdldCwgbmV3IFJlYWRXcml0ZVByb3h5SGFuZGxlcihwcm94eU1hcCwgc3VicykpIGFzIGFueSBhcyBUO1xuICBwcm94eU1hcC5zZXQodGFyZ2V0LCBwcm94eSk7XG4gIHJldHVybiBwcm94eTtcbn1cblxuZXhwb3J0IGNvbnN0IFFPamVjdFRhcmdldFN5bWJvbCA9ICc6dGFyZ2V0Oic7XG5leHBvcnQgY29uc3QgUU9qZWN0U3Vic1N5bWJvbCA9ICc6c3ViczonO1xuXG5leHBvcnQgZnVuY3Rpb24gdW53cmFwUHJveHk8VD4ocHJveHk6IFQpOiBUIHtcbiAgaWYgKHByb3h5ICYmIHR5cGVvZiBwcm94eSA9PSAnb2JqZWN0Jykge1xuICAgIGNvbnN0IHZhbHVlID0gKHByb3h5IGFzIGFueSlbUU9qZWN0VGFyZ2V0U3ltYm9sXTtcbiAgICBpZiAodmFsdWUpIHJldHVybiB2YWx1ZTtcbiAgfVxuICByZXR1cm4gcHJveHk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3cmFwPFQ+KHZhbHVlOiBULCBwcm94eU1hcDogT2JqVG9Qcm94eU1hcCk6IFQge1xuICBpZiAodmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jykge1xuICAgIGNvbnN0IG5ha2VkVmFsdWUgPSB1bndyYXBQcm94eSh2YWx1ZSk7XG4gICAgaWYgKG5ha2VkVmFsdWUgIT09IHZhbHVlKSB7XG4gICAgICAvLyBhbHJlYWR5IGEgcHJveHkgcmV0dXJuO1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICBpZiAocURldikge1xuICAgICAgdmVyaWZ5U2VyaWFsaXphYmxlPFQ+KHZhbHVlKTtcbiAgICB9XG4gICAgY29uc3QgcHJveHkgPSBwcm94eU1hcC5nZXQodmFsdWUpO1xuICAgIHJldHVybiBwcm94eSA/IHByb3h5IDogcmVhZFdyaXRlUHJveHkodmFsdWUgYXMgYW55LCBwcm94eU1hcCk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG59XG5cbnR5cGUgVGFyZ2V0VHlwZSA9IFJlY29yZDxzdHJpbmcgfCBzeW1ib2wsIGFueT47XG5cbmNsYXNzIFJlYWRXcml0ZVByb3h5SGFuZGxlciBpbXBsZW1lbnRzIFByb3h5SGFuZGxlcjxUYXJnZXRUeXBlPiB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcHJveHk6IE9ialRvUHJveHlNYXAsIHByaXZhdGUgc3VicyA9IG5ldyBNYXA8RWxlbWVudCwgU2V0PHN0cmluZz4+KCkpIHt9XG5cbiAgZ2V0U3ViKGVsOiBFbGVtZW50KSB7XG4gICAgbGV0IHN1YiA9IHRoaXMuc3Vicy5nZXQoZWwpO1xuICAgIGlmICghc3ViKSB7XG4gICAgICB0aGlzLnN1YnMuc2V0KGVsLCAoc3ViID0gbmV3IFNldCgpKSk7XG4gICAgfVxuICAgIHJldHVybiBzdWI7XG4gIH1cblxuICBnZXQodGFyZ2V0OiBUYXJnZXRUeXBlLCBwcm9wOiBzdHJpbmcgfCBzeW1ib2wpOiBhbnkge1xuICAgIGlmIChwcm9wID09PSBRT2plY3RUYXJnZXRTeW1ib2wpIHJldHVybiB0YXJnZXQ7XG4gICAgaWYgKHByb3AgPT09IFFPamVjdFN1YnNTeW1ib2wpIHJldHVybiB0aGlzLnN1YnM7XG4gICAgY29uc3QgdmFsdWUgPSB0YXJnZXRbcHJvcF07XG4gICAgaWYgKHR5cGVvZiBwcm9wID09PSAnc3ltYm9sJykge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICBjb25zdCBpbnZva2VDdHggPSB0cnlHZXRJbnZva2VDb250ZXh0KCk7XG4gICAgaWYgKHFEZXYgJiYgIWludm9rZUN0eCAmJiAhcVRlc3QpIHtcbiAgICAgIGxvZ1dhcm4oYFN0YXRlIGFzc2lnbmVkIG91dHNpZGUgaW52b2NhdGlvbiBjb250ZXh0LiBHZXR0aW5nIHByb3AgXCIke3Byb3B9XCIgb2Y6YCwgdGFyZ2V0KTtcbiAgICB9XG4gICAgaWYgKGludm9rZUN0eCAmJiBpbnZva2VDdHguc3Vic2NyaXB0aW9ucykge1xuICAgICAgY29uc3QgaXNBcnJheSA9IEFycmF5LmlzQXJyYXkodGFyZ2V0KTtcbiAgICAgIGNvbnN0IHN1YiA9IHRoaXMuZ2V0U3ViKGludm9rZUN0eC5ob3N0RWxlbWVudCk7XG4gICAgICBpZiAoIWlzQXJyYXkpIHtcbiAgICAgICAgc3ViLmFkZChwcm9wKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHdyYXAodmFsdWUsIHRoaXMucHJveHkpO1xuICB9XG5cbiAgc2V0KHRhcmdldDogVGFyZ2V0VHlwZSwgcHJvcDogc3RyaW5nIHwgc3ltYm9sLCBuZXdWYWx1ZTogYW55KTogYm9vbGVhbiB7XG4gICAgaWYgKHR5cGVvZiBwcm9wID09PSAnc3ltYm9sJykge1xuICAgICAgdGFyZ2V0W3Byb3BdID0gbmV3VmFsdWU7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgY29uc3QgdW53cmFwcGVkTmV3VmFsdWUgPSB1bndyYXBQcm94eShuZXdWYWx1ZSk7XG4gICAgdmVyaWZ5U2VyaWFsaXphYmxlKHVud3JhcHBlZE5ld1ZhbHVlKTtcbiAgICBjb25zdCBpc0FycmF5ID0gQXJyYXkuaXNBcnJheSh0YXJnZXQpO1xuICAgIGlmIChpc0FycmF5KSB7XG4gICAgICB0YXJnZXRbcHJvcCBhcyBhbnldID0gdW53cmFwcGVkTmV3VmFsdWU7XG4gICAgICB0aGlzLnN1YnMuZm9yRWFjaCgoXywgZWwpID0+IG5vdGlmeVJlbmRlcihlbCkpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGNvbnN0IG9sZFZhbHVlID0gdGFyZ2V0W3Byb3BdO1xuICAgIGlmIChvbGRWYWx1ZSAhPT0gdW53cmFwcGVkTmV3VmFsdWUpIHtcbiAgICAgIHRhcmdldFtwcm9wXSA9IHVud3JhcHBlZE5ld1ZhbHVlO1xuICAgICAgdGhpcy5zdWJzLmZvckVhY2goKHByb3BTZXRzLCBlbCkgPT4ge1xuICAgICAgICBpZiAocHJvcFNldHMuaGFzKHByb3ApKSB7XG4gICAgICAgICAgbm90aWZ5UmVuZGVyKGVsKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaGFzKHRhcmdldDogVGFyZ2V0VHlwZSwgcHJvcGVydHk6IHN0cmluZyB8IHN5bWJvbCkge1xuICAgIGlmIChwcm9wZXJ0eSA9PT0gUU9qZWN0VGFyZ2V0U3ltYm9sKSByZXR1cm4gdHJ1ZTtcbiAgICBpZiAocHJvcGVydHkgPT09IFFPamVjdFN1YnNTeW1ib2wpIHJldHVybiB0cnVlO1xuXG4gICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0YXJnZXQsIHByb3BlcnR5KTtcbiAgfVxuXG4gIG93bktleXModGFyZ2V0OiBUYXJnZXRUeXBlKTogQXJyYXlMaWtlPHN0cmluZyB8IHN5bWJvbD4ge1xuICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0YXJnZXQpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHZlcmlmeVNlcmlhbGl6YWJsZTxUPih2YWx1ZTogVCkge1xuICBpZiAoc2hvdWxkU2VyaWFsaXplKHZhbHVlKSAmJiB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCcgJiYgdmFsdWUgIT09IG51bGwpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHJldHVybjtcbiAgICBpZiAoT2JqZWN0LmdldFByb3RvdHlwZU9mKHZhbHVlKSAhPT0gT2JqZWN0LnByb3RvdHlwZSkge1xuICAgICAgdGhyb3cgcUVycm9yKFFFcnJvci5UT0RPLCAnT25seSBwcmltaXRpdmUgYW5kIG9iamVjdCBsaXRlcmFscyBjYW4gYmUgc2VyaWFsaXplZC4nKTtcbiAgICB9XG4gIH1cbn1cblxuY29uc3QgTk9TRVJJQUxJWkUgPSBTeW1ib2woJ05vU2VyaWFsaXplJyk7XG5cbmV4cG9ydCBmdW5jdGlvbiBzaG91bGRTZXJpYWxpemUob2JqOiBhbnkpOiBib29sZWFuIHtcbiAgaWYgKG9iaiAhPT0gbnVsbCAmJiAodHlwZW9mIG9iaiA9PSAnb2JqZWN0JyB8fCB0eXBlb2Ygb2JqID09PSAnZnVuY3Rpb24nKSkge1xuICAgIGNvbnN0IG5vU2VyaWFsaXplID0gKG9iaiBhcyBhbnkpW05PU0VSSUFMSVpFXSA9PT0gdHJ1ZTtcbiAgICByZXR1cm4gIW5vU2VyaWFsaXplO1xuICB9XG4gIHJldHVybiB0cnVlO1xufVxuXG4vKipcbiAqIEBhbHBoYVxuICovXG5leHBvcnQgdHlwZSBOb1NlcmlhbGl6ZTxUPiA9IChUICYgeyBbTk9TRVJJQUxJWkVdOiB0cnVlIH0pIHwgdW5kZWZpbmVkO1xuXG4vKipcbiAqIEBhbHBoYVxuICovXG5leHBvcnQgZnVuY3Rpb24gbm9TZXJpYWxpemU8VCBleHRlbmRzIHt9PihpbnB1dDogVCk6IE5vU2VyaWFsaXplPFQ+IHtcbiAgKGlucHV0IGFzIGFueSlbTk9TRVJJQUxJWkVdID0gdHJ1ZTtcbiAgcmV0dXJuIGlucHV0IGFzIGFueTtcbn1cbiJdfQ==","import { QObjAttr } from '../util/markers';\nexport function newQObjectMap(element) {\n    const array = [];\n    let added = element.hasAttribute(QObjAttr);\n    return {\n        array,\n        get(index) {\n            return array[index];\n        },\n        indexOf(obj) {\n            const index = array.indexOf(obj);\n            return index === -1 ? undefined : index;\n        },\n        add(object) {\n            const index = array.indexOf(object);\n            if (index === -1) {\n                array.push(object);\n                if (!added) {\n                    element.setAttribute(QObjAttr, '');\n                    added = true;\n                }\n                return array.length - 1;\n            }\n            return index;\n        },\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvcHMtb2JqLW1hcC5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvcHJvcHMvcHJvcHMtb2JqLW1hcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFTM0MsTUFBTSxVQUFVLGFBQWEsQ0FBQyxPQUFnQjtJQUM1QyxNQUFNLEtBQUssR0FBbUIsRUFBRSxDQUFDO0lBQ2pDLElBQUksS0FBSyxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUM7SUFFM0MsT0FBTztRQUNMLEtBQUs7UUFDTCxHQUFHLENBQUMsS0FBYTtZQUNmLE9BQU8sS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3RCLENBQUM7UUFDRCxPQUFPLENBQUMsR0FBVztZQUNqQixNQUFNLEtBQUssR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ2pDLE9BQU8sS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztRQUMxQyxDQUFDO1FBQ0QsR0FBRyxDQUFDLE1BQW9CO1lBQ3RCLE1BQU0sS0FBSyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDcEMsSUFBSSxLQUFLLEtBQUssQ0FBQyxDQUFDLEVBQUU7Z0JBQ2hCLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7Z0JBQ25CLElBQUksQ0FBQyxLQUFLLEVBQUU7b0JBQ1YsT0FBTyxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUM7b0JBQ25DLEtBQUssR0FBRyxJQUFJLENBQUM7aUJBQ2Q7Z0JBQ0QsT0FBTyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQzthQUN6QjtZQUNELE9BQU8sS0FBSyxDQUFDO1FBQ2YsQ0FBQztLQUNZLENBQUM7QUFDbEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgUU9iamVjdCB9IGZyb20gJy4uL29iamVjdC9xLW9iamVjdCc7XG5pbXBvcnQgeyBRT2JqQXR0ciB9IGZyb20gJy4uL3V0aWwvbWFya2Vycyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUU9iamVjdE1hcCB7XG4gIGFkZChxT2JqZWN0OiBRT2JqZWN0PGFueT4pOiBudW1iZXI7XG4gIGdldChpbmRleDogbnVtYmVyKTogUU9iamVjdDxhbnk+IHwgdW5kZWZpbmVkO1xuICBpbmRleE9mKG9iamVjdDogUU9iamVjdDxhbnk+KTogbnVtYmVyIHwgdW5kZWZpbmVkO1xuICBhcnJheTogUU9iamVjdDxhbnk+W107XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBuZXdRT2JqZWN0TWFwKGVsZW1lbnQ6IEVsZW1lbnQpOiBRT2JqZWN0TWFwIHtcbiAgY29uc3QgYXJyYXk6IFFPYmplY3Q8YW55PltdID0gW107XG4gIGxldCBhZGRlZCA9IGVsZW1lbnQuaGFzQXR0cmlidXRlKFFPYmpBdHRyKTtcblxuICByZXR1cm4ge1xuICAgIGFycmF5LFxuICAgIGdldChpbmRleDogbnVtYmVyKTogUU9iamVjdDxhbnk+IHwgdW5kZWZpbmVkIHtcbiAgICAgIHJldHVybiBhcnJheVtpbmRleF07XG4gICAgfSxcbiAgICBpbmRleE9mKG9iajogc3RyaW5nKTogbnVtYmVyIHwgdW5kZWZpbmVkIHtcbiAgICAgIGNvbnN0IGluZGV4ID0gYXJyYXkuaW5kZXhPZihvYmopO1xuICAgICAgcmV0dXJuIGluZGV4ID09PSAtMSA/IHVuZGVmaW5lZCA6IGluZGV4O1xuICAgIH0sXG4gICAgYWRkKG9iamVjdDogUU9iamVjdDxhbnk+KSB7XG4gICAgICBjb25zdCBpbmRleCA9IGFycmF5LmluZGV4T2Yob2JqZWN0KTtcbiAgICAgIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICAgICAgYXJyYXkucHVzaChvYmplY3QpO1xuICAgICAgICBpZiAoIWFkZGVkKSB7XG4gICAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoUU9iakF0dHIsICcnKTtcbiAgICAgICAgICBhZGRlZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFycmF5Lmxlbmd0aCAtIDE7XG4gICAgICB9XG4gICAgICByZXR1cm4gaW5kZXg7XG4gICAgfSxcbiAgfSBhcyBRT2JqZWN0TWFwO1xufVxuIl19","import { QError, qError } from '../error/error';\nimport { getProxyMap, readWriteProxy } from '../object/q-object';\nimport { resume } from '../object/store';\nimport { getDocument } from '../util/dom';\nimport { isDocument } from '../util/element';\nimport { logWarn } from '../util/log';\nimport { newQObjectMap } from './props-obj-map';\nimport { qPropWriteQRL, qPropReadQRL } from './props-on';\nError.stackTraceLimit = 9999;\nconst Q_IS_RESUMED = '__isResumed__';\nconst Q_CTX = '__ctx__';\nexport function resumeIfNeeded(elm) {\n    var _a;\n    const doc = isDocument(elm) ? elm : getDocument(elm);\n    const root = isDocument(elm) ? elm : (_a = elm.closest('[q\\\\:root]')) !== null && _a !== void 0 ? _a : doc;\n    if (!root) {\n        logWarn('cant find qwik app root');\n        return;\n    }\n    const isHydrated = root[Q_IS_RESUMED];\n    if (!isHydrated) {\n        root[Q_IS_RESUMED] = true;\n        resume(root);\n    }\n}\nexport function getContext(element) {\n    let ctx = element[Q_CTX];\n    if (!ctx) {\n        const cache = new Map();\n        element[Q_CTX] = ctx = {\n            element,\n            cache,\n            refMap: newQObjectMap(element),\n            dirty: false,\n            props: undefined,\n            events: undefined,\n            component: undefined,\n        };\n    }\n    return ctx;\n}\nexport function setEvent(rctx, ctx, prop, value) {\n    qPropWriteQRL(rctx, ctx, prop, value);\n}\nexport function getEvent(ctx, prop) {\n    return qPropReadQRL(ctx, prop);\n}\nexport function getProps(ctx) {\n    if (!ctx.props) {\n        ctx.props = readWriteProxy({}, getProxyMap(getDocument(ctx.element)));\n        ctx.refMap.add(ctx.props);\n    }\n    return ctx.props;\n}\nexport function getEvents(ctx) {\n    let events = ctx.events;\n    if (!events) {\n        events = ctx.events = {};\n        ctx.refMap.add(ctx.events);\n    }\n    return events;\n}\n/**\n * Turn an `Array` or object literal into a `class` or `style`\n *\n * @param obj `string`, `Array` or object literal\n * @param isClass `true` if expecting `class` output\n * @returns `string`\n */\nexport function stringifyClassOrStyle(obj, isClass) {\n    if (obj == null)\n        return '';\n    if (typeof obj == 'object') {\n        let text = '';\n        let sep = '';\n        if (Array.isArray(obj)) {\n            if (!isClass) {\n                throw qError(QError.Render_unsupportedFormat_obj_attr, obj, 'style');\n            }\n            for (let i = 0; i < obj.length; i++) {\n                text += sep + obj[i];\n                sep = ' ';\n            }\n        }\n        else {\n            for (const key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    const value = obj[key];\n                    text += isClass ? (value ? sep + key : '') : sep + key + ':' + value;\n                    sep = isClass ? ' ' : ';';\n                }\n            }\n        }\n        return text;\n    }\n    return String(obj);\n}\n//# sourceMappingURL=data:application/json;base64,","import { qrlImport } from '../import/qrl.public';\nimport { getContext, getEvent } from '../props/props';\nimport { newInvokeContext, useInvoke } from '../use/use-core';\nimport { logError } from '../util/log';\nconst ON_WATCH = 'on:qWatch';\nexport function registerOnWatch(element, props, watchFnQrl) {\n    props[ON_WATCH] = watchFnQrl;\n    invokeWatchFn(element, watchFnQrl);\n}\nconst cleanupFnMap = new Map();\nexport async function invokeWatchFn(element, watchFnQrl) {\n    const watchFn = await qrlImport(element, watchFnQrl);\n    const previousCleanupFn = cleanupFnMap.get(watchFn);\n    cleanupFnMap.delete(watchFn);\n    if (isCleanupFn(previousCleanupFn)) {\n        try {\n            previousCleanupFn();\n        }\n        catch (e) {\n            // TODO(misko): Centralize error handling\n            logError(e);\n        }\n    }\n    throw new Error('TO IMPLEMENT');\n}\nfunction isCleanupFn(value) {\n    return typeof value === 'function';\n}\nexport async function notifyWatchers(element, qObjectId, propName) {\n    const ctx = getContext(element);\n    const onWatch = getEvent(ctx, 'on:qWatch');\n    if (onWatch) {\n        try {\n            // TODO\n            const context = newInvokeContext(element, element);\n            context.qrlGuard = (qrl) => {\n                var _a;\n                const props = (_a = qrl.guard) === null || _a === void 0 ? void 0 : _a.get(qObjectId);\n                return props ? props.indexOf(propName) !== -1 : false;\n            };\n            await useInvoke(context, onWatch, qObjectId, propName);\n        }\n        catch (e) {\n            logError(e);\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2F0Y2guanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3dhdGNoL3dhdGNoLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsVUFBVSxFQUFFLFFBQVEsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXRELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxTQUFTLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBT3ZDLE1BQU0sUUFBUSxHQUFHLFdBQVcsQ0FBQztBQUU3QixNQUFNLFVBQVUsZUFBZSxDQUFDLE9BQWdCLEVBQUUsS0FBWSxFQUFFLFVBQWdDO0lBQzlGLEtBQUssQ0FBQyxRQUFRLENBQUMsR0FBRyxVQUFVLENBQUM7SUFDN0IsYUFBYSxDQUFDLE9BQU8sRUFBRSxVQUFVLENBQUMsQ0FBQztBQUNyQyxDQUFDO0FBRUQsTUFBTSxZQUFZLEdBQUcsSUFBSSxHQUFHLEVBQXNCLENBQUM7QUFFbkQsTUFBTSxDQUFDLEtBQUssVUFBVSxhQUFhLENBQUMsT0FBZ0IsRUFBRSxVQUFnQztJQUNwRixNQUFNLE9BQU8sR0FBRyxNQUFNLFNBQVMsQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFDckQsTUFBTSxpQkFBaUIsR0FBRyxZQUFZLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3BELFlBQVksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDN0IsSUFBSSxXQUFXLENBQUMsaUJBQWlCLENBQUMsRUFBRTtRQUNsQyxJQUFJO1lBQ0YsaUJBQWlCLEVBQUUsQ0FBQztTQUNyQjtRQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ1YseUNBQXlDO1lBQ3pDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNiO0tBQ0Y7SUFDRCxNQUFNLElBQUksS0FBSyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBQ2xDLENBQUM7QUFDRCxTQUFTLFdBQVcsQ0FBQyxLQUFVO0lBQzdCLE9BQU8sT0FBTyxLQUFLLEtBQUssVUFBVSxDQUFDO0FBQ3JDLENBQUM7QUFFRCxNQUFNLENBQUMsS0FBSyxVQUFVLGNBQWMsQ0FDbEMsT0FBZ0IsRUFDaEIsU0FBaUIsRUFDakIsUUFBZ0I7SUFFaEIsTUFBTSxHQUFHLEdBQUcsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2hDLE1BQU0sT0FBTyxHQUEwQixRQUFRLENBQUMsR0FBRyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ2xFLElBQUksT0FBTyxFQUFFO1FBQ1gsSUFBSTtZQUNGLE9BQU87WUFDUCxNQUFNLE9BQU8sR0FBRyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7WUFDbkQsT0FBTyxDQUFDLFFBQVEsR0FBRyxDQUFDLEdBQWdCLEVBQUUsRUFBRTs7Z0JBQ3RDLE1BQU0sS0FBSyxHQUFHLE1BQUEsR0FBRyxDQUFDLEtBQUssMENBQUUsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO2dCQUN4QyxPQUFPLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1lBQ3hELENBQUMsQ0FBQztZQUNGLE1BQU0sU0FBUyxDQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1NBQ3hEO1FBQUMsT0FBTyxDQUFDLEVBQUU7WUFDVixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDYjtLQUNGO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgUVJMSW50ZXJuYWwgfSBmcm9tICcuLi9pbXBvcnQvcXJsLWNsYXNzJztcbmltcG9ydCB7IHFybEltcG9ydCB9IGZyb20gJy4uL2ltcG9ydC9xcmwucHVibGljJztcbmltcG9ydCB7IGdldENvbnRleHQsIGdldEV2ZW50IH0gZnJvbSAnLi4vcHJvcHMvcHJvcHMnO1xuaW1wb3J0IHR5cGUgeyBQcm9wcyB9IGZyb20gJy4uL3Byb3BzL3Byb3BzLnB1YmxpYyc7XG5pbXBvcnQgeyBuZXdJbnZva2VDb250ZXh0LCB1c2VJbnZva2UgfSBmcm9tICcuLi91c2UvdXNlLWNvcmUnO1xuaW1wb3J0IHsgbG9nRXJyb3IgfSBmcm9tICcuLi91dGlsL2xvZyc7XG5pbXBvcnQgdHlwZSB7IE9ic2VydmVyIH0gZnJvbSAnLi93YXRjaC5wdWJsaWMnO1xuXG5leHBvcnQgdHlwZSBDbGVhbnVwRm4gPSAoKSA9PiB2b2lkO1xuZXhwb3J0IHR5cGUgV2F0Y2hGbiA9IChvYnM6IE9ic2VydmVyKSA9PiB1bmtub3duIHwgQ2xlYW51cEZuO1xuZXhwb3J0IHR5cGUgT25XYXRjaEhhbmRsZXIgPSAocU9iamVjdElkOiBzdHJpbmcsIHByb3BOYW1lOiBzdHJpbmcpID0+IFByb21pc2U8dW5rbm93bj47XG5cbmNvbnN0IE9OX1dBVENIID0gJ29uOnFXYXRjaCc7XG5cbmV4cG9ydCBmdW5jdGlvbiByZWdpc3Rlck9uV2F0Y2goZWxlbWVudDogRWxlbWVudCwgcHJvcHM6IFByb3BzLCB3YXRjaEZuUXJsOiBRUkxJbnRlcm5hbDxXYXRjaEZuPikge1xuICBwcm9wc1tPTl9XQVRDSF0gPSB3YXRjaEZuUXJsO1xuICBpbnZva2VXYXRjaEZuKGVsZW1lbnQsIHdhdGNoRm5RcmwpO1xufVxuXG5jb25zdCBjbGVhbnVwRm5NYXAgPSBuZXcgTWFwPFdhdGNoRm4sIENsZWFudXBGbj4oKTtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGludm9rZVdhdGNoRm4oZWxlbWVudDogRWxlbWVudCwgd2F0Y2hGblFybDogUVJMSW50ZXJuYWw8V2F0Y2hGbj4pIHtcbiAgY29uc3Qgd2F0Y2hGbiA9IGF3YWl0IHFybEltcG9ydChlbGVtZW50LCB3YXRjaEZuUXJsKTtcbiAgY29uc3QgcHJldmlvdXNDbGVhbnVwRm4gPSBjbGVhbnVwRm5NYXAuZ2V0KHdhdGNoRm4pO1xuICBjbGVhbnVwRm5NYXAuZGVsZXRlKHdhdGNoRm4pO1xuICBpZiAoaXNDbGVhbnVwRm4ocHJldmlvdXNDbGVhbnVwRm4pKSB7XG4gICAgdHJ5IHtcbiAgICAgIHByZXZpb3VzQ2xlYW51cEZuKCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgLy8gVE9ETyhtaXNrbyk6IENlbnRyYWxpemUgZXJyb3IgaGFuZGxpbmdcbiAgICAgIGxvZ0Vycm9yKGUpO1xuICAgIH1cbiAgfVxuICB0aHJvdyBuZXcgRXJyb3IoJ1RPIElNUExFTUVOVCcpO1xufVxuZnVuY3Rpb24gaXNDbGVhbnVwRm4odmFsdWU6IGFueSk6IHZhbHVlIGlzIENsZWFudXBGbiB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdmdW5jdGlvbic7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBub3RpZnlXYXRjaGVycyhcbiAgZWxlbWVudDogRWxlbWVudCxcbiAgcU9iamVjdElkOiBzdHJpbmcsXG4gIHByb3BOYW1lOiBzdHJpbmdcbik6IFByb21pc2U8dm9pZD4ge1xuICBjb25zdCBjdHggPSBnZXRDb250ZXh0KGVsZW1lbnQpO1xuICBjb25zdCBvbldhdGNoOiBudWxsIHwgT25XYXRjaEhhbmRsZXIgPSBnZXRFdmVudChjdHgsICdvbjpxV2F0Y2gnKTtcbiAgaWYgKG9uV2F0Y2gpIHtcbiAgICB0cnkge1xuICAgICAgLy8gVE9ET1xuICAgICAgY29uc3QgY29udGV4dCA9IG5ld0ludm9rZUNvbnRleHQoZWxlbWVudCwgZWxlbWVudCk7XG4gICAgICBjb250ZXh0LnFybEd1YXJkID0gKHFybDogUVJMSW50ZXJuYWwpID0+IHtcbiAgICAgICAgY29uc3QgcHJvcHMgPSBxcmwuZ3VhcmQ/LmdldChxT2JqZWN0SWQpO1xuICAgICAgICByZXR1cm4gcHJvcHMgPyBwcm9wcy5pbmRleE9mKHByb3BOYW1lKSAhPT0gLTEgOiBmYWxzZTtcbiAgICAgIH07XG4gICAgICBhd2FpdCB1c2VJbnZva2UoY29udGV4dCwgb25XYXRjaCwgcU9iamVjdElkLCBwcm9wTmFtZSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgbG9nRXJyb3IoZSk7XG4gICAgfVxuICB9XG59XG4iXX0=","export const emitEvent = (el, eventName, detail, bubbles) => {\n    if (typeof CustomEvent === 'function') {\n        el.dispatchEvent(new CustomEvent(eventName, {\n            detail,\n            bubbles: bubbles,\n            composed: bubbles,\n        }));\n    }\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnQuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3V0aWwvZXZlbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLENBQ3ZCLEVBQVcsRUFDWCxTQUFpQixFQUNqQixNQUEyQixFQUMzQixPQUFnQixFQUNoQixFQUFFO0lBQ0YsSUFBSSxPQUFPLFdBQVcsS0FBSyxVQUFVLEVBQUU7UUFDckMsRUFBRSxDQUFDLGFBQWEsQ0FDZCxJQUFJLFdBQVcsQ0FBQyxTQUFTLEVBQUU7WUFDekIsTUFBTTtZQUNOLE9BQU8sRUFBRSxPQUFPO1lBQ2hCLFFBQVEsRUFBRSxPQUFPO1NBQ2xCLENBQUMsQ0FDSCxDQUFDO0tBQ0g7QUFDSCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZW1pdEV2ZW50ID0gKFxuICBlbDogRWxlbWVudCxcbiAgZXZlbnROYW1lOiBzdHJpbmcsXG4gIGRldGFpbDogUmVjb3JkPHN0cmluZywgYW55PixcbiAgYnViYmxlczogYm9vbGVhblxuKSA9PiB7XG4gIGlmICh0eXBlb2YgQ3VzdG9tRXZlbnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBlbC5kaXNwYXRjaEV2ZW50KFxuICAgICAgbmV3IEN1c3RvbUV2ZW50KGV2ZW50TmFtZSwge1xuICAgICAgICBkZXRhaWwsXG4gICAgICAgIGJ1YmJsZXM6IGJ1YmJsZXMsXG4gICAgICAgIGNvbXBvc2VkOiBidWJibGVzLFxuICAgICAgfSlcbiAgICApO1xuICB9XG59O1xuIl19","import { getPlatform } from '../index';\nimport { QError, qError } from '../error/error';\nimport { parseQRL, stringifyQRL } from '../import/qrl';\nimport { isQrl } from '../import/qrl-class';\nimport { qrlImport } from '../import/qrl.public';\nimport { qDeflate } from '../json/q-json';\nimport { getInvokeContext, useInvoke } from '../use/use-core';\nimport { fromCamelToKebabCase } from '../util/case';\nimport { EMPTY_ARRAY } from '../util/flyweight';\nimport { isPromise } from '../util/promises';\nimport { debugStringify } from '../util/stringify';\nimport { invokeWatchFn } from '../watch/watch';\nimport { getEvents } from './props';\nimport { getDocument } from '../util/dom';\nimport { setAttribute } from '../render/cursor';\nimport { emitEvent } from '../util/event';\nconst ON_PROP_REGEX = /on(Document|Window)?:/;\nconst ON$_PROP_REGEX = /on(Document|Window)?\\$:/;\nexport function isOnProp(prop) {\n    return ON_PROP_REGEX.test(prop);\n}\nexport function isOn$Prop(prop) {\n    return ON$_PROP_REGEX.test(prop);\n}\nfunction isQrlFactory(value) {\n    return typeof value === 'function' && value.__brand__ === 'QRLFactory';\n}\nexport function qPropReadQRL(ctx, prop) {\n    const existingQRLs = getExistingQRLs(ctx, prop);\n    if (existingQRLs.length === 0) {\n        return null;\n    }\n    return () => {\n        const context = getInvokeContext();\n        const qrls = getExistingQRLs(ctx, prop);\n        return Promise.all(qrls.map(async (qrlOrPromise) => {\n            const qrl = await qrlOrPromise;\n            const qrlGuard = context.qrlGuard;\n            if (qrlGuard && !qrlGuard(qrl))\n                return;\n            if (!qrl.symbolRef) {\n                qrl.symbolRef = await qrlImport(ctx.element, qrl);\n            }\n            context.qrl = qrl;\n            emitEvent(ctx.element, 'qSymbol', { name: qrl.symbol }, true);\n            if (qrlGuard) {\n                return invokeWatchFn(ctx.element, qrl);\n            }\n            else {\n                return useInvoke(context, qrl.symbolRef);\n            }\n        }));\n    };\n}\nexport function qPropWriteQRL(rctx, ctx, prop, value) {\n    if (!value) {\n        return;\n    }\n    prop = prop.replace('$:', ':');\n    if (typeof value == 'string') {\n        value = parseQRL(value);\n    }\n    const existingQRLs = getExistingQRLs(ctx, prop);\n    if (Array.isArray(value)) {\n        value.forEach((value) => qPropWriteQRL(rctx, ctx, prop, value));\n    }\n    else if (isQrl(value)) {\n        const capture = value.capture;\n        if (capture == null) {\n            // we need to serialize the lexical scope references\n            const captureRef = value.captureRef;\n            value.capture =\n                captureRef && captureRef.length ? captureRef.map((ref) => qDeflate(ref, ctx)) : EMPTY_ARRAY;\n        }\n        // Important we modify the array as it is cached.\n        for (let i = 0; i < existingQRLs.length; i++) {\n            const qrl = existingQRLs[i];\n            if (!isPromise(qrl) &&\n                qrl.canonicalChunk === value.canonicalChunk &&\n                qrl.symbol === value.symbol) {\n                existingQRLs.splice(i, 1);\n                i--;\n            }\n        }\n        existingQRLs.push(value);\n    }\n    else if (isQrlFactory(value)) {\n        if (existingQRLs.length === 0) {\n            // if we don't have any than we use the `qrlFactory` to create a QRLInternal\n            // (otherwise ignore the factory)\n            qPropWriteQRL(rctx, ctx, prop, value(ctx.element));\n        }\n    }\n    else if (isPromise(value)) {\n        const writePromise = value.then((qrl) => {\n            existingQRLs.splice(existingQRLs.indexOf(writePromise), 1);\n            qPropWriteQRL(rctx, ctx, prop, qrl);\n            return qrl;\n        });\n        existingQRLs.push(writePromise);\n    }\n    else {\n        // TODO(misko): Test/better text\n        throw qError(QError.TODO, `Not QRLInternal: prop: ${prop}; value: ` + value);\n    }\n    if (prop.startsWith('on:q')) {\n        getEvents(ctx)[prop] = existingQRLs.filter((a) => !isPromise(a));\n    }\n    else {\n        const kebabProp = fromCamelToKebabCase(prop);\n        const newValue = serializeQRLs(existingQRLs, ctx);\n        if (ctx.element.getAttribute(kebabProp) !== newValue) {\n            if (rctx) {\n                setAttribute(rctx, ctx.element, kebabProp, newValue);\n            }\n            else {\n                ctx.element.setAttribute(kebabProp, newValue);\n            }\n        }\n    }\n}\nexport function closureRefError(ref) {\n    return new Error(`QWIK-ERROR: A closure can only lexically capture 'QObject' and 'QProp' const references. Got: ` +\n        debugStringify(ref));\n}\nfunction getExistingQRLs(ctx, prop) {\n    let parts = ctx.cache.get(prop);\n    if (!parts) {\n        if (prop.startsWith('on:q')) {\n            parts = [];\n            const qrls = getEvents(ctx)[prop];\n            if (qrls) {\n                parts.push(...qrls);\n                ctx.cache.set(prop, parts);\n                return parts;\n            }\n        }\n        const attrName = fromCamelToKebabCase(prop);\n        parts = [];\n        (ctx.element.getAttribute(attrName) || '').split('\\n').forEach((qrl) => {\n            if (qrl) {\n                parts.push(parseQRL(qrl, ctx.element));\n            }\n        });\n        ctx.cache.set(prop, parts);\n    }\n    return parts;\n}\nfunction serializeQRLs(existingQRLs, ctx) {\n    const platform = getPlatform(getDocument(ctx.element));\n    const element = ctx.element;\n    return existingQRLs\n        .map((qrl) => (isPromise(qrl) ? '' : stringifyQRL(qrl, platform, element)))\n        .filter((v) => !!v)\n        .join('\\n');\n}\n//# sourceMappingURL=data:application/json;base64,","import { assertDefined } from '../assert/assert';\nimport { getInvokeContext } from './use-core';\n// <docs markdown=\"https://hackmd.io/lQ8v7fyhR-WD3b-2aRUpyw#useHostElement\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2FlQ8v7fyhR-WD3b-2aRUpyw%3Fboth#useHostElement instead)\n/**\n * Retrieves the Host Element of the current component.\n *\n * NOTE: `useHostElement` method can only be used in the synchronous portion of the callback\n * (before any `await` statements.)\n *\n * @public\n */\n// </docs>\nexport function useHostElement() {\n    const element = getInvokeContext().hostElement;\n    assertDefined(element);\n    return element;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWhvc3QtZWxlbWVudC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3VzZS91c2UtaG9zdC1lbGVtZW50LnB1YmxpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDakQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRTlDLDRFQUE0RTtBQUM1RSx5Q0FBeUM7QUFDekMsd0dBQXdHO0FBQ3hHOzs7Ozs7O0dBT0c7QUFDSCxVQUFVO0FBQ1YsTUFBTSxVQUFVLGNBQWM7SUFDNUIsTUFBTSxPQUFPLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQyxXQUFZLENBQUM7SUFDaEQsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3ZCLE9BQU8sT0FBTyxDQUFDO0FBQ2pCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnREZWZpbmVkIH0gZnJvbSAnLi4vYXNzZXJ0L2Fzc2VydCc7XG5pbXBvcnQgeyBnZXRJbnZva2VDb250ZXh0IH0gZnJvbSAnLi91c2UtY29yZSc7XG5cbi8vIDxkb2NzIG1hcmtkb3duPVwiaHR0cHM6Ly9oYWNrbWQuaW8vbFE4djdmeWhSLVdEM2ItMmFSVXB5dyN1c2VIb3N0RWxlbWVudFwiPlxuLy8gISFETyBOT1QgRURJVCBUSElTIENPTU1FTlQgRElSRUNUTFkhISFcbi8vIChlZGl0IGh0dHBzOi8vaGFja21kLmlvL0Bxd2lrLWRvY3MvQmt4cFN6ODBZLyUyRmxROHY3ZnloUi1XRDNiLTJhUlVweXclM0Zib3RoI3VzZUhvc3RFbGVtZW50IGluc3RlYWQpXG4vKipcbiAqIFJldHJpZXZlcyB0aGUgSG9zdCBFbGVtZW50IG9mIHRoZSBjdXJyZW50IGNvbXBvbmVudC5cbiAqXG4gKiBOT1RFOiBgdXNlSG9zdEVsZW1lbnRgIG1ldGhvZCBjYW4gb25seSBiZSB1c2VkIGluIHRoZSBzeW5jaHJvbm91cyBwb3J0aW9uIG9mIHRoZSBjYWxsYmFja1xuICogKGJlZm9yZSBhbnkgYGF3YWl0YCBzdGF0ZW1lbnRzLilcbiAqXG4gKiBAcHVibGljXG4gKi9cbi8vIDwvZG9jcz5cbmV4cG9ydCBmdW5jdGlvbiB1c2VIb3N0RWxlbWVudCgpOiBFbGVtZW50IHtcbiAgY29uc3QgZWxlbWVudCA9IGdldEludm9rZUNvbnRleHQoKS5ob3N0RWxlbWVudCE7XG4gIGFzc2VydERlZmluZWQoZWxlbWVudCk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuIl19","import { toQrlOrError } from '../import/qrl';\nimport { $, implicit$FirstArg, qrlImport } from '../import/qrl.public';\nimport { qPropWriteQRL } from '../props/props-on';\nimport { newInvokeContext, useInvoke, useWaitOn } from '../use/use-core';\nimport { useHostElement } from '../use/use-host-element.public';\nimport { ComponentScopedStyles, OnRenderProp } from '../util/markers';\nimport { styleKey } from './qrl-styles';\nimport { getContext, getProps } from '../props/props';\nimport { jsx } from '../index';\nimport { getDocument } from '../util/dom';\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onUnmount\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onUnmount instead)\n/**\n * A lazy-loadable reference to a component's destroy hook.\n *\n * Invoked when the component is destroyed (removed from render tree).\n *\n * @public\n */\n// </docs>\nexport function onUnmountFromQrl(unmountFn) {\n    throw new Error('IMPLEMENT: onUnmount' + unmountFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onUnmount\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onUnmount instead)\n/**\n * A lazy-loadable reference to a component's destroy hook.\n *\n * Invoked when the component is destroyed (removed from render tree).\n *\n * @public\n */\n// </docs>\nexport const onUnmount$ = implicit$FirstArg(onUnmountFromQrl);\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onResume\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onResume instead)\n/**\n * A lazy-loadable reference to a component's on resume hook.\n *\n * The hook is eagerly invoked when the application resumes on the client. Because it is called\n * eagerly, this allows the component to resume even if no user interaction has taken place.\n *\n * @public\n */\n// </docs>\nexport function onResumeFromQrl(resumeFn) {\n    onWindow('load', resumeFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onHydrate\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onHydrate instead)\n/**\n * A lazy-loadable reference to a component's on resume hook.\n *\n * Invoked when the component's state is re-resumed from serialization. This allows the\n * component to do any work to re-activate itself.\n *\n * @public\n */\n// </docs>\nexport const onResume$ = implicit$FirstArg(onResumeFromQrl);\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#OnPause\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#OnPause instead)\n/**\n * A lazy-loadable reference to a component's on dehydrate hook.\n *\n * Invoked when the component's state is being serialized (dehydrated) into the DOM. This allows\n * the component to do last-minute clean-up before its state is serialized.\n *\n * Typically used with transient state.\n *\n * @public\n */\n// </docs>\nexport function onPauseFromQrl(dehydrateFn) {\n    throw new Error('IMPLEMENT: onPause' + dehydrateFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#OnPause\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#OnPause instead)\n/**\n * A lazy-loadable reference to a component's on dehydrate hook.\n *\n * Invoked when the component's state is being serialized (dehydrated) into the DOM. This allows\n * the component to do last-minute clean-up before its state is serialized.\n *\n * Typically used with transient state.\n *\n * @public\n */\n// </docs>\nexport const onPause$ = implicit$FirstArg(onPauseFromQrl);\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#on\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#on instead)\n/**\n * Register a listener on the current component's host element.\n *\n * Used to programmatically add event listeners. Useful from custom `use*` methods, which do not\n * have access to the JSX.\n *\n * See: `on`, `onWindow`, `onDocument`.\n *\n * @public\n */\n// </docs>\nexport function on(event, eventFn) {\n    const el = useHostElement();\n    const ctx = getContext(el);\n    qPropWriteQRL(undefined, ctx, `on:${event}`, eventFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onDocument\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onDocument instead)\n/**\n * Register a listener on `document`.\n *\n * Used to programmatically add event listeners. Useful from custom `use*` methods, which do not\n * have access to the JSX.\n *\n * See: `on`, `onWindow`, `onDocument`.\n *\n * @public\n */\n// </docs>\nexport function onDocument(event, eventFn) {\n    const el = useHostElement();\n    const ctx = getContext(el);\n    qPropWriteQRL(undefined, ctx, `on-document:${event}`, eventFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#onWindow\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#onWindow instead)\n/**\n * Register a listener on `window`.\n *\n * Used to programmatically add event listeners. Useful from custom `use*` methods, which do not\n * have access to the JSX.\n *\n * See: `on`, `onWindow`, `onDocument`.\n *\n * @public\n */\n// </docs>\nexport function onWindow(event, eventFn) {\n    const el = useHostElement();\n    const ctx = getContext(el);\n    qPropWriteQRL(undefined, ctx, `on-window:${event}`, eventFn);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#useStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#useStyles instead)\n/**\n * Refer to component styles.\n *\n * @alpha\n */\n// </docs>\nexport function useStylesFromQrl(styles) {\n    _useStyles(styles, false);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#useStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#useStyles instead)\n/**\n * Refer to component styles.\n *\n * @alpha\n */\n// </docs>\nexport const useStyles$ = implicit$FirstArg(useStylesFromQrl);\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#useScopedStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#useScopedStyles instead)\n/**\n * @alpha\n */\n// </docs>\nexport function useScopedStylesFromQrl(styles) {\n    _useStyles(styles, true);\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#useScopedStyles\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#useScopedStyles instead)\n/**\n * @alpha\n */\n// </docs>\nexport const useScopedStyles$ = implicit$FirstArg(useScopedStylesFromQrl);\n/**\n * @public\n */\nexport function componentFromQrl(onMount, options = {}) {\n    var _a;\n    const tagName = (_a = options.tagName) !== null && _a !== void 0 ? _a : 'div';\n    // Return a QComponent Factory function.\n    return function QComponent(props, key) {\n        const onRenderFactory = async (hostElement) => {\n            // Turn function into QRL\n            const onMountQrl = toQrlOrError(onMount);\n            const onMountFn = await resolveQrl(hostElement, onMountQrl);\n            const ctx = getContext(hostElement);\n            const props = getProps(ctx);\n            const invokeCtx = newInvokeContext(hostElement, hostElement);\n            return useInvoke(invokeCtx, onMountFn, props);\n        };\n        onRenderFactory.__brand__ = 'QRLFactory';\n        return jsx(tagName, Object.assign({ [OnRenderProp]: onRenderFactory }, props), key);\n    };\n}\n// <docs markdown=\"https://hackmd.io/c_nNpiLZSYugTU0c5JATJA#component\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2Fc_nNpiLZSYugTU0c5JATJA%3Fboth#component instead)\n/**\n * Declare a Qwik component that can be used to create UI.\n *\n * Use `component` (and `component$`) to declare a Qwik component. A Qwik component is a special\n * kind of component that allows the Qwik framework to lazy load and execute the component\n * independently of other Qwik components as well as lazy load the component's life-cycle hooks\n * and event handlers.\n *\n * Side note: You can also declare regular (standard JSX) components that will have standard\n * synchronous behavior.\n *\n * Qwik component is a facade that describes how the component should be used without forcing the\n * implementation of the component to be eagerly loaded. A minimum Qwik definition consists of:\n *\n * - Component `onMount` method, which needs to return an\n * - `onRender` closure which constructs the component's JSX.\n *\n * ### Example:\n *\n * An example showing how to create a counter component:\n *\n * ```typescript\n * export const Counter = component$((props: { value?: number; step?: number }) => {\n *   const state = useStore({ count: props.value || 0 });\n *   return $(() => (\n *     <div>\n *       <span>{state.count}</span>\n *       <button on$:click={() => (state.count += props.step || 1)}>+</button>\n *     </div>\n *   ));\n * });\n * ```\n *\n * - `component$` is how a component gets declared.\n * - `{ value?: number; step?: number }` declares the public (props) interface of the component.\n * - `{ count: number }` declares the private (state) interface of the component.\n * - `onMount` closure: is used to create the data store (see: `useStore`);\n * - `$`: mark which parts of the component will be lazy-loaded. (see `$` for details.)\n *\n * The above can then be used like so:\n *\n * ```typescript\n * export const OtherComponent = component$(() => {\n *   return $(() => <Counter value={100} />);\n * });\n * ```\n *\n * See also: `component`, `onUnmount`, `onHydrate`, `OnPause`, `onHalt`, `onResume`, `on`,\n * `onDocument`, `onWindow`, `useStyles`, `useScopedStyles`\n *\n * @param onMount - Initialization closure used when the component is first created.\n * @param tagName - Optional components options. It can be used to set a custom tag-name to be\n * used for the component's host element.\n *\n * @public\n */\n// </docs>\nexport function component$(onMount, options) {\n    return componentFromQrl($(onMount), options);\n}\nfunction resolveQrl(hostElement, onMountQrl) {\n    return onMountQrl.symbolRef\n        ? Promise.resolve(onMountQrl.symbolRef)\n        : Promise.resolve(null).then(() => {\n            return qrlImport(hostElement, onMountQrl);\n        });\n}\nfunction _useStyles(styles, scoped) {\n    const styleQrl = toQrlOrError(styles);\n    const styleId = styleKey(styleQrl);\n    const hostElement = useHostElement();\n    if (scoped) {\n        hostElement.setAttribute(ComponentScopedStyles, styleId);\n    }\n    useWaitOn(qrlImport(hostElement, styleQrl).then((styleText) => {\n        const document = getDocument(hostElement);\n        const head = document.querySelector('head');\n        if (head && !head.querySelector(`style[q\\\\:style=\"${styleId}\"]`)) {\n            const style = document.createElement('style');\n            style.setAttribute('q:style', styleId);\n            style.textContent = scoped ? styleText.replace(/�/g, styleId) : styleText;\n            head.appendChild(style);\n        }\n    }));\n}\n//# sourceMappingURL=data:application/json;base64,","import { getContext, getEvent } from '../props/props';\nimport { newInvokeContext, useInvoke } from '../use/use-core';\nimport { useHostElement } from '../use/use-host-element.public';\nimport { OnRenderSelector } from '../util/markers';\nexport function _bubble(eventType, payload) {\n    let node = useHostElement();\n    payload = Object.assign({ type: eventType }, payload);\n    const eventName = 'on:' + eventType;\n    while (node) {\n        const ctx = getContext(node);\n        const listener = getEvent(ctx, eventName);\n        const hostElement = node.closest(OnRenderSelector);\n        listener && useInvoke(newInvokeContext(hostElement, node, payload), listener);\n        node = node.parentElement;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnViYmxlLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9ldmVudC9idWJibGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsU0FBUyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ2hFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRW5ELE1BQU0sVUFBVSxPQUFPLENBQUMsU0FBaUIsRUFBRSxPQUFXO0lBQ3BELElBQUksSUFBSSxHQUFHLGNBQWMsRUFBd0IsQ0FBQztJQUNsRCxPQUFPLG1CQUFLLElBQUksRUFBRSxTQUFTLElBQUssT0FBTyxDQUFFLENBQUM7SUFDMUMsTUFBTSxTQUFTLEdBQUcsS0FBSyxHQUFHLFNBQVMsQ0FBQztJQUNwQyxPQUFPLElBQUksRUFBRTtRQUNYLE1BQU0sR0FBRyxHQUFHLFVBQVUsQ0FBQyxJQUFJLENBQVEsQ0FBQztRQUNwQyxNQUFNLFFBQVEsR0FBNkIsUUFBUSxDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUMsQ0FBQztRQUNwRSxNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFFLENBQUM7UUFDcEQsUUFBUSxJQUFJLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLEVBQUUsSUFBSSxFQUFFLE9BQU8sQ0FBQyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQzlFLElBQUksR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDO0tBQzNCO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldENvbnRleHQsIGdldEV2ZW50IH0gZnJvbSAnLi4vcHJvcHMvcHJvcHMnO1xuaW1wb3J0IHsgbmV3SW52b2tlQ29udGV4dCwgdXNlSW52b2tlIH0gZnJvbSAnLi4vdXNlL3VzZS1jb3JlJztcbmltcG9ydCB7IHVzZUhvc3RFbGVtZW50IH0gZnJvbSAnLi4vdXNlL3VzZS1ob3N0LWVsZW1lbnQucHVibGljJztcbmltcG9ydCB7IE9uUmVuZGVyU2VsZWN0b3IgfSBmcm9tICcuLi91dGlsL21hcmtlcnMnO1xuXG5leHBvcnQgZnVuY3Rpb24gX2J1YmJsZShldmVudFR5cGU6IHN0cmluZywgcGF5bG9hZDoge30pOiB2b2lkIHtcbiAgbGV0IG5vZGUgPSB1c2VIb3N0RWxlbWVudCgpIGFzIEhUTUxFbGVtZW50IHwgbnVsbDtcbiAgcGF5bG9hZCA9IHsgdHlwZTogZXZlbnRUeXBlLCAuLi5wYXlsb2FkIH07XG4gIGNvbnN0IGV2ZW50TmFtZSA9ICdvbjonICsgZXZlbnRUeXBlO1xuICB3aGlsZSAobm9kZSkge1xuICAgIGNvbnN0IGN0eCA9IGdldENvbnRleHQobm9kZSkgYXMgYW55O1xuICAgIGNvbnN0IGxpc3RlbmVyOiB1bmRlZmluZWQgfCAoKCkgPT4gdm9pZCkgPSBnZXRFdmVudChjdHgsIGV2ZW50TmFtZSk7XG4gICAgY29uc3QgaG9zdEVsZW1lbnQgPSBub2RlLmNsb3Nlc3QoT25SZW5kZXJTZWxlY3RvcikhO1xuICAgIGxpc3RlbmVyICYmIHVzZUludm9rZShuZXdJbnZva2VDb250ZXh0KGhvc3RFbGVtZW50LCBub2RlLCBwYXlsb2FkKSwgbGlzdGVuZXIpO1xuICAgIG5vZGUgPSBub2RlLnBhcmVudEVsZW1lbnQ7XG4gIH1cbn1cbiJdfQ==","import { _bubble } from './bubble';\n/**\n * @public\n */\nexport function bubble(eventType, payload) {\n    return _bubble(eventType, payload || {});\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnViYmxlLnB1YmxpYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvZXZlbnQvYnViYmxlLnB1YmxpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBRW5DOztHQUVHO0FBQ0gsTUFBTSxVQUFVLE1BQU0sQ0FBVSxTQUFpQixFQUFFLE9BQWlCO0lBQ2xFLE9BQU8sT0FBTyxDQUFDLFNBQVMsRUFBRSxPQUFPLElBQUksRUFBRSxDQUFDLENBQUM7QUFDM0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9idWJibGUgfSBmcm9tICcuL2J1YmJsZSc7XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgZnVuY3Rpb24gYnViYmxlPFBBWUxPQUQ+KGV2ZW50VHlwZTogc3RyaW5nLCBwYXlsb2FkPzogUEFZTE9BRCk6IHZvaWQge1xuICByZXR1cm4gX2J1YmJsZShldmVudFR5cGUsIHBheWxvYWQgfHwge30pO1xufVxuIl19","import { getDocument } from '../util/dom';\nimport { isDocument } from '../util/element';\nimport { qDev } from '../util/qdev';\nimport { snapshotState } from './store';\n/**\n * Serialize the current state of the application into DOM\n *\n * @public\n */\nexport function snapshot(elmOrDoc) {\n    const doc = isDocument(elmOrDoc) ? elmOrDoc : getDocument(elmOrDoc);\n    const data = snapshotState(elmOrDoc);\n    const parentJSON = isDocument(elmOrDoc) ? elmOrDoc.body : elmOrDoc;\n    const script = doc.createElement('script');\n    script.setAttribute('type', 'qwik/json');\n    script.textContent = JSON.stringify(data, undefined, qDev ? '  ' : undefined);\n    parentJSON.appendChild(script);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmUucHVibGljLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS9vYmplY3Qvc3RvcmUucHVibGljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDMUMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDcEMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUV4Qzs7OztHQUlHO0FBQ0gsTUFBTSxVQUFVLFFBQVEsQ0FBQyxRQUE0QjtJQUNuRCxNQUFNLEdBQUcsR0FBRyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3BFLE1BQU0sSUFBSSxHQUFHLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyQyxNQUFNLFVBQVUsR0FBRyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztJQUNuRSxNQUFNLE1BQU0sR0FBRyxHQUFHLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzNDLE1BQU0sQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ3pDLE1BQU0sQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM5RSxVQUFVLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ2pDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXREb2N1bWVudCB9IGZyb20gJy4uL3V0aWwvZG9tJztcbmltcG9ydCB7IGlzRG9jdW1lbnQgfSBmcm9tICcuLi91dGlsL2VsZW1lbnQnO1xuaW1wb3J0IHsgcURldiB9IGZyb20gJy4uL3V0aWwvcWRldic7XG5pbXBvcnQgeyBzbmFwc2hvdFN0YXRlIH0gZnJvbSAnLi9zdG9yZSc7XG5cbi8qKlxuICogU2VyaWFsaXplIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBhcHBsaWNhdGlvbiBpbnRvIERPTVxuICpcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNuYXBzaG90KGVsbU9yRG9jOiBFbGVtZW50IHwgRG9jdW1lbnQpIHtcbiAgY29uc3QgZG9jID0gaXNEb2N1bWVudChlbG1PckRvYykgPyBlbG1PckRvYyA6IGdldERvY3VtZW50KGVsbU9yRG9jKTtcbiAgY29uc3QgZGF0YSA9IHNuYXBzaG90U3RhdGUoZWxtT3JEb2MpO1xuICBjb25zdCBwYXJlbnRKU09OID0gaXNEb2N1bWVudChlbG1PckRvYykgPyBlbG1PckRvYy5ib2R5IDogZWxtT3JEb2M7XG4gIGNvbnN0IHNjcmlwdCA9IGRvYy5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcbiAgc2NyaXB0LnNldEF0dHJpYnV0ZSgndHlwZScsICdxd2lrL2pzb24nKTtcbiAgc2NyaXB0LnRleHRDb250ZW50ID0gSlNPTi5zdHJpbmdpZnkoZGF0YSwgdW5kZWZpbmVkLCBxRGV2ID8gJyAgJyA6IHVuZGVmaW5lZCk7XG4gIHBhcmVudEpTT04uYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbn1cbiJdfQ==","import { getContext, getProps } from '../props/props';\nimport { getInvokeContext } from './use-core';\nimport { useHostElement } from './use-host-element.public';\nexport function useProps() {\n    const ctx = getInvokeContext();\n    let props = ctx.props;\n    if (!props) {\n        props = ctx.props = getProps(getContext(useHostElement()));\n    }\n    return props;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLXByb3BzLnB1YmxpYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXNlL3VzZS1wcm9wcy5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDOUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBRTNELE1BQU0sVUFBVSxRQUFRO0lBQ3RCLE1BQU0sR0FBRyxHQUFHLGdCQUFnQixFQUFFLENBQUM7SUFDL0IsSUFBSSxLQUFLLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQztJQUN0QixJQUFJLENBQUMsS0FBSyxFQUFFO1FBQ1YsS0FBSyxHQUFHLEdBQUcsQ0FBQyxLQUFLLEdBQUcsUUFBUSxDQUFDLFVBQVUsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxDQUFDLENBQUM7S0FDNUQ7SUFDRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFByb3BzIH0gZnJvbSAnLi4vaW5kZXgnO1xuaW1wb3J0IHsgZ2V0Q29udGV4dCwgZ2V0UHJvcHMgfSBmcm9tICcuLi9wcm9wcy9wcm9wcyc7XG5pbXBvcnQgeyBnZXRJbnZva2VDb250ZXh0IH0gZnJvbSAnLi91c2UtY29yZSc7XG5pbXBvcnQgeyB1c2VIb3N0RWxlbWVudCB9IGZyb20gJy4vdXNlLWhvc3QtZWxlbWVudC5wdWJsaWMnO1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlUHJvcHMoKTogUHJvcHMge1xuICBjb25zdCBjdHggPSBnZXRJbnZva2VDb250ZXh0KCk7XG4gIGxldCBwcm9wcyA9IGN0eC5wcm9wcztcbiAgaWYgKCFwcm9wcykge1xuICAgIHByb3BzID0gY3R4LnByb3BzID0gZ2V0UHJvcHMoZ2V0Q29udGV4dCh1c2VIb3N0RWxlbWVudCgpKSk7XG4gIH1cbiAgcmV0dXJuIHByb3BzO1xufVxuIl19","import { implicit$FirstArg } from '../import/qrl.public';\nimport { useHostElement } from '../use/use-host-element.public';\nimport { useProps } from '../use/use-props.public';\nimport { registerOnWatch } from './watch';\n// <docs markdown=\"https://hackmd.io/_Kl9br9tT8OB-1Dv8uR4Kg#onWatch\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2F_Kl9br9tT8OB-1Dv8uR4Kg%3Fboth#onWatch instead)\n/**\n * Reruns the `watchFn` when the observed inputs change.\n *\n * Use `onWatch` to observe changes on a set of inputs, and then re-execute the `watchFn` when\n * those inputs change.\n *\n * The `watchFn` only executes if the observed inputs change. To observe the inputs use the `obs`\n * function to wrap property reads. This creates subscriptions which will trigger the `watchFn`\n * to re-run.\n *\n * See: `Observer`\n *\n * @public\n *\n * ## Example\n *\n * The `onWatch` function is used to observe the `state.count` property. Any changes to the\n * `state.count` cause the `watchFn` to execute which in turn updates the `state.doubleCount` to\n * the double of `state.count`.\n *\n * ```typescript\n * export const MyComp = component$(() => {\n *   const store = useStore({ count: 0, doubleCount: 0 });\n *   onWatch$((obs) => {\n *     store.doubleCount = 2 * obs(store).count;\n *   });\n *   return $(() => (\n *     <div>\n *       <span>\n *         {store.count} / {store.doubleCount}\n *       </span>\n *       <button on$:click={() => store.count++}>+</button>\n *     </div>\n *   ));\n * });\n * ```\n *\n *\n * @param watch - Function which should be re-executed when changes to the inputs are detected\n * @public\n */\n// </docs>\nexport function onWatchFromQrl(watchFn) {\n    registerOnWatch(useHostElement(), useProps(), watchFn);\n}\n// <docs markdown=\"https://hackmd.io/_Kl9br9tT8OB-1Dv8uR4Kg#onWatch\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2F_Kl9br9tT8OB-1Dv8uR4Kg%3Fboth#onWatch instead)\n/**\n * Reruns the `watchFn` when the observed inputs change.\n *\n * Use `onWatch` to observe changes on a set of inputs, and then re-execute the `watchFn` when\n * those inputs change.\n *\n * The `watchFn` only executes if the observed inputs change. To observe the inputs use the `obs`\n * function to wrap property reads. This creates subscriptions which will trigger the `watchFn`\n * to re-run.\n *\n * See: `Observer`\n *\n * @public\n *\n * ## Example\n *\n * The `onWatch` function is used to observe the `state.count` property. Any changes to the\n * `state.count` cause the `watchFn` to execute which in turn updates the `state.doubleCount` to\n * the double of `state.count`.\n *\n * ```typescript\n * export const MyComp = component$(() => {\n *   const store = useStore({ count: 0, doubleCount: 0 });\n *   onWatch$((obs) => {\n *     store.doubleCount = 2 * obs(store).count;\n *   });\n *   return $(() => (\n *     <div>\n *       <span>\n *         {store.count} / {store.doubleCount}\n *       </span>\n *       <button on$:click={() => store.count++}>+</button>\n *     </div>\n *   ));\n * });\n * ```\n *\n *\n * @param watch - Function which should be re-executed when changes to the inputs are detected\n * @public\n */\n// </docs>\nexport const onWatch$ = implicit$FirstArg(onWatchFromQrl);\n//# sourceMappingURL=data:application/json;base64,","/**\n * Use to render asynchronous (`Promise`) values.\n *\n * A `Promise` does not allow a synchronous examination of its state. For this reason\n * `<Async>` provides a mechanism to render pending, resolved and error state of a `Promise`.\n * `<Async>` provides that mechanism by registering a `then` method with the `Promise` and\n * providing callbacks hooks for `pending`, `resolved` and `rejected` state of the promise.\n *\n * Additionally, `<Async>` automatically re-renders the portion of the view when the status\n * of the `Promise` changes.\n *\n * `<Async>` provides three callbacks:\n * - `onPending`: invoked initially to provide a way for the template to provide output while\n *   waiting for the `promise` to resolve.\n * - `onResolved`: invoked when the `promise` is `resolved` allowing the template to generate\n *   output using the `resolved` value.\n * - `onError`: invoked when the `promise` is `rejected` allowing the template to generate\n *   error output describing the problem.\n *\n * The `<Async>` can be used in two ways, which are semantically equivalent and are provided\n * based on the developer needs/preferences.\n *\n * ### Using multiple callbacks\n *\n * ```typescript\n * <Async\n *   resolve={Promise.resolve('some value')}\n *   onPending={() => <span>loading...</span>}\n *   onResolved={(value) => <span>{value}</span>}\n *   onError={(rejection) => <pre>{rejection}</pre>}\n * />\n * ```\n *\n * ### Using single callbacks\n *\n * ```typescript\n * <Async resolve={Promise.resolve('some value')}>\n *   {(response) => {\n *     if (response.isPending) return <span>loading...</span>;\n *     if (response.isResolved) return <span>{response.value}</span>;\n *     if (response.isRejected) return <pre>{response.rejection}</pre>;\n *   }}\n * </Async>\n * ```\n *\n * @param onPending - invoked initially to provide a way for the template to provide output while\n *   waiting for the `promise` to resolve.\n * @param onResolved - invoked when the `promise` is `resolved` allowing the template to generate\n *   output using the `resolved` value.\n * @param onError - invoked when the `promise` is `rejected` allowing the template to generate\n *   error output describing the problem.\n * @param children -  a single callback function for `onPending`, `onResolved` and `onError`.\n *   (Use either `children` or `onPending`, `onResolved` and `onError`, but not both.)\n *   See \"Using multiple callbacks\" vs \"Using single callbacks\" above.\n *\n * @public\n */\nexport function Async(props) {\n    // TODO(misko): implement onPending/onResolved/onError\n    if (!('children' in props)) {\n        throw new Error('IMPLEMENT');\n    }\n    const children = [props.children].flat()[0];\n    const renderFn = typeof children == 'function' ? children : null;\n    const promiseValue = {\n        isPending: true,\n        isResolved: false,\n        value: undefined,\n        isRejected: false,\n        rejection: undefined,\n    };\n    let pending;\n    const jsxPromise = new Promise((resolve, reject) => {\n        pending = renderFn && renderFn(promiseValue);\n        Promise.resolve(props.resolve).then((value) => {\n            promiseValue.isPending = false;\n            promiseValue.isResolved = true;\n            promiseValue.value = value;\n            return resolve(renderFn && renderFn(promiseValue));\n        }, (error) => {\n            promiseValue.isPending = false;\n            promiseValue.isRejected = true;\n            promiseValue.rejection = error;\n            return reject(renderFn && renderFn(promiseValue));\n        });\n    });\n    jsxPromise.whilePending = pending;\n    return jsxPromise;\n}\n//# sourceMappingURL=data:application/json;base64,","/* eslint-disable */\n/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\nimport { flattenArray } from '../../util/array';\nimport { EMPTY_ARRAY } from '../../util/flyweight';\nimport { JSXNodeImpl } from './jsx-runtime';\n/**\n * @public\n */\nexport function h(type, props, ...children) {\n    // Using legacy h() jsx transform and morphing it\n    // so it can use the modern vdom structure\n    // https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html\n    // https://www.typescriptlang.org/tsconfig#jsxImportSource\n    const normalizedProps = {\n        children: arguments.length > 2 ? flattenArray(children) : EMPTY_ARRAY,\n    };\n    let key;\n    let i;\n    for (i in props) {\n        if (i == 'key')\n            key = props[i];\n        else\n            normalizedProps[i] = props[i];\n    }\n    return new JSXNodeImpl(type, normalizedProps, key);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvcmVuZGVyL2pzeC9mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQjs7Ozs7O0dBTUc7QUFFSCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFJNUM7O0dBRUc7QUFDSCxNQUFNLFVBQVUsQ0FBQyxDQUNmLElBQXVDLEVBQ3ZDLEtBQW1CLEVBQ25CLEdBQUcsUUFBZTtJQUVsQixpREFBaUQ7SUFDakQsMENBQTBDO0lBQzFDLDZFQUE2RTtJQUM3RSwwREFBMEQ7SUFFMUQsTUFBTSxlQUFlLEdBQVE7UUFDM0IsUUFBUSxFQUFFLFNBQVMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVc7S0FDdEUsQ0FBQztJQUVGLElBQUksR0FBUSxDQUFDO0lBQ2IsSUFBSSxDQUFNLENBQUM7SUFFWCxLQUFLLENBQUMsSUFBSSxLQUFLLEVBQUU7UUFDZixJQUFJLENBQUMsSUFBSSxLQUFLO1lBQUUsR0FBRyxHQUFJLEtBQTZCLENBQUMsQ0FBQyxDQUFDLENBQUM7O1lBQ25ELGVBQWUsQ0FBQyxDQUFDLENBQUMsR0FBSSxLQUE2QixDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQzdEO0lBRUQsT0FBTyxJQUFJLFdBQVcsQ0FBQyxJQUFJLEVBQUUsZUFBZSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQ3JELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEJ1aWxkZXIuaW8sIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vQnVpbGRlcklPL3F3aWsvYmxvYi9tYWluL0xJQ0VOU0VcbiAqL1xuXG5pbXBvcnQgeyBmbGF0dGVuQXJyYXkgfSBmcm9tICcuLi8uLi91dGlsL2FycmF5JztcbmltcG9ydCB7IEVNUFRZX0FSUkFZIH0gZnJvbSAnLi4vLi4vdXRpbC9mbHl3ZWlnaHQnO1xuaW1wb3J0IHsgSlNYTm9kZUltcGwgfSBmcm9tICcuL2pzeC1ydW50aW1lJztcbmltcG9ydCB0eXBlIHsgUXdpa0pTWCB9IGZyb20gJy4vdHlwZXMvanN4LXF3aWsnO1xuaW1wb3J0IHR5cGUgeyBGdW5jdGlvbkNvbXBvbmVudCwgSlNYTm9kZSB9IGZyb20gJy4vdHlwZXMvanN4LW5vZGUnO1xuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGg8UFJPUFMgZXh0ZW5kcyB7fSA9IHt9PihcbiAgdHlwZTogc3RyaW5nIHwgRnVuY3Rpb25Db21wb25lbnQ8UFJPUFM+LFxuICBwcm9wczogUFJPUFMgfCBudWxsLFxuICAuLi5jaGlsZHJlbjogYW55W11cbik6IEpTWE5vZGUge1xuICAvLyBVc2luZyBsZWdhY3kgaCgpIGpzeCB0cmFuc2Zvcm0gYW5kIG1vcnBoaW5nIGl0XG4gIC8vIHNvIGl0IGNhbiB1c2UgdGhlIG1vZGVybiB2ZG9tIHN0cnVjdHVyZVxuICAvLyBodHRwczovL3JlYWN0anMub3JnL2Jsb2cvMjAyMC8wOS8yMi9pbnRyb2R1Y2luZy10aGUtbmV3LWpzeC10cmFuc2Zvcm0uaHRtbFxuICAvLyBodHRwczovL3d3dy50eXBlc2NyaXB0bGFuZy5vcmcvdHNjb25maWcjanN4SW1wb3J0U291cmNlXG5cbiAgY29uc3Qgbm9ybWFsaXplZFByb3BzOiBhbnkgPSB7XG4gICAgY2hpbGRyZW46IGFyZ3VtZW50cy5sZW5ndGggPiAyID8gZmxhdHRlbkFycmF5KGNoaWxkcmVuKSA6IEVNUFRZX0FSUkFZLFxuICB9O1xuXG4gIGxldCBrZXk6IGFueTtcbiAgbGV0IGk6IGFueTtcblxuICBmb3IgKGkgaW4gcHJvcHMpIHtcbiAgICBpZiAoaSA9PSAna2V5Jykga2V5ID0gKHByb3BzIGFzIFJlY29yZDxzdHJpbmcsIGFueT4pW2ldO1xuICAgIGVsc2Ugbm9ybWFsaXplZFByb3BzW2ldID0gKHByb3BzIGFzIFJlY29yZDxzdHJpbmcsIGFueT4pW2ldO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBKU1hOb2RlSW1wbCh0eXBlLCBub3JtYWxpemVkUHJvcHMsIGtleSk7XG59XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgZGVjbGFyZSBuYW1lc3BhY2UgaCB7XG4gIGV4cG9ydCBmdW5jdGlvbiBoKHR5cGU6IGFueSk6IEpTWE5vZGU8YW55PjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGgodHlwZTogTm9kZSwgZGF0YTogYW55KTogSlNYTm9kZTxhbnk+O1xuICBleHBvcnQgZnVuY3Rpb24gaCh0eXBlOiBhbnksIHRleHQ6IHN0cmluZyk6IEpTWE5vZGU8YW55PjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGgodHlwZTogYW55LCBjaGlsZHJlbjogQXJyYXk8YW55Pik6IEpTWE5vZGU8YW55PjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGgodHlwZTogYW55LCBkYXRhOiBhbnksIHRleHQ6IHN0cmluZyk6IEpTWE5vZGU8YW55PjtcbiAgZXhwb3J0IGZ1bmN0aW9uIGgoXG4gICAgdHlwZTogYW55LFxuICAgIGRhdGE6IGFueSxcbiAgICBjaGlsZHJlbjogQXJyYXk8SlNYTm9kZTxhbnk+IHwgdW5kZWZpbmVkIHwgbnVsbD5cbiAgKTogSlNYTm9kZTxhbnk+O1xuICBleHBvcnQgZnVuY3Rpb24gaChzZWw6IGFueSwgZGF0YTogYW55IHwgbnVsbCwgY2hpbGRyZW46IEpTWE5vZGU8YW55Pik6IEpTWE5vZGU8YW55PjtcblxuICBleHBvcnQgbmFtZXNwYWNlIEpTWCB7XG4gICAgZXhwb3J0IGludGVyZmFjZSBFbGVtZW50IGV4dGVuZHMgUXdpa0pTWC5FbGVtZW50IHt9XG4gICAgZXhwb3J0IGludGVyZmFjZSBJbnRyaW5zaWNBdHRyaWJ1dGVzIGV4dGVuZHMgUXdpa0pTWC5JbnRyaW5zaWNBdHRyaWJ1dGVzIHt9XG4gICAgZXhwb3J0IGludGVyZmFjZSBJbnRyaW5zaWNFbGVtZW50cyBleHRlbmRzIFF3aWtKU1guSW50cmluc2ljRWxlbWVudHMge31cbiAgICBleHBvcnQgaW50ZXJmYWNlIEVsZW1lbnRDaGlsZHJlbkF0dHJpYnV0ZSB7XG4gICAgICBjaGlsZHJlbj86IGFueTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==","import { jsx } from './jsx-runtime';\n/**\n * @public\n */\nexport const Slot = (props) => {\n    const hasChildren = props.children || (Array.isArray(props.children) && props.children.length > 0);\n    const newChildrem = !hasChildren\n        ? []\n        : jsx('q:fallback', {\n            children: props.children,\n        });\n    return jsx('q:slot', {\n        name: props.name,\n        children: newChildrem,\n    }, props.name);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xvdC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3JlbmRlci9qc3gvc2xvdC5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUdwQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLElBQUksR0FHWixDQUFDLEtBQUssRUFBRSxFQUFFO0lBQ2IsTUFBTSxXQUFXLEdBQ2YsS0FBSyxDQUFDLFFBQVEsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEtBQUssQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2pGLE1BQU0sV0FBVyxHQUFHLENBQUMsV0FBVztRQUM5QixDQUFDLENBQUMsRUFBRTtRQUNKLENBQUMsQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFO1lBQ2hCLFFBQVEsRUFBRSxLQUFLLENBQUMsUUFBUTtTQUN6QixDQUFDLENBQUM7SUFFUCxPQUFPLEdBQUcsQ0FDUixRQUFRLEVBQ1I7UUFDRSxJQUFJLEVBQUUsS0FBSyxDQUFDLElBQUk7UUFDaEIsUUFBUSxFQUFFLFdBQVc7S0FDdEIsRUFDRCxLQUFLLENBQUMsSUFBSSxDQUNYLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBqc3ggfSBmcm9tICcuL2pzeC1ydW50aW1lJztcbmltcG9ydCB0eXBlIHsgRnVuY3Rpb25Db21wb25lbnQgfSBmcm9tICcuL3R5cGVzL2pzeC1ub2RlJztcblxuLyoqXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBjb25zdCBTbG90OiBGdW5jdGlvbkNvbXBvbmVudDx7XG4gIG5hbWU/OiBzdHJpbmc7XG4gIGNoaWxkcmVuPzogYW55O1xufT4gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgaGFzQ2hpbGRyZW4gPVxuICAgIHByb3BzLmNoaWxkcmVuIHx8IChBcnJheS5pc0FycmF5KHByb3BzLmNoaWxkcmVuKSAmJiBwcm9wcy5jaGlsZHJlbi5sZW5ndGggPiAwKTtcbiAgY29uc3QgbmV3Q2hpbGRyZW0gPSAhaGFzQ2hpbGRyZW5cbiAgICA/IFtdXG4gICAgOiBqc3goJ3E6ZmFsbGJhY2snLCB7XG4gICAgICAgIGNoaWxkcmVuOiBwcm9wcy5jaGlsZHJlbixcbiAgICAgIH0pO1xuXG4gIHJldHVybiBqc3goXG4gICAgJ3E6c2xvdCcsXG4gICAge1xuICAgICAgbmFtZTogcHJvcHMubmFtZSxcbiAgICAgIGNoaWxkcmVuOiBuZXdDaGlsZHJlbSxcbiAgICB9LFxuICAgIHByb3BzLm5hbWVcbiAgKTtcbn07XG4iXX0=","import { isDocument } from '../util/element';\nimport { executeContext, printRenderStats } from './cursor';\nimport { isJSXNode, jsx, processNode } from './jsx/jsx-runtime';\nimport { visitJsxNode } from './render';\nimport { version } from '../index';\nimport { then } from '../util/promises';\nimport { getRenderingState } from './notify-render';\nimport { getDocument } from '../util/dom';\nimport { qDev } from '../util/qdev';\nimport { resumeIfNeeded } from '../props/props';\n/**\n * Render JSX.\n *\n * Use this method to render JSX. This function does reconciling which means\n * it always tries to reuse what is already in the DOM (rather then destroy and\n * recrate content.)\n *\n * @param parent - Element which will act as a parent to `jsxNode`. When\n *     possible the rendering will try to reuse existing nodes.\n * @param jsxNode - JSX to render\n * @public\n */\nexport function render(parent, jsxNode) {\n    // If input is not JSX, convert it\n    if (!isJSXNode(jsxNode)) {\n        jsxNode = jsx(jsxNode, null);\n    }\n    const doc = isDocument(parent) ? parent : getDocument(parent);\n    const stylesParent = isDocument(parent) ? parent.head : parent.parentElement;\n    resumeIfNeeded(parent);\n    const ctx = {\n        doc,\n        globalState: getRenderingState(doc),\n        hostElements: new Set(),\n        operations: [],\n        roots: [parent],\n        component: undefined,\n        perf: {\n            visited: 0,\n            timing: [],\n        },\n    };\n    return then(visitJsxNode(ctx, parent, processNode(jsxNode), false), () => {\n        executeContext(ctx);\n        if (stylesParent) {\n            injectQwikSlotCSS(stylesParent);\n        }\n        injectQVersion(parent);\n        if (qDev) {\n            if (typeof window !== 'undefined' && window.document != null) {\n                printRenderStats(ctx);\n            }\n        }\n        return ctx;\n    });\n}\nexport function injectQwikSlotCSS(parent) {\n    const style = parent.ownerDocument.createElement('style');\n    style.setAttribute('id', 'qwik/base-styles');\n    style.textContent = `q\\\\:slot{display:contents}q\\\\:fallback{display:none}q\\\\:fallback:last-child{display:contents}`;\n    parent.insertBefore(style, parent.firstChild);\n}\nexport function injectQVersion(parent) {\n    const element = isDocument(parent) ? parent.documentElement : parent;\n    element.setAttribute('q:version', version || '');\n    element.setAttribute('q:container', '');\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVuZGVyLnB1YmxpYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvcmVuZGVyL3JlbmRlci5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxjQUFjLEVBQUUsZ0JBQWdCLEVBQWlCLE1BQU0sVUFBVSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxTQUFTLEVBQUUsR0FBRyxFQUFFLFdBQVcsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRWhFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDeEMsT0FBTyxFQUFrQixPQUFPLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDbkQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3hDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDMUMsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUNwQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFaEQ7Ozs7Ozs7Ozs7O0dBV0c7QUFDSCxNQUFNLFVBQVUsTUFBTSxDQUNwQixNQUEwQixFQUMxQixPQUFrRDtJQUVsRCxrQ0FBa0M7SUFDbEMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsRUFBRTtRQUN2QixPQUFPLEdBQUcsR0FBRyxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsQ0FBQztLQUM5QjtJQUNELE1BQU0sR0FBRyxHQUFHLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDOUQsTUFBTSxZQUFZLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDO0lBQzdFLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUV2QixNQUFNLEdBQUcsR0FBa0I7UUFDekIsR0FBRztRQUNILFdBQVcsRUFBRSxpQkFBaUIsQ0FBQyxHQUFHLENBQUM7UUFDbkMsWUFBWSxFQUFFLElBQUksR0FBRyxFQUFFO1FBQ3ZCLFVBQVUsRUFBRSxFQUFFO1FBQ2QsS0FBSyxFQUFFLENBQUMsTUFBaUIsQ0FBQztRQUMxQixTQUFTLEVBQUUsU0FBUztRQUNwQixJQUFJLEVBQUU7WUFDSixPQUFPLEVBQUUsQ0FBQztZQUNWLE1BQU0sRUFBRSxFQUFFO1NBQ1g7S0FDRixDQUFDO0lBQ0YsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsRUFBRSxNQUFpQixFQUFFLFdBQVcsQ0FBQyxPQUFPLENBQUMsRUFBRSxLQUFLLENBQUMsRUFBRSxHQUFHLEVBQUU7UUFDbEYsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3BCLElBQUksWUFBWSxFQUFFO1lBQ2hCLGlCQUFpQixDQUFDLFlBQVksQ0FBQyxDQUFDO1NBQ2pDO1FBQ0QsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZCLElBQUksSUFBSSxFQUFFO1lBQ1IsSUFBSSxPQUFPLE1BQU0sS0FBSyxXQUFXLElBQUksTUFBTSxDQUFDLFFBQVEsSUFBSSxJQUFJLEVBQUU7Z0JBQzVELGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxDQUFDO2FBQ3ZCO1NBQ0Y7UUFDRCxPQUFPLEdBQUcsQ0FBQztJQUNiLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQUVELE1BQU0sVUFBVSxpQkFBaUIsQ0FBQyxNQUFlO0lBQy9DLE1BQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzFELEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLGtCQUFrQixDQUFDLENBQUM7SUFDN0MsS0FBSyxDQUFDLFdBQVcsR0FBRywrRkFBK0YsQ0FBQztJQUNwSCxNQUFNLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDaEQsQ0FBQztBQUVELE1BQU0sVUFBVSxjQUFjLENBQUMsTUFBMEI7SUFDdkQsTUFBTSxPQUFPLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUM7SUFDckUsT0FBTyxDQUFDLFlBQVksQ0FBQyxXQUFXLEVBQUUsT0FBTyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ2pELE9BQU8sQ0FBQyxZQUFZLENBQUMsYUFBYSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQzFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0RvY3VtZW50IH0gZnJvbSAnLi4vdXRpbC9lbGVtZW50JztcbmltcG9ydCB7IGV4ZWN1dGVDb250ZXh0LCBwcmludFJlbmRlclN0YXRzLCBSZW5kZXJDb250ZXh0IH0gZnJvbSAnLi9jdXJzb3InO1xuaW1wb3J0IHsgaXNKU1hOb2RlLCBqc3gsIHByb2Nlc3NOb2RlIH0gZnJvbSAnLi9qc3gvanN4LXJ1bnRpbWUnO1xuaW1wb3J0IHR5cGUgeyBKU1hOb2RlLCBGdW5jdGlvbkNvbXBvbmVudCB9IGZyb20gJy4vanN4L3R5cGVzL2pzeC1ub2RlJztcbmltcG9ydCB7IHZpc2l0SnN4Tm9kZSB9IGZyb20gJy4vcmVuZGVyJztcbmltcG9ydCB7IFZhbHVlT3JQcm9taXNlLCB2ZXJzaW9uIH0gZnJvbSAnLi4vaW5kZXgnO1xuaW1wb3J0IHsgdGhlbiB9IGZyb20gJy4uL3V0aWwvcHJvbWlzZXMnO1xuaW1wb3J0IHsgZ2V0UmVuZGVyaW5nU3RhdGUgfSBmcm9tICcuL25vdGlmeS1yZW5kZXInO1xuaW1wb3J0IHsgZ2V0RG9jdW1lbnQgfSBmcm9tICcuLi91dGlsL2RvbSc7XG5pbXBvcnQgeyBxRGV2IH0gZnJvbSAnLi4vdXRpbC9xZGV2JztcbmltcG9ydCB7IHJlc3VtZUlmTmVlZGVkIH0gZnJvbSAnLi4vcHJvcHMvcHJvcHMnO1xuXG4vKipcbiAqIFJlbmRlciBKU1guXG4gKlxuICogVXNlIHRoaXMgbWV0aG9kIHRvIHJlbmRlciBKU1guIFRoaXMgZnVuY3Rpb24gZG9lcyByZWNvbmNpbGluZyB3aGljaCBtZWFuc1xuICogaXQgYWx3YXlzIHRyaWVzIHRvIHJldXNlIHdoYXQgaXMgYWxyZWFkeSBpbiB0aGUgRE9NIChyYXRoZXIgdGhlbiBkZXN0cm95IGFuZFxuICogcmVjcmF0ZSBjb250ZW50LilcbiAqXG4gKiBAcGFyYW0gcGFyZW50IC0gRWxlbWVudCB3aGljaCB3aWxsIGFjdCBhcyBhIHBhcmVudCB0byBganN4Tm9kZWAuIFdoZW5cbiAqICAgICBwb3NzaWJsZSB0aGUgcmVuZGVyaW5nIHdpbGwgdHJ5IHRvIHJldXNlIGV4aXN0aW5nIG5vZGVzLlxuICogQHBhcmFtIGpzeE5vZGUgLSBKU1ggdG8gcmVuZGVyXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoXG4gIHBhcmVudDogRWxlbWVudCB8IERvY3VtZW50LFxuICBqc3hOb2RlOiBKU1hOb2RlPHVua25vd24+IHwgRnVuY3Rpb25Db21wb25lbnQ8YW55PlxuKTogVmFsdWVPclByb21pc2U8UmVuZGVyQ29udGV4dD4ge1xuICAvLyBJZiBpbnB1dCBpcyBub3QgSlNYLCBjb252ZXJ0IGl0XG4gIGlmICghaXNKU1hOb2RlKGpzeE5vZGUpKSB7XG4gICAganN4Tm9kZSA9IGpzeChqc3hOb2RlLCBudWxsKTtcbiAgfVxuICBjb25zdCBkb2MgPSBpc0RvY3VtZW50KHBhcmVudCkgPyBwYXJlbnQgOiBnZXREb2N1bWVudChwYXJlbnQpO1xuICBjb25zdCBzdHlsZXNQYXJlbnQgPSBpc0RvY3VtZW50KHBhcmVudCkgPyBwYXJlbnQuaGVhZCA6IHBhcmVudC5wYXJlbnRFbGVtZW50O1xuICByZXN1bWVJZk5lZWRlZChwYXJlbnQpO1xuXG4gIGNvbnN0IGN0eDogUmVuZGVyQ29udGV4dCA9IHtcbiAgICBkb2MsXG4gICAgZ2xvYmFsU3RhdGU6IGdldFJlbmRlcmluZ1N0YXRlKGRvYyksXG4gICAgaG9zdEVsZW1lbnRzOiBuZXcgU2V0KCksXG4gICAgb3BlcmF0aW9uczogW10sXG4gICAgcm9vdHM6IFtwYXJlbnQgYXMgRWxlbWVudF0sXG4gICAgY29tcG9uZW50OiB1bmRlZmluZWQsXG4gICAgcGVyZjoge1xuICAgICAgdmlzaXRlZDogMCxcbiAgICAgIHRpbWluZzogW10sXG4gICAgfSxcbiAgfTtcbiAgcmV0dXJuIHRoZW4odmlzaXRKc3hOb2RlKGN0eCwgcGFyZW50IGFzIEVsZW1lbnQsIHByb2Nlc3NOb2RlKGpzeE5vZGUpLCBmYWxzZSksICgpID0+IHtcbiAgICBleGVjdXRlQ29udGV4dChjdHgpO1xuICAgIGlmIChzdHlsZXNQYXJlbnQpIHtcbiAgICAgIGluamVjdFF3aWtTbG90Q1NTKHN0eWxlc1BhcmVudCk7XG4gICAgfVxuICAgIGluamVjdFFWZXJzaW9uKHBhcmVudCk7XG4gICAgaWYgKHFEZXYpIHtcbiAgICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgIT0gbnVsbCkge1xuICAgICAgICBwcmludFJlbmRlclN0YXRzKGN0eCk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBjdHg7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW5qZWN0UXdpa1Nsb3RDU1MocGFyZW50OiBFbGVtZW50KSB7XG4gIGNvbnN0IHN0eWxlID0gcGFyZW50Lm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgc3R5bGUuc2V0QXR0cmlidXRlKCdpZCcsICdxd2lrL2Jhc2Utc3R5bGVzJyk7XG4gIHN0eWxlLnRleHRDb250ZW50ID0gYHFcXFxcOnNsb3R7ZGlzcGxheTpjb250ZW50c31xXFxcXDpmYWxsYmFja3tkaXNwbGF5Om5vbmV9cVxcXFw6ZmFsbGJhY2s6bGFzdC1jaGlsZHtkaXNwbGF5OmNvbnRlbnRzfWA7XG4gIHBhcmVudC5pbnNlcnRCZWZvcmUoc3R5bGUsIHBhcmVudC5maXJzdENoaWxkKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluamVjdFFWZXJzaW9uKHBhcmVudDogRG9jdW1lbnQgfCBFbGVtZW50KSB7XG4gIGNvbnN0IGVsZW1lbnQgPSBpc0RvY3VtZW50KHBhcmVudCkgPyBwYXJlbnQuZG9jdW1lbnRFbGVtZW50IDogcGFyZW50O1xuICBlbGVtZW50LnNldEF0dHJpYnV0ZSgncTp2ZXJzaW9uJywgdmVyc2lvbiB8fCAnJyk7XG4gIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdxOmNvbnRhaW5lcicsICcnKTtcbn1cbiJdfQ==","import { getDocument } from '../util/dom';\nimport { useHostElement } from './use-host-element.public';\n/**\n * @public\n */\nexport function useDocument() {\n    return getDocument(useHostElement());\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWRvY3VtZW50LnB1YmxpYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXNlL3VzZS1kb2N1bWVudC5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMxQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFFM0Q7O0dBRUc7QUFDSCxNQUFNLFVBQVUsV0FBVztJQUN6QixPQUFPLFdBQVcsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxDQUFDO0FBQ3ZDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXREb2N1bWVudCB9IGZyb20gJy4uL3V0aWwvZG9tJztcbmltcG9ydCB7IHVzZUhvc3RFbGVtZW50IH0gZnJvbSAnLi91c2UtaG9zdC1lbGVtZW50LnB1YmxpYyc7XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlRG9jdW1lbnQoKTogRG9jdW1lbnQge1xuICByZXR1cm4gZ2V0RG9jdW1lbnQodXNlSG9zdEVsZW1lbnQoKSk7XG59XG4iXX0=","import { assertEqual } from '../assert/assert';\nimport { getInvokeContext } from './use-core';\n// <docs markdown=\"https://hackmd.io/lQ8v7fyhR-WD3b-2aRUpyw#useEvent\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2FlQ8v7fyhR-WD3b-2aRUpyw%3Fboth#useEvent instead)\n/**\n * Retrieves the current event which triggered the action.\n *\n * NOTE: The `useEvent` method can only be used in the synchronous portion of the callback\n * (before any `await` statements.)\n *\n * @public\n */\n// </docs>\nexport function useEvent(expectEventType) {\n    const event = getInvokeContext().event;\n    expectEventType && assertEqual(event.type, expectEventType);\n    return event;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWV2ZW50LnB1YmxpYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXNlL3VzZS1ldmVudC5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUU5QyxzRUFBc0U7QUFDdEUseUNBQXlDO0FBQ3pDLGtHQUFrRztBQUNsRzs7Ozs7OztHQU9HO0FBQ0gsVUFBVTtBQUNWLE1BQU0sVUFBVSxRQUFRLENBQW1CLGVBQXdCO0lBQ2pFLE1BQU0sS0FBSyxHQUFHLGdCQUFnQixFQUFFLENBQUMsS0FBMEIsQ0FBQztJQUM1RCxlQUFlLElBQUksV0FBVyxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsZUFBZSxDQUFDLENBQUM7SUFDNUQsT0FBTyxLQUFxQixDQUFDO0FBQy9CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhc3NlcnRFcXVhbCB9IGZyb20gJy4uL2Fzc2VydC9hc3NlcnQnO1xuaW1wb3J0IHsgZ2V0SW52b2tlQ29udGV4dCB9IGZyb20gJy4vdXNlLWNvcmUnO1xuXG4vLyA8ZG9jcyBtYXJrZG93bj1cImh0dHBzOi8vaGFja21kLmlvL2xROHY3ZnloUi1XRDNiLTJhUlVweXcjdXNlRXZlbnRcIj5cbi8vICEhRE8gTk9UIEVESVQgVEhJUyBDT01NRU5UIERJUkVDVExZISEhXG4vLyAoZWRpdCBodHRwczovL2hhY2ttZC5pby9AcXdpay1kb2NzL0JreHBTejgwWS8lMkZsUTh2N2Z5aFItV0QzYi0yYVJVcHl3JTNGYm90aCN1c2VFdmVudCBpbnN0ZWFkKVxuLyoqXG4gKiBSZXRyaWV2ZXMgdGhlIGN1cnJlbnQgZXZlbnQgd2hpY2ggdHJpZ2dlcmVkIHRoZSBhY3Rpb24uXG4gKlxuICogTk9URTogVGhlIGB1c2VFdmVudGAgbWV0aG9kIGNhbiBvbmx5IGJlIHVzZWQgaW4gdGhlIHN5bmNocm9ub3VzIHBvcnRpb24gb2YgdGhlIGNhbGxiYWNrXG4gKiAoYmVmb3JlIGFueSBgYXdhaXRgIHN0YXRlbWVudHMuKVxuICpcbiAqIEBwdWJsaWNcbiAqL1xuLy8gPC9kb2NzPlxuZXhwb3J0IGZ1bmN0aW9uIHVzZUV2ZW50PEVWRU5UIGV4dGVuZHMge30+KGV4cGVjdEV2ZW50VHlwZT86IHN0cmluZyk6IEVWRU5UIHtcbiAgY29uc3QgZXZlbnQgPSBnZXRJbnZva2VDb250ZXh0KCkuZXZlbnQgYXMgeyB0eXBlPzogc3RyaW5nIH07XG4gIGV4cGVjdEV2ZW50VHlwZSAmJiBhc3NlcnRFcXVhbChldmVudC50eXBlLCBleHBlY3RFdmVudFR5cGUpO1xuICByZXR1cm4gZXZlbnQgYXMgYW55IGFzIEVWRU5UO1xufVxuIl19","import { getInvokeContext } from './use-core';\nexport function useURL() {\n    const url = getInvokeContext().url;\n    if (!url) {\n        // TODO(misko): centralize\n        throw new Error('Q-ERROR: no URL is associated with the execution context');\n    }\n    return url;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLXVybC5wdWJsaWMuanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL3VzZS91c2UtdXJsLnB1YmxpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFOUMsTUFBTSxVQUFVLE1BQU07SUFDcEIsTUFBTSxHQUFHLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQyxHQUFHLENBQUM7SUFDbkMsSUFBSSxDQUFDLEdBQUcsRUFBRTtRQUNSLDBCQUEwQjtRQUMxQixNQUFNLElBQUksS0FBSyxDQUFDLDBEQUEwRCxDQUFDLENBQUM7S0FDN0U7SUFDRCxPQUFPLEdBQUksQ0FBQztBQUNkLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRJbnZva2VDb250ZXh0IH0gZnJvbSAnLi91c2UtY29yZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VVUkwoKTogVVJMIHtcbiAgY29uc3QgdXJsID0gZ2V0SW52b2tlQ29udGV4dCgpLnVybDtcbiAgaWYgKCF1cmwpIHtcbiAgICAvLyBUT0RPKG1pc2tvKTogY2VudHJhbGl6ZVxuICAgIHRocm93IG5ldyBFcnJvcignUS1FUlJPUjogbm8gVVJMIGlzIGFzc29jaWF0ZWQgd2l0aCB0aGUgZXhlY3V0aW9uIGNvbnRleHQnKTtcbiAgfVxuICByZXR1cm4gdXJsITtcbn1cbiJdfQ==","import { assertDefined } from '../assert/assert';\nimport { parseQRL } from '../import/qrl';\nimport { qInflate } from '../json/q-json';\nimport { getContext, resumeIfNeeded } from '../props/props';\nimport { getInvokeContext } from './use-core';\nimport { useURL } from './use-url.public';\n// <docs markdown=\"https://hackmd.io/lQ8v7fyhR-WD3b-2aRUpyw#useLexicalScope\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2FlQ8v7fyhR-WD3b-2aRUpyw%3Fboth#useLexicalScope instead)\n/**\n * Used by the Qwik Optimizer to restore the lexical scoped variables.\n *\n * This method should not be present in the application source code.\n *\n * NOTE: `useLexicalScope` method can only be used in the synchronous portion of the callback\n * (before any `await` statements.)\n *\n * @public\n */\n// </docs>\nexport function useLexicalScope() {\n    var _a;\n    const context = getInvokeContext();\n    const qrl = (_a = context.qrl) !== null && _a !== void 0 ? _a : parseQRL(decodeURIComponent(String(useURL())));\n    if (qrl.captureRef == null) {\n        const el = context.element;\n        resumeIfNeeded(el);\n        const ctx = getContext(el);\n        assertDefined(qrl.capture);\n        qrl.captureRef = qrl.capture.map((idx) => qInflate(idx, ctx));\n    }\n    return qrl.captureRef;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLWxleGljYWwtc2NvcGUucHVibGljLmpzIiwic291cmNlUm9vdCI6Ii4vIiwic291cmNlcyI6WyJzcmMvY29yZS91c2UvdXNlLWxleGljYWwtc2NvcGUucHVibGljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMxQyxPQUFPLEVBQUUsVUFBVSxFQUFFLGNBQWMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzVELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUM5QyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFMUMsNkVBQTZFO0FBQzdFLHlDQUF5QztBQUN6Qyx5R0FBeUc7QUFDekc7Ozs7Ozs7OztHQVNHO0FBQ0gsVUFBVTtBQUNWLE1BQU0sVUFBVSxlQUFlOztJQUM3QixNQUFNLE9BQU8sR0FBRyxnQkFBZ0IsRUFBRSxDQUFDO0lBRW5DLE1BQU0sR0FBRyxHQUFHLE1BQUEsT0FBTyxDQUFDLEdBQUcsbUNBQUksUUFBUSxDQUFDLGtCQUFrQixDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxRSxJQUFJLEdBQUcsQ0FBQyxVQUFVLElBQUksSUFBSSxFQUFFO1FBQzFCLE1BQU0sRUFBRSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUM7UUFDM0IsY0FBYyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ25CLE1BQU0sR0FBRyxHQUFHLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUMzQixhQUFhLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzNCLEdBQUcsQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFDLE9BQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztLQUNoRTtJQUNELE9BQU8sR0FBRyxDQUFDLFVBQWtCLENBQUM7QUFDaEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzc2VydERlZmluZWQgfSBmcm9tICcuLi9hc3NlcnQvYXNzZXJ0JztcbmltcG9ydCB7IHBhcnNlUVJMIH0gZnJvbSAnLi4vaW1wb3J0L3FybCc7XG5pbXBvcnQgeyBxSW5mbGF0ZSB9IGZyb20gJy4uL2pzb24vcS1qc29uJztcbmltcG9ydCB7IGdldENvbnRleHQsIHJlc3VtZUlmTmVlZGVkIH0gZnJvbSAnLi4vcHJvcHMvcHJvcHMnO1xuaW1wb3J0IHsgZ2V0SW52b2tlQ29udGV4dCB9IGZyb20gJy4vdXNlLWNvcmUnO1xuaW1wb3J0IHsgdXNlVVJMIH0gZnJvbSAnLi91c2UtdXJsLnB1YmxpYyc7XG5cbi8vIDxkb2NzIG1hcmtkb3duPVwiaHR0cHM6Ly9oYWNrbWQuaW8vbFE4djdmeWhSLVdEM2ItMmFSVXB5dyN1c2VMZXhpY2FsU2NvcGVcIj5cbi8vICEhRE8gTk9UIEVESVQgVEhJUyBDT01NRU5UIERJUkVDVExZISEhXG4vLyAoZWRpdCBodHRwczovL2hhY2ttZC5pby9AcXdpay1kb2NzL0JreHBTejgwWS8lMkZsUTh2N2Z5aFItV0QzYi0yYVJVcHl3JTNGYm90aCN1c2VMZXhpY2FsU2NvcGUgaW5zdGVhZClcbi8qKlxuICogVXNlZCBieSB0aGUgUXdpayBPcHRpbWl6ZXIgdG8gcmVzdG9yZSB0aGUgbGV4aWNhbCBzY29wZWQgdmFyaWFibGVzLlxuICpcbiAqIFRoaXMgbWV0aG9kIHNob3VsZCBub3QgYmUgcHJlc2VudCBpbiB0aGUgYXBwbGljYXRpb24gc291cmNlIGNvZGUuXG4gKlxuICogTk9URTogYHVzZUxleGljYWxTY29wZWAgbWV0aG9kIGNhbiBvbmx5IGJlIHVzZWQgaW4gdGhlIHN5bmNocm9ub3VzIHBvcnRpb24gb2YgdGhlIGNhbGxiYWNrXG4gKiAoYmVmb3JlIGFueSBgYXdhaXRgIHN0YXRlbWVudHMuKVxuICpcbiAqIEBwdWJsaWNcbiAqL1xuLy8gPC9kb2NzPlxuZXhwb3J0IGZ1bmN0aW9uIHVzZUxleGljYWxTY29wZTxWQVJTIGV4dGVuZHMgYW55W10+KCk6IFZBUlMge1xuICBjb25zdCBjb250ZXh0ID0gZ2V0SW52b2tlQ29udGV4dCgpO1xuXG4gIGNvbnN0IHFybCA9IGNvbnRleHQucXJsID8/IHBhcnNlUVJMKGRlY29kZVVSSUNvbXBvbmVudChTdHJpbmcodXNlVVJMKCkpKSk7XG4gIGlmIChxcmwuY2FwdHVyZVJlZiA9PSBudWxsKSB7XG4gICAgY29uc3QgZWwgPSBjb250ZXh0LmVsZW1lbnQ7XG4gICAgcmVzdW1lSWZOZWVkZWQoZWwpO1xuICAgIGNvbnN0IGN0eCA9IGdldENvbnRleHQoZWwpO1xuICAgIGFzc2VydERlZmluZWQocXJsLmNhcHR1cmUpO1xuICAgIHFybC5jYXB0dXJlUmVmID0gcXJsLmNhcHR1cmUhLm1hcCgoaWR4KSA9PiBxSW5mbGF0ZShpZHgsIGN0eCkpO1xuICB9XG4gIHJldHVybiBxcmwuY2FwdHVyZVJlZiBhcyBWQVJTO1xufVxuIl19","import { useDocument } from '../index';\nimport { getProxyMap, qObject } from '../object/q-object';\n// <docs markdown=\"https://hackmd.io/lQ8v7fyhR-WD3b-2aRUpyw#useStore\">\n// !!DO NOT EDIT THIS COMMENT DIRECTLY!!!\n// (edit https://hackmd.io/@qwik-docs/BkxpSz80Y/%2FlQ8v7fyhR-WD3b-2aRUpyw%3Fboth#useStore instead)\n/**\n * Creates a object that Qwik can track across serializations.\n *\n * Use `useStore` to create state for your application. The return object is a proxy which has a\n * unique ID. The ID of the object is used in the `QRL`s to refer to the store.\n *\n * ## Example\n *\n * Example showing how `useStore` is used in Counter example to keep track of count.\n *\n * ```typescript\n * export const Counter = component$(() => {\n *   const store = useStore({ count: 0 });\n *   return $(() => <button on$:click={() => store.count++}>{store.count}</button>);\n * });\n * ```\n *\n * @public\n */\n// </docs>\nexport function useStore(initialState) {\n    return qObject(initialState, getProxyMap(useDocument()));\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlLXN0b3JlLnB1YmxpYy5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL2NvcmUvdXNlL3VzZS1zdG9yZS5wdWJsaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUN2QyxPQUFPLEVBQUUsV0FBVyxFQUFFLE9BQU8sRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRTFELHNFQUFzRTtBQUN0RSx5Q0FBeUM7QUFDekMsa0dBQWtHO0FBQ2xHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FrQkc7QUFDSCxVQUFVO0FBQ1YsTUFBTSxVQUFVLFFBQVEsQ0FBbUIsWUFBbUI7SUFDNUQsT0FBTyxPQUFPLENBQUMsWUFBWSxFQUFFLFdBQVcsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDM0QsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZURvY3VtZW50IH0gZnJvbSAnLi4vaW5kZXgnO1xuaW1wb3J0IHsgZ2V0UHJveHlNYXAsIHFPYmplY3QgfSBmcm9tICcuLi9vYmplY3QvcS1vYmplY3QnO1xuXG4vLyA8ZG9jcyBtYXJrZG93bj1cImh0dHBzOi8vaGFja21kLmlvL2xROHY3ZnloUi1XRDNiLTJhUlVweXcjdXNlU3RvcmVcIj5cbi8vICEhRE8gTk9UIEVESVQgVEhJUyBDT01NRU5UIERJUkVDVExZISEhXG4vLyAoZWRpdCBodHRwczovL2hhY2ttZC5pby9AcXdpay1kb2NzL0JreHBTejgwWS8lMkZsUTh2N2Z5aFItV0QzYi0yYVJVcHl3JTNGYm90aCN1c2VTdG9yZSBpbnN0ZWFkKVxuLyoqXG4gKiBDcmVhdGVzIGEgb2JqZWN0IHRoYXQgUXdpayBjYW4gdHJhY2sgYWNyb3NzIHNlcmlhbGl6YXRpb25zLlxuICpcbiAqIFVzZSBgdXNlU3RvcmVgIHRvIGNyZWF0ZSBzdGF0ZSBmb3IgeW91ciBhcHBsaWNhdGlvbi4gVGhlIHJldHVybiBvYmplY3QgaXMgYSBwcm94eSB3aGljaCBoYXMgYVxuICogdW5pcXVlIElELiBUaGUgSUQgb2YgdGhlIG9iamVjdCBpcyB1c2VkIGluIHRoZSBgUVJMYHMgdG8gcmVmZXIgdG8gdGhlIHN0b3JlLlxuICpcbiAqICMjIEV4YW1wbGVcbiAqXG4gKiBFeGFtcGxlIHNob3dpbmcgaG93IGB1c2VTdG9yZWAgaXMgdXNlZCBpbiBDb3VudGVyIGV4YW1wbGUgdG8ga2VlcCB0cmFjayBvZiBjb3VudC5cbiAqXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBleHBvcnQgY29uc3QgQ291bnRlciA9IGNvbXBvbmVudCQoKCkgPT4ge1xuICogICBjb25zdCBzdG9yZSA9IHVzZVN0b3JlKHsgY291bnQ6IDAgfSk7XG4gKiAgIHJldHVybiAkKCgpID0+IDxidXR0b24gb24kOmNsaWNrPXsoKSA9PiBzdG9yZS5jb3VudCsrfT57c3RvcmUuY291bnR9PC9idXR0b24+KTtcbiAqIH0pO1xuICogYGBgXG4gKlxuICogQHB1YmxpY1xuICovXG4vLyA8L2RvY3M+XG5leHBvcnQgZnVuY3Rpb24gdXNlU3RvcmU8U1RBVEUgZXh0ZW5kcyB7fT4oaW5pdGlhbFN0YXRlOiBTVEFURSk6IFNUQVRFIHtcbiAgcmV0dXJuIHFPYmplY3QoaW5pdGlhbFN0YXRlLCBnZXRQcm94eU1hcCh1c2VEb2N1bWVudCgpKSk7XG59XG4iXX0=","/**\n * @license\n * Copyright Builder.io, Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE\n */\n//////////////////////////////////////////////////////////////////////////////////////////\n// Developer Core API\n//////////////////////////////////////////////////////////////////////////////////////////\nexport { componentFromQrl, component$, onUnmountFromQrl, onUnmount$, onPauseFromQrl, onPause$, onResumeFromQrl, onResume$, on, onDocument, onWindow, useStylesFromQrl, useStyles$, useScopedStylesFromQrl, useScopedStyles$, } from './component/component.public';\n//////////////////////////////////////////////////////////////////////////////////////////\n// Developer Event API\n//////////////////////////////////////////////////////////////////////////////////////////\nexport { bubble } from './event/bubble.public';\nexport { snapshot } from './object/store.public';\n//////////////////////////////////////////////////////////////////////////////////////////\n// Internal Runtime\n//////////////////////////////////////////////////////////////////////////////////////////\nexport { $, implicit$FirstArg, qrl, qrlImport } from './import/qrl.public';\nexport { notifyRender } from './render/notify-render';\n//////////////////////////////////////////////////////////////////////////////////////////\n// PLATFORM\n//////////////////////////////////////////////////////////////////////////////////////////\nexport { getPlatform, setPlatform } from './platform/platform';\n//////////////////////////////////////////////////////////////////////////////////////////\n// Watch\n//////////////////////////////////////////////////////////////////////////////////////////\nexport { onWatch$, onWatchFromQrl } from './watch/watch.public';\n//////////////////////////////////////////////////////////////////////////////////////////\n// JSX Support\n//////////////////////////////////////////////////////////////////////////////////////////\nexport { Async } from './render/jsx/async.public';\n//////////////////////////////////////////////////////////////////////////////////////////\n// JSX Runtime\n//////////////////////////////////////////////////////////////////////////////////////////\nexport { h } from './render/jsx/factory';\nexport { Host, SkipRerender } from './render/jsx/host.public';\nexport { Slot } from './render/jsx/slot.public';\nexport { Fragment, jsx, jsxDEV, jsxs } from './render/jsx/jsx-runtime';\nexport { render } from './render/render.public';\n//////////////////////////////////////////////////////////////////////////////////////////\n// use API\n//////////////////////////////////////////////////////////////////////////////////////////\nexport { useHostElement } from './use/use-host-element.public';\nexport { useDocument } from './use/use-document.public';\nexport { useEvent } from './use/use-event.public';\nexport { useLexicalScope } from './use/use-lexical-scope.public';\nexport { useStore } from './use/use-store.public';\nexport { noSerialize } from './object/q-object';\n/**\n * @alpha\n */\nexport const version = globalThis.QWIK_VERSION;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiLi8iLCJzb3VyY2VzIjpbInNyYy9jb3JlL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVILDBGQUEwRjtBQUMxRixxQkFBcUI7QUFDckIsMEZBQTBGO0FBQzFGLE9BQU8sRUFDTCxnQkFBZ0IsRUFDaEIsVUFBVSxFQUNWLGdCQUFnQixFQUNoQixVQUFVLEVBQ1YsY0FBYyxFQUNkLFFBQVEsRUFDUixlQUFlLEVBQ2YsU0FBUyxFQUNULEVBQUUsRUFDRixVQUFVLEVBQ1YsUUFBUSxFQUNSLGdCQUFnQixFQUNoQixVQUFVLEVBQ1Ysc0JBQXNCLEVBQ3RCLGdCQUFnQixHQUNqQixNQUFNLDhCQUE4QixDQUFDO0FBSXRDLDBGQUEwRjtBQUMxRixzQkFBc0I7QUFDdEIsMEZBQTBGO0FBQzFGLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDakQsMEZBQTBGO0FBQzFGLG1CQUFtQjtBQUNuQiwwRkFBMEY7QUFDMUYsT0FBTyxFQUFFLENBQUMsRUFBRSxpQkFBaUIsRUFBRSxHQUFHLEVBQUUsU0FBUyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFLM0UsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3RELDBGQUEwRjtBQUMxRixXQUFXO0FBQ1gsMEZBQTBGO0FBQzFGLE9BQU8sRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFL0QsMEZBQTBGO0FBQzFGLFFBQVE7QUFDUiwwRkFBMEY7QUFDMUYsT0FBTyxFQUFFLFFBQVEsRUFBRSxjQUFjLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUdoRSwwRkFBMEY7QUFDMUYsY0FBYztBQUNkLDBGQUEwRjtBQUMxRixPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFHbEQsMEZBQTBGO0FBQzFGLGNBQWM7QUFDZCwwRkFBMEY7QUFDMUYsT0FBTyxFQUFFLENBQUMsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3pDLE9BQU8sRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDOUQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxRQUFRLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQVd2RSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDaEQsMEZBQTBGO0FBQzFGLFVBQVU7QUFDViwwRkFBMEY7QUFDMUYsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQy9ELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDbEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQU9sRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFaEQ7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUksVUFBa0IsQ0FBQyxZQUFzQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEJ1aWxkZXIuaW8sIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vQnVpbGRlcklPL3F3aWsvYmxvYi9tYWluL0xJQ0VOU0VcbiAqL1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIERldmVsb3BlciBDb3JlIEFQSVxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5leHBvcnQge1xuICBjb21wb25lbnRGcm9tUXJsLFxuICBjb21wb25lbnQkLFxuICBvblVubW91bnRGcm9tUXJsLFxuICBvblVubW91bnQkLFxuICBvblBhdXNlRnJvbVFybCxcbiAgb25QYXVzZSQsXG4gIG9uUmVzdW1lRnJvbVFybCxcbiAgb25SZXN1bWUkLFxuICBvbixcbiAgb25Eb2N1bWVudCxcbiAgb25XaW5kb3csXG4gIHVzZVN0eWxlc0Zyb21RcmwsXG4gIHVzZVN0eWxlcyQsXG4gIHVzZVNjb3BlZFN0eWxlc0Zyb21RcmwsXG4gIHVzZVNjb3BlZFN0eWxlcyQsXG59IGZyb20gJy4vY29tcG9uZW50L2NvbXBvbmVudC5wdWJsaWMnO1xuXG5leHBvcnQgdHlwZSB7IFByb3BzT2YsIENvbXBvbmVudE9wdGlvbnMsIE9uTW91bnRGbiB9IGZyb20gJy4vY29tcG9uZW50L2NvbXBvbmVudC5wdWJsaWMnO1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIERldmVsb3BlciBFdmVudCBBUElcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuZXhwb3J0IHsgYnViYmxlIH0gZnJvbSAnLi9ldmVudC9idWJibGUucHVibGljJztcbmV4cG9ydCB7IHNuYXBzaG90IH0gZnJvbSAnLi9vYmplY3Qvc3RvcmUucHVibGljJztcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gSW50ZXJuYWwgUnVudGltZVxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5leHBvcnQgeyAkLCBpbXBsaWNpdCRGaXJzdEFyZywgcXJsLCBxcmxJbXBvcnQgfSBmcm9tICcuL2ltcG9ydC9xcmwucHVibGljJztcbmV4cG9ydCB0eXBlIHsgUVJMIH0gZnJvbSAnLi9pbXBvcnQvcXJsLnB1YmxpYyc7XG5cbmV4cG9ydCB0eXBlIHsgUHJvcHMgfSBmcm9tICcuL3Byb3BzL3Byb3BzLnB1YmxpYyc7XG5cbmV4cG9ydCB7IG5vdGlmeVJlbmRlciB9IGZyb20gJy4vcmVuZGVyL25vdGlmeS1yZW5kZXInO1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBQTEFURk9STVxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5leHBvcnQgeyBnZXRQbGF0Zm9ybSwgc2V0UGxhdGZvcm0gfSBmcm9tICcuL3BsYXRmb3JtL3BsYXRmb3JtJztcbmV4cG9ydCB0eXBlIHsgQ29yZVBsYXRmb3JtIH0gZnJvbSAnLi9wbGF0Zm9ybS90eXBlcyc7XG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdhdGNoXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbmV4cG9ydCB7IG9uV2F0Y2gkLCBvbldhdGNoRnJvbVFybCB9IGZyb20gJy4vd2F0Y2gvd2F0Y2gucHVibGljJztcbmV4cG9ydCB0eXBlIHsgT2JzZXJ2ZXIgfSBmcm9tICcuL3dhdGNoL3dhdGNoLnB1YmxpYyc7XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gSlNYIFN1cHBvcnRcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuZXhwb3J0IHsgQXN5bmMgfSBmcm9tICcuL3JlbmRlci9qc3gvYXN5bmMucHVibGljJztcbmV4cG9ydCB0eXBlIHsgUHJvbWlzZVZhbHVlIH0gZnJvbSAnLi9yZW5kZXIvanN4L2FzeW5jLnB1YmxpYyc7XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gSlNYIFJ1bnRpbWVcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuZXhwb3J0IHsgaCB9IGZyb20gJy4vcmVuZGVyL2pzeC9mYWN0b3J5JztcbmV4cG9ydCB7IEhvc3QsIFNraXBSZXJlbmRlciB9IGZyb20gJy4vcmVuZGVyL2pzeC9ob3N0LnB1YmxpYyc7XG5leHBvcnQgeyBTbG90IH0gZnJvbSAnLi9yZW5kZXIvanN4L3Nsb3QucHVibGljJztcbmV4cG9ydCB7IEZyYWdtZW50LCBqc3gsIGpzeERFViwganN4cyB9IGZyb20gJy4vcmVuZGVyL2pzeC9qc3gtcnVudGltZSc7XG5leHBvcnQgdHlwZSB7XG4gIENvbXBvbmVudENoaWxkLFxuICBDb21wb25lbnRDaGlsZHJlbixcbiAgRnVuY3Rpb25Db21wb25lbnQsXG4gIEpTWEZhY3RvcnksXG4gIEpTWE5vZGUsXG4gIFJlbmRlcmFibGVQcm9wcyxcbn0gZnJvbSAnLi9yZW5kZXIvanN4L3R5cGVzL2pzeC1ub2RlJztcbmV4cG9ydCB0eXBlIHsgUXdpa0RPTUF0dHJpYnV0ZXMsIFF3aWtKU1ggfSBmcm9tICcuL3JlbmRlci9qc3gvdHlwZXMvanN4LXF3aWsnO1xuZXhwb3J0IHR5cGUgeyBRd2lrSW50cmluc2ljRWxlbWVudHMgfSBmcm9tICcuL3JlbmRlci9qc3gvdHlwZXMvanN4LXF3aWstZWxlbWVudHMnO1xuZXhwb3J0IHsgcmVuZGVyIH0gZnJvbSAnLi9yZW5kZXIvcmVuZGVyLnB1YmxpYyc7XG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIHVzZSBBUElcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuZXhwb3J0IHsgdXNlSG9zdEVsZW1lbnQgfSBmcm9tICcuL3VzZS91c2UtaG9zdC1lbGVtZW50LnB1YmxpYyc7XG5leHBvcnQgeyB1c2VEb2N1bWVudCB9IGZyb20gJy4vdXNlL3VzZS1kb2N1bWVudC5wdWJsaWMnO1xuZXhwb3J0IHsgdXNlRXZlbnQgfSBmcm9tICcuL3VzZS91c2UtZXZlbnQucHVibGljJztcbmV4cG9ydCB7IHVzZUxleGljYWxTY29wZSB9IGZyb20gJy4vdXNlL3VzZS1sZXhpY2FsLXNjb3BlLnB1YmxpYyc7XG5leHBvcnQgeyB1c2VTdG9yZSB9IGZyb20gJy4vdXNlL3VzZS1zdG9yZS5wdWJsaWMnO1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIERldmVsb3BlciBMb3ctTGV2ZWwgQVBJXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbmV4cG9ydCB0eXBlIHsgVmFsdWVPclByb21pc2UgfSBmcm9tICcuL3V0aWwvdHlwZXMnO1xuZXhwb3J0IHR5cGUgeyBOb1NlcmlhbGl6ZSB9IGZyb20gJy4vb2JqZWN0L3Etb2JqZWN0JztcbmV4cG9ydCB7IG5vU2VyaWFsaXplIH0gZnJvbSAnLi9vYmplY3QvcS1vYmplY3QnO1xuXG4vKipcbiAqIEBhbHBoYVxuICovXG5leHBvcnQgY29uc3QgdmVyc2lvbiA9IChnbG9iYWxUaGlzIGFzIGFueSkuUVdJS19WRVJTSU9OIGFzIHN0cmluZztcbiJdfQ=="],"names":["isNode"],"mappings":"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S;AACT,QAAQ,QAAQ,IAAI,CAAC,SAAS,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE;AACzH,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,CAAC,CAAC,UAAU,EAAE;AAC9B,IAAI,OAAO,UAAU,CAAC,UAAU,CAAC,CAAC;AAClC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,iBAAiB,CAAC,EAAE,EAAE;AACtC,IAAI,OAAO,UAAU,KAAK,EAAE,GAAG,IAAI,EAAE;AACrC,QAAQ,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;AAChD,KAAK,CAAC;AACN,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,GAAG,GAAG;;AC3KnB;AACA;AACA;AACA;AACA;AACA;AACA;AAEO,SAAS,cAAc,CAAC,KAAK,EA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"}